var ZOR = ZOR || {};

ZOR.g = ZOR.g || {};

ZOR.g.h = function t(e) {
    var n = e.i ? .2 : .6;
    return {
        j: {},
        k: {
            l: {
                c: {
                    type: "f",
                    value: 1.41803
                },
                m: {
                    type: "f",
                    value: 2.71828
                },
                o: {
                    type: "v3",
                    value: e.q.p.position
                },
                s: {
                    type: "v3",
                    value: playerFogCenter
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                },
                v: {
                    type: "t",
                    value: new THREE.A().load("skins/earth/earth-sphere-map.jpg")
                }
            },
            B: document.getElementById("skin-earth-vertex-shader").textContent,
            C: document.getElementById("skin-earth-fragment-shader").textContent,
            D: true
        },
        F: {
            group: {
                scale: Math.max(window.innerWidth, window.innerHeight),
                G: {
                    value: new THREE.A().load("skins/earth/trail.png")
                },
                H: 800
            },
            I: {
                J: {
                    value: 8
                },
                position: {
                    value: new THREE.K(0, 0, 0),
                    L: new THREE.K(0, 0, 0),
                    M: new THREE.K(0, 0, 0),
                    N: 5,
                    O: SPE.R.P
                },
                opacity: {
                    value: [ n, 0 ]
                },
                angle: {
                    value: [ 0 ],
                    L: [ 8, 0 ]
                },
                S: {
                    value: 8
                },
                color: {
                    value: new THREE.T("#B9D5EB")
                },
                size: {
                    value: [ 6, 0 ]
                },
                U: 800,
                V: .1
            }
        }
    };
};

ZOR.g.h.W = {
    X: "Planet Earth",
    name: "earth",
    Y: "skins/earth/thumb.jpg",
    sort: 2
};

var ZOR = ZOR || {};

ZOR.g = ZOR.g || {};

ZOR.g.default = function t(e) {
    var n = e.i ? .4 : .8;
    var i = new THREE.T(e.Z);
    return {
        j: {},
        k: {
            l: {
                c: {
                    type: "f",
                    value: 1.41803
                },
                m: {
                    type: "f",
                    value: 2.71828
                },
                color: {
                    type: "c",
                    value: i
                },
                $: {
                    type: "v3",
                    value: i.aa()
                },
                o: {
                    type: "v3",
                    value: e.q.p.position
                },
                s: {
                    type: "v3",
                    value: playerFogCenter
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                }
            },
            B: document.getElementById("skin-default-vertex-shader").textContent,
            C: document.getElementById("skin-default-fragment-shader").textContent,
            D: true
        },
        F: {
            ba: .5,
            group: {
                scale: Math.max(window.innerWidth, window.innerHeight),
                G: {
                    value: new THREE.A().load("skins/default/trail.png")
                },
                H: 800
            },
            I: {
                J: {
                    value: 20
                },
                position: {
                    value: new THREE.K(0, 0, 0),
                    L: new THREE.K(0, 0, 0),
                    M: new THREE.K(0, 0, 0),
                    N: 5,
                    O: SPE.R.P
                },
                opacity: {
                    value: [ n, 0 ]
                },
                S: {
                    value: 1
                },
                color: {
                    value: new THREE.T(e.Z)
                },
                size: {
                    value: [ 90, 60, 30, 0 ]
                },
                U: 800,
                V: .1
            }
        }
    };
};

ZOR.g.default.W = {
    X: "Smooth Shade",
    name: "default",
    Y: "skins/default/thumb.jpg",
    sort: 1
};

var ZOR = ZOR || {};

ZOR.g = ZOR.g || {};

ZOR.g.ca = function t(e) {
    var n = e.i ? .1 : .4;
    var i = new THREE.T("#ffffff");
    return {
        j: {
            da: 20,
            ea: 10
        },
        k: {
            l: {
                c: {
                    type: "f",
                    value: 1.41803
                },
                m: {
                    type: "f",
                    value: 2.71828
                },
                o: {
                    type: "v3",
                    value: e.q.p.position
                },
                s: {
                    type: "v3",
                    value: playerFogCenter
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                },
                v: {
                    type: "t",
                    value: new THREE.A().load("skins/techno/texture.jpg")
                }
            },
            B: document.getElementById("skin-techno-vertex-shader").textContent,
            C: document.getElementById("skin-techno-fragment-shader").textContent,
            D: true
        },
        F: {
            group: {
                scale: Math.max(window.innerWidth, window.innerHeight),
                G: {
                    value: new THREE.A().load("skins/techno/trail.png"),
                    frames: new THREE.fa(2, 1),
                    loop: 4
                },
                H: 800
            },
            I: {
                J: {
                    value: 4
                },
                position: {
                    value: new THREE.K(0, 0, 0)
                },
                opacity: {
                    value: [ n, 0 ]
                },
                S: {
                    value: 8
                },
                color: {
                    value: new THREE.T("#B9D5EB")
                },
                size: {
                    value: [ 100, 0 ]
                },
                U: 800,
                V: .1
            }
        }
    };
};

ZOR.g.ca.W = {
    X: "Techno",
    name: "techno",
    Y: "skins/techno/thumb.jpg",
    sort: 3
};

var ZOR = ZOR || {};

ZOR.g = ZOR.g || {};

ZOR.g.ga = function t(e) {
    var n = e.i ? .1 : .4;
    var i = new THREE.T("#ffffff");
    return {
        j: {
            da: 20,
            ea: 10
        },
        k: {
            l: {
                c: {
                    type: "f",
                    value: 1.41803
                },
                m: {
                    type: "f",
                    value: 2.71828
                },
                o: {
                    type: "v3",
                    value: e.q.p.position
                },
                s: {
                    type: "v3",
                    value: playerFogCenter
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                },
                v: {
                    type: "t",
                    value: new THREE.A().load("skins/boing/texture.jpg")
                }
            },
            B: document.getElementById("skin-boing-vertex-shader").textContent,
            C: document.getElementById("skin-boing-fragment-shader").textContent,
            D: true
        },
        F: {
            group: {
                scale: Math.max(window.innerWidth, window.innerHeight),
                G: {
                    value: new THREE.A().load("skins/boing/trail.png"),
                    frames: new THREE.fa(2, 1),
                    loop: 4
                },
                H: 800
            },
            I: {
                J: {
                    value: 8
                },
                position: {
                    value: new THREE.K(0, 0, 0),
                    L: new THREE.K(0, 0, 0),
                    M: new THREE.K(0, 0, 0),
                    N: 5,
                    O: SPE.R.P
                },
                opacity: {
                    value: [ n, 0 ]
                },
                color: {
                    value: new THREE.T("#B9D5EB")
                },
                size: {
                    value: [ 100, 0 ]
                },
                U: 800,
                V: .1
            }
        }
    };
};

ZOR.g.ga.W = {
    X: "Boing",
    name: "boing",
    Y: "skins/boing/thumb.jpg",
    sort: 3
};

var ZOR = ZOR || {};

ZOR.g = ZOR.g || {};

ZOR.g.ha = function t(e) {
    var n = e.i ? .2 : .6;
    return {
        j: {
            ia: {
                y: .001
            }
        },
        k: {
            l: {
                c: {
                    type: "f",
                    value: 1.41803
                },
                m: {
                    type: "f",
                    value: 2.71828
                },
                o: {
                    type: "v3",
                    value: e.q.p.position
                },
                s: {
                    type: "v3",
                    value: playerFogCenter
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                },
                v: {
                    type: "t",
                    value: new THREE.A().load("skins/reddit/texture.jpg")
                }
            },
            B: document.getElementById("skin-reddit-vertex-shader").textContent,
            C: document.getElementById("skin-reddit-fragment-shader").textContent,
            D: true
        },
        F: {
            group: {
                scale: Math.max(window.innerWidth, window.innerHeight),
                G: {
                    value: new THREE.A().load("skins/reddit/trail.png")
                },
                H: 800
            },
            I: {
                J: {
                    value: 8
                },
                position: {
                    value: new THREE.K(0, 0, 0),
                    L: new THREE.K(0, 0, 0),
                    M: new THREE.K(0, 0, 0),
                    N: 5,
                    O: SPE.R.P
                },
                opacity: {
                    value: [ n, 0 ]
                },
                angle: {
                    value: [ 0 ],
                    L: [ 8, 0 ]
                },
                S: {
                    value: 8
                },
                color: {
                    value: new THREE.T("#B9D5EB")
                },
                size: {
                    value: [ 6, 0 ]
                },
                U: 800,
                V: .1
            }
        }
    };
};

ZOR.g.ha.W = {
    X: "Reddit",
    name: "reddit",
    Y: "skins/reddit/thumb.png",
    ja: "?reddit",
    sort: 0
};

(function() {
    var t;
    var e = "4.0.1";
    var n = 1, i = 2, r = 4, a = 8, s = 16, o = 32, f = 64, u = 128, h = 256, c = 512;
    var l = 1, d = 2;
    var v = 30, p = "...";
    var E = 150, g = 16;
    var m = 200;
    var T = 1, y = 2, R = 3;
    var w = "Expected a function";
    var x = "__lodash_hash_undefined__";
    var b = 1 / 0, H = 9007199254740991, A = 1.7976931348623157e308, M = 0 / 0;
    var O = 4294967295, S = O - 1, U = O >>> 1;
    var C = "__lodash_placeholder__";
    var L = "[object Arguments]", P = "[object Array]", N = "[object Boolean]", I = "[object Date]", q = "[object Error]", z = "[object Function]", B = "[object GeneratorFunction]", k = "[object Map]", j = "[object Number]", D = "[object Object]", G = "[object RegExp]", F = "[object Set]", V = "[object String]", W = "[object Symbol]", Y = "[object WeakMap]";
    var X = "[object ArrayBuffer]", K = "[object Float32Array]", Z = "[object Float64Array]", $ = "[object Int8Array]", J = "[object Int16Array]", Q = "[object Int32Array]", tt = "[object Uint8Array]", et = "[object Uint8ClampedArray]", nt = "[object Uint16Array]", it = "[object Uint32Array]";
    var rt = /\b__p \+= '';/g, at = /\b(__p \+=) '' \+/g, st = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var ot = /&(?:amp|lt|gt|quot|#39|#96);/g, ft = /[&<>"'`]/g, ut = RegExp(ot.source), ht = RegExp(ft.source);
    var ct = /<%-([\s\S]+?)%>/g, lt = /<%([\s\S]+?)%>/g, dt = /<%=([\s\S]+?)%>/g;
    var vt = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, pt = /^\w*$/, Et = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
    var gt = /[\\^$.*+?()[\]{}|]/g, mt = RegExp(gt.source);
    var Tt = /^\s+|\s+$/g, yt = /^\s+/, Rt = /\s+$/;
    var wt = /\\(\\)?/g;
    var xt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var bt = /\w*$/;
    var Ht = /^0x/i;
    var _t = /^[-+]0x[0-9a-f]+$/i;
    var At = /^0b[01]+$/i;
    var Mt = /^\[object .+?Constructor\]$/;
    var Ot = /^0o[0-7]+$/i;
    var St = /^(?:0|[1-9]\d*)$/;
    var Ut = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
    var Ct = /($^)/;
    var Lt = /['\n\r\u2028\u2029\\]/g;
    var Pt = "\\ud800-\\udfff", Nt = "\\u0300-\\u036f\\ufe20-\\ufe23", It = "\\u20d0-\\u20f0", qt = "\\u2700-\\u27bf", zt = "a-z\\xdf-\\xf6\\xf8-\\xff", Bt = "\\xac\\xb1\\xd7\\xf7", kt = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", jt = "\\u2018\\u2019\\u201c\\u201d", Dt = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Gt = "A-Z\\xc0-\\xd6\\xd8-\\xde", Ft = "\\ufe0e\\ufe0f", Vt = Bt + kt + jt + Dt;
    var Wt = "[" + Pt + "]", Yt = "[" + Vt + "]", Xt = "[" + Nt + It + "]", Kt = "\\d+", Zt = "[" + qt + "]", $t = "[" + zt + "]", Jt = "[^" + Pt + Vt + Kt + qt + zt + Gt + "]", Qt = "\\ud83c[\\udffb-\\udfff]", te = "(?:" + Xt + "|" + Qt + ")", ee = "[^" + Pt + "]", ne = "(?:\\ud83c[\\udde6-\\uddff]){2}", ie = "[\\ud800-\\udbff][\\udc00-\\udfff]", re = "[" + Gt + "]", ae = "\\u200d";
    var se = "(?:" + $t + "|" + Jt + ")", oe = "(?:" + re + "|" + Jt + ")", fe = te + "?", ue = "[" + Ft + "]?", he = "(?:" + ae + "(?:" + [ ee, ne, ie ].join("|") + ")" + ue + fe + ")*", ce = ue + fe + he, le = "(?:" + [ Zt, ne, ie ].join("|") + ")" + ce, de = "(?:" + [ ee + Xt + "?", Xt, ne, ie, Wt ].join("|") + ")";
    var ve = RegExp(Xt, "g");
    var pe = RegExp(Qt + "(?=" + Qt + ")|" + de + ce, "g");
    var Ee = RegExp("[" + ae + Pt + Nt + It + Ft + "]");
    var ge = /[a-zA-Z0-9]+/g;
    var me = RegExp([ re + "?" + $t + "+(?=" + [ Yt, re, "$" ].join("|") + ")", oe + "+(?=" + [ Yt, re + se, "$" ].join("|") + ")", re + "?" + se + "+", re + "+", Kt, le ].join("|"), "g");
    var Te = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var ye = [ "Array", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Reflect", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout" ];
    var Re = -1;
    var we = {};
    we[K] = we[Z] = we[$] = we[J] = we[Q] = we[tt] = we[et] = we[nt] = we[it] = true;
    we[L] = we[P] = we[X] = we[N] = we[I] = we[q] = we[z] = we[k] = we[j] = we[D] = we[G] = we[F] = we[V] = we[Y] = false;
    var xe = {};
    xe[L] = xe[P] = xe[X] = xe[N] = xe[I] = xe[K] = xe[Z] = xe[$] = xe[J] = xe[Q] = xe[k] = xe[j] = xe[D] = xe[G] = xe[F] = xe[V] = xe[W] = xe[tt] = xe[et] = xe[nt] = xe[it] = true;
    xe[q] = xe[z] = xe[Y] = false;
    var be = {
        ka: "A",
        la: "A",
        ma: "A",
        na: "A",
        oa: "A",
        pa: "A",
        qa: "a",
        ra: "a",
        sa: "a",
        ta: "a",
        ua: "a",
        va: "a",
        wa: "C",
        xa: "c",
        ya: "D",
        za: "d",
        Aa: "E",
        Ba: "E",
        Ca: "E",
        Da: "E",
        Ea: "e",
        Fa: "e",
        Ga: "e",
        Ha: "e",
        Ia: "I",
        Ja: "I",
        Ka: "I",
        La: "I",
        Ma: "i",
        Na: "i",
        Oa: "i",
        Pa: "i",
        Qa: "N",
        Ra: "n",
        Sa: "O",
        Ta: "O",
        Ua: "O",
        Va: "O",
        Wa: "O",
        Xa: "O",
        Ya: "o",
        Za: "o",
        $a: "o",
        _a: "o",
        ab: "o",
        bb: "o",
        cb: "U",
        eb: "U",
        fb: "U",
        gb: "U",
        hb: "u",
        ib: "u",
        jb: "u",
        kb: "u",
        lb: "Y",
        mb: "y",
        nb: "y",
        ob: "Ae",
        pb: "ae",
        qb: "Th",
        rb: "th",
        sb: "ss"
    };
    var He = {
        tb: "&amp;",
        ub: "&lt;",
        vb: "&gt;",
        wb: "&quot;",
        xb: "&#39;",
        yb: "&#96;"
    };
    var _e = {
        zb: "&",
        Ab: "<",
        Bb: ">",
        Cb: '"',
        Db: "'",
        Eb: "`"
    };
    var Ae = {
        Fb: true,
        object: true
    };
    var Me = {
        Gb: "\\",
        xb: "'",
        Hb: "n",
        Ib: "r",
        Jb: "u2028",
        Kb: "u2029"
    };
    var Oe = parseFloat, Se = parseInt;
    var Ue = Ae[typeof exports] && exports && !exports.nodeType ? exports : null;
    var Ce = Ae[typeof module] && module && !module.nodeType ? module : null;
    var Le = vn(Ue && Ce && typeof global == "object" && global);
    var Pe = vn(Ae[typeof self] && self);
    var Ne = vn(Ae[typeof window] && window);
    var Ie = Ce && Ce.Lb === Ue ? Ue : null;
    var qe = vn(Ae[typeof this] && this);
    var ze = Le || Ne !== (qe && qe.window) && Ne || Pe || qe || Function("return this")();
    function Be(t, e) {
        t.set(e[0], e[1]);
        return t;
    }
    function ke(t, e) {
        t.add(e);
        return t;
    }
    function je(t, e, n) {
        var i = n ? n.length : 0;
        switch (i) {
          case 0:
            return t.call(e);

          case 1:
            return t.call(e, n[0]);

          case 2:
            return t.call(e, n[0], n[1]);

          case 3:
            return t.call(e, n[0], n[1], n[2]);
        }
        return t.apply(e, n);
    }
    function De(t, e) {
        var n = -1, i = t.length, r = -1, a = e.length, s = Array(i + a);
        while (++n < i) {
            s[n] = t[n];
        }
        while (++r < a) {
            s[n++] = e[r];
        }
        return s;
    }
    function Ge(t, e) {
        var n = -1, i = t.length;
        while (++n < i) {
            if (e(t[n], n, t) === false) {
                break;
            }
        }
        return t;
    }
    function Fe(t, e) {
        var n = t.length;
        while (n--) {
            if (e(t[n], n, t) === false) {
                break;
            }
        }
        return t;
    }
    function Ve(t, e) {
        var n = -1, i = t.length;
        while (++n < i) {
            if (!e(t[n], n, t)) {
                return false;
            }
        }
        return true;
    }
    function We(t, e) {
        var n = -1, i = t.length, r = -1, a = [];
        while (++n < i) {
            var s = t[n];
            if (e(s, n, t)) {
                a[++r] = s;
            }
        }
        return a;
    }
    function Ye(t, e) {
        return !!t.length && rn(t, e, 0) > -1;
    }
    function Xe(t, e, n) {
        var i = -1, r = t.length;
        while (++i < r) {
            if (n(e, t[i])) {
                return true;
            }
        }
        return false;
    }
    function Ke(t, e) {
        var n = -1, i = t.length, r = Array(i);
        while (++n < i) {
            r[n] = e(t[n], n, t);
        }
        return r;
    }
    function Ze(t, e) {
        var n = -1, i = e.length, r = t.length;
        while (++n < i) {
            t[r + n] = e[n];
        }
        return t;
    }
    function $e(t, e, n, i) {
        var r = -1, a = t.length;
        if (i && a) {
            n = t[++r];
        }
        while (++r < a) {
            n = e(n, t[r], r, t);
        }
        return n;
    }
    function Je(t, e, n, i) {
        var r = t.length;
        if (i && r) {
            n = t[--r];
        }
        while (r--) {
            n = e(n, t[r], r, t);
        }
        return n;
    }
    function Qe(t, e) {
        var n = -1, i = t.length;
        while (++n < i) {
            if (e(t[n], n, t)) {
                return true;
            }
        }
        return false;
    }
    function tn(e, n, i) {
        var r = -1, a = e.length;
        while (++r < a) {
            var s = e[r], o = n(s);
            if (o != null && (f === t ? o === o : i(o, f))) {
                var f = o, u = s;
            }
        }
        return u;
    }
    function en(t, e, n, i) {
        var r;
        n(t, function(t, n, a) {
            if (e(t, n, a)) {
                r = i ? n : t;
                return false;
            }
        });
        return r;
    }
    function nn(t, e, n) {
        var i = t.length, r = n ? i : -1;
        while (n ? r-- : ++r < i) {
            if (e(t[r], r, t)) {
                return r;
            }
        }
        return -1;
    }
    function rn(t, e, n) {
        if (e !== e) {
            return yn(t, n);
        }
        var i = n - 1, r = t.length;
        while (++i < r) {
            if (t[i] === e) {
                return i;
            }
        }
        return -1;
    }
    function an(t, e, n, i, r) {
        r(t, function(t, r, a) {
            n = i ? (i = false, t) : e(n, t, r, a);
        });
        return n;
    }
    function sn(t, e) {
        var n = t.length;
        t.sort(e);
        while (n--) {
            t[n] = t[n].value;
        }
        return t;
    }
    function on(e, n) {
        var i, r = -1, a = e.length;
        while (++r < a) {
            var s = n(e[r]);
            if (s !== t) {
                i = i === t ? s : i + s;
            }
        }
        return i;
    }
    function fn(t, e) {
        var n = -1, i = Array(t);
        while (++n < t) {
            i[n] = e(n);
        }
        return i;
    }
    function un(t, e) {
        return Ke(e, function(e) {
            return [ e, t[e] ];
        });
    }
    function hn(t) {
        return function(e) {
            return t(e);
        };
    }
    function cn(t, e) {
        return Ke(e, function(e) {
            return t[e];
        });
    }
    function ln(t, e) {
        var n = -1, i = t.length;
        while (++n < i && rn(e, t[n], 0) > -1) {}
        return n;
    }
    function dn(t, e) {
        var n = t.length;
        while (n-- && rn(e, t[n], 0) > -1) {}
        return n;
    }
    function vn(t) {
        return t && t.Object === Object ? t : null;
    }
    function pn(e, n) {
        if (e !== n) {
            var i = e === null, r = e === t, a = e === e;
            var s = n === null, o = n === t, f = n === n;
            if (e > n && !s || !a || i && !o && f || r && f) {
                return 1;
            }
            if (e < n && !i || !f || s && !r && a || o && a) {
                return -1;
            }
        }
        return 0;
    }
    function En(t, e, n) {
        var i = -1, r = t.Mb, a = e.Mb, s = r.length, o = n.length;
        while (++i < s) {
            var f = pn(r[i], a[i]);
            if (f) {
                if (i >= o) {
                    return f;
                }
                var u = n[i];
                return f * (u == "desc" ? -1 : 1);
            }
        }
        return t.index - e.index;
    }
    function gn(t) {
        return be[t];
    }
    function mn(t) {
        return He[t];
    }
    function Tn(t) {
        return "\\" + Me[t];
    }
    function yn(t, e, n) {
        var i = t.length, r = e + (n ? 0 : -1);
        while (n ? r-- : ++r < i) {
            var a = t[r];
            if (a !== a) {
                return r;
            }
        }
        return -1;
    }
    function Rn(t) {
        var e = false;
        if (t != null && typeof t.toString != "function") {
            try {
                e = !!(t + "");
            } catch (t) {}
        }
        return e;
    }
    function wn(t, e) {
        t = typeof t == "number" || St.test(t) ? +t : -1;
        e = e == null ? H : e;
        return t > -1 && t % 1 == 0 && t < e;
    }
    function xn(t) {
        var e, n = [];
        while (!(e = t.next()).done) {
            n.push(e.value);
        }
        return n;
    }
    function bn(t) {
        var e = -1, n = Array(t.size);
        t.forEach(function(t, i) {
            n[++e] = [ i, t ];
        });
        return n;
    }
    function Hn(t, e) {
        var n = -1, i = t.length, r = -1, a = [];
        while (++n < i) {
            if (t[n] === e) {
                t[n] = C;
                a[++r] = n;
            }
        }
        return a;
    }
    function _n(t) {
        var e = -1, n = Array(t.size);
        t.forEach(function(t) {
            n[++e] = t;
        });
        return n;
    }
    function An(t) {
        if (!(t && Ee.test(t))) {
            return t.length;
        }
        var e = pe.lastIndex = 0;
        while (pe.test(t)) {
            e++;
        }
        return e;
    }
    function Mn(t) {
        return t.match(pe);
    }
    function On(t) {
        return _e[t];
    }
    function Sn(Y) {
        Y = Y ? _.Nb({}, Y, _.Ob(ze, ye)) : ze;
        var St = Y.Date, Pt = Y.Error, Nt = Y.Math, It = Y.RegExp, qt = Y.TypeError;
        var zt = Y.Array.prototype, Bt = Y.Object.prototype;
        var kt = Y.Function.prototype.toString;
        var jt = Bt.hasOwnProperty;
        var Dt = 0;
        var Gt = kt.call(Object);
        var Ft = Bt.toString;
        var Vt = ze._;
        var Wt = It("^" + kt.call(jt).replace(gt, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        var Yt = Y.Pb, Xt = Y.Symbol, Kt = Y.Uint8Array, Zt = Y.clearTimeout, $t = Yt ? Yt.enumerate : t, Jt = Object.getPrototypeOf, Qt = Object.getOwnPropertySymbols, te = typeof (te = Xt && Xt.iterator) == "symbol" ? te : t, ee = Bt.propertyIsEnumerable, ne = Y.setTimeout, ie = zt.splice;
        var re = Nt.ceil, ae = Nt.floor, se = Y.isFinite, oe = zt.join, fe = Object.keys, ue = Nt.max, he = Nt.min, ce = Y.parseInt, le = Nt.random, de = zt.reverse;
        var pe = ea(Y, "Map"), be = ea(Y, "Set"), He = ea(Y, "WeakMap"), _e = ea(Object, "create");
        var Ae = He && new He();
        var Me = pe ? kt.call(pe) : "", Ue = be ? kt.call(be) : "";
        var Ce = Xt ? Xt.prototype : t, Le = Xt ? Ce.valueOf : t, Pe = Xt ? Ce.toString : t;
        var Ne = {};
        function Ie(t) {
            if (ff(t) && !Wo(t) && !(t instanceof Un)) {
                if (t instanceof vn) {
                    return t;
                }
                if (jt.call(t, "__wrapped__")) {
                    return ba(t);
                }
            }
            return new vn(t);
        }
        function qe() {}
        function vn(e, n) {
            this.Qb = e;
            this.Rb = [];
            this.Sb = !!n;
            this.Tb = 0;
            this.Ub = t;
        }
        Ie.Vb = {
            escape: ct,
            evaluate: lt,
            Wb: dt,
            Xb: "",
            imports: {
                _: Ie
            }
        };
        function Un(t) {
            this.Qb = t;
            this.Rb = [];
            this.Yb = 1;
            this.Zb = false;
            this.$b = [];
            this._b = O;
            this.ac = [];
        }
        function Cn() {
            var t = new Un(this.Qb);
            t.Rb = br(this.Rb);
            t.Yb = this.Yb;
            t.Zb = this.Zb;
            t.$b = br(this.$b);
            t._b = this._b;
            t.ac = br(this.ac);
            return t;
        }
        function Ln() {
            if (this.Zb) {
                var t = new Un(this);
                t.Yb = -1;
                t.Zb = true;
            } else {
                t = this.clone();
                t.Yb *= -1;
            }
            return t;
        }
        function Pn() {
            var t = this.Qb.value(), e = this.Yb, n = Wo(t), i = e < 0, r = n ? t.length : 0, a = ra(0, r, this.ac), s = a.start, o = a.end, f = o - s, u = i ? o : s - 1, h = this.$b, c = h.length, l = 0, d = he(f, this._b);
            if (!n || r < m || r == f && d == f) {
                return vr(t, this.Rb);
            }
            var v = [];
            t: while (f-- && l < d) {
                u += e;
                var p = -1, E = t[u];
                while (++p < c) {
                    var g = h[p], R = g.bc, w = g.type, x = R(E);
                    if (w == y) {
                        E = x;
                    } else if (!x) {
                        if (w == T) {
                            continue t;
                        } else {
                            break t;
                        }
                    }
                }
                v[l++] = E;
            }
            return v;
        }
        function Nn() {}
        function In(t, e) {
            return zn(t, e) && delete t[e];
        }
        function qn(e, n) {
            if (_e) {
                var i = e[n];
                return i === x ? t : i;
            }
            return jt.call(e, n) ? e[n] : t;
        }
        function zn(e, n) {
            return _e ? e[n] !== t : jt.call(e, n);
        }
        function Bn(e, n, i) {
            e[n] = _e && i === t ? x : i;
        }
        function kn(t) {
            var e = -1, n = t ? t.length : 0;
            this.clear();
            while (++e < n) {
                var i = t[e];
                this.set(i[0], i[1]);
            }
        }
        function jn() {
            this.cc = {
                hash: new Nn(),
                map: pe ? new pe() : [],
                string: new Nn()
            };
        }
        function Dn(t) {
            var e = this.cc;
            if (la(t)) {
                return In(typeof t == "string" ? e.string : e.hash, t);
            }
            return pe ? e.map["delete"](t) : ei(e.map, t);
        }
        function Gn(t) {
            var e = this.cc;
            if (la(t)) {
                return qn(typeof t == "string" ? e.string : e.hash, t);
            }
            return pe ? e.map.get(t) : ni(e.map, t);
        }
        function Fn(t) {
            var e = this.cc;
            if (la(t)) {
                return zn(typeof t == "string" ? e.string : e.hash, t);
            }
            return pe ? e.map.has(t) : ii(e.map, t);
        }
        function Vn(t, e) {
            var n = this.cc;
            if (la(t)) {
                Bn(typeof t == "string" ? n.string : n.hash, t, e);
            } else if (pe) {
                n.map.set(t, e);
            } else {
                ai(n.map, t, e);
            }
            return this;
        }
        function Wn(t) {
            var e = -1, n = t ? t.length : 0;
            this.cc = new kn();
            while (++e < n) {
                this.push(t[e]);
            }
        }
        function Yn(t, e) {
            var n = t.cc;
            if (la(e)) {
                var i = n.cc, r = typeof e == "string" ? i.string : i.hash;
                return r[e] === x;
            }
            return n.has(e);
        }
        function Xn(t) {
            var e = this.cc;
            if (la(t)) {
                var n = e.cc, i = typeof t == "string" ? n.string : n.hash;
                i[t] = x;
            } else {
                e.set(t, x);
            }
        }
        function Kn(t) {
            var e = -1, n = t ? t.length : 0;
            this.clear();
            while (++e < n) {
                var i = t[e];
                this.set(i[0], i[1]);
            }
        }
        function Zn() {
            this.cc = {
                dc: [],
                map: null
            };
        }
        function $n(t) {
            var e = this.cc, n = e.dc;
            return n ? ei(n, t) : e.map["delete"](t);
        }
        function Jn(t) {
            var e = this.cc, n = e.dc;
            return n ? ni(n, t) : e.map.get(t);
        }
        function Qn(t) {
            var e = this.cc, n = e.dc;
            return n ? ii(n, t) : e.map.has(t);
        }
        function ti(t, e) {
            var n = this.cc, i = n.dc;
            if (i) {
                if (i.length < m - 1) {
                    ai(i, t, e);
                } else {
                    n.dc = null;
                    n.map = new kn(i);
                }
            }
            var r = n.map;
            if (r) {
                r.set(t, e);
            }
            return this;
        }
        function ei(t, e) {
            var n = ri(t, e);
            if (n < 0) {
                return false;
            }
            var i = t.length - 1;
            if (n == i) {
                t.pop();
            } else {
                ie.call(t, n, 1);
            }
            return true;
        }
        function ni(e, n) {
            var i = ri(e, n);
            return i < 0 ? t : e[i][1];
        }
        function ii(t, e) {
            return ri(t, e) > -1;
        }
        function ri(t, e) {
            var n = t.length;
            while (n--) {
                if (Do(t[n][0], e)) {
                    return n;
                }
            }
            return -1;
        }
        function ai(t, e, n) {
            var i = ri(t, e);
            if (i < 0) {
                t.push([ e, n ]);
            } else {
                t[i][1] = n;
            }
        }
        function si(e, n, i, r) {
            if (e === t || Do(e, Bt[i]) && !jt.call(r, i)) {
                return n;
            }
            return e;
        }
        function oi(e, n, i) {
            if (i !== t && !Do(e[n], i) || typeof n == "number" && i === t && !(n in e)) {
                e[n] = i;
            }
        }
        function fi(e, n, i) {
            var r = e[n];
            if (!Do(r, i) || Do(r, Bt[n]) && !jt.call(e, n) || i === t && !(n in e)) {
                e[n] = i;
            }
        }
        function ui(t, e) {
            return t && Hr(e, Qf(e), t);
        }
        function hi(e, n) {
            var i = -1, r = e == null, a = n.length, s = Array(a);
            while (++i < a) {
                s[i] = r ? t : Xf(e, n[i]);
            }
            return s;
        }
        function ci(e, n, i) {
            if (e === e) {
                if (i !== t) {
                    e = e <= i ? e : i;
                }
                if (n !== t) {
                    e = e >= n ? e : n;
                }
            }
            return e;
        }
        function li(e, n, i, r, a, s) {
            var o;
            if (i) {
                o = a ? i(e, r, a, s) : i(e);
            }
            if (o !== t) {
                return o;
            }
            if (!of(e)) {
                return e;
            }
            var f = Wo(e);
            if (f) {
                o = sa(e);
                if (!n) {
                    return br(e, o);
                }
            } else {
                var u = ia(e), h = u == z || u == B;
                if (u == D || u == L || h && !a) {
                    if (Rn(e)) {
                        return a ? e : {};
                    }
                    o = oa(h ? {} : e);
                    if (!n) {
                        return Ar(e, ui(o, e));
                    }
                } else {
                    return xe[u] ? fa(e, u, n) : a ? e : {};
                }
            }
            s || (s = new Kn());
            var c = s.get(e);
            if (c) {
                return c;
            }
            s.set(e, o);
            (f ? Ge : _i)(e, function(t, r) {
                fi(o, r, li(t, n, i, r, e, s));
            });
            return f ? o : Ar(e, o);
        }
        function di(e) {
            var n = Qf(e), i = n.length;
            return function(r) {
                if (r == null) {
                    return !i;
                }
                var a = i;
                while (a--) {
                    var s = n[a], o = e[s], f = r[s];
                    if (f === t && !(s in Object(r)) || !o(f)) {
                        return false;
                    }
                }
                return true;
            };
        }
        var vi = function() {
            function e() {}
            return function(n) {
                if (of(n)) {
                    e.prototype = n;
                    var i = new e();
                    e.prototype = t;
                }
                return i || {};
            };
        }();
        function pi(e, n, i) {
            if (typeof e != "function") {
                throw new qt(w);
            }
            return ne(function() {
                e.apply(t, i);
            }, n);
        }
        function Ei(t, e, n, i) {
            var r = -1, a = Ye, s = true, o = t.length, f = [], u = e.length;
            if (!o) {
                return f;
            }
            if (n) {
                e = Ke(e, hn(n));
            }
            if (i) {
                a = Xe;
                s = false;
            } else if (e.length >= m) {
                a = Yn;
                s = false;
                e = new Wn(e);
            }
            t: while (++r < o) {
                var h = t[r], c = n ? n(h) : h;
                if (s && c === c) {
                    var l = u;
                    while (l--) {
                        if (e[l] === c) {
                            continue t;
                        }
                    }
                    f.push(h);
                } else if (!a(e, c, i)) {
                    f.push(h);
                }
            }
            return f;
        }
        var gi = Sr(_i);
        var mi = Sr(Ai, true);
        function Ti(t, e) {
            var n = true;
            gi(t, function(t, i, r) {
                n = !!e(t, i, r);
                return n;
            });
            return n;
        }
        function yi(e, n, i, r) {
            var a = e.length;
            i = _f(i);
            if (i < 0) {
                i = -i > a ? 0 : a + i;
            }
            r = r === t || r > a ? a : _f(r);
            if (r < 0) {
                r += a;
            }
            r = i > r ? 0 : Af(r);
            while (i < r) {
                e[i++] = n;
            }
            return e;
        }
        function Ri(t, e) {
            var n = [];
            gi(t, function(t, i, r) {
                if (e(t, i, r)) {
                    n.push(t);
                }
            });
            return n;
        }
        function wi(t, e, n, i) {
            i || (i = []);
            var r = -1, a = t.length;
            while (++r < a) {
                var s = t[r];
                if (Xo(s) && (n || Wo(s) || Vo(s))) {
                    if (e) {
                        wi(s, e, n, i);
                    } else {
                        Ze(i, s);
                    }
                } else if (!n) {
                    i[i.length] = s;
                }
            }
            return i;
        }
        var xi = Ur();
        var bi = Ur(true);
        function Hi(t, e) {
            return t == null ? t : xi(t, e, tu);
        }
        function _i(t, e) {
            return t && xi(t, e, Qf);
        }
        function Ai(t, e) {
            return t && bi(t, e, Qf);
        }
        function Mi(t, e) {
            return We(e, function(e) {
                return rf(t[e]);
            });
        }
        function Oi(e, n) {
            n = ca(n, e) ? [ n + "" ] : hr(n);
            var i = 0, r = n.length;
            while (e != null && i < r) {
                e = e[n[i++]];
            }
            return i && i == r ? e : t;
        }
        function Si(t, e) {
            return jt.call(t, e) || typeof t == "object" && e in t && Jt(t) === null;
        }
        function Ui(t, e) {
            return e in Object(t);
        }
        function Ci(t, e, n) {
            return t >= he(e, n) && t < ue(e, n);
        }
        function Li(e, n, i) {
            var r = i ? Xe : Ye, a = e.length, s = a, o = Array(a), f = [];
            while (s--) {
                var u = e[s];
                if (s && n) {
                    u = Ke(u, hn(n));
                }
                o[s] = !i && (n || u.length >= 120) ? new Wn(s && u) : t;
            }
            u = e[0];
            var h = -1, c = u.length, l = o[0];
            t: while (++h < c) {
                var d = u[h], v = n ? n(d) : d;
                if (!(l ? Yn(l, v) : r(f, v, i))) {
                    var s = a;
                    while (--s) {
                        var p = o[s];
                        if (!(p ? Yn(p, v) : r(e[s], v, i))) {
                            continue t;
                        }
                    }
                    if (l) {
                        l.push(v);
                    }
                    f.push(d);
                }
            }
            return f;
        }
        function Pi(e, n, i) {
            if (!ca(n, e)) {
                n = hr(n);
                e = ma(e, n);
                n = Ka(n);
            }
            var r = e == null ? e : e[n];
            return r == null ? t : je(r, e, i);
        }
        function Ni(t, e, n, i, r) {
            if (t === e) {
                return true;
            }
            if (t == null || e == null || !of(t) && !ff(e)) {
                return t !== t && e !== e;
            }
            return Ii(t, e, Ni, n, i, r);
        }
        function Ii(t, e, n, i, r, a) {
            var s = Wo(t), o = Wo(e), f = P, u = P;
            if (!s) {
                f = ia(t);
                if (f == L) {
                    f = D;
                } else if (f != D) {
                    s = Rf(t);
                }
            }
            if (!o) {
                u = ia(e);
                if (u == L) {
                    u = D;
                } else if (u != D) {
                    o = Rf(e);
                }
            }
            var h = f == D && !Rn(t), c = u == D && !Rn(e), l = f == u;
            if (l && !(s || h)) {
                return Xr(t, e, f, n, i, r);
            }
            var v = r & d;
            if (!v) {
                var p = h && jt.call(t, "__wrapped__"), E = c && jt.call(e, "__wrapped__");
                if (p || E) {
                    return n(p ? t.value() : t, E ? e.value() : e, i, r, a);
                }
            }
            if (!l) {
                return false;
            }
            a || (a = new Kn());
            return (s ? Yr : Kr)(t, e, n, i, r, a);
        }
        function qi(e, n, i, r) {
            var a = i.length, s = a, o = !r;
            if (e == null) {
                return !s;
            }
            e = Object(e);
            while (a--) {
                var f = i[a];
                if (o && f[2] ? f[1] !== e[f[0]] : !(f[0] in e)) {
                    return false;
                }
            }
            while (++a < s) {
                f = i[a];
                var u = f[0], h = e[u], c = f[1];
                if (o && f[2]) {
                    if (h === t && !(u in e)) {
                        return false;
                    }
                } else {
                    var v = new Kn(), p = r ? r(h, c, u, e, n, v) : t;
                    if (!(p === t ? Ni(c, h, r, l | d, v) : p)) {
                        return false;
                    }
                }
            }
            return true;
        }
        function zi(t) {
            var e = typeof t;
            if (e == "function") {
                return t;
            }
            if (t == null) {
                return rh;
            }
            if (e == "object") {
                return Wo(t) ? Gi(t[0], t[1]) : Di(t);
            }
            return gh(t);
        }
        function Bi(t) {
            return fe(Object(t));
        }
        function ki(t) {
            t = t == null ? t : Object(t);
            var e = [];
            for (var n in t) {
                e.push(n);
            }
            return e;
        }
        if ($t && !ee.call({
            valueOf: 1
        }, "valueOf")) {
            ki = function(t) {
                return xn($t(t));
            };
        }
        function ji(t, e) {
            var n = -1, i = Yo(t) ? Array(t.length) : [];
            gi(t, function(t, r, a) {
                i[++n] = e(t, r, a);
            });
            return i;
        }
        function Di(e) {
            var n = ta(e);
            if (n.length == 1 && n[0][2]) {
                var i = n[0][0], r = n[0][1];
                return function(e) {
                    if (e == null) {
                        return false;
                    }
                    return e[i] === r && (r !== t || i in Object(e));
                };
            }
            return function(t) {
                return t === e || qi(t, e, n);
            };
        }
        function Gi(e, n) {
            return function(i) {
                var r = Xf(i, e);
                return r === t && r === n ? Zf(i, e) : Ni(n, r, t, l | d);
            };
        }
        function Fi(e, n, i, r, a) {
            if (e === n) {
                return;
            }
            var s = Wo(n) || Rf(n) ? t : tu(n);
            Ge(s || n, function(o, f) {
                if (s) {
                    f = o;
                    o = n[f];
                }
                if (of(o)) {
                    a || (a = new Kn());
                    Vi(e, n, f, i, Fi, r, a);
                } else {
                    var u = r ? r(e[f], o, f + "", e, n, a) : t;
                    if (u === t) {
                        u = o;
                    }
                    oi(e, f, u);
                }
            });
        }
        function Vi(e, n, i, r, a, s, o) {
            var f = e[i], u = n[i], h = o.get(u) || o.get(f);
            if (h) {
                oi(e, i, h);
                return;
            }
            var c = s ? s(f, u, i + "", e, n, o) : t, l = c === t;
            if (l) {
                c = u;
                if (Wo(u) || Rf(u)) {
                    if (Wo(f)) {
                        c = r ? br(f) : f;
                    } else if (Xo(f)) {
                        c = br(f);
                    } else {
                        c = li(u);
                    }
                } else if (Ef(u) || Vo(u)) {
                    if (Vo(f)) {
                        c = Of(f);
                    } else if (!of(f) || r && rf(f)) {
                        c = li(u);
                    } else {
                        c = r ? li(f) : f;
                    }
                } else {
                    l = false;
                }
            }
            o.set(u, c);
            if (l) {
                a(c, u, r, s, o);
            }
            oi(e, i, c);
        }
        function Wi(t, e, n) {
            var i = -1, r = Jr();
            e = Ke(e.length ? e : Array(1), function(t) {
                return r(t);
            });
            var a = ji(t, function(t, n, r) {
                var a = Ke(e, function(e) {
                    return e(t);
                });
                return {
                    Mb: a,
                    index: ++i,
                    value: t
                };
            });
            return sn(a, function(t, e) {
                return En(t, e, n);
            });
        }
        function Yi(t, e) {
            t = Object(t);
            return $e(e, function(e, n) {
                if (n in t) {
                    e[n] = t[n];
                }
                return e;
            }, {});
        }
        function Xi(t, e) {
            var n = {};
            Hi(t, function(t, i) {
                if (e(t, i)) {
                    n[i] = t;
                }
            });
            return n;
        }
        function Ki(e) {
            return function(n) {
                return n == null ? t : n[e];
            };
        }
        function Zi(t) {
            return function(e) {
                return Oi(e, t);
            };
        }
        function $i(t, e) {
            return Ji(t, e);
        }
        function Ji(t, e, n) {
            var i = -1, r = e.length, a = t;
            if (n) {
                a = Ke(t, function(t) {
                    return n(t);
                });
            }
            while (++i < r) {
                var s = 0, o = e[i], f = n ? n(o) : o;
                while ((s = rn(a, f, s)) > -1) {
                    if (a !== t) {
                        ie.call(a, s, 1);
                    }
                    ie.call(t, s, 1);
                }
            }
            return t;
        }
        function Qi(t, e) {
            var n = t ? e.length : 0, i = n - 1;
            while (n--) {
                var r = e[n];
                if (i == n || r != a) {
                    var a = r;
                    if (wn(r)) {
                        ie.call(t, r, 1);
                    } else if (!ca(r, t)) {
                        var s = hr(r), o = ma(t, s);
                        if (o != null) {
                            delete o[Ka(s)];
                        }
                    } else {
                        delete t[r];
                    }
                }
            }
            return t;
        }
        function tr(t, e) {
            return t + ae(le() * (e - t + 1));
        }
        function er(t, e, n, i) {
            var r = -1, a = ue(re((e - t) / (n || 1)), 0), s = Array(a);
            while (a--) {
                s[i ? a : ++r] = t;
                t += n;
            }
            return s;
        }
        function nr(e, n, i, r) {
            n = ca(n, e) ? [ n + "" ] : hr(n);
            var a = -1, s = n.length, o = s - 1, f = e;
            while (f != null && ++a < s) {
                var u = n[a];
                if (of(f)) {
                    var h = i;
                    if (a != o) {
                        var c = f[u];
                        h = r ? r(c, u, f) : t;
                        if (h === t) {
                            h = c == null ? wn(n[a + 1]) ? [] : {} : c;
                        }
                    }
                    fi(f, u, h);
                }
                f = f[u];
            }
            return e;
        }
        var ir = !Ae ? rh : function(t, e) {
            Ae.set(t, e);
            return t;
        };
        function rr(t, e, n) {
            var i = -1, r = t.length;
            if (e < 0) {
                e = -e > r ? 0 : r + e;
            }
            n = n > r ? r : n;
            if (n < 0) {
                n += r;
            }
            r = e > n ? 0 : n - e >>> 0;
            e >>>= 0;
            var a = Array(r);
            while (++i < r) {
                a[i] = t[i + e];
            }
            return a;
        }
        function ar(t, e) {
            var n;
            gi(t, function(t, i, r) {
                n = e(t, i, r);
                return !n;
            });
            return !!n;
        }
        function sr(t, e, n) {
            var i = 0, r = t ? t.length : i;
            if (typeof e == "number" && e === e && r <= U) {
                while (i < r) {
                    var a = i + r >>> 1, s = t[a];
                    if ((n ? s <= e : s < e) && s !== null) {
                        i = a + 1;
                    } else {
                        r = a;
                    }
                }
                return r;
            }
            return or(t, e, rh, n);
        }
        function or(e, n, i, r) {
            n = i(n);
            var a = 0, s = e ? e.length : 0, o = n !== n, f = n === null, u = n === t;
            while (a < s) {
                var h = ae((a + s) / 2), c = i(e[h]), l = c !== t, d = c === c;
                if (o) {
                    var v = d || r;
                } else if (f) {
                    v = d && l && (r || c != null);
                } else if (u) {
                    v = d && (r || l);
                } else if (c == null) {
                    v = false;
                } else {
                    v = r ? c <= n : c < n;
                }
                if (v) {
                    a = h + 1;
                } else {
                    s = h;
                }
            }
            return he(s, S);
        }
        function fr(t) {
            return ur(t);
        }
        function ur(t, e) {
            var n = 0, i = t.length, r = t[0], a = e ? e(r) : r, s = a, o = 0, f = [ r ];
            while (++n < i) {
                r = t[n], a = e ? e(r) : r;
                if (!Do(a, s)) {
                    s = a;
                    f[++o] = r;
                }
            }
            return f;
        }
        function hr(t) {
            return Wo(t) ? t : Ra(t);
        }
        function cr(t, e, n) {
            var i = -1, r = Ye, a = t.length, s = true, o = [], f = o;
            if (n) {
                s = false;
                r = Xe;
            } else if (a >= m) {
                var u = e ? null : Vr(t);
                if (u) {
                    return _n(u);
                }
                s = false;
                r = Yn;
                f = new Wn();
            } else {
                f = e ? [] : o;
            }
            t: while (++i < a) {
                var h = t[i], c = e ? e(h) : h;
                if (s && c === c) {
                    var l = f.length;
                    while (l--) {
                        if (f[l] === c) {
                            continue t;
                        }
                    }
                    if (e) {
                        f.push(c);
                    }
                    o.push(h);
                } else if (!r(f, c, n)) {
                    if (f !== o) {
                        f.push(c);
                    }
                    o.push(h);
                }
            }
            return o;
        }
        function lr(t, e) {
            e = ca(e, t) ? [ e + "" ] : hr(e);
            t = ma(t, e);
            var n = Ka(e);
            return t != null && Kf(t, n) ? delete t[n] : true;
        }
        function dr(t, e, n, i) {
            var r = t.length, a = i ? r : -1;
            while ((i ? a-- : ++a < r) && e(t[a], a, t)) {}
            return n ? rr(t, i ? 0 : a, i ? a + 1 : r) : rr(t, i ? a + 1 : 0, i ? r : a);
        }
        function vr(t, e) {
            var n = t;
            if (n instanceof Un) {
                n = n.value();
            }
            return $e(e, function(t, e) {
                return e.ec.apply(e.fc, Ze([ t ], e.gc));
            }, n);
        }
        function pr(t, e, n) {
            var i = -1, r = t.length;
            while (++i < r) {
                var a = a ? Ze(Ei(a, t[i], e, n), Ei(t[i], a, e, n)) : t[i];
            }
            return a && a.length ? cr(a, e, n) : [];
        }
        function Er(t) {
            var e = t.constructor, n = new e(t.byteLength), i = new Kt(n);
            i.set(new Kt(t));
            return n;
        }
        function gr(t) {
            var e = t.constructor;
            return $e(bn(t), Be, new e());
        }
        function mr(t) {
            var e = t.constructor, n = new e(t.source, bt.exec(t));
            n.lastIndex = t.lastIndex;
            return n;
        }
        function Tr(t) {
            var e = t.constructor;
            return $e(_n(t), ke, new e());
        }
        function yr(t) {
            return Xt ? Object(Le.call(t)) : {};
        }
        function Rr(t, e) {
            var n = t.buffer, i = t.constructor;
            return new i(e ? Er(n) : n, t.byteOffset, t.length);
        }
        function wr(t, e, n) {
            var i = n.length, r = -1, a = ue(t.length - i, 0), s = -1, o = e.length, f = Array(o + a);
            while (++s < o) {
                f[s] = e[s];
            }
            while (++r < i) {
                f[n[r]] = t[r];
            }
            while (a--) {
                f[s++] = t[r++];
            }
            return f;
        }
        function xr(t, e, n) {
            var i = -1, r = n.length, a = -1, s = ue(t.length - r, 0), o = -1, f = e.length, u = Array(s + f);
            while (++a < s) {
                u[a] = t[a];
            }
            var h = a;
            while (++o < f) {
                u[h + o] = e[o];
            }
            while (++i < r) {
                u[h + n[i]] = t[a++];
            }
            return u;
        }
        function br(t, e) {
            var n = -1, i = t.length;
            e || (e = Array(i));
            while (++n < i) {
                e[n] = t[n];
            }
            return e;
        }
        function Hr(t, e, n) {
            return _r(t, e, n);
        }
        function _r(t, e, n, i) {
            n || (n = {});
            var r = -1, a = e.length;
            while (++r < a) {
                var s = e[r], o = i ? i(n[s], t[s], s, n, t) : t[s];
                fi(n, s, o);
            }
            return n;
        }
        function Ar(t, e) {
            return Hr(t, na(t), e);
        }
        function Mr(t, e) {
            return function(n, i) {
                var r = e ? e() : {};
                i = Jr(i);
                if (Wo(n)) {
                    var a = -1, s = n.length;
                    while (++a < s) {
                        var o = n[a];
                        t(r, o, i(o), n);
                    }
                } else {
                    gi(n, function(e, n, a) {
                        t(r, e, i(e), a);
                    });
                }
                return r;
            };
        }
        function Or(e) {
            return Lo(function(n, i) {
                var r = -1, a = i.length, s = a > 1 ? i[a - 1] : t, o = a > 2 ? i[2] : t;
                s = typeof s == "function" ? (a--, s) : t;
                if (o && ha(i[0], i[1], o)) {
                    s = a < 3 ? t : s;
                    a = 1;
                }
                n = Object(n);
                while (++r < a) {
                    var f = i[r];
                    if (f) {
                        e(n, f, r, s);
                    }
                }
                return n;
            });
        }
        function Sr(t, e) {
            return function(n, i) {
                if (n == null) {
                    return n;
                }
                if (!Yo(n)) {
                    return t(n, i);
                }
                var r = n.length, a = e ? r : -1, s = Object(n);
                while (e ? a-- : ++a < r) {
                    if (i(s[a], a, s) === false) {
                        break;
                    }
                }
                return n;
            };
        }
        function Ur(t) {
            return function(e, n, i) {
                var r = -1, a = Object(e), s = i(e), o = s.length;
                while (o--) {
                    var f = s[t ? o : ++r];
                    if (n(a[f], f, a) === false) {
                        break;
                    }
                }
                return e;
            };
        }
        function Cr(t, e, i) {
            var r = e & n, a = Nr(t);
            function s() {
                var e = this && this !== ze && this instanceof s ? a : t;
                return e.apply(r ? i : this, arguments);
            }
            return s;
        }
        function Lr(e) {
            return function(n) {
                n = Uf(n);
                var i = Ee.test(n) ? Mn(n) : t, r = i ? i[0] : n.charAt(0), a = i ? i.slice(1).join("") : n.slice(1);
                return r[e]() + a;
            };
        }
        function Pr(t) {
            return function(e) {
                return $e(Zu(xu(e)), t, "");
            };
        }
        function Nr(t) {
            return function() {
                var e = arguments;
                switch (e.length) {
                  case 0:
                    return new t();

                  case 1:
                    return new t(e[0]);

                  case 2:
                    return new t(e[0], e[1]);

                  case 3:
                    return new t(e[0], e[1], e[2]);

                  case 4:
                    return new t(e[0], e[1], e[2], e[3]);

                  case 5:
                    return new t(e[0], e[1], e[2], e[3], e[4]);

                  case 6:
                    return new t(e[0], e[1], e[2], e[3], e[4], e[5]);

                  case 7:
                    return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
                }
                var n = vi(t.prototype), i = t.apply(n, e);
                return of(i) ? i : n;
            };
        }
        function Ir(e, n, i) {
            var r = Nr(e);
            function a() {
                var s = arguments.length, o = s, f = Array(s), u = this && this !== ze && this instanceof a ? r : e, h = a.placeholder;
                while (o--) {
                    f[o] = arguments[o];
                }
                var c = s < 3 && f[0] !== h && f[s - 1] !== h ? [] : Hn(f, h);
                s -= c.length;
                return s < i ? Gr(e, n, zr, h, t, f, c, t, t, i - s) : je(u, this, f);
            }
            return a;
        }
        function qr(e) {
            return Lo(function(n) {
                n = wi(n);
                var i = n.length, r = i, s = vn.prototype.hc;
                if (e) {
                    n.reverse();
                }
                while (r--) {
                    var f = n[r];
                    if (typeof f != "function") {
                        throw new qt(w);
                    }
                    if (s && !c && $r(f) == "wrapper") {
                        var c = new vn([], true);
                    }
                }
                r = c ? r : i;
                while (++r < i) {
                    f = n[r];
                    var l = $r(f), d = l == "wrapper" ? Zr(f) : t;
                    if (d && da(d[0]) && d[1] == (u | a | o | h) && !d[4].length && d[9] == 1) {
                        c = c[$r(d[0])].apply(c, d[3]);
                    } else {
                        c = f.length == 1 && da(f) ? c[l]() : c.hc(f);
                    }
                }
                return function() {
                    var t = arguments, e = t[0];
                    if (c && t.length == 1 && Wo(e) && e.length >= m) {
                        return c.ic(e).value();
                    }
                    var r = 0, a = i ? n[r].apply(this, t) : e;
                    while (++r < i) {
                        a = n[r].call(this, a);
                    }
                    return a;
                };
            });
        }
        function zr(e, r, o, f, h, l, d, v, p, E) {
            var g = r & u, m = r & n, T = r & i, y = r & a, R = r & s, w = r & c, x = T ? t : Nr(e);
            function b() {
                var t = arguments.length, n = t, i = Array(t);
                while (n--) {
                    i[n] = arguments[n];
                }
                if (f) {
                    i = wr(i, f, h);
                }
                if (l) {
                    i = xr(i, l, d);
                }
                if (y || R) {
                    var a = b.placeholder, s = Hn(i, a);
                    t -= s.length;
                    if (t < E) {
                        return Gr(e, r, zr, a, o, i, s, v, p, E - t);
                    }
                }
                var u = m ? o : this, c = T ? u[e] : e;
                if (v) {
                    i = Ta(i, v);
                } else if (w && i.length > 1) {
                    i.reverse();
                }
                if (g && p < i.length) {
                    i.length = p;
                }
                if (this && this !== ze && this instanceof b) {
                    c = x || Nr(c);
                }
                return c.apply(u, i);
            }
            return b;
        }
        function Br(t) {
            return Lo(function(e) {
                e = Ke(wi(e), Jr());
                return Lo(function(n) {
                    var i = this;
                    return t(e, function(t) {
                        return je(t, i, n);
                    });
                });
            });
        }
        function kr(e, n, i) {
            n = _f(n);
            var r = An(e);
            if (!n || r >= n) {
                return "";
            }
            var a = n - r;
            i = i === t ? " " : i + "";
            var s = Nu(i, re(a / An(i)));
            return Ee.test(i) ? Mn(s).slice(0, a).join("") : s.slice(0, a);
        }
        function jr(t, e, i, r) {
            var a = e & n, s = Nr(t);
            function o() {
                var e = -1, n = arguments.length, f = -1, u = r.length, h = Array(u + n), c = this && this !== ze && this instanceof o ? s : t;
                while (++f < u) {
                    h[f] = r[f];
                }
                while (n--) {
                    h[f++] = arguments[++e];
                }
                return je(c, a ? i : this, h);
            }
            return o;
        }
        function Dr(e) {
            return function(n, i, r) {
                if (r && typeof r != "number" && ha(n, i, r)) {
                    i = r = t;
                }
                n = Mf(n);
                n = n === n ? n : 0;
                if (i === t) {
                    i = n;
                    n = 0;
                } else {
                    i = Mf(i) || 0;
                }
                r = r === t ? n < i ? 1 : -1 : Mf(r) || 0;
                return er(n, i, r, e);
            };
        }
        function Gr(e, s, u, h, c, l, d, v, p, E) {
            var g = s & a, m = v ? br(v) : t, T = g ? d : t, y = g ? t : d, R = g ? l : t, w = g ? t : l;
            s |= g ? o : f;
            s &= ~(g ? f : o);
            if (!(s & r)) {
                s &= ~(n | i);
            }
            var x = [ e, s, c, R, T, w, y, m, p, E ], b = u.apply(t, x);
            if (da(e)) {
                ya(b, x);
            }
            b.placeholder = h;
            return b;
        }
        function Fr(t) {
            var e = Nt[t];
            return function(t, n) {
                t = Mf(t);
                n = _f(n);
                if (n) {
                    var i = (Uf(t) + "e").split("e"), r = e(i[0] + "e" + (+i[1] + n));
                    i = (Uf(r) + "e").split("e");
                    return +(i[0] + "e" + (+i[1] - n));
                }
                return e(t);
            };
        }
        var Vr = !(be && new be([ 1, 2 ]).size === 2) ? lh : function(t) {
            return new be(t);
        };
        function Wr(e, r, u, h, c, l, d, v) {
            var p = r & i;
            if (!p && typeof e != "function") {
                throw new qt(w);
            }
            var E = h ? h.length : 0;
            if (!E) {
                r &= ~(o | f);
                h = c = t;
            }
            d = d === t ? d : ue(_f(d), 0);
            v = v === t ? v : _f(v);
            E -= c ? c.length : 0;
            if (r & f) {
                var g = h, m = c;
                h = c = t;
            }
            var T = p ? t : Zr(e), y = [ e, r, u, h, c, g, m, l, d, v ];
            if (T) {
                Ea(y, T);
            }
            e = y[0];
            r = y[1];
            u = y[2];
            h = y[3];
            c = y[4];
            v = y[9] = y[9] == null ? p ? 0 : e.length : ue(y[9] - E, 0);
            if (!v && r & (a | s)) {
                r &= ~(a | s);
            }
            if (!r || r == n) {
                var R = Cr(e, r, u);
            } else if (r == a || r == s) {
                R = Ir(e, r, v);
            } else if ((r == o || r == (n | o)) && !c.length) {
                R = jr(e, r, u, h);
            } else {
                R = zr.apply(t, y);
            }
            var x = T ? ir : ya;
            return x(R, y);
        }
        function Yr(e, n, i, r, a, s) {
            var o = -1, f = a & d, u = a & l, h = e.length, c = n.length;
            if (h != c && !(f && c > h)) {
                return false;
            }
            var v = s.get(e);
            if (v) {
                return v == n;
            }
            var p = true;
            s.set(e, n);
            while (++o < h) {
                var E = e[o], g = n[o];
                if (r) {
                    var m = f ? r(g, E, o, n, e, s) : r(E, g, o, e, n, s);
                }
                if (m !== t) {
                    if (m) {
                        continue;
                    }
                    p = false;
                    break;
                }
                if (u) {
                    if (!Qe(n, function(t) {
                        return E === t || i(E, t, r, a, s);
                    })) {
                        p = false;
                        break;
                    }
                } else if (!(E === g || i(E, g, r, a, s))) {
                    p = false;
                    break;
                }
            }
            s["delete"](e);
            return p;
        }
        function Xr(t, e, n, i, r, a) {
            switch (n) {
              case X:
                if (t.byteLength != e.byteLength || !i(new Kt(t), new Kt(e))) {
                    return false;
                }
                return true;

              case N:
              case I:
                return +t == +e;

              case q:
                return t.name == e.name && t.message == e.message;

              case j:
                return t != +t ? e != +e : t == +e;

              case G:
              case V:
                return t == e + "";

              case k:
                var s = bn;

              case F:
                var o = a & d;
                s || (s = _n);
                return (o || t.size == e.size) && i(s(t), s(e), r, a | l);

              case W:
                return !!Xt && Le.call(t) == Le.call(e);
            }
            return false;
        }
        function Kr(e, n, i, r, a, s) {
            var o = a & d, f = Qf(e), u = f.length, h = Qf(n), c = h.length;
            if (u != c && !o) {
                return false;
            }
            var l = u;
            while (l--) {
                var v = f[l];
                if (!(o ? v in n : Si(n, v))) {
                    return false;
                }
            }
            var p = s.get(e);
            if (p) {
                return p == n;
            }
            var E = true;
            s.set(e, n);
            var g = o;
            while (++l < u) {
                v = f[l];
                var m = e[v], T = n[v];
                if (r) {
                    var y = o ? r(T, m, v, n, e, s) : r(m, T, v, e, n, s);
                }
                if (!(y === t ? m === T || i(m, T, r, a, s) : y)) {
                    E = false;
                    break;
                }
                g || (g = v == "constructor");
            }
            if (E && !g) {
                var R = e.constructor, w = n.constructor;
                if (R != w && ("constructor" in e && "constructor" in n) && !(typeof R == "function" && R instanceof R && typeof w == "function" && w instanceof w)) {
                    E = false;
                }
            }
            s["delete"](e);
            return E;
        }
        var Zr = !Ae ? lh : function(t) {
            return Ae.get(t);
        };
        function $r(t) {
            var e = t.name + "", n = Ne[e], i = jt.call(Ne, e) ? n.length : 0;
            while (i--) {
                var r = n[i], a = r.ec;
                if (a == null || a == t) {
                    return r.name;
                }
            }
            return e;
        }
        function Jr() {
            var t = Ie.bc || ah;
            t = t === ah ? zi : t;
            return arguments.length ? t(arguments[0], arguments[1]) : t;
        }
        var Qr = Ki("length");
        function ta(t) {
            var e = lu(t), n = e.length;
            while (n--) {
                e[n][2] = pa(e[n][1]);
            }
            return e;
        }
        function ea(e, n) {
            var i = e == null ? t : e[n];
            return lf(i) ? i : t;
        }
        var na = Qt || function() {
            return [];
        };
        function ia(t) {
            return Ft.call(t);
        }
        if (pe && ia(new pe()) != k || be && ia(new be()) != F) {
            ia = function(t) {
                var e = Ft.call(t), n = e == D ? t.constructor : null, i = typeof n == "function" ? kt.call(n) : "";
                if (i) {
                    if (i == Me) {
                        return k;
                    }
                    if (i == Ue) {
                        return F;
                    }
                }
                return e;
            };
        }
        function ra(t, e, n) {
            var i = -1, r = n.length;
            while (++i < r) {
                var a = n[i], s = a.size;
                switch (a.type) {
                  case "drop":
                    t += s;
                    break;

                  case "dropRight":
                    e -= s;
                    break;

                  case "take":
                    e = he(e, t + s);
                    break;

                  case "takeRight":
                    t = ue(t, e - s);
                    break;
                }
            }
            return {
                start: t,
                end: e
            };
        }
        function aa(t, e, n) {
            if (t == null) {
                return false;
            }
            var i = n(t, e);
            if (!i && !ca(e)) {
                e = hr(e);
                t = ma(t, e);
                if (t != null) {
                    e = Ka(e);
                    i = n(t, e);
                }
            }
            return i || sf(t && t.length) && wn(e, t.length) && (Wo(t) || Tf(t) || Vo(t));
        }
        function sa(t) {
            var e = t.length, n = t.constructor(e);
            if (e && typeof t[0] == "string" && jt.call(t, "index")) {
                n.index = t.index;
                n.input = t.input;
            }
            return n;
        }
        function oa(e) {
            var n = e.constructor;
            return vi(rf(n) ? n.prototype : t);
        }
        function fa(t, e, n) {
            var i = t.constructor;
            switch (e) {
              case X:
                return Er(t);

              case N:
              case I:
                return new i(+t);

              case K:
              case Z:
              case $:
              case J:
              case Q:
              case tt:
              case et:
              case nt:
              case it:
                return Rr(t, n);

              case k:
                return gr(t);

              case j:
              case V:
                return new i(t);

              case G:
                return mr(t);

              case F:
                return Tr(t);

              case W:
                return yr(t);
            }
        }
        function ua(e) {
            var n = e ? e.length : t;
            return sf(n) && (Wo(e) || Tf(e) || Vo(e)) ? fn(n, String) : null;
        }
        function ha(t, e, n) {
            if (!of(n)) {
                return false;
            }
            var i = typeof e;
            if (i == "number" ? Yo(n) && wn(e, n.length) : i == "string" && e in n) {
                return Do(n[e], t);
            }
            return false;
        }
        function ca(t, e) {
            if (typeof t == "number") {
                return true;
            }
            return !Wo(t) && (pt.test(t) || !vt.test(t) || e != null && t in Object(e));
        }
        function la(t) {
            var e = typeof t;
            return e == "number" || e == "boolean" || e == "string" && t !== "__proto__" || t == null;
        }
        function da(t) {
            var e = $r(t), n = Ie[e];
            if (typeof n != "function" || !(e in Un.prototype)) {
                return false;
            }
            if (t === n) {
                return true;
            }
            var i = Zr(n);
            return !!i && t === i[0];
        }
        function va(t) {
            var e = t && t.constructor, n = typeof e == "function" && e.prototype || Bt;
            return t === n;
        }
        function pa(t) {
            return t === t && !of(t);
        }
        function Ea(t, e) {
            var s = t[1], o = e[1], f = s | o, c = f < (n | i | u);
            var l = o == u && s == a || o == u && s == h && t[7].length <= e[8] || o == (u | h) && e[7].length <= e[8] && s == a;
            if (!(c || l)) {
                return t;
            }
            if (o & n) {
                t[2] = e[2];
                f |= s & n ? 0 : r;
            }
            var d = e[3];
            if (d) {
                var v = t[3];
                t[3] = v ? wr(v, d, e[4]) : br(d);
                t[4] = v ? Hn(t[3], C) : br(e[4]);
            }
            d = e[5];
            if (d) {
                v = t[5];
                t[5] = v ? xr(v, d, e[6]) : br(d);
                t[6] = v ? Hn(t[5], C) : br(e[6]);
            }
            d = e[7];
            if (d) {
                t[7] = br(d);
            }
            if (o & u) {
                t[8] = t[8] == null ? e[8] : he(t[8], e[8]);
            }
            if (t[9] == null) {
                t[9] = e[9];
            }
            t[0] = e[0];
            t[1] = f;
            return t;
        }
        function ga(e, n, i, r, a, s) {
            if (of(e) && of(n)) {
                s.set(n, e);
                Fi(e, n, t, ga, s);
            }
            return e;
        }
        function ma(t, e) {
            return e.length == 1 ? t : Xf(t, rr(e, 0, -1));
        }
        function Ta(e, n) {
            var i = e.length, r = he(n.length, i), a = br(e);
            while (r--) {
                var s = n[r];
                e[r] = wn(s, i) ? a[s] : t;
            }
            return e;
        }
        var ya = function() {
            var t = 0, e = 0;
            return function(n, i) {
                var r = vo(), a = g - (r - e);
                e = r;
                if (a > 0) {
                    if (++t >= E) {
                        return n;
                    }
                } else {
                    t = 0;
                }
                return ir(n, i);
            };
        }();
        function Ra(t) {
            var e = [];
            Uf(t).replace(Et, function(t, n, i, r) {
                e.push(i ? r.replace(wt, "$1") : n || t);
            });
            return e;
        }
        function wa(t) {
            return Xo(t) ? t : [];
        }
        function xa(t) {
            return typeof t == "function" ? t : rh;
        }
        function ba(t) {
            if (t instanceof Un) {
                return t.clone();
            }
            var e = new vn(t.Qb, t.Sb);
            e.Rb = br(t.Rb);
            e.Tb = t.Tb;
            e.Ub = t.Ub;
            return e;
        }
        function Ha(t, e) {
            e = ue(_f(e), 0);
            var n = t ? t.length : 0;
            if (!n || e < 1) {
                return [];
            }
            var i = 0, r = -1, a = Array(re(n / e));
            while (i < n) {
                a[++r] = rr(t, i, i += e);
            }
            return a;
        }
        function _a(t) {
            var e = -1, n = t ? t.length : 0, i = -1, r = [];
            while (++e < n) {
                var a = t[e];
                if (a) {
                    r[++i] = a;
                }
            }
            return r;
        }
        var Aa = Lo(function(t, e) {
            if (!Wo(t)) {
                t = t == null ? [] : [ Object(t) ];
            }
            e = wi(e);
            return De(t, e);
        });
        var Ma = Lo(function(t, e) {
            return Xo(t) ? Ei(t, wi(e, false, true)) : [];
        });
        var Oa = Lo(function(e, n) {
            var i = Ka(n);
            if (Xo(i)) {
                i = t;
            }
            return Xo(e) ? Ei(e, wi(n, false, true), Jr(i)) : [];
        });
        var Sa = Lo(function(e, n) {
            var i = Ka(n);
            if (Xo(i)) {
                i = t;
            }
            return Xo(e) ? Ei(e, wi(n, false, true), t, i) : [];
        });
        function Ua(e, n, i) {
            var r = e ? e.length : 0;
            if (!r) {
                return [];
            }
            n = i || n === t ? 1 : _f(n);
            return rr(e, n < 0 ? 0 : n, r);
        }
        function Ca(e, n, i) {
            var r = e ? e.length : 0;
            if (!r) {
                return [];
            }
            n = i || n === t ? 1 : _f(n);
            n = r - n;
            return rr(e, 0, n < 0 ? 0 : n);
        }
        function La(t, e) {
            return t && t.length ? dr(t, Jr(e, 3), true, true) : [];
        }
        function Pa(t, e) {
            return t && t.length ? dr(t, Jr(e, 3), true) : [];
        }
        function Na(t, e, n, i) {
            var r = t ? t.length : 0;
            if (!r) {
                return [];
            }
            if (n && typeof n != "number" && ha(t, e, n)) {
                n = 0;
                i = r;
            }
            return yi(t, e, n, i);
        }
        function Ia(t, e) {
            return t && t.length ? nn(t, Jr(e, 3)) : -1;
        }
        function qa(t, e) {
            return t && t.length ? nn(t, Jr(e, 3), true) : -1;
        }
        function za(t, e) {
            var n = t ? t.length : 0;
            return n ? wi(Ke(t, Jr(e, 3))) : [];
        }
        function Ba(t) {
            var e = t ? t.length : 0;
            return e ? wi(t) : [];
        }
        function ka(t) {
            var e = t ? t.length : 0;
            return e ? wi(t, true) : [];
        }
        function ja(t) {
            var e = -1, n = t ? t.length : 0, i = {};
            while (++e < n) {
                var r = t[e];
                i[r[0]] = r[1];
            }
            return i;
        }
        function Da(e) {
            return e ? e[0] : t;
        }
        function Ga(t, e, n) {
            var i = t ? t.length : 0;
            if (!i) {
                return -1;
            }
            n = _f(n);
            if (n < 0) {
                n = ue(i + n, 0);
            }
            return rn(t, e, n);
        }
        function Fa(t) {
            return Ca(t, 1);
        }
        var Va = Lo(function(t) {
            var e = Ke(t, wa);
            return e.length && e[0] === t[0] ? Li(e) : [];
        });
        var Wa = Lo(function(e) {
            var n = Ka(e), i = Ke(e, wa);
            if (n === Ka(i)) {
                n = t;
            } else {
                i.pop();
            }
            return i.length && i[0] === e[0] ? Li(i, Jr(n)) : [];
        });
        var Ya = Lo(function(e) {
            var n = Ka(e), i = Ke(e, wa);
            if (n === Ka(i)) {
                n = t;
            } else {
                i.pop();
            }
            return i.length && i[0] === e[0] ? Li(i, t, n) : [];
        });
        function Xa(t, e) {
            return t ? oe.call(t, e) : "";
        }
        function Ka(e) {
            var n = e ? e.length : 0;
            return n ? e[n - 1] : t;
        }
        function Za(e, n, i) {
            var r = e ? e.length : 0;
            if (!r) {
                return -1;
            }
            var a = r;
            if (i !== t) {
                a = _f(i);
                a = (a < 0 ? ue(r + a, 0) : he(a, r - 1)) + 1;
            }
            if (n !== n) {
                return yn(e, a, true);
            }
            while (a--) {
                if (e[a] === n) {
                    return a;
                }
            }
            return -1;
        }
        var $a = Lo(Ja);
        function Ja(t, e) {
            return t && t.length && e && e.length ? $i(t, e) : t;
        }
        function Qa(t, e, n) {
            return t && t.length && e && e.length ? Ji(t, e, Jr(n)) : t;
        }
        var ts = Lo(function(t, e) {
            e = Ke(wi(e), String);
            var n = hi(t, e);
            Qi(t, e.sort(pn));
            return n;
        });
        function es(t, e) {
            var n = [];
            if (!(t && t.length)) {
                return n;
            }
            var i = -1, r = [], a = t.length;
            e = Jr(e, 3);
            while (++i < a) {
                var s = t[i];
                if (e(s, i, t)) {
                    n.push(s);
                    r.push(i);
                }
            }
            Qi(t, r);
            return n;
        }
        function ns(t) {
            return t ? de.call(t) : t;
        }
        function is(e, n, i) {
            var r = e ? e.length : 0;
            if (!r) {
                return [];
            }
            if (i && typeof i != "number" && ha(e, n, i)) {
                n = 0;
                i = r;
            } else {
                n = n == null ? 0 : _f(n);
                i = i === t ? r : _f(i);
            }
            return rr(e, n, i);
        }
        function rs(t, e) {
            return sr(t, e);
        }
        function as(t, e, n) {
            return or(t, e, Jr(n));
        }
        function ss(t, e) {
            var n = t ? t.length : 0;
            if (n) {
                var i = sr(t, e);
                if (i < n && Do(t[i], e)) {
                    return i;
                }
            }
            return -1;
        }
        function os(t, e) {
            return sr(t, e, true);
        }
        function fs(t, e, n) {
            return or(t, e, Jr(n), true);
        }
        function us(t, e) {
            var n = t ? t.length : 0;
            if (n) {
                var i = sr(t, e, true) - 1;
                if (Do(t[i], e)) {
                    return i;
                }
            }
            return -1;
        }
        function hs(t) {
            return t && t.length ? fr(t) : [];
        }
        function cs(t, e) {
            return t && t.length ? ur(t, Jr(e)) : [];
        }
        function ls(t) {
            return Ua(t, 1);
        }
        function ds(e, n, i) {
            if (!(e && e.length)) {
                return [];
            }
            n = i || n === t ? 1 : _f(n);
            return rr(e, 0, n < 0 ? 0 : n);
        }
        function vs(e, n, i) {
            var r = e ? e.length : 0;
            if (!r) {
                return [];
            }
            n = i || n === t ? 1 : _f(n);
            n = r - n;
            return rr(e, n < 0 ? 0 : n, r);
        }
        function ps(t, e) {
            return t && t.length ? dr(t, Jr(e, 3), false, true) : [];
        }
        function Es(t, e) {
            return t && t.length ? dr(t, Jr(e, 3)) : [];
        }
        var gs = Lo(function(t) {
            return cr(wi(t, false, true));
        });
        var ms = Lo(function(e) {
            var n = Ka(e);
            if (Xo(n)) {
                n = t;
            }
            return cr(wi(e, false, true), Jr(n));
        });
        var Ts = Lo(function(e) {
            var n = Ka(e);
            if (Xo(n)) {
                n = t;
            }
            return cr(wi(e, false, true), t, n);
        });
        function ys(t) {
            return t && t.length ? cr(t) : [];
        }
        function Rs(t, e) {
            return t && t.length ? cr(t, Jr(e)) : [];
        }
        function ws(e, n) {
            return e && e.length ? cr(e, t, n) : [];
        }
        function xs(t) {
            if (!(t && t.length)) {
                return [];
            }
            var e = 0;
            t = We(t, function(t) {
                if (Xo(t)) {
                    e = ue(t.length, e);
                    return true;
                }
            });
            return fn(e, function(e) {
                return Ke(t, Ki(e));
            });
        }
        function bs(e, n) {
            if (!(e && e.length)) {
                return [];
            }
            var i = xs(e);
            if (n == null) {
                return i;
            }
            return Ke(i, function(e) {
                return je(n, t, e);
            });
        }
        var Hs = Lo(function(t, e) {
            return Xo(t) ? Ei(t, e) : [];
        });
        var _s = Lo(function(t) {
            return pr(We(t, Xo));
        });
        var As = Lo(function(e) {
            var n = Ka(e);
            if (Xo(n)) {
                n = t;
            }
            return pr(We(e, Xo), Jr(n));
        });
        var Ms = Lo(function(e) {
            var n = Ka(e);
            if (Xo(n)) {
                n = t;
            }
            return pr(We(e, Xo), t, n);
        });
        var Os = Lo(xs);
        function Ss(e, n) {
            var i = -1, r = e ? e.length : 0, a = n ? n.length : 0, s = {};
            while (++i < r) {
                nr(s, e[i], i < a ? n[i] : t);
            }
            return s;
        }
        var Us = Lo(function(e) {
            var n = e.length, i = n > 1 ? e[n - 1] : t;
            i = typeof i == "function" ? (e.pop(), i) : t;
            return bs(e, i);
        });
        function Cs(t) {
            var e = Ie(t);
            e.Sb = true;
            return e;
        }
        function Ls(t, e) {
            e(t);
            return t;
        }
        function Ps(t, e) {
            return e(t);
        }
        var Ns = Lo(function(e) {
            e = wi(e);
            var n = e.length, i = n ? e[0] : 0, r = this.Qb, a = function(t) {
                return hi(t, e);
            };
            if (n > 1 || this.Rb.length || !(r instanceof Un) || !wn(i)) {
                return this.hc(a);
            }
            r = r.slice(i, +i + (n ? 1 : 0));
            r.Rb.push({
                ec: Ps,
                gc: [ a ],
                fc: t
            });
            return new vn(r, this.Sb).hc(function(e) {
                if (n && !e.length) {
                    e.push(t);
                }
                return e;
            });
        });
        function Is() {
            return Cs(this);
        }
        function qs() {
            return new vn(this.value(), this.Sb);
        }
        function zs(t) {
            return this.map(t).jc();
        }
        function Bs() {
            if (this.Ub === t) {
                this.Ub = Hf(this.value());
            }
            var e = this.Tb >= this.Ub.length, n = e ? t : this.Ub[this.Tb++];
            return {
                done: e,
                value: n
            };
        }
        function ks() {
            return this;
        }
        function js(e) {
            var n, i = this;
            while (i instanceof qe) {
                var r = ba(i);
                r.Tb = 0;
                r.Ub = t;
                if (n) {
                    a.Qb = r;
                } else {
                    n = r;
                }
                var a = r;
                i = i.Qb;
            }
            a.Qb = e;
            return n;
        }
        function Ds() {
            var e = this.Qb;
            if (e instanceof Un) {
                var n = e;
                if (this.Rb.length) {
                    n = new Un(this);
                }
                n = n.reverse();
                n.Rb.push({
                    ec: Ps,
                    gc: [ ns ],
                    fc: t
                });
                return new vn(n, this.Sb);
            }
            return this.hc(ns);
        }
        function Gs() {
            return vr(this.Qb, this.Rb);
        }
        var Fs = Mr(function(t, e, n) {
            jt.call(t, n) ? ++t[n] : t[n] = 1;
        });
        function Vs(e, n, i) {
            var r = Wo(e) ? Ve : Ti;
            if (i && ha(e, n, i)) {
                n = t;
            }
            return r(e, Jr(n, 3));
        }
        function Ws(t, e) {
            var n = Wo(t) ? We : Ri;
            return n(t, Jr(e, 3));
        }
        function Ys(e, n) {
            n = Jr(n, 3);
            if (Wo(e)) {
                var i = nn(e, n);
                return i > -1 ? e[i] : t;
            }
            return en(e, n, gi);
        }
        function Xs(e, n) {
            n = Jr(n, 3);
            if (Wo(e)) {
                var i = nn(e, n, true);
                return i > -1 ? e[i] : t;
            }
            return en(e, n, mi);
        }
        function Ks(t, e) {
            return typeof e == "function" && Wo(t) ? Ge(t, e) : gi(t, xa(e));
        }
        function Zs(t, e) {
            return typeof e == "function" && Wo(t) ? Fe(t, e) : mi(t, xa(e));
        }
        var $s = Mr(function(t, e, n) {
            if (jt.call(t, n)) {
                t[n].push(e);
            } else {
                t[n] = [ e ];
            }
        });
        function Js(t, e, n, i) {
            t = Yo(t) ? t : Eu(t);
            n = n && !i ? _f(n) : 0;
            var r = t.length;
            if (n < 0) {
                n = ue(r + n, 0);
            }
            return Tf(t) ? n <= r && t.indexOf(e, n) > -1 : !!r && rn(t, e, n) > -1;
        }
        var Qs = Lo(function(e, n, i) {
            var r = -1, a = typeof n == "function", s = ca(n), o = Yo(e) ? Array(e.length) : [];
            gi(e, function(e) {
                var f = a ? n : s && e != null ? e[n] : t;
                o[++r] = f ? je(f, e, i) : Pi(e, n, i);
            });
            return o;
        });
        var to = Mr(function(t, e, n) {
            t[n] = e;
        });
        function eo(t, e) {
            var n = Wo(t) ? Ke : ji;
            return n(t, Jr(e, 3));
        }
        function no(e, n, i, r) {
            if (e == null) {
                return [];
            }
            if (!Wo(n)) {
                n = n == null ? [] : [ n ];
            }
            i = r ? t : i;
            if (!Wo(i)) {
                i = i == null ? [] : [ i ];
            }
            return Wi(e, n, i);
        }
        var io = Mr(function(t, e, n) {
            t[n ? 0 : 1].push(e);
        }, function() {
            return [ [], [] ];
        });
        function ro(t, e, n) {
            var i = Wo(t) ? $e : an, r = arguments.length < 3;
            return i(t, Jr(e, 4), n, r, gi);
        }
        function ao(t, e, n) {
            var i = Wo(t) ? Je : an, r = arguments.length < 3;
            return i(t, Jr(e, 4), n, r, mi);
        }
        function so(t, e) {
            var n = Wo(t) ? We : Ri;
            e = Jr(e, 3);
            return n(t, function(t, n, i) {
                return !e(t, n, i);
            });
        }
        function oo(e) {
            var n = Yo(e) ? e : Eu(e), i = n.length;
            return i > 0 ? n[tr(0, i - 1)] : t;
        }
        function fo(t, e) {
            var n = -1, i = Hf(t), r = i.length, a = r - 1;
            e = ci(_f(e), 0, r);
            while (++n < e) {
                var s = tr(n, a), o = i[s];
                i[s] = i[n];
                i[n] = o;
            }
            i.length = e;
            return i;
        }
        function uo(t) {
            return fo(t, O);
        }
        function ho(t) {
            if (t == null) {
                return 0;
            }
            if (Yo(t)) {
                var e = t.length;
                return e && Tf(t) ? An(t) : e;
            }
            return Qf(t).length;
        }
        function co(e, n, i) {
            var r = Wo(e) ? Qe : ar;
            if (i && ha(e, n, i)) {
                n = t;
            }
            return r(e, Jr(n, 3));
        }
        var lo = Lo(function(t, e) {
            if (t == null) {
                return [];
            }
            var n = e.length;
            if (n > 1 && ha(t, e[0], e[1])) {
                e = [];
            } else if (n > 2 && ha(e[0], e[1], e[2])) {
                e.length = 1;
            }
            return Wi(t, wi(e), []);
        });
        var vo = St.now;
        function po(t, e) {
            if (typeof e != "function") {
                throw new qt(w);
            }
            t = _f(t);
            return function() {
                if (--t < 1) {
                    return e.apply(this, arguments);
                }
            };
        }
        function Eo(e, n, i) {
            n = i ? t : n;
            n = e && n == null ? e.length : n;
            return Wr(e, u, t, t, t, t, n);
        }
        function go(e, n) {
            var i;
            if (typeof n != "function") {
                throw new qt(w);
            }
            e = _f(e);
            return function() {
                if (--e > 0) {
                    i = n.apply(this, arguments);
                }
                if (e <= 1) {
                    n = t;
                }
                return i;
            };
        }
        var mo = Lo(function(t, e, i) {
            var r = n;
            if (i.length) {
                var a = Hn(i, mo.placeholder);
                r |= o;
            }
            return Wr(t, r, e, i, a);
        });
        var To = Lo(function(t, e, r) {
            var a = n | i;
            if (r.length) {
                var s = Hn(r, To.placeholder);
                a |= o;
            }
            return Wr(e, a, t, r, s);
        });
        function yo(e, n, i) {
            n = i ? t : n;
            var r = Wr(e, a, t, t, t, t, t, n);
            r.placeholder = yo.placeholder;
            return r;
        }
        function Ro(e, n, i) {
            n = i ? t : n;
            var r = Wr(e, s, t, t, t, t, t, n);
            r.placeholder = Ro.placeholder;
            return r;
        }
        function wo(e, n, i) {
            var r, a, s, o, f, u, h, c = 0, l = false, d = false, v = true;
            if (typeof e != "function") {
                throw new qt(w);
            }
            n = Mf(n) || 0;
            if (of(i)) {
                l = !!i.kc;
                d = "maxWait" in i && ue(Mf(i.lc) || 0, n);
                v = "trailing" in i ? !!i.mc : v;
            }
            function p() {
                if (u) {
                    Zt(u);
                }
                if (a) {
                    Zt(a);
                }
                c = 0;
                r = a = f = u = h = t;
            }
            function E(n, i) {
                if (i) {
                    Zt(i);
                }
                a = u = h = t;
                if (n) {
                    c = vo();
                    s = e.apply(f, r);
                    if (!u && !a) {
                        r = f = t;
                    }
                }
            }
            function g() {
                var t = n - (vo() - o);
                if (t <= 0 || t > n) {
                    E(h, a);
                } else {
                    u = ne(g, t);
                }
            }
            function m() {
                if (u && h || a && v) {
                    s = e.apply(f, r);
                }
                p();
                return s;
            }
            function T() {
                E(v, u);
            }
            function y() {
                r = arguments;
                o = vo();
                f = this;
                h = v && (u || !l);
                if (d === false) {
                    var i = l && !u;
                } else {
                    if (!a && !l) {
                        c = o;
                    }
                    var p = d - (o - c), E = p <= 0 || p > d;
                    if (E) {
                        if (a) {
                            a = Zt(a);
                        }
                        c = o;
                        s = e.apply(f, r);
                    } else if (!a) {
                        a = ne(T, p);
                    }
                }
                if (E && u) {
                    u = Zt(u);
                } else if (!u && n !== d) {
                    u = ne(g, n);
                }
                if (i) {
                    E = true;
                    s = e.apply(f, r);
                }
                if (E && !u && !a) {
                    r = f = t;
                }
                return s;
            }
            y.cancel = p;
            y.flush = m;
            return y;
        }
        var xo = Lo(function(t, e) {
            return pi(t, 1, e);
        });
        var bo = Lo(function(t, e, n) {
            return pi(t, Mf(e) || 0, n);
        });
        function Ho(t) {
            return Wr(t, c);
        }
        function _o(t, e) {
            if (typeof t != "function" || e && typeof e != "function") {
                throw new qt(w);
            }
            var n = function() {
                var i = arguments, r = e ? e.apply(this, i) : i[0], a = n.nc;
                if (a.has(r)) {
                    return a.get(r);
                }
                var s = t.apply(this, i);
                n.nc = a.set(r, s);
                return s;
            };
            n.nc = new _o.oc();
            return n;
        }
        function Ao(t) {
            if (typeof t != "function") {
                throw new qt(w);
            }
            return function() {
                return !t.apply(this, arguments);
            };
        }
        function Mo(t) {
            return go(2, t);
        }
        var Oo = Lo(function(t, e) {
            e = Ke(wi(e), Jr());
            var n = e.length;
            return Lo(function(i) {
                var r = -1, a = he(i.length, n);
                while (++r < a) {
                    i[r] = e[r].call(this, i[r]);
                }
                return je(t, this, i);
            });
        });
        var So = Lo(function(e, n) {
            var i = Hn(n, So.placeholder);
            return Wr(e, o, t, n, i);
        });
        var Uo = Lo(function(e, n) {
            var i = Hn(n, Uo.placeholder);
            return Wr(e, f, t, n, i);
        });
        var Co = Lo(function(e, n) {
            return Wr(e, h, t, t, t, wi(n));
        });
        function Lo(e, n) {
            if (typeof e != "function") {
                throw new qt(w);
            }
            n = ue(n === t ? e.length - 1 : _f(n), 0);
            return function() {
                var t = arguments, i = -1, r = ue(t.length - n, 0), a = Array(r);
                while (++i < r) {
                    a[i] = t[n + i];
                }
                switch (n) {
                  case 0:
                    return e.call(this, a);

                  case 1:
                    return e.call(this, t[0], a);

                  case 2:
                    return e.call(this, t[0], t[1], a);
                }
                var s = Array(n + 1);
                i = -1;
                while (++i < n) {
                    s[i] = t[i];
                }
                s[n] = a;
                return je(e, this, s);
            };
        }
        function Po(t) {
            if (typeof t != "function") {
                throw new qt(w);
            }
            return function(e) {
                return je(t, this, e);
            };
        }
        function No(t, e, n) {
            var i = true, r = true;
            if (typeof t != "function") {
                throw new qt(w);
            }
            if (of(n)) {
                i = "leading" in n ? !!n.kc : i;
                r = "trailing" in n ? !!n.mc : r;
            }
            return wo(t, e, {
                kc: i,
                lc: e,
                mc: r
            });
        }
        function Io(t) {
            return Eo(t, 1);
        }
        function qo(t, e) {
            e = e == null ? rh : e;
            return So(e, t);
        }
        function zo(t) {
            return li(t);
        }
        function Bo(t, e) {
            return li(t, false, e);
        }
        function ko(t) {
            return li(t, true);
        }
        function jo(t, e) {
            return li(t, true, e);
        }
        function Do(t, e) {
            return t === e || t !== t && e !== e;
        }
        function Go(t, e) {
            return t > e;
        }
        function Fo(t, e) {
            return t >= e;
        }
        function Vo(t) {
            return Xo(t) && jt.call(t, "callee") && (!ee.call(t, "callee") || Ft.call(t) == L);
        }
        var Wo = Array.isArray;
        function Yo(t) {
            return t != null && !(typeof t == "function" && rf(t)) && sf(Qr(t));
        }
        function Xo(t) {
            return ff(t) && Yo(t);
        }
        function Ko(t) {
            return t === true || t === false || ff(t) && Ft.call(t) == N;
        }
        function Zo(t) {
            return ff(t) && Ft.call(t) == I;
        }
        function $o(t) {
            return !!t && t.nodeType === 1 && ff(t) && !Ef(t);
        }
        function Jo(t) {
            return !ff(t) || rf(t.splice) ? !ho(t) : !Qf(t).length;
        }
        function Qo(t, e) {
            return Ni(t, e);
        }
        function tf(e, n, i) {
            i = typeof i == "function" ? i : t;
            var r = i ? i(e, n) : t;
            return r === t ? Ni(e, n, i) : !!r;
        }
        function ef(t) {
            return ff(t) && typeof t.message == "string" && Ft.call(t) == q;
        }
        function nf(t) {
            return typeof t == "number" && se(t);
        }
        function rf(t) {
            var e = of(t) ? Ft.call(t) : "";
            return e == z || e == B;
        }
        function af(t) {
            return typeof t == "number" && t == _f(t);
        }
        function sf(t) {
            return typeof t == "number" && t > -1 && t % 1 == 0 && t <= H;
        }
        function of(t) {
            var e = typeof t;
            return !!t && (e == "object" || e == "function");
        }
        function ff(t) {
            return !!t && typeof t == "object";
        }
        function uf(t, e) {
            return t === e || qi(t, e, ta(e));
        }
        function hf(e, n, i) {
            i = typeof i == "function" ? i : t;
            return qi(e, n, ta(n), i);
        }
        function cf(t) {
            return pf(t) && t != +t;
        }
        function lf(t) {
            if (t == null) {
                return false;
            }
            if (rf(t)) {
                return Wt.test(kt.call(t));
            }
            return ff(t) && (Rn(t) ? Wt : Mt).test(t);
        }
        function df(t) {
            return t === null;
        }
        function vf(t) {
            return t == null;
        }
        function pf(t) {
            return typeof t == "number" || ff(t) && Ft.call(t) == j;
        }
        function Ef(t) {
            if (!ff(t) || Ft.call(t) != D || Rn(t)) {
                return false;
            }
            var e = Bt;
            if (typeof t.constructor == "function") {
                e = Jt(t);
            }
            if (e === null) {
                return true;
            }
            var n = e.constructor;
            return typeof n == "function" && n instanceof n && kt.call(n) == Gt;
        }
        function gf(t) {
            return of(t) && Ft.call(t) == G;
        }
        function mf(t) {
            return af(t) && t >= -H && t <= H;
        }
        function Tf(t) {
            return typeof t == "string" || !Wo(t) && ff(t) && Ft.call(t) == V;
        }
        function yf(t) {
            return typeof t == "symbol" || ff(t) && Ft.call(t) == W;
        }
        function Rf(t) {
            return ff(t) && sf(t.length) && !!we[Ft.call(t)];
        }
        function wf(e) {
            return e === t;
        }
        function xf(t, e) {
            return t < e;
        }
        function bf(t, e) {
            return t <= e;
        }
        function Hf(t) {
            if (!t) {
                return [];
            }
            if (Yo(t)) {
                return Tf(t) ? Mn(t) : br(t);
            }
            if (te && t[te]) {
                return xn(t[te]());
            }
            var e = ia(t), n = e == k ? bn : e == F ? _n : Eu;
            return n(t);
        }
        function _f(t) {
            if (!t) {
                return t === 0 ? t : 0;
            }
            t = Mf(t);
            if (t === b || t === -b) {
                var e = t < 0 ? -1 : 1;
                return e * A;
            }
            var n = t % 1;
            return t === t ? n ? t - n : t : 0;
        }
        function Af(t) {
            return t ? ci(_f(t), 0, O) : 0;
        }
        function Mf(t) {
            if (of(t)) {
                var e = rf(t.valueOf) ? t.valueOf() : t;
                t = of(e) ? e + "" : e;
            }
            if (typeof t != "string") {
                return t === 0 ? t : +t;
            }
            t = t.replace(Tt, "");
            var n = At.test(t);
            return n || Ot.test(t) ? Se(t.slice(2), n ? 2 : 8) : _t.test(t) ? M : +t;
        }
        function Of(t) {
            return Hr(t, tu(t));
        }
        function Sf(t) {
            return ci(_f(t), -H, H);
        }
        function Uf(t) {
            if (typeof t == "string") {
                return t;
            }
            if (t == null) {
                return "";
            }
            if (yf(t)) {
                return Xt ? Pe.call(t) : "";
            }
            var e = t + "";
            return e == "0" && 1 / t == -b ? "-0" : e;
        }
        var Cf = Or(function(t, e) {
            Hr(e, Qf(e), t);
        });
        var Lf = Or(function(t, e) {
            Hr(e, tu(e), t);
        });
        var Pf = Or(function(t, e, n, i) {
            _r(e, tu(e), t, i);
        });
        var Nf = Or(function(t, e, n, i) {
            _r(e, Qf(e), t, i);
        });
        var If = Lo(function(t, e) {
            return hi(t, wi(e));
        });
        function qf(t, e) {
            var n = vi(t);
            return e ? ui(n, e) : n;
        }
        var zf = Lo(function(e) {
            e.push(t, si);
            return je(Pf, t, e);
        });
        var Bf = Lo(function(e) {
            e.push(t, ga);
            return je(ru, t, e);
        });
        function kf(t, e) {
            return en(t, Jr(e, 3), _i, true);
        }
        function jf(t, e) {
            return en(t, Jr(e, 3), Ai, true);
        }
        function Df(t, e) {
            return t == null ? t : xi(t, xa(e), tu);
        }
        function Gf(t, e) {
            return t == null ? t : bi(t, xa(e), tu);
        }
        function Ff(t, e) {
            return t && _i(t, xa(e));
        }
        function Vf(t, e) {
            return t && Ai(t, xa(e));
        }
        function Wf(t) {
            return t == null ? [] : Mi(t, Qf(t));
        }
        function Yf(t) {
            return t == null ? [] : Mi(t, tu(t));
        }
        function Xf(e, n, i) {
            var r = e == null ? t : Oi(e, n);
            return r === t ? i : r;
        }
        function Kf(t, e) {
            return aa(t, e, Si);
        }
        function Zf(t, e) {
            return aa(t, e, Ui);
        }
        function $f(t, e, n) {
            return $e(Qf(t), function(i, r) {
                var a = t[r];
                if (e && !n) {
                    if (jt.call(i, a)) {
                        i[a].push(r);
                    } else {
                        i[a] = [ r ];
                    }
                } else {
                    i[a] = r;
                }
                return i;
            }, {});
        }
        var Jf = Lo(Pi);
        function Qf(t) {
            var e = va(t);
            if (!(e || Yo(t))) {
                return Bi(t);
            }
            var n = ua(t), i = !!n, r = n || [], a = r.length;
            for (var s in t) {
                if (Si(t, s) && !(i && (s == "length" || wn(s, a))) && !(e && s == "constructor")) {
                    r.push(s);
                }
            }
            return r;
        }
        function tu(t) {
            var e = -1, n = va(t), i = ki(t), r = i.length, a = ua(t), s = !!a, o = a || [], f = o.length;
            while (++e < r) {
                var u = i[e];
                if (!(s && (u == "length" || wn(u, f))) && !(u == "constructor" && (n || !jt.call(t, u)))) {
                    o.push(u);
                }
            }
            return o;
        }
        function eu(t, e) {
            var n = {};
            e = Jr(e, 3);
            _i(t, function(t, i, r) {
                n[e(t, i, r)] = t;
            });
            return n;
        }
        function nu(t, e) {
            var n = {};
            e = Jr(e, 3);
            _i(t, function(t, i, r) {
                n[i] = e(t, i, r);
            });
            return n;
        }
        var iu = Or(function(t, e, n) {
            Fi(t, e, n);
        });
        var ru = Or(function(t, e, n, i) {
            Fi(t, e, n, i);
        });
        var au = Lo(function(t, e) {
            if (t == null) {
                return {};
            }
            e = Ke(wi(e), String);
            return Yi(t, Ei(tu(t), e));
        });
        function su(t, e) {
            e = Jr(e, 2);
            return Xi(t, function(t, n) {
                return !e(t, n);
            });
        }
        var ou = Lo(function(t, e) {
            return t == null ? {} : Yi(t, wi(e));
        });
        function fu(t, e) {
            return t == null ? {} : Xi(t, Jr(e, 2));
        }
        function uu(e, n, i) {
            if (!ca(n, e)) {
                n = hr(n);
                var r = Xf(e, n);
                e = ma(e, n);
            } else {
                r = e == null ? t : e[n];
            }
            if (r === t) {
                r = i;
            }
            return rf(r) ? r.call(e) : r;
        }
        function hu(t, e, n) {
            return t == null ? t : nr(t, e, n);
        }
        function cu(e, n, i, r) {
            r = typeof r == "function" ? r : t;
            return e == null ? e : nr(e, n, i, r);
        }
        function lu(t) {
            return un(t, Qf(t));
        }
        function du(t) {
            return un(t, tu(t));
        }
        function vu(e, n, i) {
            var r = Wo(e) || Rf(e);
            n = Jr(n, 4);
            if (i == null) {
                if (r || of(e)) {
                    var a = e.constructor;
                    if (r) {
                        i = Wo(e) ? new a() : [];
                    } else {
                        i = vi(rf(a) ? a.prototype : t);
                    }
                } else {
                    i = {};
                }
            }
            (r ? Ge : _i)(e, function(t, e, r) {
                return n(i, t, e, r);
            });
            return i;
        }
        function pu(t, e) {
            return t == null ? true : lr(t, e);
        }
        function Eu(t) {
            return t ? cn(t, Qf(t)) : [];
        }
        function gu(t) {
            return t == null ? cn(t, tu(t)) : [];
        }
        function mu(e, n, i) {
            if (i === t) {
                i = n;
                n = t;
            }
            if (i !== t) {
                i = Mf(i);
                i = i === i ? i : 0;
            }
            if (n !== t) {
                n = Mf(n);
                n = n === n ? n : 0;
            }
            return ci(Mf(e), n, i);
        }
        function Tu(e, n, i) {
            n = Mf(n) || 0;
            if (i === t) {
                i = n;
                n = 0;
            } else {
                i = Mf(i) || 0;
            }
            e = Mf(e);
            return Ci(e, n, i);
        }
        function yu(e, n, i) {
            if (i && typeof i != "boolean" && ha(e, n, i)) {
                n = i = t;
            }
            if (i === t) {
                if (typeof n == "boolean") {
                    i = n;
                    n = t;
                } else if (typeof e == "boolean") {
                    i = e;
                    e = t;
                }
            }
            if (e === t && n === t) {
                e = 0;
                n = 1;
            } else {
                e = Mf(e) || 0;
                if (n === t) {
                    n = e;
                    e = 0;
                } else {
                    n = Mf(n) || 0;
                }
            }
            if (e > n) {
                var r = e;
                e = n;
                n = r;
            }
            if (i || e % 1 || n % 1) {
                var a = le();
                return he(e + a * (n - e + Oe("1e-" + ((a + "").length - 1))), n);
            }
            return tr(e, n);
        }
        var Ru = Pr(function(t, e, n) {
            e = e.toLowerCase();
            return t + (n ? wu(e) : e);
        });
        function wu(t) {
            return Su(Uf(t).toLowerCase());
        }
        function xu(t) {
            t = Uf(t);
            return t && t.replace(Ut, gn).replace(ve, "");
        }
        function bu(e, n, i) {
            e = Uf(e);
            n = typeof n == "string" ? n : n + "";
            var r = e.length;
            i = i === t ? r : ci(_f(i), 0, r);
            i -= n.length;
            return i >= 0 && e.indexOf(n, i) == i;
        }
        function Hu(t) {
            t = Uf(t);
            return t && ht.test(t) ? t.replace(ft, mn) : t;
        }
        function _u(t) {
            t = Uf(t);
            return t && mt.test(t) ? t.replace(gt, "\\$&") : t;
        }
        var Au = Pr(function(t, e, n) {
            return t + (n ? "-" : "") + e.toLowerCase();
        });
        var Mu = Pr(function(t, e, n) {
            return t + (n ? " " : "") + e.toLowerCase();
        });
        var Ou = Lr("toLowerCase");
        var Su = Lr("toUpperCase");
        function Uu(t, e, n) {
            t = Uf(t);
            e = _f(e);
            var i = An(t);
            if (!e || i >= e) {
                return t;
            }
            var r = (e - i) / 2, a = ae(r), s = re(r);
            return kr("", a, n) + t + kr("", s, n);
        }
        function Cu(t, e, n) {
            t = Uf(t);
            return t + kr(t, e, n);
        }
        function Lu(t, e, n) {
            t = Uf(t);
            return kr(t, e, n) + t;
        }
        function Pu(t, e, n) {
            if (n || e == null) {
                e = 0;
            } else if (e) {
                e = +e;
            }
            t = Uf(t).replace(Tt, "");
            return ce(t, e || (Ht.test(t) ? 16 : 10));
        }
        function Nu(t, e) {
            t = Uf(t);
            e = _f(e);
            var n = "";
            if (!t || e < 1 || e > H) {
                return n;
            }
            do {
                if (e % 2) {
                    n += t;
                }
                e = ae(e / 2);
                t += t;
            } while (e);
            return n;
        }
        function Iu() {
            var t = arguments, e = Uf(t[0]);
            return t.length < 3 ? e : e.replace(t[1], t[2]);
        }
        var qu = Pr(function(t, e, n) {
            return t + (n ? "_" : "") + e.toLowerCase();
        });
        function zu(t, e, n) {
            return Uf(t).split(e, n);
        }
        var Bu = Pr(function(t, e, n) {
            return t + (n ? " " : "") + wu(e);
        });
        function ku(t, e, n) {
            t = Uf(t);
            n = ci(_f(n), 0, t.length);
            return t.lastIndexOf(e, n) == n;
        }
        function ju(e, n, i) {
            var r = Ie.Vb;
            if (i && ha(e, n, i)) {
                n = t;
            }
            e = Uf(e);
            n = Pf({}, n, r, si);
            var a = Pf({}, n.imports, r.imports, si), s = Qf(a), o = cn(a, s);
            var f, u, h = 0, c = n.Wb || Ct, l = "__p += '";
            var d = It((n.escape || Ct).source + "|" + c.source + "|" + (c === dt ? xt : Ct).source + "|" + (n.evaluate || Ct).source + "|$", "g");
            var v = "//# sourceURL=" + ("sourceURL" in n ? n.pc : "lodash.templateSources[" + ++Re + "]") + "\n";
            e.replace(d, function(t, n, i, r, a, s) {
                i || (i = r);
                l += e.slice(h, s).replace(Lt, Tn);
                if (n) {
                    f = true;
                    l += "' +\n__e(" + n + ") +\n'";
                }
                if (a) {
                    u = true;
                    l += "';\n" + a + ";\n__p += '";
                }
                if (i) {
                    l += "' +\n((__t = (" + i + ")) == null ? '' : __t) +\n'";
                }
                h = s + t.length;
                return t;
            });
            l += "';\n";
            var p = n.Xb;
            if (!p) {
                l = "with (obj) {\n" + l + "\n}\n";
            }
            l = (u ? l.replace(rt, "") : l).replace(at, "$1").replace(st, "$1;");
            l = "function(" + (p || "obj") + ") {\n" + (p ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (f ? ", __e = _.escape" : "") + (u ? ", __j = Array.prototype.join;\n" + "function print() { __p += __j.call(arguments, '') }\n" : ";\n") + l + "return __p\n}";
            var E = $u(function() {
                return Function(s, v + "return " + l).apply(t, o);
            });
            E.source = l;
            if (ef(E)) {
                throw E;
            }
            return E;
        }
        function Du(t) {
            return Uf(t).toLowerCase();
        }
        function Gu(t) {
            return Uf(t).toUpperCase();
        }
        function Fu(e, n, i) {
            e = Uf(e);
            if (!e) {
                return e;
            }
            if (i || n === t) {
                return e.replace(Tt, "");
            }
            n = n + "";
            if (!n) {
                return e;
            }
            var r = Mn(e), a = Mn(n);
            return r.slice(ln(r, a), dn(r, a) + 1).join("");
        }
        function Vu(e, n, i) {
            e = Uf(e);
            if (!e) {
                return e;
            }
            if (i || n === t) {
                return e.replace(Rt, "");
            }
            n = n + "";
            if (!n) {
                return e;
            }
            var r = Mn(e);
            return r.slice(0, dn(r, Mn(n)) + 1).join("");
        }
        function Wu(e, n, i) {
            e = Uf(e);
            if (!e) {
                return e;
            }
            if (i || n === t) {
                return e.replace(yt, "");
            }
            n = n + "";
            if (!n) {
                return e;
            }
            var r = Mn(e);
            return r.slice(ln(r, Mn(n))).join("");
        }
        function Yu(e, n) {
            var i = v, r = p;
            if (of(n)) {
                var a = "separator" in n ? n.separator : a;
                i = "length" in n ? _f(n.length) : i;
                r = "omission" in n ? Uf(n.qc) : r;
            }
            e = Uf(e);
            var s = e.length;
            if (Ee.test(e)) {
                var o = Mn(e);
                s = o.length;
            }
            if (i >= s) {
                return e;
            }
            var f = i - An(r);
            if (f < 1) {
                return r;
            }
            var u = o ? o.slice(0, f).join("") : e.slice(0, f);
            if (a === t) {
                return u + r;
            }
            if (o) {
                f += u.length - f;
            }
            if (gf(a)) {
                if (e.slice(f).search(a)) {
                    var h, c = u;
                    if (!a.global) {
                        a = It(a.source, Uf(bt.exec(a)) + "g");
                    }
                    a.lastIndex = 0;
                    while (h = a.exec(c)) {
                        var l = h.index;
                    }
                    u = u.slice(0, l === t ? f : l);
                }
            } else if (e.indexOf(a, f) != f) {
                var d = u.lastIndexOf(a);
                if (d > -1) {
                    u = u.slice(0, d);
                }
            }
            return u + r;
        }
        function Xu(t) {
            t = Uf(t);
            return t && ut.test(t) ? t.replace(ot, On) : t;
        }
        var Ku = Pr(function(t, e, n) {
            return t + (n ? " " : "") + e.toUpperCase();
        });
        function Zu(e, n, i) {
            e = Uf(e);
            n = i ? t : n;
            if (n === t) {
                n = Te.test(e) ? me : ge;
            }
            return e.match(n) || [];
        }
        var $u = Lo(function(e, n) {
            try {
                return je(e, t, n);
            } catch (t) {
                return ef(t) ? t : new Pt(t);
            }
        });
        var Ju = Lo(function(t, e) {
            Ge(wi(e), function(e) {
                t[e] = mo(t[e], t);
            });
            return t;
        });
        function Qu(t) {
            var e = t ? t.length : 0, n = Jr();
            t = !e ? [] : Ke(t, function(t) {
                if (typeof t[1] != "function") {
                    throw new qt(w);
                }
                return [ n(t[0]), t[1] ];
            });
            return Lo(function(n) {
                var i = -1;
                while (++i < e) {
                    var r = t[i];
                    if (je(r[0], this, n)) {
                        return je(r[1], this, n);
                    }
                }
            });
        }
        function th(t) {
            return di(li(t, true));
        }
        function eh(t) {
            return function() {
                return t;
            };
        }
        var nh = qr();
        var ih = qr(true);
        function rh(t) {
            return t;
        }
        function ah(t) {
            return ff(t) && !Wo(t) ? sh(t) : zi(t);
        }
        function sh(t) {
            return Di(li(t, true));
        }
        function oh(t, e) {
            return Gi(t, li(e, true));
        }
        var fh = Lo(function(t, e) {
            return function(n) {
                return Pi(n, t, e);
            };
        });
        var uh = Lo(function(t, e) {
            return function(n) {
                return Pi(t, n, e);
            };
        });
        function hh(t, e, n) {
            var i = Qf(e), r = Mi(e, i);
            if (n == null && !(of(e) && (r.length || !i.length))) {
                n = e;
                e = t;
                t = this;
                r = Mi(e, Qf(e));
            }
            var a = of(n) && "chain" in n ? n.chain : true, s = rf(t);
            Ge(r, function(n) {
                var i = e[n];
                t[n] = i;
                if (s) {
                    t.prototype[n] = function() {
                        var e = this.Sb;
                        if (a || e) {
                            var n = t(this.Qb), r = n.Rb = br(this.Rb);
                            r.push({
                                ec: i,
                                gc: arguments,
                                fc: t
                            });
                            n.Sb = e;
                            return n;
                        }
                        return i.apply(t, Ze([ this.value() ], arguments));
                    };
                }
            });
            return t;
        }
        function ch() {
            if (ze._ === this) {
                ze._ = Vt;
            }
            return this;
        }
        function lh() {}
        function dh(t) {
            t = _f(t);
            return function() {
                return arguments[t];
            };
        }
        var vh = Br(Ke);
        var ph = Br(Ve);
        var Eh = Br(Qe);
        function gh(t) {
            return ca(t) ? Ki(t) : Zi(t);
        }
        function mh(e) {
            return function(n) {
                return e == null ? t : Oi(e, n);
            };
        }
        var Th = Dr();
        var yh = Dr(true);
        function Rh(t, e) {
            t = _f(t);
            if (t < 1 || t > H) {
                return [];
            }
            var n = O, i = he(t, O);
            e = xa(e);
            t -= O;
            var r = fn(i, e);
            while (++n < t) {
                e(n);
            }
            return r;
        }
        function wh(t) {
            return Wo(t) ? Ke(t, String) : Ra(t);
        }
        function xh(t) {
            var e = ++Dt;
            return Uf(t) + e;
        }
        function bh(e, n) {
            var i;
            if (e !== t) {
                i = e;
            }
            if (n !== t) {
                i = i === t ? n : i + n;
            }
            return i;
        }
        var Hh = Fr("ceil");
        var _h = Fr("floor");
        function Ah(e) {
            return e && e.length ? tn(e, rh, Go) : t;
        }
        function Mh(e, n) {
            return e && e.length ? tn(e, Jr(n), Go) : t;
        }
        function Oh(t) {
            return Ph(t) / (t ? t.length : 0);
        }
        function Sh(e) {
            return e && e.length ? tn(e, rh, xf) : t;
        }
        function Uh(e, n) {
            return e && e.length ? tn(e, Jr(n), xf) : t;
        }
        var Ch = Fr("round");
        function Lh(e, n) {
            var i;
            if (e !== t) {
                i = e;
            }
            if (n !== t) {
                i = i === t ? n : i - n;
            }
            return i;
        }
        function Ph(e) {
            return e && e.length ? on(e, rh) : t;
        }
        function Nh(e, n) {
            return e && e.length ? on(e, Jr(n)) : t;
        }
        Ie.prototype = qe.prototype;
        vn.prototype = vi(qe.prototype);
        vn.prototype.constructor = vn;
        Un.prototype = vi(qe.prototype);
        Un.prototype.constructor = Un;
        Nn.prototype = _e ? _e(null) : Bt;
        kn.prototype.clear = jn;
        kn.prototype["delete"] = Dn;
        kn.prototype.get = Gn;
        kn.prototype.has = Fn;
        kn.prototype.set = Vn;
        Wn.prototype.push = Xn;
        Kn.prototype.clear = Zn;
        Kn.prototype["delete"] = $n;
        Kn.prototype.get = Jn;
        Kn.prototype.has = Qn;
        Kn.prototype.set = ti;
        _o.oc = kn;
        Ie.rc = po;
        Ie.sc = Eo;
        Ie.assign = Cf;
        Ie.tc = Lf;
        Ie.uc = Pf;
        Ie.vc = Nf;
        Ie.wc = If;
        Ie.xc = go;
        Ie.bind = mo;
        Ie.yc = Ju;
        Ie.bindKey = To;
        Ie.chain = Cs;
        Ie.zc = Ha;
        Ie.compact = _a;
        Ie.concat = Aa;
        Ie.Ac = Qu;
        Ie.Bc = th;
        Ie.Cc = eh;
        Ie.Dc = Fs;
        Ie.create = qf;
        Ie.curry = yo;
        Ie.curryRight = Ro;
        Ie.Ec = wo;
        Ie.Nb = zf;
        Ie.Fc = Bf;
        Ie.defer = xo;
        Ie.Gc = bo;
        Ie.Hc = Ma;
        Ie.Ic = Oa;
        Ie.Jc = Sa;
        Ie.Kc = Ua;
        Ie.Lc = Ca;
        Ie.Mc = La;
        Ie.Nc = Pa;
        Ie.fill = Na;
        Ie.filter = Ws;
        Ie.Oc = za;
        Ie.jc = Ba;
        Ie.Pc = ka;
        Ie.Qc = Ho;
        Ie.Rc = nh;
        Ie.Sc = ih;
        Ie.Tc = ja;
        Ie.Uc = Wf;
        Ie.Vc = Yf;
        Ie.Wc = $s;
        Ie.Xc = Fa;
        Ie.Yc = Va;
        Ie.Zc = Wa;
        Ie.$c = Ya;
        Ie._c = $f;
        Ie.ad = Qs;
        Ie.bc = ah;
        Ie.bd = to;
        Ie.keys = Qf;
        Ie.dd = tu;
        Ie.map = eo;
        Ie.ed = eu;
        Ie.fd = nu;
        Ie.matches = sh;
        Ie.gd = oh;
        Ie.hd = _o;
        Ie.jd = iu;
        Ie.kd = ru;
        Ie.method = fh;
        Ie.ld = uh;
        Ie.md = hh;
        Ie.nd = Ao;
        Ie.od = dh;
        Ie.pd = au;
        Ie.qd = su;
        Ie.rd = Mo;
        Ie.sd = no;
        Ie.td = vh;
        Ie.ud = Oo;
        Ie.vd = ph;
        Ie.wd = Eh;
        Ie.partial = So;
        Ie.partialRight = Uo;
        Ie.xd = io;
        Ie.Ob = ou;
        Ie.yd = fu;
        Ie.zd = gh;
        Ie.Ad = mh;
        Ie.Bd = $a;
        Ie.Cd = Ja;
        Ie.Dd = Qa;
        Ie.Ed = ts;
        Ie.range = Th;
        Ie.Fd = yh;
        Ie.Gd = Co;
        Ie.reject = so;
        Ie.remove = es;
        Ie.Hd = Lo;
        Ie.reverse = ns;
        Ie.Id = fo;
        Ie.set = hu;
        Ie.Jd = cu;
        Ie.Kd = uo;
        Ie.slice = is;
        Ie.Ld = lo;
        Ie.Md = hs;
        Ie.Nd = cs;
        Ie.split = zu;
        Ie.L = Po;
        Ie.Od = ls;
        Ie.Pd = ds;
        Ie.Qd = vs;
        Ie.Rd = ps;
        Ie.Sd = Es;
        Ie.Td = Ls;
        Ie.Ud = No;
        Ie.hc = Ps;
        Ie.toArray = Hf;
        Ie.Vd = lu;
        Ie.Wd = du;
        Ie.Xd = wh;
        Ie.Yd = Of;
        Ie.transform = vu;
        Ie.Zd = Io;
        Ie.$d = gs;
        Ie._d = ms;
        Ie.ae = Ts;
        Ie.be = ys;
        Ie.ce = Rs;
        Ie.de = ws;
        Ie.ee = pu;
        Ie.fe = xs;
        Ie.ge = bs;
        Ie.values = Eu;
        Ie.he = gu;
        Ie.ie = Hs;
        Ie.je = Zu;
        Ie.wrap = qo;
        Ie.ke = _s;
        Ie.le = As;
        Ie.me = Ms;
        Ie.ne = Os;
        Ie.oe = Ss;
        Ie.pe = Us;
        Ie.extend = Lf;
        Ie.qe = Pf;
        hh(Ie, Ie);
        Ie.add = bh;
        Ie.re = $u;
        Ie.se = Ru;
        Ie.te = wu;
        Ie.ceil = Hh;
        Ie.ue = mu;
        Ie.clone = zo;
        Ie.ve = ko;
        Ie.we = jo;
        Ie.xe = Bo;
        Ie.ye = xu;
        Ie.endsWith = bu;
        Ie.ze = Do;
        Ie.escape = Hu;
        Ie.Ae = _u;
        Ie.every = Vs;
        Ie.find = Ys;
        Ie.findIndex = Ia;
        Ie.Be = kf;
        Ie.Ce = Xs;
        Ie.De = qa;
        Ie.Ee = jf;
        Ie.floor = _h;
        Ie.forEach = Ks;
        Ie.Fe = Zs;
        Ie.Ge = Df;
        Ie.He = Gf;
        Ie.Ie = Ff;
        Ie.Je = Vf;
        Ie.get = Xf;
        Ie.Ke = Go;
        Ie.Le = Fo;
        Ie.has = Kf;
        Ie.Me = Zf;
        Ie.head = Da;
        Ie.identity = rh;
        Ie.includes = Js;
        Ie.indexOf = Ga;
        Ie.inRange = Tu;
        Ie.Ne = Jf;
        Ie.Oe = Vo;
        Ie.isArray = Wo;
        Ie.Pe = Yo;
        Ie.Qe = Xo;
        Ie.Re = Ko;
        Ie.Se = Zo;
        Ie.Te = $o;
        Ie.Ue = Jo;
        Ie.isEqual = Qo;
        Ie.Ve = tf;
        Ie.We = ef;
        Ie.isFinite = nf;
        Ie.Xe = rf;
        Ie.isInteger = af;
        Ie.Ye = sf;
        Ie.Ze = uf;
        Ie.$e = hf;
        Ie.isNaN = cf;
        Ie._e = lf;
        Ie.af = vf;
        Ie.bf = df;
        Ie.cf = pf;
        Ie.df = of;
        Ie.ef = ff;
        Ie.ff = Ef;
        Ie.gf = gf;
        Ie.isSafeInteger = mf;
        Ie.hf = Tf;
        Ie.if = yf;
        Ie.jf = Rf;
        Ie.kf = wf;
        Ie.join = Xa;
        Ie.lf = Au;
        Ie.mf = Ka;
        Ie.lastIndexOf = Za;
        Ie.nf = Mu;
        Ie.pf = Ou;
        Ie.qf = xf;
        Ie.rf = bf;
        Ie.max = Ah;
        Ie.sf = Mh;
        Ie.tf = Oh;
        Ie.min = Sh;
        Ie.uf = Uh;
        Ie.vf = ch;
        Ie.wf = lh;
        Ie.now = vo;
        Ie.pad = Uu;
        Ie.xf = Cu;
        Ie.yf = Lu;
        Ie.parseInt = Pu;
        Ie.random = yu;
        Ie.reduce = ro;
        Ie.reduceRight = ao;
        Ie.repeat = Nu;
        Ie.replace = Iu;
        Ie.result = uu;
        Ie.round = Ch;
        Ie.zf = Sn;
        Ie.Af = oo;
        Ie.size = ho;
        Ie.Bf = qu;
        Ie.some = co;
        Ie.Cf = rs;
        Ie.Df = as;
        Ie.Ef = ss;
        Ie.Ff = os;
        Ie.Gf = fs;
        Ie.Hf = us;
        Ie.If = Bu;
        Ie.startsWith = ku;
        Ie.Jf = Lh;
        Ie.Kf = Ph;
        Ie.Lf = Nh;
        Ie.Mf = ju;
        Ie.Nf = Rh;
        Ie.Of = _f;
        Ie.Pf = Af;
        Ie.Qf = Du;
        Ie.Rf = Mf;
        Ie.Sf = Sf;
        Ie.toString = Uf;
        Ie.Tf = Gu;
        Ie.trim = Fu;
        Ie.Uf = Vu;
        Ie.Vf = Wu;
        Ie.truncate = Yu;
        Ie.unescape = Xu;
        Ie.Wf = xh;
        Ie.Xf = Ku;
        Ie.Yf = Su;
        Ie.Zf = Ks;
        Ie.$f = Zs;
        Ie._f = Da;
        hh(Ie, function() {
            var t = {};
            _i(Ie, function(e, n) {
                if (!jt.call(Ie.prototype, n)) {
                    t[n] = e;
                }
            });
            return t;
        }(), {
            chain: false
        });
        Ie.VERSION = e;
        Ge([ "bind", "bindKey", "curry", "curryRight", "partial", "partialRight" ], function(t) {
            Ie[t].placeholder = Ie;
        });
        Ge([ "drop", "take" ], function(e, n) {
            Un.prototype[e] = function(i) {
                var r = this.Zb;
                if (r && !n) {
                    return new Un(this);
                }
                i = i === t ? 1 : ue(_f(i), 0);
                var a = this.clone();
                if (r) {
                    a._b = he(i, a._b);
                } else {
                    a.ac.push({
                        size: he(i, O),
                        type: e + (a.Yb < 0 ? "Right" : "")
                    });
                }
                return a;
            };
            Un.prototype[e + "Right"] = function(t) {
                return this.reverse()[e](t).reverse();
            };
        });
        Ge([ "filter", "map", "takeWhile" ], function(t, e) {
            var n = e + 1, i = n == T || n == R;
            Un.prototype[t] = function(t) {
                var e = this.clone();
                e.$b.push({
                    bc: Jr(t, 3),
                    type: n
                });
                e.Zb = e.Zb || i;
                return e;
            };
        });
        Ge([ "head", "last" ], function(t, e) {
            var n = "take" + (e ? "Right" : "");
            Un.prototype[t] = function() {
                return this[n](1).value()[0];
            };
        });
        Ge([ "initial", "tail" ], function(t, e) {
            var n = "drop" + (e ? "" : "Right");
            Un.prototype[t] = function() {
                return this.Zb ? new Un(this) : this[n](1);
            };
        });
        Un.prototype.compact = function() {
            return this.filter(rh);
        };
        Un.prototype.find = function(t) {
            return this.filter(t).head();
        };
        Un.prototype.Ce = function(t) {
            return this.reverse().find(t);
        };
        Un.prototype.ad = Lo(function(t, e) {
            if (typeof t == "function") {
                return new Un(this);
            }
            return this.map(function(n) {
                return Pi(n, t, e);
            });
        });
        Un.prototype.reject = function(t) {
            t = Jr(t, 3);
            return this.filter(function(e) {
                return !t(e);
            });
        };
        Un.prototype.slice = function(e, n) {
            e = _f(e);
            var i = this;
            if (i.Zb && (e > 0 || n < 0)) {
                return new Un(i);
            }
            if (e < 0) {
                i = i.Qd(-e);
            } else if (e) {
                i = i.Kc(e);
            }
            if (n !== t) {
                n = _f(n);
                i = n < 0 ? i.Lc(-n) : i.Pd(n - e);
            }
            return i;
        };
        Un.prototype.Rd = function(t) {
            return this.reverse().Sd(t).reverse();
        };
        Un.prototype.toArray = function() {
            return this.Pd(O);
        };
        _i(Un.prototype, function(e, n) {
            var i = /^(?:filter|find|map|reject)|While$/.test(n), r = /^(?:head|last)$/.test(n), a = Ie[r ? "take" + (n == "last" ? "Right" : "") : n], s = r || /^find/.test(n);
            if (!a) {
                return;
            }
            Ie.prototype[n] = function() {
                var n = this.Qb, o = r ? [ 1 ] : arguments, f = n instanceof Un, u = o[0], h = f || Wo(n);
                var c = function(t) {
                    var e = a.apply(Ie, Ze([ t ], o));
                    return r && l ? e[0] : e;
                };
                if (h && i && typeof u == "function" && u.length != 1) {
                    f = h = false;
                }
                var l = this.Sb, d = !!this.Rb.length, v = s && !l, p = f && !d;
                if (!s && h) {
                    n = p ? n : new Un(this);
                    var E = e.apply(n, o);
                    E.Rb.push({
                        ec: Ps,
                        gc: [ c ],
                        fc: t
                    });
                    return new vn(E, l);
                }
                if (v && p) {
                    return e.apply(this, o);
                }
                E = this.hc(c);
                return v ? r ? E.value()[0] : E.value() : E;
            };
        });
        Ge([ "pop", "push", "shift", "sort", "splice", "unshift" ], function(t) {
            var e = zt[t], n = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru", i = /^(?:pop|shift)$/.test(t);
            Ie.prototype[t] = function() {
                var t = arguments;
                if (i && !this.Sb) {
                    return e.apply(this.value(), t);
                }
                return this[n](function(n) {
                    return e.apply(n, t);
                });
            };
        });
        _i(Un.prototype, function(t, e) {
            var n = Ie[e];
            if (n) {
                var i = n.name + "", r = Ne[i] || (Ne[i] = []);
                r.push({
                    name: e,
                    ec: n
                });
            }
        });
        Ne[zr(t, i).name] = [ {
            name: "wrapper",
            ec: t
        } ];
        Un.prototype.clone = Cn;
        Un.prototype.reverse = Ln;
        Un.prototype.value = Pn;
        Ie.prototype.wc = Ns;
        Ie.prototype.chain = Is;
        Ie.prototype.ag = qs;
        Ie.prototype.Oc = zs;
        Ie.prototype.next = Bs;
        Ie.prototype.ic = js;
        Ie.prototype.reverse = Ds;
        Ie.prototype.toJSON = Ie.prototype.valueOf = Ie.prototype.value = Gs;
        if (te) {
            Ie.prototype[te] = ks;
        }
        return Ie;
    }
    var _ = Sn();
    (Ne || Pe || {})._ = _;
    if (typeof define == "function" && typeof define.bg == "object" && define.bg) {
        define(function() {
            return _;
        });
    } else if (Ue && Ce) {
        if (Ie) {
            (Ce.Lb = _)._ = _;
        }
        Ue._ = _;
    } else {
        ze._ = _;
    }
}).call(this);

var THREE = {
    cg: "79"
};

if (typeof define === "function" && define.bg) {
    define("three", THREE);
} else if ("undefined" !== typeof exports && "undefined" !== typeof module) {
    module.Lb = THREE;
}

if (Number.EPSILON === undefined) {
    Number.EPSILON = Math.pow(2, -52);
}

if (Math.sign === undefined) {
    Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t;
    };
}

if (Function.prototype.name === undefined) {
    Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1];
        }
    });
}

if (Object.assign === undefined) {
    (function() {
        Object.assign = function(t) {
            "use strict";
            if (t === undefined || t === null) {
                throw new TypeError("Cannot convert undefined or null to object");
            }
            var e = Object(t);
            for (var n = 1; n < arguments.length; n++) {
                var i = arguments[n];
                if (i !== undefined && i !== null) {
                    for (var r in i) {
                        if (Object.prototype.hasOwnProperty.call(i, r)) {
                            e[r] = i[r];
                        }
                    }
                }
            }
            return e;
        };
    })();
}

Object.assign(THREE, {
    dg: {
        eg: 0,
        fg: 1,
        gg: 2
    },
    hg: 0,
    ig: 1,
    jg: 2,
    kg: 3,
    lg: 0,
    mg: 1,
    ng: 0,
    og: 1,
    pg: 2,
    qg: 0,
    rg: 1,
    sg: 2,
    tg: 1,
    ug: 2,
    vg: 0,
    wg: 1,
    xg: 2,
    yg: 0,
    zg: 1,
    Ag: 2,
    Bg: 3,
    Cg: 4,
    Dg: 5,
    Eg: 100,
    Fg: 101,
    Gg: 102,
    Hg: 103,
    Ig: 104,
    Jg: 200,
    Kg: 201,
    Lg: 202,
    Mg: 203,
    Ng: 204,
    Og: 205,
    Pg: 206,
    Qg: 207,
    Rg: 208,
    Sg: 209,
    Tg: 210,
    Ug: 0,
    Vg: 1,
    Wg: 2,
    Xg: 3,
    Yg: 4,
    Zg: 5,
    $g: 6,
    _g: 7,
    ah: 0,
    bh: 1,
    dh: 2,
    eh: 0,
    fh: 1,
    gh: 2,
    hh: 3,
    ih: 4,
    jh: 300,
    kh: 301,
    lh: 302,
    mh: 303,
    nh: 304,
    oh: 305,
    ph: 306,
    qh: 307,
    rh: 1e3,
    sh: 1001,
    th: 1002,
    uh: 1003,
    vh: 1004,
    wh: 1005,
    xh: 1006,
    yh: 1007,
    zh: 1008,
    Ah: 1009,
    Bh: 1010,
    Ch: 1011,
    Dh: 1012,
    Eh: 1013,
    Fh: 1014,
    Gh: 1015,
    Hh: 1025,
    Ih: 1016,
    Jh: 1017,
    Kh: 1018,
    Lh: 1019,
    Mh: 1020,
    Nh: 1021,
    Oh: 1022,
    Ph: 1023,
    Qh: THREE.Nh,
    Rh: 1026,
    Sh: 2001,
    Th: 2002,
    Uh: 2003,
    Vh: 2004,
    Wh: 2100,
    Xh: 2101,
    Yh: 2102,
    Zh: 2103,
    $h: 2151,
    _h: 2200,
    ai: 2201,
    bi: 2202,
    ci: 2300,
    di: 2301,
    ei: 2302,
    fi: 2400,
    gi: 2401,
    hi: 2402,
    ii: 0,
    ji: 1,
    ki: 2,
    li: 3e3,
    mi: 3001,
    ni: 3007,
    oi: 3002,
    pi: 3003,
    qi: 3004,
    ri: 3005,
    si: 3006,
    ti: 3200,
    ui: 3201
});

THREE.T = function(t, e, n) {
    if (e === undefined && n === undefined) {
        return this.set(t);
    }
    return this.vi(t, e, n);
};

THREE.T.prototype = {
    constructor: THREE.T,
    r: 1,
    wi: 1,
    b: 1,
    set: function(t) {
        if (t instanceof THREE.T) {
            this.xi(t);
        } else if (typeof t === "number") {
            this.yi(t);
        } else if (typeof t === "string") {
            this.zi(t);
        }
        return this;
    },
    Ai: function(t) {
        this.r = t;
        this.wi = t;
        this.b = t;
    },
    yi: function(t) {
        t = Math.floor(t);
        this.r = (t >> 16 & 255) / 255;
        this.wi = (t >> 8 & 255) / 255;
        this.b = (t & 255) / 255;
        return this;
    },
    vi: function(t, e, n) {
        this.r = t;
        this.wi = e;
        this.b = n;
        return this;
    },
    Bi: function() {
        function t(t, e, n) {
            if (n < 0) n += 1;
            if (n > 1) n -= 1;
            if (n < 1 / 6) return t + (e - t) * 6 * n;
            if (n < 1 / 2) return e;
            if (n < 2 / 3) return t + (e - t) * 6 * (2 / 3 - n);
            return t;
        }
        return function e(n, i, r) {
            n = THREE.Math.Ci(n, 1);
            i = THREE.Math.ue(i, 0, 1);
            r = THREE.Math.ue(r, 0, 1);
            if (i === 0) {
                this.r = this.wi = this.b = r;
            } else {
                var a = r <= .5 ? r * (1 + i) : r + i - r * i;
                var s = 2 * r - a;
                this.r = t(s, a, n + 1 / 3);
                this.wi = t(s, a, n);
                this.b = t(s, a, n - 1 / 3);
            }
            return this;
        };
    }(),
    zi: function(t) {
        function e(e) {
            if (e === undefined) return;
            if (parseFloat(e) < 1) {
                console.warn("THREE.Color: Alpha component of " + t + " will be ignored.");
            }
        }
        var n;
        if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
            var i;
            var r = n[1];
            var a = n[2];
            switch (r) {
              case "rgb":
              case "rgba":
                if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                    this.r = Math.min(255, parseInt(i[1], 10)) / 255;
                    this.wi = Math.min(255, parseInt(i[2], 10)) / 255;
                    this.b = Math.min(255, parseInt(i[3], 10)) / 255;
                    e(i[5]);
                    return this;
                }
                if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                    this.r = Math.min(100, parseInt(i[1], 10)) / 100;
                    this.wi = Math.min(100, parseInt(i[2], 10)) / 100;
                    this.b = Math.min(100, parseInt(i[3], 10)) / 100;
                    e(i[5]);
                    return this;
                }
                break;

              case "hsl":
              case "hsla":
                if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                    var s = parseFloat(i[1]) / 360;
                    var o = parseInt(i[2], 10) / 100;
                    var f = parseInt(i[3], 10) / 100;
                    e(i[5]);
                    return this.Bi(s, o, f);
                }
                break;
            }
        } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
            var u = n[1];
            var h = u.length;
            if (h === 3) {
                this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255;
                this.wi = parseInt(u.charAt(1) + u.charAt(1), 16) / 255;
                this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255;
                return this;
            } else if (h === 6) {
                this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255;
                this.wi = parseInt(u.charAt(2) + u.charAt(3), 16) / 255;
                this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255;
                return this;
            }
        }
        if (t && t.length > 0) {
            var u = THREE.Di[t];
            if (u !== undefined) {
                this.yi(u);
            } else {
                console.warn("THREE.Color: Unknown color " + t);
            }
        }
        return this;
    },
    clone: function() {
        return new this.constructor(this.r, this.wi, this.b);
    },
    xi: function(t) {
        this.r = t.r;
        this.wi = t.wi;
        this.b = t.b;
        return this;
    },
    Ei: function(t, e) {
        if (e === undefined) e = 2;
        this.r = Math.pow(t.r, e);
        this.wi = Math.pow(t.wi, e);
        this.b = Math.pow(t.b, e);
        return this;
    },
    Fi: function(t, e) {
        if (e === undefined) e = 2;
        var n = e > 0 ? 1 / e : 1;
        this.r = Math.pow(t.r, n);
        this.wi = Math.pow(t.wi, n);
        this.b = Math.pow(t.b, n);
        return this;
    },
    Gi: function() {
        var t = this.r, e = this.wi, n = this.b;
        this.r = t * t;
        this.wi = e * e;
        this.b = n * n;
        return this;
    },
    Hi: function() {
        this.r = Math.sqrt(this.r);
        this.wi = Math.sqrt(this.wi);
        this.b = Math.sqrt(this.b);
        return this;
    },
    Ii: function() {
        return this.r * 255 << 16 ^ this.wi * 255 << 8 ^ this.b * 255 << 0;
    },
    Ji: function() {
        return ("000000" + this.Ii().toString(16)).slice(-6);
    },
    aa: function(t) {
        var e = t || {
            Ki: 0,
            Li: 0,
            Mi: 0
        };
        var n = this.r, i = this.wi, r = this.b;
        var a = Math.max(n, i, r);
        var s = Math.min(n, i, r);
        var o, f;
        var u = (s + a) / 2;
        if (s === a) {
            o = 0;
            f = 0;
        } else {
            var h = a - s;
            f = u <= .5 ? h / (a + s) : h / (2 - a - s);
            switch (a) {
              case n:
                o = (i - r) / h + (i < r ? 6 : 0);
                break;

              case i:
                o = (r - n) / h + 2;
                break;

              case r:
                o = (n - i) / h + 4;
                break;
            }
            o /= 6;
        }
        e.Ki = o;
        e.Li = f;
        e.Mi = u;
        return e;
    },
    Ni: function() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.wi * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    },
    Oi: function(t, e, n) {
        var i = this.aa();
        i.Ki += t;
        i.Li += e;
        i.Mi += n;
        this.Bi(i.Ki, i.Li, i.Mi);
        return this;
    },
    add: function(t) {
        this.r += t.r;
        this.wi += t.wi;
        this.b += t.b;
        return this;
    },
    Pi: function(t, e) {
        this.r = t.r + e.r;
        this.wi = t.wi + e.wi;
        this.b = t.b + e.b;
        return this;
    },
    Qi: function(t) {
        this.r += t;
        this.wi += t;
        this.b += t;
        return this;
    },
    sub: function(t) {
        this.r = Math.max(0, this.r - t.r);
        this.wi = Math.max(0, this.wi - t.wi);
        this.b = Math.max(0, this.b - t.b);
        return this;
    },
    multiply: function(t) {
        this.r *= t.r;
        this.wi *= t.wi;
        this.b *= t.b;
        return this;
    },
    Ri: function(t) {
        this.r *= t;
        this.wi *= t;
        this.b *= t;
        return this;
    },
    Si: function(t, e) {
        this.r += (t.r - this.r) * e;
        this.wi += (t.wi - this.wi) * e;
        this.b += (t.b - this.b) * e;
        return this;
    },
    Ti: function(t) {
        return t.r === this.r && t.wi === this.wi && t.b === this.b;
    },
    Ui: function(t, e) {
        if (e === undefined) e = 0;
        this.r = t[e];
        this.wi = t[e + 1];
        this.b = t[e + 2];
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.r;
        t[e + 1] = this.wi;
        t[e + 2] = this.b;
        return t;
    }
};

THREE.Di = {
    Vi: 15792383,
    Wi: 16444375,
    Xi: 65535,
    Yi: 8388564,
    Zi: 15794175,
    $i: 16119260,
    _i: 16770244,
    aj: 0,
    bj: 16772045,
    blue: 255,
    cj: 9055202,
    dj: 10824234,
    ej: 14596231,
    fj: 6266528,
    gj: 8388352,
    hj: 13789470,
    ij: 16744272,
    jj: 6591981,
    kj: 16775388,
    lj: 14423100,
    mj: 65535,
    nj: 139,
    oj: 35723,
    pj: 12092939,
    qj: 11119017,
    rj: 25600,
    sj: 11119017,
    tj: 12433259,
    uj: 9109643,
    vj: 5597999,
    wj: 16747520,
    xj: 10040012,
    yj: 9109504,
    zj: 15308410,
    Aj: 9419919,
    Bj: 4734347,
    Cj: 3100495,
    Dj: 3100495,
    Ej: 52945,
    Fj: 9699539,
    Gj: 16716947,
    Hj: 49151,
    Ij: 6908265,
    Jj: 6908265,
    Kj: 2003199,
    Lj: 11674146,
    Mj: 16775920,
    Nj: 2263842,
    Oj: 16711935,
    Pj: 14474460,
    Qj: 16316671,
    Rj: 16766720,
    Sj: 14329120,
    Tj: 8421504,
    green: 32768,
    Uj: 11403055,
    Vj: 8421504,
    Wj: 15794160,
    Xj: 16738740,
    Yj: 13458524,
    Zj: 4915330,
    $j: 16777200,
    _j: 15787660,
    ak: 15132410,
    bk: 16773365,
    ck: 8190976,
    dk: 16775885,
    ek: 11393254,
    fk: 15761536,
    gk: 14745599,
    hk: 16448210,
    ik: 13882323,
    jk: 9498256,
    kk: 13882323,
    lk: 16758465,
    mk: 16752762,
    nk: 2142890,
    pk: 8900346,
    qk: 7833753,
    rk: 7833753,
    sk: 11584734,
    tk: 16777184,
    uk: 65280,
    vk: 3329330,
    wk: 16445670,
    xk: 16711935,
    yk: 8388608,
    zk: 6737322,
    Ak: 205,
    Bk: 12211667,
    Ck: 9662683,
    Dk: 3978097,
    Ek: 8087790,
    Fk: 64154,
    Gk: 4772300,
    Hk: 13047173,
    Ik: 1644912,
    Jk: 16121850,
    Kk: 16770273,
    Lk: 16770229,
    Mk: 16768685,
    Nk: 128,
    Ok: 16643558,
    Pk: 8421376,
    Qk: 7048739,
    Rk: 16753920,
    Sk: 16729344,
    Tk: 14315734,
    Uk: 15657130,
    Vk: 10025880,
    Wk: 11529966,
    Xk: 14381203,
    Yk: 16773077,
    Zk: 16767673,
    $k: 13468991,
    _k: 16761035,
    al: 14524637,
    bl: 11591910,
    cl: 8388736,
    red: 16711680,
    dl: 12357519,
    el: 4286945,
    fl: 9127187,
    gl: 16416882,
    hl: 16032864,
    il: 3050327,
    jl: 16774638,
    kl: 10506797,
    ll: 12632256,
    ml: 8900331,
    nl: 6970061,
    ol: 7372944,
    pl: 7372944,
    ql: 16775930,
    rl: 65407,
    sl: 4620980,
    tan: 13808780,
    tl: 32896,
    ul: 14204888,
    vl: 16737095,
    wl: 4251856,
    xl: 15631086,
    yl: 16113331,
    zl: 16777215,
    Al: 16119285,
    Bl: 16776960,
    Cl: 10145074
};

THREE.Dl = function(t, e, n, i) {
    this.El = t || 0;
    this.Fl = e || 0;
    this.Gl = n || 0;
    this.Hl = i !== undefined ? i : 1;
};

THREE.Dl.prototype = {
    constructor: THREE.Dl,
    get x() {
        return this.El;
    },
    set x(t) {
        this.El = t;
        this.Il();
    },
    get y() {
        return this.Fl;
    },
    set y(t) {
        this.Fl = t;
        this.Il();
    },
    get z() {
        return this.Gl;
    },
    set z(t) {
        this.Gl = t;
        this.Il();
    },
    get w() {
        return this.Hl;
    },
    set w(t) {
        this.Hl = t;
        this.Il();
    },
    set: function(t, e, n, i) {
        this.El = t;
        this.Fl = e;
        this.Gl = n;
        this.Hl = i;
        this.Il();
        return this;
    },
    clone: function() {
        return new this.constructor(this.El, this.Fl, this.Gl, this.Hl);
    },
    xi: function(t) {
        this.El = t.x;
        this.Fl = t.y;
        this.Gl = t.z;
        this.Hl = t.w;
        this.Il();
        return this;
    },
    Jl: function(t, e) {
        if (t instanceof THREE.Kl === false) {
            throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        }
        var n = Math.cos(t.El / 2);
        var i = Math.cos(t.Fl / 2);
        var r = Math.cos(t.Gl / 2);
        var a = Math.sin(t.El / 2);
        var s = Math.sin(t.Fl / 2);
        var o = Math.sin(t.Gl / 2);
        var f = t.order;
        if (f === "XYZ") {
            this.El = a * i * r + n * s * o;
            this.Fl = n * s * r - a * i * o;
            this.Gl = n * i * o + a * s * r;
            this.Hl = n * i * r - a * s * o;
        } else if (f === "YXZ") {
            this.El = a * i * r + n * s * o;
            this.Fl = n * s * r - a * i * o;
            this.Gl = n * i * o - a * s * r;
            this.Hl = n * i * r + a * s * o;
        } else if (f === "ZXY") {
            this.El = a * i * r - n * s * o;
            this.Fl = n * s * r + a * i * o;
            this.Gl = n * i * o + a * s * r;
            this.Hl = n * i * r - a * s * o;
        } else if (f === "ZYX") {
            this.El = a * i * r - n * s * o;
            this.Fl = n * s * r + a * i * o;
            this.Gl = n * i * o - a * s * r;
            this.Hl = n * i * r + a * s * o;
        } else if (f === "YZX") {
            this.El = a * i * r + n * s * o;
            this.Fl = n * s * r + a * i * o;
            this.Gl = n * i * o - a * s * r;
            this.Hl = n * i * r - a * s * o;
        } else if (f === "XZY") {
            this.El = a * i * r - n * s * o;
            this.Fl = n * s * r - a * i * o;
            this.Gl = n * i * o + a * s * r;
            this.Hl = n * i * r + a * s * o;
        }
        if (e !== false) this.Il();
        return this;
    },
    Ll: function(t, e) {
        var n = e / 2, i = Math.sin(n);
        this.El = t.x * i;
        this.Fl = t.y * i;
        this.Gl = t.z * i;
        this.Hl = Math.cos(n);
        this.Il();
        return this;
    },
    Ml: function(t) {
        var e = t.elements, n = e[0], i = e[4], r = e[8], a = e[1], s = e[5], o = e[9], f = e[2], u = e[6], h = e[10], c = n + s + h, l;
        if (c > 0) {
            l = .5 / Math.sqrt(c + 1);
            this.Hl = .25 / l;
            this.El = (u - o) * l;
            this.Fl = (r - f) * l;
            this.Gl = (a - i) * l;
        } else if (n > s && n > h) {
            l = 2 * Math.sqrt(1 + n - s - h);
            this.Hl = (u - o) / l;
            this.El = .25 * l;
            this.Fl = (i + a) / l;
            this.Gl = (r + f) / l;
        } else if (s > h) {
            l = 2 * Math.sqrt(1 + s - n - h);
            this.Hl = (r - f) / l;
            this.El = (i + a) / l;
            this.Fl = .25 * l;
            this.Gl = (o + u) / l;
        } else {
            l = 2 * Math.sqrt(1 + h - n - s);
            this.Hl = (a - i) / l;
            this.El = (r + f) / l;
            this.Fl = (o + u) / l;
            this.Gl = .25 * l;
        }
        this.Il();
        return this;
    },
    Nl: function() {
        var t, e;
        var n = 1e-6;
        return function i(r, a) {
            if (t === undefined) t = new THREE.K();
            e = r.Ol(a) + 1;
            if (e < n) {
                e = 0;
                if (Math.abs(r.x) > Math.abs(r.z)) {
                    t.set(-r.y, r.x, 0);
                } else {
                    t.set(0, -r.z, r.y);
                }
            } else {
                t.Pl(r, a);
            }
            this.El = t.x;
            this.Fl = t.y;
            this.Gl = t.z;
            this.Hl = e;
            return this.normalize();
        };
    }(),
    inverse: function() {
        return this.Ql().normalize();
    },
    Ql: function() {
        this.El *= -1;
        this.Fl *= -1;
        this.Gl *= -1;
        this.Il();
        return this;
    },
    Ol: function(t) {
        return this.El * t.El + this.Fl * t.Fl + this.Gl * t.Gl + this.Hl * t.Hl;
    },
    Rl: function() {
        return this.El * this.El + this.Fl * this.Fl + this.Gl * this.Gl + this.Hl * this.Hl;
    },
    length: function() {
        return Math.sqrt(this.El * this.El + this.Fl * this.Fl + this.Gl * this.Gl + this.Hl * this.Hl);
    },
    normalize: function() {
        var t = this.length();
        if (t === 0) {
            this.El = 0;
            this.Fl = 0;
            this.Gl = 0;
            this.Hl = 1;
        } else {
            t = 1 / t;
            this.El = this.El * t;
            this.Fl = this.Fl * t;
            this.Gl = this.Gl * t;
            this.Hl = this.Hl * t;
        }
        this.Il();
        return this;
    },
    multiply: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");
            return this.Sl(t, e);
        }
        return this.Sl(this, t);
    },
    Tl: function(t) {
        return this.Sl(t, this);
    },
    Sl: function(t, e) {
        var n = t.El, i = t.Fl, r = t.Gl, a = t.Hl;
        var s = e.El, o = e.Fl, f = e.Gl, u = e.Hl;
        this.El = n * u + a * s + i * f - r * o;
        this.Fl = i * u + a * o + r * s - n * f;
        this.Gl = r * u + a * f + n * o - i * s;
        this.Hl = a * u - n * s - i * o - r * f;
        this.Il();
        return this;
    },
    Ul: function(t, e) {
        if (e === 0) return this;
        if (e === 1) return this.xi(t);
        var n = this.El, i = this.Fl, r = this.Gl, a = this.Hl;
        var s = a * t.Hl + n * t.El + i * t.Fl + r * t.Gl;
        if (s < 0) {
            this.Hl = -t.Hl;
            this.El = -t.El;
            this.Fl = -t.Fl;
            this.Gl = -t.Gl;
            s = -s;
        } else {
            this.xi(t);
        }
        if (s >= 1) {
            this.Hl = a;
            this.El = n;
            this.Fl = i;
            this.Gl = r;
            return this;
        }
        var o = Math.sqrt(1 - s * s);
        if (Math.abs(o) < .001) {
            this.Hl = .5 * (a + this.Hl);
            this.El = .5 * (n + this.El);
            this.Fl = .5 * (i + this.Fl);
            this.Gl = .5 * (r + this.Gl);
            return this;
        }
        var f = Math.atan2(o, s);
        var u = Math.sin((1 - e) * f) / o, h = Math.sin(e * f) / o;
        this.Hl = a * u + this.Hl * h;
        this.El = n * u + this.El * h;
        this.Fl = i * u + this.Fl * h;
        this.Gl = r * u + this.Gl * h;
        this.Il();
        return this;
    },
    Ti: function(t) {
        return t.El === this.El && t.Fl === this.Fl && t.Gl === this.Gl && t.Hl === this.Hl;
    },
    Ui: function(t, e) {
        if (e === undefined) e = 0;
        this.El = t[e];
        this.Fl = t[e + 1];
        this.Gl = t[e + 2];
        this.Hl = t[e + 3];
        this.Il();
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.El;
        t[e + 1] = this.Fl;
        t[e + 2] = this.Gl;
        t[e + 3] = this.Hl;
        return t;
    },
    Vl: function(t) {
        this.Il = t;
        return this;
    },
    Il: function() {}
};

Object.assign(THREE.Dl, {
    Ul: function(t, e, n, i) {
        return n.xi(t).Ul(e, i);
    },
    Wl: function(t, e, n, i, r, a, s) {
        var o = n[i + 0], f = n[i + 1], u = n[i + 2], h = n[i + 3], c = r[a + 0], l = r[a + 1], d = r[a + 2], v = r[a + 3];
        if (h !== v || o !== c || f !== l || u !== d) {
            var p = 1 - s, E = o * c + f * l + u * d + h * v, g = E >= 0 ? 1 : -1, m = 1 - E * E;
            if (m > Number.EPSILON) {
                var T = Math.sqrt(m), y = Math.atan2(T, E * g);
                p = Math.sin(p * y) / T;
                s = Math.sin(s * y) / T;
            }
            var R = s * g;
            o = o * p + c * R;
            f = f * p + l * R;
            u = u * p + d * R;
            h = h * p + v * R;
            if (p === 1 - s) {
                var w = 1 / Math.sqrt(o * o + f * f + u * u + h * h);
                o *= w;
                f *= w;
                u *= w;
                h *= w;
            }
        }
        t[e] = o;
        t[e + 1] = f;
        t[e + 2] = u;
        t[e + 3] = h;
    }
});

THREE.fa = function(t, e) {
    this.x = t || 0;
    this.y = e || 0;
};

THREE.fa.prototype = {
    constructor: THREE.fa,
    get width() {
        return this.x;
    },
    set width(t) {
        this.x = t;
    },
    get height() {
        return this.y;
    },
    set height(t) {
        this.y = t;
    },
    set: function(t, e) {
        this.x = t;
        this.y = e;
        return this;
    },
    Ai: function(t) {
        this.x = t;
        this.y = t;
        return this;
    },
    Xl: function(t) {
        this.x = t;
        return this;
    },
    Yl: function(t) {
        this.y = t;
        return this;
    },
    Zl: function(t, e) {
        switch (t) {
          case 0:
            this.x = e;
            break;

          case 1:
            this.y = e;
            break;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    $l: function(t) {
        switch (t) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    clone: function() {
        return new this.constructor(this.x, this.y);
    },
    xi: function(t) {
        this.x = t.x;
        this.y = t.y;
        return this;
    },
    add: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this._l(t, e);
        }
        this.x += t.x;
        this.y += t.y;
        return this;
    },
    Qi: function(t) {
        this.x += t;
        this.y += t;
        return this;
    },
    _l: function(t, e) {
        this.x = t.x + e.x;
        this.y = t.y + e.y;
        return this;
    },
    am: function(t, e) {
        this.x += t.x * e;
        this.y += t.y * e;
        return this;
    },
    sub: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.bm(t, e);
        }
        this.x -= t.x;
        this.y -= t.y;
        return this;
    },
    cm: function(t) {
        this.x -= t;
        this.y -= t;
        return this;
    },
    bm: function(t, e) {
        this.x = t.x - e.x;
        this.y = t.y - e.y;
        return this;
    },
    multiply: function(t) {
        this.x *= t.x;
        this.y *= t.y;
        return this;
    },
    Ri: function(t) {
        if (isFinite(t)) {
            this.x *= t;
            this.y *= t;
        } else {
            this.x = 0;
            this.y = 0;
        }
        return this;
    },
    dm: function(t) {
        this.x /= t.x;
        this.y /= t.y;
        return this;
    },
    em: function(t) {
        return this.Ri(1 / t);
    },
    min: function(t) {
        this.x = Math.min(this.x, t.x);
        this.y = Math.min(this.y, t.y);
        return this;
    },
    max: function(t) {
        this.x = Math.max(this.x, t.x);
        this.y = Math.max(this.y, t.y);
        return this;
    },
    ue: function(t, e) {
        this.x = Math.max(t.x, Math.min(e.x, this.x));
        this.y = Math.max(t.y, Math.min(e.y, this.y));
        return this;
    },
    fm: function() {
        var t, e;
        return function n(i, r) {
            if (t === undefined) {
                t = new THREE.fa();
                e = new THREE.fa();
            }
            t.set(i, i);
            e.set(r, r);
            return this.ue(t, e);
        };
    }(),
    gm: function(t, e) {
        var n = this.length();
        return this.Ri(Math.max(t, Math.min(e, n)) / n);
    },
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        return this;
    },
    hm: function() {
        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
        return this;
    },
    nd: function() {
        this.x = -this.x;
        this.y = -this.y;
        return this;
    },
    Ol: function(t) {
        return this.x * t.x + this.y * t.y;
    },
    Rl: function() {
        return this.x * this.x + this.y * this.y;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    },
    im: function() {
        return Math.abs(this.x) + Math.abs(this.y);
    },
    normalize: function() {
        return this.em(this.length());
    },
    angle: function() {
        var t = Math.atan2(this.y, this.x);
        if (t < 0) t += 2 * Math.PI;
        return t;
    },
    jm: function(t) {
        return Math.sqrt(this.km(t));
    },
    km: function(t) {
        var e = this.x - t.x, n = this.y - t.y;
        return e * e + n * n;
    },
    lm: function(t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
    },
    mm: function(t) {
        return this.Ri(t / this.length());
    },
    Si: function(t, e) {
        this.x += (t.x - this.x) * e;
        this.y += (t.y - this.y) * e;
        return this;
    },
    nm: function(t, e, n) {
        return this.bm(e, t).Ri(n).add(t);
    },
    Ti: function(t) {
        return t.x === this.x && t.y === this.y;
    },
    Ui: function(t, e) {
        if (e === undefined) e = 0;
        this.x = t[e];
        this.y = t[e + 1];
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.x;
        t[e + 1] = this.y;
        return t;
    },
    om: function(t, e, n) {
        if (n === undefined) n = 0;
        e = e * t.pm + n;
        this.x = t.dc[e];
        this.y = t.dc[e + 1];
        return this;
    },
    qm: function(t, e) {
        var n = Math.cos(e), i = Math.sin(e);
        var r = this.x - t.x;
        var a = this.y - t.y;
        this.x = r * n - a * i + t.x;
        this.y = r * i + a * n + t.y;
        return this;
    }
};

THREE.K = function(t, e, n) {
    this.x = t || 0;
    this.y = e || 0;
    this.z = n || 0;
};

THREE.K.prototype = {
    constructor: THREE.K,
    set: function(t, e, n) {
        this.x = t;
        this.y = e;
        this.z = n;
        return this;
    },
    Ai: function(t) {
        this.x = t;
        this.y = t;
        this.z = t;
        return this;
    },
    Xl: function(t) {
        this.x = t;
        return this;
    },
    Yl: function(t) {
        this.y = t;
        return this;
    },
    rm: function(t) {
        this.z = t;
        return this;
    },
    Zl: function(t, e) {
        switch (t) {
          case 0:
            this.x = e;
            break;

          case 1:
            this.y = e;
            break;

          case 2:
            this.z = e;
            break;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    $l: function(t) {
        switch (t) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          case 2:
            return this.z;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    clone: function() {
        return new this.constructor(this.x, this.y, this.z);
    },
    xi: function(t) {
        this.x = t.x;
        this.y = t.y;
        this.z = t.z;
        return this;
    },
    add: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this._l(t, e);
        }
        this.x += t.x;
        this.y += t.y;
        this.z += t.z;
        return this;
    },
    Qi: function(t) {
        this.x += t;
        this.y += t;
        this.z += t;
        return this;
    },
    _l: function(t, e) {
        this.x = t.x + e.x;
        this.y = t.y + e.y;
        this.z = t.z + e.z;
        return this;
    },
    am: function(t, e) {
        this.x += t.x * e;
        this.y += t.y * e;
        this.z += t.z * e;
        return this;
    },
    sub: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.bm(t, e);
        }
        this.x -= t.x;
        this.y -= t.y;
        this.z -= t.z;
        return this;
    },
    cm: function(t) {
        this.x -= t;
        this.y -= t;
        this.z -= t;
        return this;
    },
    bm: function(t, e) {
        this.x = t.x - e.x;
        this.y = t.y - e.y;
        this.z = t.z - e.z;
        return this;
    },
    multiply: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");
            return this.sm(t, e);
        }
        this.x *= t.x;
        this.y *= t.y;
        this.z *= t.z;
        return this;
    },
    Ri: function(t) {
        if (isFinite(t)) {
            this.x *= t;
            this.y *= t;
            this.z *= t;
        } else {
            this.x = 0;
            this.y = 0;
            this.z = 0;
        }
        return this;
    },
    sm: function(t, e) {
        this.x = t.x * e.x;
        this.y = t.y * e.y;
        this.z = t.z * e.z;
        return this;
    },
    tm: function() {
        var t;
        return function e(n) {
            if (n instanceof THREE.Kl === false) {
                console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");
            }
            if (t === undefined) t = new THREE.Dl();
            return this.um(t.Jl(n));
        };
    }(),
    vm: function() {
        var t;
        return function e(n, i) {
            if (t === undefined) t = new THREE.Dl();
            return this.um(t.Ll(n, i));
        };
    }(),
    wm: function(t) {
        var e = this.x, n = this.y, i = this.z;
        var r = t.elements;
        this.x = r[0] * e + r[3] * n + r[6] * i;
        this.y = r[1] * e + r[4] * n + r[7] * i;
        this.z = r[2] * e + r[5] * n + r[8] * i;
        return this;
    },
    xm: function(t) {
        var e = this.x, n = this.y, i = this.z;
        var r = t.elements;
        this.x = r[0] * e + r[4] * n + r[8] * i + r[12];
        this.y = r[1] * e + r[5] * n + r[9] * i + r[13];
        this.z = r[2] * e + r[6] * n + r[10] * i + r[14];
        return this;
    },
    ym: function(t) {
        var e = this.x, n = this.y, i = this.z;
        var r = t.elements;
        var a = 1 / (r[3] * e + r[7] * n + r[11] * i + r[15]);
        this.x = (r[0] * e + r[4] * n + r[8] * i + r[12]) * a;
        this.y = (r[1] * e + r[5] * n + r[9] * i + r[13]) * a;
        this.z = (r[2] * e + r[6] * n + r[10] * i + r[14]) * a;
        return this;
    },
    um: function(t) {
        var e = this.x, n = this.y, i = this.z;
        var r = t.x, a = t.y, s = t.z, o = t.w;
        var f = o * e + a * i - s * n;
        var u = o * n + s * e - r * i;
        var h = o * i + r * n - a * e;
        var c = -r * e - a * n - s * i;
        this.x = f * o + c * -r + u * -s - h * -a;
        this.y = u * o + c * -a + h * -r - f * -s;
        this.z = h * o + c * -s + f * -a - u * -r;
        return this;
    },
    zm: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.Bm(n.Cm, t.Dm(n.Em));
            return this.ym(t);
        };
    }(),
    Fm: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.Bm(n.Em, t.Dm(n.Cm));
            return this.ym(t);
        };
    }(),
    Gm: function(t) {
        var e = this.x, n = this.y, i = this.z;
        var r = t.elements;
        this.x = r[0] * e + r[4] * n + r[8] * i;
        this.y = r[1] * e + r[5] * n + r[9] * i;
        this.z = r[2] * e + r[6] * n + r[10] * i;
        return this.normalize();
    },
    dm: function(t) {
        this.x /= t.x;
        this.y /= t.y;
        this.z /= t.z;
        return this;
    },
    em: function(t) {
        return this.Ri(1 / t);
    },
    min: function(t) {
        this.x = Math.min(this.x, t.x);
        this.y = Math.min(this.y, t.y);
        this.z = Math.min(this.z, t.z);
        return this;
    },
    max: function(t) {
        this.x = Math.max(this.x, t.x);
        this.y = Math.max(this.y, t.y);
        this.z = Math.max(this.z, t.z);
        return this;
    },
    ue: function(t, e) {
        this.x = Math.max(t.x, Math.min(e.x, this.x));
        this.y = Math.max(t.y, Math.min(e.y, this.y));
        this.z = Math.max(t.z, Math.min(e.z, this.z));
        return this;
    },
    fm: function() {
        var t, e;
        return function n(i, r) {
            if (t === undefined) {
                t = new THREE.K();
                e = new THREE.K();
            }
            t.set(i, i, i);
            e.set(r, r, r);
            return this.ue(t, e);
        };
    }(),
    gm: function(t, e) {
        var n = this.length();
        return this.Ri(Math.max(t, Math.min(e, n)) / n);
    },
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
    },
    hm: function() {
        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);
        return this;
    },
    nd: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        return this;
    },
    Ol: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z;
    },
    Rl: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    },
    im: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    },
    normalize: function() {
        return this.em(this.length());
    },
    mm: function(t) {
        return this.Ri(t / this.length());
    },
    Si: function(t, e) {
        this.x += (t.x - this.x) * e;
        this.y += (t.y - this.y) * e;
        this.z += (t.z - this.z) * e;
        return this;
    },
    nm: function(t, e, n) {
        return this.bm(e, t).Ri(n).add(t);
    },
    Hm: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");
            return this.Pl(t, e);
        }
        var n = this.x, i = this.y, r = this.z;
        this.x = i * t.z - r * t.y;
        this.y = r * t.x - n * t.z;
        this.z = n * t.y - i * t.x;
        return this;
    },
    Pl: function(t, e) {
        var n = t.x, i = t.y, r = t.z;
        var a = e.x, s = e.y, o = e.z;
        this.x = i * o - r * s;
        this.y = r * a - n * o;
        this.z = n * s - i * a;
        return this;
    },
    Im: function(t) {
        var e = t.Ol(this) / t.Rl();
        return this.xi(t).Ri(e);
    },
    Jm: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.K();
            t.xi(this).Im(n);
            return this.sub(t);
        };
    }(),
    Km: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.K();
            return this.sub(t.xi(n).Ri(2 * this.Ol(n)));
        };
    }(),
    Lm: function(t) {
        var e = this.Ol(t) / Math.sqrt(this.Rl() * t.Rl());
        return Math.acos(THREE.Math.ue(e, -1, 1));
    },
    jm: function(t) {
        return Math.sqrt(this.km(t));
    },
    km: function(t) {
        var e = this.x - t.x, n = this.y - t.y, i = this.z - t.z;
        return e * e + n * n + i * i;
    },
    lm: function(t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
    },
    Mm: function(t) {
        var e = Math.sin(t.Nm) * t.N;
        this.x = e * Math.sin(t.Om);
        this.y = Math.cos(t.Nm) * t.N;
        this.z = e * Math.cos(t.Om);
        return this;
    },
    Pm: function(t) {
        return this.Qm(t, 3);
    },
    Rm: function(t) {
        var e = this.Qm(t, 0).length();
        var n = this.Qm(t, 1).length();
        var i = this.Qm(t, 2).length();
        this.x = e;
        this.y = n;
        this.z = i;
        return this;
    },
    Qm: function(t, e) {
        if (typeof t === "number") {
            console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");
            var n = t;
            t = e;
            e = n;
        }
        return this.Ui(t.elements, e * 4);
    },
    Ti: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z;
    },
    Ui: function(t, e) {
        if (e === undefined) e = 0;
        this.x = t[e];
        this.y = t[e + 1];
        this.z = t[e + 2];
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.x;
        t[e + 1] = this.y;
        t[e + 2] = this.z;
        return t;
    },
    om: function(t, e, n) {
        if (n === undefined) n = 0;
        e = e * t.pm + n;
        this.x = t.dc[e];
        this.y = t.dc[e + 1];
        this.z = t.dc[e + 2];
        return this;
    }
};

THREE.Sm = function(t, e, n, i) {
    this.x = t || 0;
    this.y = e || 0;
    this.z = n || 0;
    this.w = i !== undefined ? i : 1;
};

THREE.Sm.prototype = {
    constructor: THREE.Sm,
    set: function(t, e, n, i) {
        this.x = t;
        this.y = e;
        this.z = n;
        this.w = i;
        return this;
    },
    Ai: function(t) {
        this.x = t;
        this.y = t;
        this.z = t;
        this.w = t;
        return this;
    },
    Xl: function(t) {
        this.x = t;
        return this;
    },
    Yl: function(t) {
        this.y = t;
        return this;
    },
    rm: function(t) {
        this.z = t;
        return this;
    },
    Tm: function(t) {
        this.w = t;
        return this;
    },
    Zl: function(t, e) {
        switch (t) {
          case 0:
            this.x = e;
            break;

          case 1:
            this.y = e;
            break;

          case 2:
            this.z = e;
            break;

          case 3:
            this.w = e;
            break;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    $l: function(t) {
        switch (t) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          case 2:
            return this.z;

          case 3:
            return this.w;

          default:
            throw new Error("index is out of range: " + t);
        }
    },
    clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    },
    xi: function(t) {
        this.x = t.x;
        this.y = t.y;
        this.z = t.z;
        this.w = t.w !== undefined ? t.w : 1;
        return this;
    },
    add: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this._l(t, e);
        }
        this.x += t.x;
        this.y += t.y;
        this.z += t.z;
        this.w += t.w;
        return this;
    },
    Qi: function(t) {
        this.x += t;
        this.y += t;
        this.z += t;
        this.w += t;
        return this;
    },
    _l: function(t, e) {
        this.x = t.x + e.x;
        this.y = t.y + e.y;
        this.z = t.z + e.z;
        this.w = t.w + e.w;
        return this;
    },
    am: function(t, e) {
        this.x += t.x * e;
        this.y += t.y * e;
        this.z += t.z * e;
        this.w += t.w * e;
        return this;
    },
    sub: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.bm(t, e);
        }
        this.x -= t.x;
        this.y -= t.y;
        this.z -= t.z;
        this.w -= t.w;
        return this;
    },
    cm: function(t) {
        this.x -= t;
        this.y -= t;
        this.z -= t;
        this.w -= t;
        return this;
    },
    bm: function(t, e) {
        this.x = t.x - e.x;
        this.y = t.y - e.y;
        this.z = t.z - e.z;
        this.w = t.w - e.w;
        return this;
    },
    Ri: function(t) {
        if (isFinite(t)) {
            this.x *= t;
            this.y *= t;
            this.z *= t;
            this.w *= t;
        } else {
            this.x = 0;
            this.y = 0;
            this.z = 0;
            this.w = 0;
        }
        return this;
    },
    xm: function(t) {
        var e = this.x, n = this.y, i = this.z, r = this.w;
        var a = t.elements;
        this.x = a[0] * e + a[4] * n + a[8] * i + a[12] * r;
        this.y = a[1] * e + a[5] * n + a[9] * i + a[13] * r;
        this.z = a[2] * e + a[6] * n + a[10] * i + a[14] * r;
        this.w = a[3] * e + a[7] * n + a[11] * i + a[15] * r;
        return this;
    },
    em: function(t) {
        return this.Ri(1 / t);
    },
    Um: function(t) {
        this.w = 2 * Math.acos(t.w);
        var e = Math.sqrt(1 - t.w * t.w);
        if (e < 1e-4) {
            this.x = 1;
            this.y = 0;
            this.z = 0;
        } else {
            this.x = t.x / e;
            this.y = t.y / e;
            this.z = t.z / e;
        }
        return this;
    },
    Vm: function(t) {
        var e, n, i, r, a = .01, s = .1, o = t.elements, f = o[0], u = o[4], h = o[8], c = o[1], l = o[5], d = o[9], v = o[2], p = o[6], E = o[10];
        if (Math.abs(u - c) < a && Math.abs(h - v) < a && Math.abs(d - p) < a) {
            if (Math.abs(u + c) < s && Math.abs(h + v) < s && Math.abs(d + p) < s && Math.abs(f + l + E - 3) < s) {
                this.set(1, 0, 0, 0);
                return this;
            }
            e = Math.PI;
            var g = (f + 1) / 2;
            var m = (l + 1) / 2;
            var T = (E + 1) / 2;
            var y = (u + c) / 4;
            var R = (h + v) / 4;
            var w = (d + p) / 4;
            if (g > m && g > T) {
                if (g < a) {
                    n = 0;
                    i = .707106781;
                    r = .707106781;
                } else {
                    n = Math.sqrt(g);
                    i = y / n;
                    r = R / n;
                }
            } else if (m > T) {
                if (m < a) {
                    n = .707106781;
                    i = 0;
                    r = .707106781;
                } else {
                    i = Math.sqrt(m);
                    n = y / i;
                    r = w / i;
                }
            } else {
                if (T < a) {
                    n = .707106781;
                    i = .707106781;
                    r = 0;
                } else {
                    r = Math.sqrt(T);
                    n = R / r;
                    i = w / r;
                }
            }
            this.set(n, i, r, e);
            return this;
        }
        var x = Math.sqrt((p - d) * (p - d) + (h - v) * (h - v) + (c - u) * (c - u));
        if (Math.abs(x) < .001) x = 1;
        this.x = (p - d) / x;
        this.y = (h - v) / x;
        this.z = (c - u) / x;
        this.w = Math.acos((f + l + E - 1) / 2);
        return this;
    },
    min: function(t) {
        this.x = Math.min(this.x, t.x);
        this.y = Math.min(this.y, t.y);
        this.z = Math.min(this.z, t.z);
        this.w = Math.min(this.w, t.w);
        return this;
    },
    max: function(t) {
        this.x = Math.max(this.x, t.x);
        this.y = Math.max(this.y, t.y);
        this.z = Math.max(this.z, t.z);
        this.w = Math.max(this.w, t.w);
        return this;
    },
    ue: function(t, e) {
        this.x = Math.max(t.x, Math.min(e.x, this.x));
        this.y = Math.max(t.y, Math.min(e.y, this.y));
        this.z = Math.max(t.z, Math.min(e.z, this.z));
        this.w = Math.max(t.w, Math.min(e.w, this.w));
        return this;
    },
    fm: function() {
        var t, e;
        return function n(i, r) {
            if (t === undefined) {
                t = new THREE.Sm();
                e = new THREE.Sm();
            }
            t.set(i, i, i, i);
            e.set(r, r, r, r);
            return this.ue(t, e);
        };
    }(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        this.w = Math.floor(this.w);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        this.w = Math.ceil(this.w);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        this.w = Math.round(this.w);
        return this;
    },
    hm: function() {
        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);
        this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);
        return this;
    },
    nd: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        this.w = -this.w;
        return this;
    },
    Ol: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
    },
    Rl: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    },
    im: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    },
    normalize: function() {
        return this.em(this.length());
    },
    mm: function(t) {
        return this.Ri(t / this.length());
    },
    Si: function(t, e) {
        this.x += (t.x - this.x) * e;
        this.y += (t.y - this.y) * e;
        this.z += (t.z - this.z) * e;
        this.w += (t.w - this.w) * e;
        return this;
    },
    nm: function(t, e, n) {
        return this.bm(e, t).Ri(n).add(t);
    },
    Ti: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;
    },
    Ui: function(t, e) {
        if (e === undefined) e = 0;
        this.x = t[e];
        this.y = t[e + 1];
        this.z = t[e + 2];
        this.w = t[e + 3];
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.x;
        t[e + 1] = this.y;
        t[e + 2] = this.z;
        t[e + 3] = this.w;
        return t;
    },
    om: function(t, e, n) {
        if (n === undefined) n = 0;
        e = e * t.pm + n;
        this.x = t.dc[e];
        this.y = t.dc[e + 1];
        this.z = t.dc[e + 2];
        this.w = t.dc[e + 3];
        return this;
    }
};

THREE.Kl = function(t, e, n, i) {
    this.El = t || 0;
    this.Fl = e || 0;
    this.Gl = n || 0;
    this.Wm = i || THREE.Kl.Xm;
};

THREE.Kl.Ym = [ "XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX" ];

THREE.Kl.Xm = "XYZ";

THREE.Kl.prototype = {
    constructor: THREE.Kl,
    get x() {
        return this.El;
    },
    set x(t) {
        this.El = t;
        this.Il();
    },
    get y() {
        return this.Fl;
    },
    set y(t) {
        this.Fl = t;
        this.Il();
    },
    get z() {
        return this.Gl;
    },
    set z(t) {
        this.Gl = t;
        this.Il();
    },
    get order() {
        return this.Wm;
    },
    set order(t) {
        this.Wm = t;
        this.Il();
    },
    set: function(t, e, n, i) {
        this.El = t;
        this.Fl = e;
        this.Gl = n;
        this.Wm = i || this.Wm;
        this.Il();
        return this;
    },
    clone: function() {
        return new this.constructor(this.El, this.Fl, this.Gl, this.Wm);
    },
    xi: function(t) {
        this.El = t.El;
        this.Fl = t.Fl;
        this.Gl = t.Gl;
        this.Wm = t.Wm;
        this.Il();
        return this;
    },
    Ml: function(t, e, n) {
        var i = THREE.Math.ue;
        var r = t.elements;
        var a = r[0], s = r[4], o = r[8];
        var f = r[1], u = r[5], h = r[9];
        var c = r[2], l = r[6], d = r[10];
        e = e || this.Wm;
        if (e === "XYZ") {
            this.Fl = Math.asin(i(o, -1, 1));
            if (Math.abs(o) < .99999) {
                this.El = Math.atan2(-h, d);
                this.Gl = Math.atan2(-s, a);
            } else {
                this.El = Math.atan2(l, u);
                this.Gl = 0;
            }
        } else if (e === "YXZ") {
            this.El = Math.asin(-i(h, -1, 1));
            if (Math.abs(h) < .99999) {
                this.Fl = Math.atan2(o, d);
                this.Gl = Math.atan2(f, u);
            } else {
                this.Fl = Math.atan2(-c, a);
                this.Gl = 0;
            }
        } else if (e === "ZXY") {
            this.El = Math.asin(i(l, -1, 1));
            if (Math.abs(l) < .99999) {
                this.Fl = Math.atan2(-c, d);
                this.Gl = Math.atan2(-s, u);
            } else {
                this.Fl = 0;
                this.Gl = Math.atan2(f, a);
            }
        } else if (e === "ZYX") {
            this.Fl = Math.asin(-i(c, -1, 1));
            if (Math.abs(c) < .99999) {
                this.El = Math.atan2(l, d);
                this.Gl = Math.atan2(f, a);
            } else {
                this.El = 0;
                this.Gl = Math.atan2(-s, u);
            }
        } else if (e === "YZX") {
            this.Gl = Math.asin(i(f, -1, 1));
            if (Math.abs(f) < .99999) {
                this.El = Math.atan2(-h, u);
                this.Fl = Math.atan2(-c, a);
            } else {
                this.El = 0;
                this.Fl = Math.atan2(o, d);
            }
        } else if (e === "XZY") {
            this.Gl = Math.asin(-i(s, -1, 1));
            if (Math.abs(s) < .99999) {
                this.El = Math.atan2(l, u);
                this.Fl = Math.atan2(o, a);
            } else {
                this.El = Math.atan2(-h, d);
                this.Fl = 0;
            }
        } else {
            console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e);
        }
        this.Wm = e;
        if (n !== false) this.Il();
        return this;
    },
    Zm: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.Am();
            t.$m(n);
            return this.Ml(t, i, r);
        };
    }(),
    _m: function(t, e) {
        return this.set(t.x, t.y, t.z, e || this.Wm);
    },
    an: function() {
        var t = new THREE.Dl();
        return function e(n) {
            t.Jl(this);
            return this.Zm(t, n);
        };
    }(),
    Ti: function(t) {
        return t.El === this.El && t.Fl === this.Fl && t.Gl === this.Gl && t.Wm === this.Wm;
    },
    Ui: function(t) {
        this.El = t[0];
        this.Fl = t[1];
        this.Gl = t[2];
        if (t[3] !== undefined) this.Wm = t[3];
        this.Il();
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        t[e] = this.El;
        t[e + 1] = this.Fl;
        t[e + 2] = this.Gl;
        t[e + 3] = this.Wm;
        return t;
    },
    bn: function(t) {
        if (t) {
            return t.set(this.El, this.Fl, this.Gl);
        } else {
            return new THREE.K(this.El, this.Fl, this.Gl);
        }
    },
    Vl: function(t) {
        this.Il = t;
        return this;
    },
    Il: function() {}
};

THREE.cn = function(t, e) {
    this.start = t !== undefined ? t : new THREE.K();
    this.end = e !== undefined ? e : new THREE.K();
};

THREE.cn.prototype = {
    constructor: THREE.cn,
    set: function(t, e) {
        this.start.xi(t);
        this.end.xi(e);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.start.xi(t.start);
        this.end.xi(t.end);
        return this;
    },
    dn: function(t) {
        var e = t || new THREE.K();
        return e._l(this.start, this.end).Ri(.5);
    },
    delta: function(t) {
        var e = t || new THREE.K();
        return e.bm(this.end, this.start);
    },
    en: function() {
        return this.start.km(this.end);
    },
    fn: function() {
        return this.start.jm(this.end);
    },
    wc: function(t, e) {
        var n = e || new THREE.K();
        return this.delta(n).Ri(t).add(this.start);
    },
    gn: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        return function n(i, r) {
            t.bm(i, this.start);
            e.bm(this.end, this.start);
            var a = e.Ol(e);
            var s = e.Ol(t);
            var o = s / a;
            if (r) {
                o = THREE.Math.ue(o, 0, 1);
            }
            return o;
        };
    }(),
    hn: function(t, e, n) {
        var i = this.gn(t, e);
        var r = n || new THREE.K();
        return this.delta(r).Ri(i).add(this.start);
    },
    xm: function(t) {
        this.start.xm(t);
        this.end.xm(t);
        return this;
    },
    Ti: function(t) {
        return t.start.Ti(this.start) && t.end.Ti(this.end);
    }
};

THREE.in = function(t, e) {
    this.min = t !== undefined ? t : new THREE.fa(+Infinity, +Infinity);
    this.max = e !== undefined ? e : new THREE.fa(-Infinity, -Infinity);
};

THREE.in.prototype = {
    constructor: THREE.in,
    set: function(t, e) {
        this.min.xi(t);
        this.max.xi(e);
        return this;
    },
    jn: function(t) {
        this.kn();
        for (var e = 0, n = t.length; e < n; e++) {
            this.ln(t[e]);
        }
        return this;
    },
    mn: function() {
        var t = new THREE.fa();
        return function e(n, i) {
            var r = t.xi(i).Ri(.5);
            this.min.xi(n).sub(r);
            this.max.xi(n).add(r);
            return this;
        };
    }(),
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.min.xi(t.min);
        this.max.xi(t.max);
        return this;
    },
    kn: function() {
        this.min.x = this.min.y = +Infinity;
        this.max.x = this.max.y = -Infinity;
        return this;
    },
    Ue: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    },
    dn: function(t) {
        var e = t || new THREE.fa();
        return e._l(this.min, this.max).Ri(.5);
    },
    size: function(t) {
        var e = t || new THREE.fa();
        return e.bm(this.max, this.min);
    },
    ln: function(t) {
        this.min.min(t);
        this.max.max(t);
        return this;
    },
    nn: function(t) {
        this.min.sub(t);
        this.max.add(t);
        return this;
    },
    on: function(t) {
        this.min.Qi(-t);
        this.max.Qi(t);
        return this;
    },
    pn: function(t) {
        if (t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y) {
            return false;
        }
        return true;
    },
    qn: function(t) {
        if (this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y) {
            return true;
        }
        return false;
    },
    getParameter: function(t, e) {
        var n = e || new THREE.fa();
        return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y));
    },
    rn: function(t) {
        if (t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y) {
            return false;
        }
        return true;
    },
    sn: function(t, e) {
        var n = e || new THREE.fa();
        return n.xi(t).ue(this.min, this.max);
    },
    tn: function() {
        var t = new THREE.fa();
        return function e(n) {
            var i = t.xi(n).ue(this.min, this.max);
            return i.sub(n).length();
        };
    }(),
    un: function(t) {
        this.min.max(t.min);
        this.max.min(t.max);
        return this;
    },
    $d: function(t) {
        this.min.min(t.min);
        this.max.max(t.max);
        return this;
    },
    translate: function(t) {
        this.min.add(t);
        this.max.add(t);
        return this;
    },
    Ti: function(t) {
        return t.min.Ti(this.min) && t.max.Ti(this.max);
    }
};

THREE.vn = function(t, e) {
    this.min = t !== undefined ? t : new THREE.K(+Infinity, +Infinity, +Infinity);
    this.max = e !== undefined ? e : new THREE.K(-Infinity, -Infinity, -Infinity);
};

THREE.vn.prototype = {
    constructor: THREE.vn,
    set: function(t, e) {
        this.min.xi(t);
        this.max.xi(e);
        return this;
    },
    wn: function(t) {
        var e = +Infinity;
        var n = +Infinity;
        var i = +Infinity;
        var r = -Infinity;
        var a = -Infinity;
        var s = -Infinity;
        for (var o = 0, f = t.length; o < f; o += 3) {
            var u = t[o];
            var h = t[o + 1];
            var c = t[o + 2];
            if (u < e) e = u;
            if (h < n) n = h;
            if (c < i) i = c;
            if (u > r) r = u;
            if (h > a) a = h;
            if (c > s) s = c;
        }
        this.min.set(e, n, i);
        this.max.set(r, a, s);
    },
    jn: function(t) {
        this.kn();
        for (var e = 0, n = t.length; e < n; e++) {
            this.ln(t[e]);
        }
        return this;
    },
    mn: function() {
        var t = new THREE.K();
        return function e(n, i) {
            var r = t.xi(i).Ri(.5);
            this.min.xi(n).sub(r);
            this.max.xi(n).add(r);
            return this;
        };
    }(),
    xn: function() {
        var t = new THREE.K();
        return function e(n) {
            var i = this;
            n.yn(true);
            this.kn();
            n.zn(function(e) {
                var n = e.j;
                if (n !== undefined) {
                    if (n instanceof THREE.An) {
                        var r = n.Bn;
                        for (var a = 0, s = r.length; a < s; a++) {
                            t.xi(r[a]);
                            t.xm(e.Em);
                            i.ln(t);
                        }
                    } else if (n instanceof THREE.Cn) {
                        var o = n.attributes.position;
                        if (o !== undefined) {
                            var f, u, h;
                            if (o instanceof THREE.Dn) {
                                f = o.data.dc;
                                u = o.offset;
                                h = o.data.En;
                            } else {
                                f = o.dc;
                                u = 0;
                                h = 3;
                            }
                            for (var a = u, s = f.length; a < s; a += h) {
                                t.Ui(f, a);
                                t.xm(e.Em);
                                i.ln(t);
                            }
                        }
                    }
                }
            });
            return this;
        };
    }(),
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.min.xi(t.min);
        this.max.xi(t.max);
        return this;
    },
    kn: function() {
        this.min.x = this.min.y = this.min.z = +Infinity;
        this.max.x = this.max.y = this.max.z = -Infinity;
        return this;
    },
    Ue: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    },
    dn: function(t) {
        var e = t || new THREE.K();
        return e._l(this.min, this.max).Ri(.5);
    },
    size: function(t) {
        var e = t || new THREE.K();
        return e.bm(this.max, this.min);
    },
    ln: function(t) {
        this.min.min(t);
        this.max.max(t);
        return this;
    },
    nn: function(t) {
        this.min.sub(t);
        this.max.add(t);
        return this;
    },
    on: function(t) {
        this.min.Qi(-t);
        this.max.Qi(t);
        return this;
    },
    pn: function(t) {
        if (t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z) {
            return false;
        }
        return true;
    },
    qn: function(t) {
        if (this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z) {
            return true;
        }
        return false;
    },
    getParameter: function(t, e) {
        var n = e || new THREE.K();
        return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));
    },
    rn: function(t) {
        if (t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z) {
            return false;
        }
        return true;
    },
    Fn: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.K();
            this.sn(n.dn, t);
            return t.km(n.dn) <= n.N * n.N;
        };
    }(),
    Gn: function(t) {
        var e, n;
        if (t.Hn.x > 0) {
            e = t.Hn.x * this.min.x;
            n = t.Hn.x * this.max.x;
        } else {
            e = t.Hn.x * this.max.x;
            n = t.Hn.x * this.min.x;
        }
        if (t.Hn.y > 0) {
            e += t.Hn.y * this.min.y;
            n += t.Hn.y * this.max.y;
        } else {
            e += t.Hn.y * this.max.y;
            n += t.Hn.y * this.min.y;
        }
        if (t.Hn.z > 0) {
            e += t.Hn.z * this.min.z;
            n += t.Hn.z * this.max.z;
        } else {
            e += t.Hn.z * this.max.z;
            n += t.Hn.z * this.min.z;
        }
        return e <= t.Cc && n >= t.Cc;
    },
    sn: function(t, e) {
        var n = e || new THREE.K();
        return n.xi(t).ue(this.min, this.max);
    },
    tn: function() {
        var t = new THREE.K();
        return function e(n) {
            var i = t.xi(n).ue(this.min, this.max);
            return i.sub(n).length();
        };
    }(),
    In: function() {
        var t = new THREE.K();
        return function e(n) {
            var i = n || new THREE.Jn();
            i.dn = this.dn();
            i.N = this.size(t).length() * .5;
            return i;
        };
    }(),
    un: function(t) {
        this.min.max(t.min);
        this.max.min(t.max);
        if (this.Ue()) this.kn();
        return this;
    },
    $d: function(t) {
        this.min.min(t.min);
        this.max.max(t.max);
        return this;
    },
    xm: function() {
        var t = [ new THREE.K(), new THREE.K(), new THREE.K(), new THREE.K(), new THREE.K(), new THREE.K(), new THREE.K(), new THREE.K() ];
        return function e(n) {
            if (this.Ue()) return this;
            t[0].set(this.min.x, this.min.y, this.min.z).xm(n);
            t[1].set(this.min.x, this.min.y, this.max.z).xm(n);
            t[2].set(this.min.x, this.max.y, this.min.z).xm(n);
            t[3].set(this.min.x, this.max.y, this.max.z).xm(n);
            t[4].set(this.max.x, this.min.y, this.min.z).xm(n);
            t[5].set(this.max.x, this.min.y, this.max.z).xm(n);
            t[6].set(this.max.x, this.max.y, this.min.z).xm(n);
            t[7].set(this.max.x, this.max.y, this.max.z).xm(n);
            this.jn(t);
            return this;
        };
    }(),
    translate: function(t) {
        this.min.add(t);
        this.max.add(t);
        return this;
    },
    Ti: function(t) {
        return t.min.Ti(this.min) && t.max.Ti(this.max);
    }
};

THREE.Kn = function() {
    this.elements = new Float32Array([ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]);
    if (arguments.length > 0) {
        console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
};

THREE.Kn.prototype = {
    constructor: THREE.Kn,
    set: function(t, e, n, i, r, a, s, o, f) {
        var u = this.elements;
        u[0] = t;
        u[1] = i;
        u[2] = s;
        u[3] = e;
        u[4] = r;
        u[5] = o;
        u[6] = n;
        u[7] = a;
        u[8] = f;
        return this;
    },
    identity: function() {
        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);
        return this;
    },
    clone: function() {
        return new this.constructor().Ui(this.elements);
    },
    xi: function(t) {
        var e = t.elements;
        this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]);
        return this;
    },
    Ln: function(t) {
        var e = t.elements;
        this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]);
        return this;
    },
    Mn: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.K();
            if (i === undefined) i = 0;
            if (r === undefined) r = n.length;
            for (var a = 0, s = i; a < r; a += 3, s += 3) {
                t.Ui(n, s);
                t.wm(this);
                t.toArray(n, s);
            }
            return n;
        };
    }(),
    Nn: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.K();
            if (i === undefined) i = 0;
            if (r === undefined) r = n.length / n.pm;
            for (var a = 0, s = i; a < r; a++, s++) {
                t.x = n.On(s);
                t.y = n.Pn(s);
                t.z = n.Qn(s);
                t.wm(this);
                n.Rn(t.x, t.y, t.z);
            }
            return n;
        };
    }(),
    Ri: function(t) {
        var e = this.elements;
        e[0] *= t;
        e[3] *= t;
        e[6] *= t;
        e[1] *= t;
        e[4] *= t;
        e[7] *= t;
        e[2] *= t;
        e[5] *= t;
        e[8] *= t;
        return this;
    },
    Sn: function() {
        var t = this.elements;
        var e = t[0], n = t[1], i = t[2], r = t[3], a = t[4], s = t[5], o = t[6], f = t[7], u = t[8];
        return e * a * u - e * s * f - n * r * u + n * s * o + i * r * f - i * a * o;
    },
    Dm: function(t, e) {
        if (t instanceof THREE.Am) {
            console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");
        }
        var n = t.elements, i = this.elements, r = n[0], a = n[1], s = n[2], o = n[3], f = n[4], u = n[5], h = n[6], c = n[7], l = n[8], d = l * f - u * c, v = u * h - l * o, p = c * o - f * h, E = r * d + a * v + s * p;
        if (E === 0) {
            var g = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
            if (e || false) {
                throw new Error(g);
            } else {
                console.warn(g);
            }
            return this.identity();
        }
        var m = 1 / E;
        i[0] = d * m;
        i[1] = (s * c - l * a) * m;
        i[2] = (u * a - s * f) * m;
        i[3] = v * m;
        i[4] = (l * r - s * h) * m;
        i[5] = (s * o - u * r) * m;
        i[6] = p * m;
        i[7] = (a * h - c * r) * m;
        i[8] = (f * r - a * o) * m;
        return this;
    },
    Tn: function() {
        var t, e = this.elements;
        t = e[1];
        e[1] = e[3];
        e[3] = t;
        t = e[2];
        e[2] = e[6];
        e[6] = t;
        t = e[5];
        e[5] = e[7];
        e[7] = t;
        return this;
    },
    Un: function(t, e) {
        console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated " + "- just use .toArray instead.");
        return this.toArray(t, e);
    },
    Vn: function(t) {
        return this.Ln(t).Dm(this).Tn();
    },
    Wn: function(t) {
        var e = this.elements;
        t[0] = e[0];
        t[1] = e[3];
        t[2] = e[6];
        t[3] = e[1];
        t[4] = e[4];
        t[5] = e[7];
        t[6] = e[2];
        t[7] = e[5];
        t[8] = e[8];
        return this;
    },
    Ui: function(t) {
        this.elements.set(t);
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        var n = this.elements;
        t[e] = n[0];
        t[e + 1] = n[1];
        t[e + 2] = n[2];
        t[e + 3] = n[3];
        t[e + 4] = n[4];
        t[e + 5] = n[5];
        t[e + 6] = n[6];
        t[e + 7] = n[7];
        t[e + 8] = n[8];
        return t;
    }
};

THREE.Am = function() {
    this.elements = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);
    if (arguments.length > 0) {
        console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
};

THREE.Am.prototype = {
    constructor: THREE.Am,
    set: function(t, e, n, i, r, a, s, o, f, u, h, c, l, d, v, p) {
        var E = this.elements;
        E[0] = t;
        E[4] = e;
        E[8] = n;
        E[12] = i;
        E[1] = r;
        E[5] = a;
        E[9] = s;
        E[13] = o;
        E[2] = f;
        E[6] = u;
        E[10] = h;
        E[14] = c;
        E[3] = l;
        E[7] = d;
        E[11] = v;
        E[15] = p;
        return this;
    },
    identity: function() {
        this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this;
    },
    clone: function() {
        return new THREE.Am().Ui(this.elements);
    },
    xi: function(t) {
        this.elements.set(t.elements);
        return this;
    },
    Xn: function(t) {
        var e = this.elements;
        var n = t.elements;
        e[12] = n[12];
        e[13] = n[13];
        e[14] = n[14];
        return this;
    },
    Yn: function(t, e, n) {
        t.Qm(this, 0);
        e.Qm(this, 1);
        n.Qm(this, 2);
        return this;
    },
    Zn: function(t, e, n) {
        this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1);
        return this;
    },
    $n: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.K();
            var i = this.elements;
            var r = n.elements;
            var a = 1 / t.Qm(n, 0).length();
            var s = 1 / t.Qm(n, 1).length();
            var o = 1 / t.Qm(n, 2).length();
            i[0] = r[0] * a;
            i[1] = r[1] * a;
            i[2] = r[2] * a;
            i[4] = r[4] * s;
            i[5] = r[5] * s;
            i[6] = r[6] * s;
            i[8] = r[8] * o;
            i[9] = r[9] * o;
            i[10] = r[10] * o;
            return this;
        };
    }(),
    _n: function(t) {
        if (t instanceof THREE.Kl === false) {
            console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        }
        var e = this.elements;
        var n = t.x, i = t.y, r = t.z;
        var a = Math.cos(n), s = Math.sin(n);
        var o = Math.cos(i), f = Math.sin(i);
        var u = Math.cos(r), h = Math.sin(r);
        if (t.order === "XYZ") {
            var c = a * u, l = a * h, d = s * u, v = s * h;
            e[0] = o * u;
            e[4] = -o * h;
            e[8] = f;
            e[1] = l + d * f;
            e[5] = c - v * f;
            e[9] = -s * o;
            e[2] = v - c * f;
            e[6] = d + l * f;
            e[10] = a * o;
        } else if (t.order === "YXZ") {
            var p = o * u, E = o * h, g = f * u, m = f * h;
            e[0] = p + m * s;
            e[4] = g * s - E;
            e[8] = a * f;
            e[1] = a * h;
            e[5] = a * u;
            e[9] = -s;
            e[2] = E * s - g;
            e[6] = m + p * s;
            e[10] = a * o;
        } else if (t.order === "ZXY") {
            var p = o * u, E = o * h, g = f * u, m = f * h;
            e[0] = p - m * s;
            e[4] = -a * h;
            e[8] = g + E * s;
            e[1] = E + g * s;
            e[5] = a * u;
            e[9] = m - p * s;
            e[2] = -a * f;
            e[6] = s;
            e[10] = a * o;
        } else if (t.order === "ZYX") {
            var c = a * u, l = a * h, d = s * u, v = s * h;
            e[0] = o * u;
            e[4] = d * f - l;
            e[8] = c * f + v;
            e[1] = o * h;
            e[5] = v * f + c;
            e[9] = l * f - d;
            e[2] = -f;
            e[6] = s * o;
            e[10] = a * o;
        } else if (t.order === "YZX") {
            var T = a * o, y = a * f, R = s * o, w = s * f;
            e[0] = o * u;
            e[4] = w - T * h;
            e[8] = R * h + y;
            e[1] = h;
            e[5] = a * u;
            e[9] = -s * u;
            e[2] = -f * u;
            e[6] = y * h + R;
            e[10] = T - w * h;
        } else if (t.order === "XZY") {
            var T = a * o, y = a * f, R = s * o, w = s * f;
            e[0] = o * u;
            e[4] = -h;
            e[8] = f * u;
            e[1] = T * h + w;
            e[5] = a * u;
            e[9] = y * h - R;
            e[2] = R * h - y;
            e[6] = s * u;
            e[10] = w * h + T;
        }
        e[3] = 0;
        e[7] = 0;
        e[11] = 0;
        e[12] = 0;
        e[13] = 0;
        e[14] = 0;
        e[15] = 1;
        return this;
    },
    $m: function(t) {
        var e = this.elements;
        var n = t.x, i = t.y, r = t.z, a = t.w;
        var s = n + n, o = i + i, f = r + r;
        var u = n * s, h = n * o, c = n * f;
        var l = i * o, d = i * f, v = r * f;
        var p = a * s, E = a * o, g = a * f;
        e[0] = 1 - (l + v);
        e[4] = h - g;
        e[8] = c + E;
        e[1] = h + g;
        e[5] = 1 - (u + v);
        e[9] = d - p;
        e[2] = c - E;
        e[6] = d + p;
        e[10] = 1 - (u + l);
        e[3] = 0;
        e[7] = 0;
        e[11] = 0;
        e[12] = 0;
        e[13] = 0;
        e[14] = 0;
        e[15] = 1;
        return this;
    },
    ao: function() {
        var t, e, n;
        return function i(r, a, s) {
            if (t === undefined) {
                t = new THREE.K();
                e = new THREE.K();
                n = new THREE.K();
            }
            var o = this.elements;
            n.bm(r, a).normalize();
            if (n.Rl() === 0) {
                n.z = 1;
            }
            t.Pl(s, n).normalize();
            if (t.Rl() === 0) {
                n.z += 1e-4;
                t.Pl(s, n).normalize();
            }
            e.Pl(n, t);
            o[0] = t.x;
            o[4] = e.x;
            o[8] = n.x;
            o[1] = t.y;
            o[5] = e.y;
            o[9] = n.y;
            o[2] = t.z;
            o[6] = e.z;
            o[10] = n.z;
            return this;
        };
    }(),
    multiply: function(t, e) {
        if (e !== undefined) {
            console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");
            return this.Bm(t, e);
        }
        return this.Bm(this, t);
    },
    Tl: function(t) {
        return this.Bm(t, this);
    },
    Bm: function(t, e) {
        var n = t.elements;
        var i = e.elements;
        var r = this.elements;
        var a = n[0], s = n[4], o = n[8], f = n[12];
        var u = n[1], h = n[5], c = n[9], l = n[13];
        var d = n[2], v = n[6], p = n[10], E = n[14];
        var g = n[3], m = n[7], T = n[11], y = n[15];
        var R = i[0], w = i[4], x = i[8], b = i[12];
        var H = i[1], A = i[5], M = i[9], O = i[13];
        var S = i[2], U = i[6], C = i[10], L = i[14];
        var P = i[3], N = i[7], I = i[11], q = i[15];
        r[0] = a * R + s * H + o * S + f * P;
        r[4] = a * w + s * A + o * U + f * N;
        r[8] = a * x + s * M + o * C + f * I;
        r[12] = a * b + s * O + o * L + f * q;
        r[1] = u * R + h * H + c * S + l * P;
        r[5] = u * w + h * A + c * U + l * N;
        r[9] = u * x + h * M + c * C + l * I;
        r[13] = u * b + h * O + c * L + l * q;
        r[2] = d * R + v * H + p * S + E * P;
        r[6] = d * w + v * A + p * U + E * N;
        r[10] = d * x + v * M + p * C + E * I;
        r[14] = d * b + v * O + p * L + E * q;
        r[3] = g * R + m * H + T * S + y * P;
        r[7] = g * w + m * A + T * U + y * N;
        r[11] = g * x + m * M + T * C + y * I;
        r[15] = g * b + m * O + T * L + y * q;
        return this;
    },
    bo: function(t, e, n) {
        var i = this.elements;
        this.Bm(t, e);
        n[0] = i[0];
        n[1] = i[1];
        n[2] = i[2];
        n[3] = i[3];
        n[4] = i[4];
        n[5] = i[5];
        n[6] = i[6];
        n[7] = i[7];
        n[8] = i[8];
        n[9] = i[9];
        n[10] = i[10];
        n[11] = i[11];
        n[12] = i[12];
        n[13] = i[13];
        n[14] = i[14];
        n[15] = i[15];
        return this;
    },
    Ri: function(t) {
        var e = this.elements;
        e[0] *= t;
        e[4] *= t;
        e[8] *= t;
        e[12] *= t;
        e[1] *= t;
        e[5] *= t;
        e[9] *= t;
        e[13] *= t;
        e[2] *= t;
        e[6] *= t;
        e[10] *= t;
        e[14] *= t;
        e[3] *= t;
        e[7] *= t;
        e[11] *= t;
        e[15] *= t;
        return this;
    },
    Mn: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.K();
            if (i === undefined) i = 0;
            if (r === undefined) r = n.length;
            for (var a = 0, s = i; a < r; a += 3, s += 3) {
                t.Ui(n, s);
                t.xm(this);
                t.toArray(n, s);
            }
            return n;
        };
    }(),
    Nn: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.K();
            if (i === undefined) i = 0;
            if (r === undefined) r = n.length / n.pm;
            for (var a = 0, s = i; a < r; a++, s++) {
                t.x = n.On(s);
                t.y = n.Pn(s);
                t.z = n.Qn(s);
                t.xm(this);
                n.Rn(t.x, t.y, t.z);
            }
            return n;
        };
    }(),
    Sn: function() {
        var t = this.elements;
        var e = t[0], n = t[4], i = t[8], r = t[12];
        var a = t[1], s = t[5], o = t[9], f = t[13];
        var u = t[2], h = t[6], c = t[10], l = t[14];
        var d = t[3], v = t[7], p = t[11], E = t[15];
        return d * (+r * o * h - i * f * h - r * s * c + n * f * c + i * s * l - n * o * l) + v * (+e * o * l - e * f * c + r * a * c - i * a * l + i * f * u - r * o * u) + p * (+e * f * h - e * s * l - r * a * h + n * a * l + r * s * u - n * f * u) + E * (-i * s * u - e * o * h + e * s * c + i * a * h - n * a * c + n * o * u);
    },
    Tn: function() {
        var t = this.elements;
        var e;
        e = t[1];
        t[1] = t[4];
        t[4] = e;
        e = t[2];
        t[2] = t[8];
        t[8] = e;
        e = t[6];
        t[6] = t[9];
        t[9] = e;
        e = t[3];
        t[3] = t[12];
        t[12] = e;
        e = t[7];
        t[7] = t[13];
        t[13] = e;
        e = t[11];
        t[11] = t[14];
        t[14] = e;
        return this;
    },
    Un: function(t, e) {
        console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated " + "- just use .toArray instead.");
        return this.toArray(t, e);
    },
    co: function() {
        var t;
        return function e() {
            if (t === undefined) t = new THREE.K();
            console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
            return t.Qm(this, 3);
        };
    }(),
    setPosition: function(t) {
        var e = this.elements;
        e[12] = t.x;
        e[13] = t.y;
        e[14] = t.z;
        return this;
    },
    Dm: function(t, e) {
        var n = this.elements, i = t.elements, r = i[0], a = i[1], s = i[2], o = i[3], f = i[4], u = i[5], h = i[6], c = i[7], l = i[8], d = i[9], v = i[10], p = i[11], E = i[12], g = i[13], m = i[14], T = i[15], y = d * m * c - g * v * c + g * h * p - u * m * p - d * h * T + u * v * T, R = E * v * c - l * m * c - E * h * p + f * m * p + l * h * T - f * v * T, w = l * g * c - E * d * c + E * u * p - f * g * p - l * u * T + f * d * T, x = E * d * h - l * g * h - E * u * v + f * g * v + l * u * m - f * d * m;
        var b = r * y + a * R + s * w + o * x;
        if (b === 0) {
            var H = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
            if (e || false) {
                throw new Error(H);
            } else {
                console.warn(H);
            }
            return this.identity();
        }
        var A = 1 / b;
        n[0] = y * A;
        n[1] = (g * v * o - d * m * o - g * s * p + a * m * p + d * s * T - a * v * T) * A;
        n[2] = (u * m * o - g * h * o + g * s * c - a * m * c - u * s * T + a * h * T) * A;
        n[3] = (d * h * o - u * v * o - d * s * c + a * v * c + u * s * p - a * h * p) * A;
        n[4] = R * A;
        n[5] = (l * m * o - E * v * o + E * s * p - r * m * p - l * s * T + r * v * T) * A;
        n[6] = (E * h * o - f * m * o - E * s * c + r * m * c + f * s * T - r * h * T) * A;
        n[7] = (f * v * o - l * h * o + l * s * c - r * v * c - f * s * p + r * h * p) * A;
        n[8] = w * A;
        n[9] = (E * d * o - l * g * o - E * a * p + r * g * p + l * a * T - r * d * T) * A;
        n[10] = (f * g * o - E * u * o + E * a * c - r * g * c - f * a * T + r * u * T) * A;
        n[11] = (l * u * o - f * d * o - l * a * c + r * d * c + f * a * p - r * u * p) * A;
        n[12] = x * A;
        n[13] = (l * g * s - E * d * s + E * a * v - r * g * v - l * a * m + r * d * m) * A;
        n[14] = (E * u * s - f * g * s - E * a * h + r * g * h + f * a * m - r * u * m) * A;
        n[15] = (f * d * s - l * u * s + l * a * h - r * d * h - f * a * v + r * u * v) * A;
        return this;
    },
    scale: function(t) {
        var e = this.elements;
        var n = t.x, i = t.y, r = t.z;
        e[0] *= n;
        e[4] *= i;
        e[8] *= r;
        e[1] *= n;
        e[5] *= i;
        e[9] *= r;
        e[2] *= n;
        e[6] *= i;
        e[10] *= r;
        e[3] *= n;
        e[7] *= i;
        e[11] *= r;
        return this;
    },
    do: function() {
        var t = this.elements;
        var e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2];
        var n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6];
        var i = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
        return Math.sqrt(Math.max(e, n, i));
    },
    eo: function(t, e, n) {
        this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1);
        return this;
    },
    fo: function(t) {
        var e = Math.cos(t), n = Math.sin(t);
        this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1);
        return this;
    },
    ho: function(t) {
        var e = Math.cos(t), n = Math.sin(t);
        this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1);
        return this;
    },
    io: function(t) {
        var e = Math.cos(t), n = Math.sin(t);
        this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this;
    },
    jo: function(t, e) {
        var n = Math.cos(e);
        var i = Math.sin(e);
        var r = 1 - n;
        var a = t.x, s = t.y, o = t.z;
        var f = r * a, u = r * s;
        this.set(f * a + n, f * s - i * o, f * o + i * s, 0, f * s + i * o, u * s + n, u * o - i * a, 0, f * o - i * s, u * o + i * a, r * o * o + n, 0, 0, 0, 0, 1);
        return this;
    },
    ko: function(t, e, n) {
        this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1);
        return this;
    },
    lo: function(t, e, n) {
        this.$m(e);
        this.scale(n);
        this.setPosition(t);
        return this;
    },
    mo: function() {
        var t, e;
        return function n(i, r, a) {
            if (t === undefined) {
                t = new THREE.K();
                e = new THREE.Am();
            }
            var s = this.elements;
            var o = t.set(s[0], s[1], s[2]).length();
            var f = t.set(s[4], s[5], s[6]).length();
            var u = t.set(s[8], s[9], s[10]).length();
            var h = this.Sn();
            if (h < 0) {
                o = -o;
            }
            i.x = s[12];
            i.y = s[13];
            i.z = s[14];
            e.elements.set(this.elements);
            var c = 1 / o;
            var l = 1 / f;
            var d = 1 / u;
            e.elements[0] *= c;
            e.elements[1] *= c;
            e.elements[2] *= c;
            e.elements[4] *= l;
            e.elements[5] *= l;
            e.elements[6] *= l;
            e.elements[8] *= d;
            e.elements[9] *= d;
            e.elements[10] *= d;
            r.Ml(e);
            a.x = o;
            a.y = f;
            a.z = u;
            return this;
        };
    }(),
    no: function(t, e, n, i, r, a) {
        var s = this.elements;
        var o = 2 * r / (e - t);
        var f = 2 * r / (i - n);
        var u = (e + t) / (e - t);
        var h = (i + n) / (i - n);
        var c = -(a + r) / (a - r);
        var l = -2 * a * r / (a - r);
        s[0] = o;
        s[4] = 0;
        s[8] = u;
        s[12] = 0;
        s[1] = 0;
        s[5] = f;
        s[9] = h;
        s[13] = 0;
        s[2] = 0;
        s[6] = 0;
        s[10] = c;
        s[14] = l;
        s[3] = 0;
        s[7] = 0;
        s[11] = -1;
        s[15] = 0;
        return this;
    },
    oo: function(t, e, n, i) {
        var r = n * Math.tan(THREE.Math.po * t * .5);
        var a = -r;
        var s = a * e;
        var o = r * e;
        return this.no(s, o, a, r, n, i);
    },
    qo: function(t, e, n, i, r, a) {
        var s = this.elements;
        var o = 1 / (e - t);
        var f = 1 / (n - i);
        var u = 1 / (a - r);
        var h = (e + t) * o;
        var c = (n + i) * f;
        var l = (a + r) * u;
        s[0] = 2 * o;
        s[4] = 0;
        s[8] = 0;
        s[12] = -h;
        s[1] = 0;
        s[5] = 2 * f;
        s[9] = 0;
        s[13] = -c;
        s[2] = 0;
        s[6] = 0;
        s[10] = -2 * u;
        s[14] = -l;
        s[3] = 0;
        s[7] = 0;
        s[11] = 0;
        s[15] = 1;
        return this;
    },
    Ti: function(t) {
        var e = this.elements;
        var n = t.elements;
        for (var i = 0; i < 16; i++) {
            if (e[i] !== n[i]) return false;
        }
        return true;
    },
    Ui: function(t) {
        this.elements.set(t);
        return this;
    },
    toArray: function(t, e) {
        if (t === undefined) t = [];
        if (e === undefined) e = 0;
        var n = this.elements;
        t[e] = n[0];
        t[e + 1] = n[1];
        t[e + 2] = n[2];
        t[e + 3] = n[3];
        t[e + 4] = n[4];
        t[e + 5] = n[5];
        t[e + 6] = n[6];
        t[e + 7] = n[7];
        t[e + 8] = n[8];
        t[e + 9] = n[9];
        t[e + 10] = n[10];
        t[e + 11] = n[11];
        t[e + 12] = n[12];
        t[e + 13] = n[13];
        t[e + 14] = n[14];
        t[e + 15] = n[15];
        return t;
    }
};

THREE.ro = function(t, e) {
    this.origin = t !== undefined ? t : new THREE.K();
    this.direction = e !== undefined ? e : new THREE.K();
};

THREE.ro.prototype = {
    constructor: THREE.ro,
    set: function(t, e) {
        this.origin.xi(t);
        this.direction.xi(e);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.origin.xi(t.origin);
        this.direction.xi(t.direction);
        return this;
    },
    wc: function(t, e) {
        var n = e || new THREE.K();
        return n.xi(this.direction).Ri(t).add(this.origin);
    },
    ao: function(t) {
        this.direction.xi(t).sub(this.origin).normalize();
        return this;
    },
    so: function() {
        var t = new THREE.K();
        return function e(n) {
            this.origin.xi(this.wc(n, t));
            return this;
        };
    }(),
    hn: function(t, e) {
        var n = e || new THREE.K();
        n.bm(t, this.origin);
        var i = n.Ol(this.direction);
        if (i < 0) {
            return n.xi(this.origin);
        }
        return n.xi(this.direction).Ri(i).add(this.origin);
    },
    tn: function(t) {
        return Math.sqrt(this.to(t));
    },
    to: function() {
        var t = new THREE.K();
        return function e(n) {
            var i = t.bm(n, this.origin).Ol(this.direction);
            if (i < 0) {
                return this.origin.km(n);
            }
            t.xi(this.direction).Ri(i).add(this.origin);
            return t.km(n);
        };
    }(),
    uo: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        var n = new THREE.K();
        return function i(r, a, s, o) {
            t.xi(r).add(a).Ri(.5);
            e.xi(a).sub(r).normalize();
            n.xi(this.origin).sub(t);
            var f = r.jm(a) * .5;
            var u = -this.direction.Ol(e);
            var h = n.Ol(this.direction);
            var c = -n.Ol(e);
            var l = n.Rl();
            var d = Math.abs(1 - u * u);
            var v, p, E, g;
            if (d > 0) {
                v = u * c - h;
                p = u * h - c;
                g = f * d;
                if (v >= 0) {
                    if (p >= -g) {
                        if (p <= g) {
                            var m = 1 / d;
                            v *= m;
                            p *= m;
                            E = v * (v + u * p + 2 * h) + p * (u * v + p + 2 * c) + l;
                        } else {
                            p = f;
                            v = Math.max(0, -(u * p + h));
                            E = -v * v + p * (p + 2 * c) + l;
                        }
                    } else {
                        p = -f;
                        v = Math.max(0, -(u * p + h));
                        E = -v * v + p * (p + 2 * c) + l;
                    }
                } else {
                    if (p <= -g) {
                        v = Math.max(0, -(-u * f + h));
                        p = v > 0 ? -f : Math.min(Math.max(-f, -c), f);
                        E = -v * v + p * (p + 2 * c) + l;
                    } else if (p <= g) {
                        v = 0;
                        p = Math.min(Math.max(-f, -c), f);
                        E = p * (p + 2 * c) + l;
                    } else {
                        v = Math.max(0, -(u * f + h));
                        p = v > 0 ? f : Math.min(Math.max(-f, -c), f);
                        E = -v * v + p * (p + 2 * c) + l;
                    }
                }
            } else {
                p = u > 0 ? -f : f;
                v = Math.max(0, -(u * p + h));
                E = -v * v + p * (p + 2 * c) + l;
            }
            if (s) {
                s.xi(this.direction).Ri(v).add(this.origin);
            }
            if (o) {
                o.xi(e).Ri(p).add(t);
            }
            return E;
        };
    }(),
    vo: function() {
        var t = new THREE.K();
        return function e(n, i) {
            t.bm(n.dn, this.origin);
            var r = t.Ol(this.direction);
            var a = t.Ol(t) - r * r;
            var s = n.N * n.N;
            if (a > s) return null;
            var o = Math.sqrt(s - a);
            var f = r - o;
            var u = r + o;
            if (f < 0 && u < 0) return null;
            if (f < 0) return this.wc(u, i);
            return this.wc(f, i);
        };
    }(),
    Fn: function(t) {
        return this.tn(t.dn) <= t.N;
    },
    wo: function(t) {
        var e = t.Hn.Ol(this.direction);
        if (e === 0) {
            if (t.tn(this.origin) === 0) {
                return 0;
            }
            return null;
        }
        var n = -(this.origin.Ol(t.Hn) + t.Cc) / e;
        return n >= 0 ? n : null;
    },
    xo: function(t, e) {
        var n = this.wo(t);
        if (n === null) {
            return null;
        }
        return this.wc(n, e);
    },
    Gn: function(t) {
        var e = t.tn(this.origin);
        if (e === 0) {
            return true;
        }
        var n = t.Hn.Ol(this.direction);
        if (n * e < 0) {
            return true;
        }
        return false;
    },
    yo: function(t, e) {
        var n, i, r, a, s, o;
        var f = 1 / this.direction.x, u = 1 / this.direction.y, h = 1 / this.direction.z;
        var c = this.origin;
        if (f >= 0) {
            n = (t.min.x - c.x) * f;
            i = (t.max.x - c.x) * f;
        } else {
            n = (t.max.x - c.x) * f;
            i = (t.min.x - c.x) * f;
        }
        if (u >= 0) {
            r = (t.min.y - c.y) * u;
            a = (t.max.y - c.y) * u;
        } else {
            r = (t.max.y - c.y) * u;
            a = (t.min.y - c.y) * u;
        }
        if (n > a || r > i) return null;
        if (r > n || n !== n) n = r;
        if (a < i || i !== i) i = a;
        if (h >= 0) {
            s = (t.min.z - c.z) * h;
            o = (t.max.z - c.z) * h;
        } else {
            s = (t.max.z - c.z) * h;
            o = (t.min.z - c.z) * h;
        }
        if (n > o || s > i) return null;
        if (s > n || n !== n) n = s;
        if (o < i || i !== i) i = o;
        if (i < 0) return null;
        return this.wc(n >= 0 ? n : i, e);
    },
    rn: function() {
        var t = new THREE.K();
        return function e(n) {
            return this.yo(n, t) !== null;
        };
    }(),
    zo: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        var n = new THREE.K();
        var i = new THREE.K();
        return function r(a, s, o, f, u) {
            e.bm(s, a);
            n.bm(o, a);
            i.Pl(e, n);
            var h = this.direction.Ol(i);
            var c;
            if (h > 0) {
                if (f) return null;
                c = 1;
            } else if (h < 0) {
                c = -1;
                h = -h;
            } else {
                return null;
            }
            t.bm(this.origin, a);
            var l = c * this.direction.Ol(n.Pl(t, n));
            if (l < 0) {
                return null;
            }
            var d = c * this.direction.Ol(e.Hm(t));
            if (d < 0) {
                return null;
            }
            if (l + d > h) {
                return null;
            }
            var v = -c * t.Ol(i);
            if (v < 0) {
                return null;
            }
            return this.wc(v / h, u);
        };
    }(),
    xm: function(t) {
        this.direction.add(this.origin).xm(t);
        this.origin.xm(t);
        this.direction.sub(this.origin);
        this.direction.normalize();
        return this;
    },
    Ti: function(t) {
        return t.origin.Ti(this.origin) && t.direction.Ti(this.direction);
    }
};

THREE.Jn = function(t, e) {
    this.dn = t !== undefined ? t : new THREE.K();
    this.N = e !== undefined ? e : 0;
};

THREE.Jn.prototype = {
    constructor: THREE.Jn,
    set: function(t, e) {
        this.dn.xi(t);
        this.N = e;
        return this;
    },
    jn: function() {
        var t = new THREE.vn();
        return function e(n, i) {
            var r = this.dn;
            if (i !== undefined) {
                r.xi(i);
            } else {
                t.jn(n).dn(r);
            }
            var a = 0;
            for (var s = 0, o = n.length; s < o; s++) {
                a = Math.max(a, r.km(n[s]));
            }
            this.N = Math.sqrt(a);
            return this;
        };
    }(),
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.dn.xi(t.dn);
        this.N = t.N;
        return this;
    },
    empty: function() {
        return this.N <= 0;
    },
    pn: function(t) {
        return t.km(this.dn) <= this.N * this.N;
    },
    tn: function(t) {
        return t.jm(this.dn) - this.N;
    },
    Fn: function(t) {
        var e = this.N + t.N;
        return t.dn.km(this.dn) <= e * e;
    },
    rn: function(t) {
        return t.Fn(this);
    },
    Gn: function(t) {
        return Math.abs(this.dn.Ol(t.Hn) - t.Cc) <= this.N;
    },
    sn: function(t, e) {
        var n = this.dn.km(t);
        var i = e || new THREE.K();
        i.xi(t);
        if (n > this.N * this.N) {
            i.sub(this.dn).normalize();
            i.Ri(this.N).add(this.dn);
        }
        return i;
    },
    Ao: function(t) {
        var e = t || new THREE.vn();
        e.set(this.dn, this.dn);
        e.on(this.N);
        return e;
    },
    xm: function(t) {
        this.dn.xm(t);
        this.N = this.N * t.do();
        return this;
    },
    translate: function(t) {
        this.dn.add(t);
        return this;
    },
    Ti: function(t) {
        return t.dn.Ti(this.dn) && t.N === this.N;
    }
};

THREE.Bo = function(t, e, n, i, r, a) {
    this.Co = [ t !== undefined ? t : new THREE.Do(), e !== undefined ? e : new THREE.Do(), n !== undefined ? n : new THREE.Do(), i !== undefined ? i : new THREE.Do(), r !== undefined ? r : new THREE.Do(), a !== undefined ? a : new THREE.Do() ];
};

THREE.Bo.prototype = {
    constructor: THREE.Bo,
    set: function(t, e, n, i, r, a) {
        var s = this.Co;
        s[0].xi(t);
        s[1].xi(e);
        s[2].xi(n);
        s[3].xi(i);
        s[4].xi(r);
        s[5].xi(a);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        var e = this.Co;
        for (var n = 0; n < 6; n++) {
            e[n].xi(t.Co[n]);
        }
        return this;
    },
    Eo: function(t) {
        var e = this.Co;
        var n = t.elements;
        var i = n[0], r = n[1], a = n[2], s = n[3];
        var o = n[4], f = n[5], u = n[6], h = n[7];
        var c = n[8], l = n[9], d = n[10], v = n[11];
        var p = n[12], E = n[13], g = n[14], m = n[15];
        e[0].Fo(s - i, h - o, v - c, m - p).normalize();
        e[1].Fo(s + i, h + o, v + c, m + p).normalize();
        e[2].Fo(s + r, h + f, v + l, m + E).normalize();
        e[3].Fo(s - r, h - f, v - l, m - E).normalize();
        e[4].Fo(s - a, h - u, v - d, m - g).normalize();
        e[5].Fo(s + a, h + u, v + d, m + g).normalize();
        return this;
    },
    Go: function() {
        var t = new THREE.Jn();
        return function e(n) {
            var i = n.j;
            if (i.Ho === null) i.Io();
            t.xi(i.Ho).xm(n.Em);
            return this.Fn(t);
        };
    }(),
    Jo: function() {
        var t = new THREE.Jn();
        return function e(n) {
            t.dn.set(0, 0, 0);
            t.N = .7071067811865476;
            t.xm(n.Em);
            return this.Fn(t);
        };
    }(),
    Fn: function(t) {
        var e = this.Co;
        var n = t.dn;
        var i = -t.N;
        for (var r = 0; r < 6; r++) {
            var a = e[r].tn(n);
            if (a < i) {
                return false;
            }
        }
        return true;
    },
    rn: function() {
        var t = new THREE.K(), e = new THREE.K();
        return function n(i) {
            var r = this.Co;
            for (var a = 0; a < 6; a++) {
                var s = r[a];
                t.x = s.Hn.x > 0 ? i.min.x : i.max.x;
                e.x = s.Hn.x > 0 ? i.max.x : i.min.x;
                t.y = s.Hn.y > 0 ? i.min.y : i.max.y;
                e.y = s.Hn.y > 0 ? i.max.y : i.min.y;
                t.z = s.Hn.z > 0 ? i.min.z : i.max.z;
                e.z = s.Hn.z > 0 ? i.max.z : i.min.z;
                var o = s.tn(t);
                var f = s.tn(e);
                if (o < 0 && f < 0) {
                    return false;
                }
            }
            return true;
        };
    }(),
    pn: function(t) {
        var e = this.Co;
        for (var n = 0; n < 6; n++) {
            if (e[n].tn(t) < 0) {
                return false;
            }
        }
        return true;
    }
};

THREE.Do = function(t, e) {
    this.Hn = t !== undefined ? t : new THREE.K(1, 0, 0);
    this.Cc = e !== undefined ? e : 0;
};

THREE.Do.prototype = {
    constructor: THREE.Do,
    set: function(t, e) {
        this.Hn.xi(t);
        this.Cc = e;
        return this;
    },
    Fo: function(t, e, n, i) {
        this.Hn.set(t, e, n);
        this.Cc = i;
        return this;
    },
    Ko: function(t, e) {
        this.Hn.xi(t);
        this.Cc = -e.Ol(this.Hn);
        return this;
    },
    Lo: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        return function n(i, r, a) {
            var s = t.bm(a, r).Hm(e.bm(i, r)).normalize();
            this.Ko(s, i);
            return this;
        };
    }(),
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.Hn.xi(t.Hn);
        this.Cc = t.Cc;
        return this;
    },
    normalize: function() {
        var t = 1 / this.Hn.length();
        this.Hn.Ri(t);
        this.Cc *= t;
        return this;
    },
    nd: function() {
        this.Cc *= -1;
        this.Hn.nd();
        return this;
    },
    tn: function(t) {
        return this.Hn.Ol(t) + this.Cc;
    },
    Mo: function(t) {
        return this.tn(t.dn) - t.N;
    },
    No: function(t, e) {
        return this.Oo(t, e).sub(t).nd();
    },
    Oo: function(t, e) {
        var n = this.tn(t);
        var i = e || new THREE.K();
        return i.xi(this.Hn).Ri(n);
    },
    Po: function() {
        var t = new THREE.K();
        return function e(n, i) {
            var r = i || new THREE.K();
            var a = n.delta(t);
            var s = this.Hn.Ol(a);
            if (s === 0) {
                if (this.tn(n.start) === 0) {
                    return r.xi(n.start);
                }
                return undefined;
            }
            var o = -(n.start.Ol(this.Hn) + this.Cc) / s;
            if (o < 0 || o > 1) {
                return undefined;
            }
            return r.xi(a).Ri(o).add(n.start);
        };
    }(),
    Qo: function(t) {
        var e = this.tn(t.start);
        var n = this.tn(t.end);
        return e < 0 && n > 0 || n < 0 && e > 0;
    },
    rn: function(t) {
        return t.Gn(this);
    },
    Fn: function(t) {
        return t.Gn(this);
    },
    Ro: function(t) {
        var e = t || new THREE.K();
        return e.xi(this.Hn).Ri(-this.Cc);
    },
    xm: function() {
        var t = new THREE.K();
        var e = new THREE.Kn();
        return function n(i, r) {
            var a = this.Ro(t).xm(i);
            var s = r || e.Vn(i);
            var o = this.Hn.wm(s).normalize();
            this.Cc = -a.Ol(o);
            return this;
        };
    }(),
    translate: function(t) {
        this.Cc = this.Cc - t.Ol(this.Hn);
        return this;
    },
    Ti: function(t) {
        return t.Hn.Ti(this.Hn) && t.Cc === this.Cc;
    }
};

THREE.So = function(t, e, n) {
    this.N = t !== undefined ? t : 1;
    this.Nm = e !== undefined ? e : 0;
    this.Om = n !== undefined ? n : 0;
    return this;
};

THREE.So.prototype = {
    constructor: THREE.So,
    set: function(t, e, n) {
        this.N = t;
        this.Nm = e;
        this.Om = n;
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.N.xi(t.N);
        this.Nm.xi(t.Nm);
        this.Om.xi(t.Om);
        return this;
    },
    To: function() {
        var t = 1e-6;
        this.Nm = Math.max(t, Math.min(Math.PI - t, this.Nm));
        return this;
    },
    _m: function(t) {
        this.N = t.length();
        if (this.N === 0) {
            this.Om = 0;
            this.Nm = 0;
        } else {
            this.Om = Math.atan2(t.x, t.z);
            this.Nm = Math.acos(THREE.Math.ue(t.y / this.N, -1, 1));
        }
        return this;
    }
};

THREE.Math = {
    po: Math.PI / 180,
    Uo: 180 / Math.PI,
    Vo: function() {
        var t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
        var e = new Array(36);
        var n = 0, i;
        return function r() {
            for (var a = 0; a < 36; a++) {
                if (a === 8 || a === 13 || a === 18 || a === 23) {
                    e[a] = "-";
                } else if (a === 14) {
                    e[a] = "4";
                } else {
                    if (n <= 2) n = 33554432 + Math.random() * 16777216 | 0;
                    i = n & 15;
                    n = n >> 4;
                    e[a] = t[a === 19 ? i & 3 | 8 : i];
                }
            }
            return e.join("");
        };
    }(),
    ue: function(t, e, n) {
        return Math.max(e, Math.min(n, t));
    },
    Ci: function(t, e) {
        return (t % e + e) % e;
    },
    Wo: function(t, e, n, i, r) {
        return i + (t - e) * (r - i) / (n - e);
    },
    Xo: function(t, e, n) {
        if (t <= e) return 0;
        if (t >= n) return 1;
        t = (t - e) / (n - e);
        return t * t * (3 - 2 * t);
    },
    Yo: function(t, e, n) {
        if (t <= e) return 0;
        if (t >= n) return 1;
        t = (t - e) / (n - e);
        return t * t * t * (t * (t * 6 - 15) + 10);
    },
    Zo: function() {
        console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead.");
        return Math.random();
    },
    $o: function(t, e) {
        return t + Math.floor(Math.random() * (e - t + 1));
    },
    _o: function(t, e) {
        return t + Math.random() * (e - t);
    },
    ap: function(t) {
        return t * (.5 - Math.random());
    },
    bp: function(t) {
        return t * THREE.Math.po;
    },
    cp: function(t) {
        return t * THREE.Math.Uo;
    },
    dp: function(t) {
        return (t & t - 1) === 0 && t !== 0;
    },
    ep: function(t) {
        return Math.pow(2, Math.round(Math.log(t) / Math.LN2));
    },
    fp: function(t) {
        t--;
        t |= t >> 1;
        t |= t >> 2;
        t |= t >> 4;
        t |= t >> 8;
        t |= t >> 16;
        t++;
        return t;
    }
};

THREE.gp = function(t) {
    this.points = t;
    var e = [], n = {
        x: 0,
        y: 0,
        z: 0
    }, i, r, a, s, o, f, u, h, c;
    this.hp = function(t) {
        this.points = [];
        for (var e = 0; e < t.length; e++) {
            this.points[e] = {
                x: t[e][0],
                y: t[e][1],
                z: t[e][2]
            };
        }
    };
    this.ip = function(t) {
        i = (this.points.length - 1) * t;
        r = Math.floor(i);
        a = i - r;
        e[0] = r === 0 ? r : r - 1;
        e[1] = r;
        e[2] = r > this.points.length - 2 ? this.points.length - 1 : r + 1;
        e[3] = r > this.points.length - 3 ? this.points.length - 1 : r + 2;
        f = this.points[e[0]];
        u = this.points[e[1]];
        h = this.points[e[2]];
        c = this.points[e[3]];
        s = a * a;
        o = a * s;
        n.x = l(f.x, u.x, h.x, c.x, a, s, o);
        n.y = l(f.y, u.y, h.y, c.y, a, s, o);
        n.z = l(f.z, u.z, h.z, c.z, a, s, o);
        return n;
    };
    this.jp = function() {
        var t, e, n = this.points.length, i = [];
        for (t = 0; t < n; t++) {
            e = this.points[t];
            i[t] = [ e.x, e.y, e.z ];
        }
        return i;
    };
    this.kp = function(t) {
        var e, n, i, r, a = 0, s = 0, o = 0, f = new THREE.K(), u = new THREE.K(), h = [], c = 0;
        h[0] = 0;
        if (!t) t = 100;
        i = this.points.length * t;
        f.xi(this.points[0]);
        for (e = 1; e < i; e++) {
            n = e / i;
            r = this.ip(n);
            u.xi(r);
            c += u.jm(f);
            f.xi(r);
            a = (this.points.length - 1) * n;
            s = Math.floor(a);
            if (s !== o) {
                h[s] = c;
                o = s;
            }
        }
        h[h.length] = c;
        return {
            lp: h,
            total: c
        };
    };
    this.mp = function(t) {
        var e, n, i, r, a, s, o, f, u = [], h = new THREE.K(), c = this.kp();
        u.push(h.xi(this.points[0]).clone());
        for (e = 1; e < this.points.length; e++) {
            s = c.lp[e] - c.lp[e - 1];
            o = Math.ceil(t * s / c.total);
            r = (e - 1) / (this.points.length - 1);
            a = e / (this.points.length - 1);
            for (n = 1; n < o - 1; n++) {
                i = r + n * (1 / o) * (a - r);
                f = this.ip(i);
                u.push(h.xi(f).clone());
            }
            u.push(h.xi(this.points[e]).clone());
        }
        this.points = u;
    };
    function l(t, e, n, i, r, a, s) {
        var o = (n - t) * .5, f = (i - e) * .5;
        return (2 * (e - n) + o + f) * s + (-3 * (e - n) - 2 * o - f) * a + o * r + e;
    }
};

THREE.np = function(t, e, n) {
    this.a = t !== undefined ? t : new THREE.K();
    this.b = e !== undefined ? e : new THREE.K();
    this.c = n !== undefined ? n : new THREE.K();
};

THREE.np.Hn = function() {
    var t = new THREE.K();
    return function e(n, i, r, a) {
        var s = a || new THREE.K();
        s.bm(r, i);
        t.bm(n, i);
        s.Hm(t);
        var o = s.Rl();
        if (o > 0) {
            return s.Ri(1 / Math.sqrt(o));
        }
        return s.set(0, 0, 0);
    };
}();

THREE.np.op = function() {
    var t = new THREE.K();
    var e = new THREE.K();
    var n = new THREE.K();
    return function i(r, a, s, o, f) {
        t.bm(o, a);
        e.bm(s, a);
        n.bm(r, a);
        var u = t.Ol(t);
        var h = t.Ol(e);
        var c = t.Ol(n);
        var l = e.Ol(e);
        var d = e.Ol(n);
        var v = u * l - h * h;
        var p = f || new THREE.K();
        if (v === 0) {
            return p.set(-2, -1, -1);
        }
        var E = 1 / v;
        var g = (l * c - h * d) * E;
        var m = (u * d - h * c) * E;
        return p.set(1 - g - m, m, g);
    };
}();

THREE.np.pn = function() {
    var t = new THREE.K();
    return function e(n, i, r, a) {
        var s = THREE.np.op(n, i, r, a, t);
        return s.x >= 0 && s.y >= 0 && s.x + s.y <= 1;
    };
}();

THREE.np.prototype = {
    constructor: THREE.np,
    set: function(t, e, n) {
        this.a.xi(t);
        this.b.xi(e);
        this.c.xi(n);
        return this;
    },
    pp: function(t, e, n, i) {
        this.a.xi(t[e]);
        this.b.xi(t[n]);
        this.c.xi(t[i]);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.a.xi(t.a);
        this.b.xi(t.b);
        this.c.xi(t.c);
        return this;
    },
    qp: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        return function n() {
            t.bm(this.c, this.b);
            e.bm(this.a, this.b);
            return t.Hm(e).length() * .5;
        };
    }(),
    rp: function(t) {
        var e = t || new THREE.K();
        return e._l(this.a, this.b).add(this.c).Ri(1 / 3);
    },
    Hn: function(t) {
        return THREE.np.Hn(this.a, this.b, this.c, t);
    },
    sp: function(t) {
        var e = t || new THREE.Do();
        return e.Lo(this.a, this.b, this.c);
    },
    op: function(t, e) {
        return THREE.np.op(t, this.a, this.b, this.c, e);
    },
    pn: function(t) {
        return THREE.np.pn(t, this.a, this.b, this.c);
    },
    hn: function() {
        var t, e, n, i;
        return function r(a, s) {
            if (t === undefined) {
                t = new THREE.Do();
                e = [ new THREE.cn(), new THREE.cn(), new THREE.cn() ];
                n = new THREE.K();
                i = new THREE.K();
            }
            var o = s || new THREE.K();
            var f = Infinity;
            t.Lo(this.a, this.b, this.c);
            t.No(a, n);
            if (this.pn(n) === true) {
                o.xi(n);
            } else {
                e[0].set(this.a, this.b);
                e[1].set(this.b, this.c);
                e[2].set(this.c, this.a);
                for (var u = 0; u < e.length; u++) {
                    e[u].hn(n, true, i);
                    var h = n.km(i);
                    if (h < f) {
                        f = h;
                        o.xi(i);
                    }
                }
            }
            return o;
        };
    }(),
    Ti: function(t) {
        return t.a.Ti(this.a) && t.b.Ti(this.b) && t.c.Ti(this.c);
    }
};

THREE.tp = function(t, e, n, i) {
    this.up = t;
    this.vp = 0;
    this.wp = i !== undefined ? i : new e.constructor(n);
    this.xp = e;
    this.yp = n;
};

THREE.tp.prototype = {
    constructor: THREE.tp,
    evaluate: function(t) {
        var e = this.up, n = this.vp, i = e[n], r = e[n - 1];
        t: {
            e: {
                var a;
                n: {
                    i: if (!(t < i)) {
                        for (var s = n + 2; ;) {
                            if (i === undefined) {
                                if (t < r) break i;
                                n = e.length;
                                this.vp = n;
                                return this.zp(n - 1, t, r);
                            }
                            if (n === s) break;
                            r = i;
                            i = e[++n];
                            if (t < i) {
                                break e;
                            }
                        }
                        a = e.length;
                        break n;
                    }
                    if (!(t >= r)) {
                        var o = e[1];
                        if (t < o) {
                            n = 2;
                            r = o;
                        }
                        for (var s = n - 2; ;) {
                            if (r === undefined) {
                                this.vp = 0;
                                return this.Ap(0, t, i);
                            }
                            if (n === s) break;
                            i = r;
                            r = e[--n - 1];
                            if (t >= r) {
                                break e;
                            }
                        }
                        a = n;
                        n = 0;
                        break n;
                    }
                    break t;
                }
                while (n < a) {
                    var f = n + a >>> 1;
                    if (t < e[f]) {
                        a = f;
                    } else {
                        n = f + 1;
                    }
                }
                i = e[n];
                r = e[n - 1];
                if (r === undefined) {
                    this.vp = 0;
                    return this.Ap(0, t, i);
                }
                if (i === undefined) {
                    n = e.length;
                    this.vp = n;
                    return this.zp(n - 1, r, t);
                }
            }
            this.vp = n;
            this.Bp(n, r, i);
        }
        return this.Cp(n, r, t, i);
    },
    Dp: null,
    Ep: {},
    Fp: function() {
        return this.Dp || this.Ep;
    },
    Gp: function(t) {
        var e = this.wp, n = this.xp, i = this.yp, r = t * i;
        for (var a = 0; a !== i; ++a) {
            e[a] = n[r + a];
        }
        return e;
    },
    Cp: function(t, e, n, i) {
        throw new Error("call to abstract method");
    },
    Bp: function(t, e, n) {}
};

Object.assign(THREE.tp.prototype, {
    Ap: THREE.tp.prototype.Gp,
    zp: THREE.tp.prototype.Gp
});

THREE.Hp = function(t, e, n, i) {
    THREE.tp.call(this, t, e, n, i);
    this.Ip = -0;
    this.Jp = -0;
    this.Kp = -0;
    this.Lp = -0;
};

THREE.Hp.prototype = Object.assign(Object.create(THREE.tp.prototype), {
    constructor: THREE.Hp,
    Ep: {
        Mp: THREE.fi,
        Np: THREE.fi
    },
    Bp: function(t, e, n) {
        var i = this.up, r = t - 2, a = t + 1, s = i[r], o = i[a];
        if (s === undefined) {
            switch (this.Fp().Mp) {
              case THREE.gi:
                r = t;
                s = 2 * e - n;
                break;

              case THREE.hi:
                r = i.length - 2;
                s = e + i[r] - i[r + 1];
                break;

              default:
                r = t;
                s = n;
            }
        }
        if (o === undefined) {
            switch (this.Fp().Np) {
              case THREE.gi:
                a = t;
                o = 2 * n - e;
                break;

              case THREE.hi:
                a = 1;
                o = n + i[1] - i[0];
                break;

              default:
                a = t - 1;
                o = e;
            }
        }
        var f = (n - e) * .5, u = this.yp;
        this.Ip = f / (e - s);
        this.Kp = f / (o - n);
        this.Jp = r * u;
        this.Lp = a * u;
    },
    Cp: function(t, e, n, i) {
        var r = this.wp, a = this.xp, s = this.yp, o = t * s, f = o - s, u = this.Jp, h = this.Lp, c = this.Ip, l = this.Kp, d = (n - e) / (i - e), v = d * d, p = v * d;
        var E = -c * p + 2 * c * v - c * d;
        var g = (1 + c) * p + (-1.5 - 2 * c) * v + (-.5 + c) * d + 1;
        var m = (-1 - l) * p + (1.5 + l) * v + .5 * d;
        var T = l * p - l * v;
        for (var y = 0; y !== s; ++y) {
            r[y] = E * a[u + y] + g * a[f + y] + m * a[o + y] + T * a[h + y];
        }
        return r;
    }
});

THREE.Op = function(t, e, n, i) {
    THREE.tp.call(this, t, e, n, i);
};

THREE.Op.prototype = Object.assign(Object.create(THREE.tp.prototype), {
    constructor: THREE.Op,
    Cp: function(t, e, n, i) {
        return this.Gp(t - 1);
    }
});

THREE.Pp = function(t, e, n, i) {
    THREE.tp.call(this, t, e, n, i);
};

THREE.Pp.prototype = Object.assign(Object.create(THREE.tp.prototype), {
    constructor: THREE.Pp,
    Cp: function(t, e, n, i) {
        var r = this.wp, a = this.xp, s = this.yp, o = t * s, f = o - s, u = (n - e) / (i - e), h = 1 - u;
        for (var c = 0; c !== s; ++c) {
            r[c] = a[f + c] * h + a[o + c] * u;
        }
        return r;
    }
});

THREE.Qp = function(t, e, n, i) {
    THREE.tp.call(this, t, e, n, i);
};

THREE.Qp.prototype = Object.assign(Object.create(THREE.tp.prototype), {
    constructor: THREE.Qp,
    Cp: function(t, e, n, i) {
        var r = this.wp, a = this.xp, s = this.yp, o = t * s, f = (n - e) / (i - e);
        for (var u = o + s; o !== u; o += 4) {
            THREE.Dl.Wl(r, 0, a, o - s, a, o, f);
        }
        return r;
    }
});

THREE.Rp = function(t) {
    this.Sp = t !== undefined ? t : true;
    this.startTime = 0;
    this.Tp = 0;
    this.elapsedTime = 0;
    this.Up = false;
};

THREE.Rp.prototype = {
    constructor: THREE.Rp,
    start: function() {
        this.startTime = (performance || Date).now();
        this.Tp = this.startTime;
        this.Up = true;
    },
    stop: function() {
        this.Vp();
        this.Up = false;
    },
    Vp: function() {
        this.Wp();
        return this.elapsedTime;
    },
    Wp: function() {
        var t = 0;
        if (this.Sp && !this.Up) {
            this.start();
        }
        if (this.Up) {
            var e = (performance || Date).now();
            t = (e - this.Tp) / 1e3;
            this.Tp = e;
            this.elapsedTime += t;
        }
        return t;
    }
};

THREE.Xp = function() {};

Object.assign(THREE.Xp.prototype, {
    addEventListener: function(t, e) {
        if (this.Yp === undefined) this.Yp = {};
        var n = this.Yp;
        if (n[t] === undefined) {
            n[t] = [];
        }
        if (n[t].indexOf(e) === -1) {
            n[t].push(e);
        }
    },
    Zp: function(t, e) {
        if (this.Yp === undefined) return false;
        var n = this.Yp;
        if (n[t] !== undefined && n[t].indexOf(e) !== -1) {
            return true;
        }
        return false;
    },
    removeEventListener: function(t, e) {
        if (this.Yp === undefined) return;
        var n = this.Yp;
        var i = n[t];
        if (i !== undefined) {
            var r = i.indexOf(e);
            if (r !== -1) {
                i.splice(r, 1);
            }
        }
    },
    dispatchEvent: function(t) {
        if (this.Yp === undefined) return;
        var e = this.Yp;
        var n = e[t.type];
        if (n !== undefined) {
            t.target = this;
            var i = [], r = 0;
            var a = n.length;
            for (r = 0; r < a; r++) {
                i[r] = n[r];
            }
            for (r = 0; r < a; r++) {
                i[r].call(this, t);
            }
        }
    }
});

THREE.$p = function() {
    this.mask = 1;
};

THREE.$p.prototype = {
    constructor: THREE.$p,
    set: function(t) {
        this.mask = 1 << t;
    },
    enable: function(t) {
        this.mask |= 1 << t;
    },
    toggle: function(t) {
        this.mask ^= 1 << t;
    },
    disable: function(t) {
        this.mask &= ~(1 << t);
    },
    test: function(t) {
        return (this.mask & t.mask) !== 0;
    }
};

(function(THREE) {
    THREE._p = function(t, e, n, i) {
        this.aq = new THREE.ro(t, e);
        this.near = n || 0;
        this.bq = i || Infinity;
        this.cq = {
            dq: {},
            eq: {},
            fq: {},
            gq: {
                threshold: 1
            },
            hq: {}
        };
        Object.defineProperties(this.cq, {
            iq: {
                get: function() {
                    console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");
                    return this.gq;
                }
            }
        });
    };
    function t(t, e) {
        return t.fn - e.fn;
    }
    function e(t, n, i, r) {
        if (t.visible === false) return;
        t.jq(n, i);
        if (r === true) {
            var a = t.children;
            for (var s = 0, o = a.length; s < o; s++) {
                e(a[s], n, i, true);
            }
        }
    }
    THREE._p.prototype = {
        constructor: THREE._p,
        kq: 1,
        set: function(t, e) {
            this.aq.set(t, e);
        },
        lq: function(t, e) {
            if (e instanceof THREE.mq) {
                this.aq.origin.Pm(e.Em);
                this.aq.direction.set(t.x, t.y, .5).Fm(e).sub(this.aq.origin).normalize();
            } else if (e instanceof THREE.nq) {
                this.aq.origin.set(t.x, t.y, (e.near + e.bq) / (e.near - e.bq)).Fm(e);
                this.aq.direction.set(0, 0, -1).Gm(e.Em);
            } else {
                console.error("THREE.Raycaster: Unsupported camera type.");
            }
        },
        oq: function(n, i) {
            var r = [];
            e(n, this, r, i);
            r.sort(t);
            return r;
        },
        pq: function(n, i) {
            var r = [];
            if (Array.isArray(n) === false) {
                console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");
                return r;
            }
            for (var a = 0, s = n.length; a < s; a++) {
                e(n[a], this, r, i);
            }
            r.sort(t);
            return r;
        }
    };
})(THREE);

THREE.qq = function() {
    Object.defineProperty(this, "id", {
        value: THREE.rq++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.type = "Object3D";
    this.parent = null;
    this.children = [];
    this.tq = THREE.qq.uq.clone();
    var t = new THREE.K();
    var e = new THREE.Kl();
    var n = new THREE.Dl();
    var i = new THREE.K(1, 1, 1);
    function r() {
        n.Jl(e, false);
    }
    function a() {
        e.Zm(n, undefined, false);
    }
    e.Vl(r);
    n.Vl(a);
    Object.defineProperties(this, {
        position: {
            vq: true,
            value: t
        },
        rotation: {
            vq: true,
            value: e
        },
        wq: {
            vq: true,
            value: n
        },
        scale: {
            vq: true,
            value: i
        },
        xq: {
            value: new THREE.Am()
        },
        yq: {
            value: new THREE.Kn()
        }
    });
    this.matrix = new THREE.Am();
    this.Em = new THREE.Am();
    this.zq = THREE.qq.Aq;
    this.Bq = false;
    this.Cq = new THREE.$p();
    this.visible = true;
    this.Dq = false;
    this.Eq = false;
    this.Fq = true;
    this.Gq = 0;
    this.Hq = {};
};

THREE.qq.uq = new THREE.K(0, 1, 0);

THREE.qq.Aq = true;

Object.assign(THREE.qq.prototype, THREE.Xp.prototype, {
    Iq: function(t) {
        this.matrix.Bm(t, this.matrix);
        this.matrix.mo(this.position, this.wq, this.scale);
    },
    Jq: function(t, e) {
        this.wq.Ll(t, e);
    },
    Kq: function(t) {
        this.wq.Jl(t, true);
    },
    Lq: function(t) {
        this.wq.Ml(t);
    },
    Mq: function(t) {
        this.wq.xi(t);
    },
    Nq: function() {
        var t = new THREE.Dl();
        return function e(n, i) {
            t.Ll(n, i);
            this.wq.multiply(t);
            return this;
        };
    }(),
    Oq: function() {
        var t = new THREE.K(1, 0, 0);
        return function e(n) {
            return this.Nq(t, n);
        };
    }(),
    Pq: function() {
        var t = new THREE.K(0, 1, 0);
        return function e(n) {
            return this.Nq(t, n);
        };
    }(),
    Qq: function() {
        var t = new THREE.K(0, 0, 1);
        return function e(n) {
            return this.Nq(t, n);
        };
    }(),
    Rq: function() {
        var t = new THREE.K();
        return function e(n, i) {
            t.xi(n).um(this.wq);
            this.position.add(t.Ri(i));
            return this;
        };
    }(),
    Sq: function() {
        var t = new THREE.K(1, 0, 0);
        return function e(n) {
            return this.Rq(t, n);
        };
    }(),
    Tq: function() {
        var t = new THREE.K(0, 1, 0);
        return function e(n) {
            return this.Rq(t, n);
        };
    }(),
    Uq: function() {
        var t = new THREE.K(0, 0, 1);
        return function e(n) {
            return this.Rq(t, n);
        };
    }(),
    Vq: function(t) {
        return t.xm(this.Em);
    },
    Wq: function() {
        var t = new THREE.Am();
        return function e(n) {
            return n.xm(t.Dm(this.Em));
        };
    }(),
    ao: function() {
        var t = new THREE.Am();
        return function e(n) {
            t.ao(n, this.position, this.tq);
            this.wq.Ml(t);
        };
    }(),
    add: function(t) {
        if (arguments.length > 1) {
            for (var e = 0; e < arguments.length; e++) {
                this.add(arguments[e]);
            }
            return this;
        }
        if (t === this) {
            console.error("THREE.Object3D.add: object can't be added as a child of itself.", t);
            return this;
        }
        if (t instanceof THREE.qq) {
            if (t.parent !== null) {
                t.parent.remove(t);
            }
            t.parent = this;
            t.dispatchEvent({
                type: "added"
            });
            this.children.push(t);
        } else {
            console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t);
        }
        return this;
    },
    remove: function(t) {
        if (arguments.length > 1) {
            for (var e = 0; e < arguments.length; e++) {
                this.remove(arguments[e]);
            }
        }
        var n = this.children.indexOf(t);
        if (n !== -1) {
            t.parent = null;
            t.dispatchEvent({
                type: "removed"
            });
            this.children.splice(n, 1);
        }
    },
    Xq: function(t) {
        return this.Yq("id", t);
    },
    Zq: function(t) {
        return this.Yq("name", t);
    },
    Yq: function(t, e) {
        if (this[t] === e) return this;
        for (var n = 0, i = this.children.length; n < i; n++) {
            var r = this.children[n];
            var a = r.Yq(t, e);
            if (a !== undefined) {
                return a;
            }
        }
        return undefined;
    },
    $q: function(t) {
        var e = t || new THREE.K();
        this.yn(true);
        return e.Pm(this.Em);
    },
    _q: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        return function n(i) {
            var r = i || new THREE.Dl();
            this.yn(true);
            this.Em.mo(t, r, e);
            return r;
        };
    }(),
    ar: function() {
        var t = new THREE.Dl();
        return function e(n) {
            var i = n || new THREE.Kl();
            this._q(t);
            return i.Zm(t, this.rotation.order, false);
        };
    }(),
    br: function() {
        var t = new THREE.K();
        var e = new THREE.Dl();
        return function n(i) {
            var r = i || new THREE.K();
            this.yn(true);
            this.Em.mo(t, e, r);
            return r;
        };
    }(),
    cr: function() {
        var t = new THREE.Dl();
        return function e(n) {
            var i = n || new THREE.K();
            this._q(t);
            return i.set(0, 0, 1).um(t);
        };
    }(),
    jq: function() {},
    zn: function(t) {
        t(this);
        var e = this.children;
        for (var n = 0, i = e.length; n < i; n++) {
            e[n].zn(t);
        }
    },
    dr: function(t) {
        if (this.visible === false) return;
        t(this);
        var e = this.children;
        for (var n = 0, i = e.length; n < i; n++) {
            e[n].dr(t);
        }
    },
    er: function(t) {
        var e = this.parent;
        if (e !== null) {
            t(e);
            e.er(t);
        }
    },
    gr: function() {
        this.matrix.lo(this.position, this.wq, this.scale);
        this.Bq = true;
    },
    yn: function(t) {
        if (this.zq === true) this.gr();
        if (this.Bq === true || t === true) {
            if (this.parent === null) {
                this.Em.xi(this.matrix);
            } else {
                this.Em.Bm(this.parent.Em, this.matrix);
            }
            this.Bq = false;
            t = true;
        }
        for (var e = 0, n = this.children.length; e < n; e++) {
            this.children[e].yn(t);
        }
    },
    toJSON: function(t) {
        var e = t === undefined || t === "";
        var n = {};
        if (e) {
            t = {
                hr: {},
                ir: {},
                jr: {},
                images: {}
            };
            n.kr = {
                version: 4.4,
                type: "Object",
                lr: "Object3D.toJSON"
            };
        }
        var i = {};
        i.sq = this.sq;
        i.type = this.type;
        if (this.name !== "") i.name = this.name;
        if (JSON.stringify(this.Hq) !== "{}") i.Hq = this.Hq;
        if (this.Dq === true) i.Dq = true;
        if (this.Eq === true) i.Eq = true;
        if (this.visible === false) i.visible = false;
        i.matrix = this.matrix.toArray();
        if (this.j !== undefined) {
            if (t.hr[this.j.sq] === undefined) {
                t.hr[this.j.sq] = this.j.toJSON(t);
            }
            i.j = this.j.sq;
        }
        if (this.k !== undefined) {
            if (t.ir[this.k.sq] === undefined) {
                t.ir[this.k.sq] = this.k.toJSON(t);
            }
            i.k = this.k.sq;
        }
        if (this.children.length > 0) {
            i.children = [];
            for (var r = 0; r < this.children.length; r++) {
                i.children.push(this.children[r].toJSON(t).object);
            }
        }
        if (e) {
            var a = u(t.hr);
            var s = u(t.ir);
            var o = u(t.jr);
            var f = u(t.images);
            if (a.length > 0) n.hr = a;
            if (s.length > 0) n.ir = s;
            if (o.length > 0) n.jr = o;
            if (f.length > 0) n.images = f;
        }
        n.object = i;
        return n;
        function u(t) {
            var e = [];
            for (var n in t) {
                var i = t[n];
                delete i.kr;
                e.push(i);
            }
            return e;
        }
    },
    clone: function(t) {
        return new this.constructor().xi(this, t);
    },
    xi: function(t, e) {
        if (e === undefined) e = true;
        this.name = t.name;
        this.tq.xi(t.tq);
        this.position.xi(t.position);
        this.wq.xi(t.wq);
        this.scale.xi(t.scale);
        this.matrix.xi(t.matrix);
        this.Em.xi(t.Em);
        this.zq = t.zq;
        this.Bq = t.Bq;
        this.visible = t.visible;
        this.Dq = t.Dq;
        this.Eq = t.Eq;
        this.Fq = t.Fq;
        this.Gq = t.Gq;
        this.Hq = JSON.parse(JSON.stringify(t.Hq));
        if (e === true) {
            for (var n = 0; n < t.children.length; n++) {
                var i = t.children[n];
                this.add(i.clone());
            }
        }
        return this;
    }
});

THREE.rq = 0;

THREE.mr = function(t, e, n, i, r, a) {
    this.a = t;
    this.b = e;
    this.c = n;
    this.Hn = i instanceof THREE.K ? i : new THREE.K();
    this.nr = Array.isArray(i) ? i : [];
    this.color = r instanceof THREE.T ? r : new THREE.T();
    this.or = Array.isArray(r) ? r : [];
    this.pr = a !== undefined ? a : 0;
};

THREE.mr.prototype = {
    constructor: THREE.mr,
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.a = t.a;
        this.b = t.b;
        this.c = t.c;
        this.Hn.xi(t.Hn);
        this.color.xi(t.color);
        this.pr = t.pr;
        for (var e = 0, n = t.nr.length; e < n; e++) {
            this.nr[e] = t.nr[e].clone();
        }
        for (var e = 0, n = t.or.length; e < n; e++) {
            this.or[e] = t.or[e].clone();
        }
        return this;
    }
};

THREE.qr = function(t, e, n) {
    this.sq = THREE.Math.Vo();
    this.dc = t;
    this.pm = e;
    this.rr = false;
    this.sr = {
        offset: 0,
        count: -1
    };
    this.version = 0;
    this.tr = n === true;
};

THREE.qr.prototype = {
    constructor: THREE.qr,
    get count() {
        return this.dc.length / this.pm;
    },
    set ur(t) {
        if (t === true) this.version++;
    },
    vr: function(t) {
        this.rr = t;
        return this;
    },
    xi: function(t) {
        this.dc = new t.dc.constructor(t.dc);
        this.pm = t.pm;
        this.rr = t.rr;
        return this;
    },
    wr: function(t, e, n) {
        t *= this.pm;
        n *= e.pm;
        for (var i = 0, r = this.pm; i < r; i++) {
            this.dc[t + i] = e.dc[n + i];
        }
        return this;
    },
    xr: function(t) {
        this.dc.set(t);
        return this;
    },
    yr: function(t) {
        var e = this.dc, n = 0;
        for (var i = 0, r = t.length; i < r; i++) {
            var a = t[i];
            if (a === undefined) {
                console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i);
                a = new THREE.T();
            }
            e[n++] = a.r;
            e[n++] = a.wi;
            e[n++] = a.b;
        }
        return this;
    },
    zr: function(t) {
        var e = this.dc, n = 0;
        for (var i = 0, r = t.length; i < r; i++) {
            var a = t[i];
            e[n++] = a.a;
            e[n++] = a.b;
            e[n++] = a.c;
        }
        return this;
    },
    Ar: function(t) {
        var e = this.dc, n = 0;
        for (var i = 0, r = t.length; i < r; i++) {
            var a = t[i];
            if (a === undefined) {
                console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i);
                a = new THREE.fa();
            }
            e[n++] = a.x;
            e[n++] = a.y;
        }
        return this;
    },
    Br: function(t) {
        var e = this.dc, n = 0;
        for (var i = 0, r = t.length; i < r; i++) {
            var a = t[i];
            if (a === undefined) {
                console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i);
                a = new THREE.K();
            }
            e[n++] = a.x;
            e[n++] = a.y;
            e[n++] = a.z;
        }
        return this;
    },
    Cr: function(t) {
        var e = this.dc, n = 0;
        for (var i = 0, r = t.length; i < r; i++) {
            var a = t[i];
            if (a === undefined) {
                console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i);
                a = new THREE.Sm();
            }
            e[n++] = a.x;
            e[n++] = a.y;
            e[n++] = a.z;
            e[n++] = a.w;
        }
        return this;
    },
    set: function(t, e) {
        if (e === undefined) e = 0;
        this.dc.set(t, e);
        return this;
    },
    On: function(t) {
        return this.dc[t * this.pm];
    },
    Xl: function(t, e) {
        this.dc[t * this.pm] = e;
        return this;
    },
    Pn: function(t) {
        return this.dc[t * this.pm + 1];
    },
    Yl: function(t, e) {
        this.dc[t * this.pm + 1] = e;
        return this;
    },
    Qn: function(t) {
        return this.dc[t * this.pm + 2];
    },
    rm: function(t, e) {
        this.dc[t * this.pm + 2] = e;
        return this;
    },
    Dr: function(t) {
        return this.dc[t * this.pm + 3];
    },
    Tm: function(t, e) {
        this.dc[t * this.pm + 3] = e;
        return this;
    },
    Er: function(t, e, n) {
        t *= this.pm;
        this.dc[t + 0] = e;
        this.dc[t + 1] = n;
        return this;
    },
    Rn: function(t, e, n, i) {
        t *= this.pm;
        this.dc[t + 0] = e;
        this.dc[t + 1] = n;
        this.dc[t + 2] = i;
        return this;
    },
    Fr: function(t, e, n, i, r) {
        t *= this.pm;
        this.dc[t + 0] = e;
        this.dc[t + 1] = n;
        this.dc[t + 2] = i;
        this.dc[t + 3] = r;
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    }
};

THREE.Gr = function(t, e) {
    return new THREE.qr(new Int8Array(t), e);
};

THREE.Hr = function(t, e) {
    return new THREE.qr(new Uint8Array(t), e);
};

THREE.Ir = function(t, e) {
    return new THREE.qr(new Uint8ClampedArray(t), e);
};

THREE.Jr = function(t, e) {
    return new THREE.qr(new Int16Array(t), e);
};

THREE.Kr = function(t, e) {
    return new THREE.qr(new Uint16Array(t), e);
};

THREE.Lr = function(t, e) {
    return new THREE.qr(new Int32Array(t), e);
};

THREE.Mr = function(t, e) {
    return new THREE.qr(new Uint32Array(t), e);
};

THREE.Nr = function(t, e) {
    return new THREE.qr(new Float32Array(t), e);
};

THREE.Or = function(t, e) {
    return new THREE.qr(new Float64Array(t), e);
};

THREE.Pr = function(t, e) {
    console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");
    return new THREE.qr(t, e).vr(true);
};

THREE.Qr = function(t, e, n) {
    THREE.qr.call(this, t, e);
    this.Rr = n || 1;
};

THREE.Qr.prototype = Object.create(THREE.qr.prototype);

THREE.Qr.prototype.constructor = THREE.Qr;

THREE.Qr.prototype.xi = function(t) {
    THREE.qr.prototype.xi.call(this, t);
    this.Rr = t.Rr;
    return this;
};

THREE.Sr = function(t, e) {
    this.sq = THREE.Math.Vo();
    this.dc = t;
    this.En = e;
    this.rr = false;
    this.sr = {
        offset: 0,
        count: -1
    };
    this.version = 0;
};

THREE.Sr.prototype = {
    constructor: THREE.Sr,
    get length() {
        return this.dc.length;
    },
    get count() {
        return this.dc.length / this.En;
    },
    set ur(t) {
        if (t === true) this.version++;
    },
    vr: function(t) {
        this.rr = t;
        return this;
    },
    xi: function(t) {
        this.dc = new t.dc.constructor(t.dc);
        this.En = t.En;
        this.rr = t.rr;
        return this;
    },
    wr: function(t, e, n) {
        t *= this.En;
        n *= e.En;
        for (var i = 0, r = this.En; i < r; i++) {
            this.dc[t + i] = e.dc[n + i];
        }
        return this;
    },
    set: function(t, e) {
        if (e === undefined) e = 0;
        this.dc.set(t, e);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    }
};

THREE.Tr = function(t, e, n) {
    THREE.Sr.call(this, t, e);
    this.Rr = n || 1;
};

THREE.Tr.prototype = Object.create(THREE.Sr.prototype);

THREE.Tr.prototype.constructor = THREE.Tr;

THREE.Tr.prototype.xi = function(t) {
    THREE.Sr.prototype.xi.call(this, t);
    this.Rr = t.Rr;
    return this;
};

THREE.Dn = function(t, e, n, i) {
    this.sq = THREE.Math.Vo();
    this.data = t;
    this.pm = e;
    this.offset = n;
    this.tr = i === true;
};

THREE.Dn.prototype = {
    constructor: THREE.Dn,
    get length() {
        console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");
        return this.dc.length;
    },
    get count() {
        return this.data.count;
    },
    get dc() {
        return this.data.dc;
    },
    Xl: function(t, e) {
        this.data.dc[t * this.data.En + this.offset] = e;
        return this;
    },
    Yl: function(t, e) {
        this.data.dc[t * this.data.En + this.offset + 1] = e;
        return this;
    },
    rm: function(t, e) {
        this.data.dc[t * this.data.En + this.offset + 2] = e;
        return this;
    },
    Tm: function(t, e) {
        this.data.dc[t * this.data.En + this.offset + 3] = e;
        return this;
    },
    On: function(t) {
        return this.data.dc[t * this.data.En + this.offset];
    },
    Pn: function(t) {
        return this.data.dc[t * this.data.En + this.offset + 1];
    },
    Qn: function(t) {
        return this.data.dc[t * this.data.En + this.offset + 2];
    },
    Dr: function(t) {
        return this.data.dc[t * this.data.En + this.offset + 3];
    },
    Er: function(t, e, n) {
        t = t * this.data.En + this.offset;
        this.data.dc[t + 0] = e;
        this.data.dc[t + 1] = n;
        return this;
    },
    Rn: function(t, e, n, i) {
        t = t * this.data.En + this.offset;
        this.data.dc[t + 0] = e;
        this.data.dc[t + 1] = n;
        this.data.dc[t + 2] = i;
        return this;
    },
    Fr: function(t, e, n, i, r) {
        t = t * this.data.En + this.offset;
        this.data.dc[t + 0] = e;
        this.data.dc[t + 1] = n;
        this.data.dc[t + 2] = i;
        this.data.dc[t + 3] = r;
        return this;
    }
};

THREE.An = function() {
    Object.defineProperty(this, "id", {
        value: THREE.Ur++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.type = "Geometry";
    this.Bn = [];
    this.Vr = [];
    this.Wr = [];
    this.Xr = [ [] ];
    this.Yr = [];
    this.Zr = [];
    this.$r = [];
    this._r = [];
    this.as = [];
    this.bs = null;
    this.Ho = null;
    this.cs = false;
    this.ds = false;
    this.es = false;
    this.fs = false;
    this.gs = false;
    this.hs = false;
    this.js = false;
};

Object.assign(THREE.An.prototype, THREE.Xp.prototype, {
    Iq: function(t) {
        var e = new THREE.Kn().Vn(t);
        for (var n = 0, i = this.Bn.length; n < i; n++) {
            var r = this.Bn[n];
            r.xm(t);
        }
        for (var n = 0, i = this.Wr.length; n < i; n++) {
            var a = this.Wr[n];
            a.Hn.wm(e).normalize();
            for (var s = 0, o = a.nr.length; s < o; s++) {
                a.nr[s].wm(e).normalize();
            }
        }
        if (this.bs !== null) {
            this.ks();
        }
        if (this.Ho !== null) {
            this.Io();
        }
        this.ds = true;
        this.fs = true;
        return this;
    },
    Oq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.fo(n);
            this.Iq(t);
            return this;
        };
    }(),
    Pq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.ho(n);
            this.Iq(t);
            return this;
        };
    }(),
    Qq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.io(n);
            this.Iq(t);
            return this;
        };
    }(),
    translate: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.Am();
            t.eo(n, i, r);
            this.Iq(t);
            return this;
        };
    }(),
    scale: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.Am();
            t.ko(n, i, r);
            this.Iq(t);
            return this;
        };
    }(),
    ao: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.qq();
            t.ao(n);
            t.gr();
            this.Iq(t.matrix);
        };
    }(),
    ls: function(t) {
        var e = this;
        var n = t.index !== null ? t.index.dc : undefined;
        var i = t.attributes;
        var r = i.position.dc;
        var a = i.Hn !== undefined ? i.Hn.dc : undefined;
        var s = i.color !== undefined ? i.color.dc : undefined;
        var o = i.ms !== undefined ? i.ms.dc : undefined;
        var f = i.ns !== undefined ? i.ns.dc : undefined;
        if (f !== undefined) this.Xr[1] = [];
        var u = [];
        var h = [];
        var c = [];
        for (var l = 0, d = 0; l < r.length; l += 3, d += 2) {
            e.Bn.push(new THREE.K(r[l], r[l + 1], r[l + 2]));
            if (a !== undefined) {
                u.push(new THREE.K(a[l], a[l + 1], a[l + 2]));
            }
            if (s !== undefined) {
                e.Vr.push(new THREE.T(s[l], s[l + 1], s[l + 2]));
            }
            if (o !== undefined) {
                h.push(new THREE.fa(o[d], o[d + 1]));
            }
            if (f !== undefined) {
                c.push(new THREE.fa(f[d], f[d + 1]));
            }
        }
        function v(t, n, i, r) {
            var l = a !== undefined ? [ u[t].clone(), u[n].clone(), u[i].clone() ] : [];
            var d = s !== undefined ? [ e.Vr[t].clone(), e.Vr[n].clone(), e.Vr[i].clone() ] : [];
            var v = new THREE.mr(t, n, i, l, d, r);
            e.Wr.push(v);
            if (o !== undefined) {
                e.Xr[0].push([ h[t].clone(), h[n].clone(), h[i].clone() ]);
            }
            if (f !== undefined) {
                e.Xr[1].push([ c[t].clone(), c[n].clone(), c[i].clone() ]);
            }
        }
        if (n !== undefined) {
            var p = t.os;
            if (p.length > 0) {
                for (var l = 0; l < p.length; l++) {
                    var E = p[l];
                    var g = E.start;
                    var m = E.count;
                    for (var d = g, T = g + m; d < T; d += 3) {
                        v(n[d], n[d + 1], n[d + 2], E.pr);
                    }
                }
            } else {
                for (var l = 0; l < n.length; l += 3) {
                    v(n[l], n[l + 1], n[l + 2]);
                }
            }
        } else {
            for (var l = 0; l < r.length / 3; l += 3) {
                v(l, l + 1, l + 2);
            }
        }
        this.ps();
        if (t.bs !== null) {
            this.bs = t.bs.clone();
        }
        if (t.Ho !== null) {
            this.Ho = t.Ho.clone();
        }
        return this;
    },
    dn: function() {
        this.ks();
        var t = this.bs.dn().nd();
        this.translate(t.x, t.y, t.z);
        return t;
    },
    normalize: function() {
        this.Io();
        var t = this.Ho.dn;
        var e = this.Ho.N;
        var n = e === 0 ? 1 : 1 / e;
        var i = new THREE.Am();
        i.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1);
        this.Iq(i);
        return this;
    },
    ps: function() {
        var t = new THREE.K(), e = new THREE.K();
        for (var n = 0, i = this.Wr.length; n < i; n++) {
            var r = this.Wr[n];
            var a = this.Bn[r.a];
            var s = this.Bn[r.b];
            var o = this.Bn[r.c];
            t.bm(o, s);
            e.bm(a, s);
            t.Hm(e);
            t.normalize();
            r.Hn.xi(t);
        }
    },
    qs: function(t) {
        if (t === undefined) t = true;
        var e, n, i, r, a, s;
        s = new Array(this.Bn.length);
        for (e = 0, n = this.Bn.length; e < n; e++) {
            s[e] = new THREE.K();
        }
        if (t) {
            var o, f, u;
            var h = new THREE.K(), c = new THREE.K();
            for (i = 0, r = this.Wr.length; i < r; i++) {
                a = this.Wr[i];
                o = this.Bn[a.a];
                f = this.Bn[a.b];
                u = this.Bn[a.c];
                h.bm(u, f);
                c.bm(o, f);
                h.Hm(c);
                s[a.a].add(h);
                s[a.b].add(h);
                s[a.c].add(h);
            }
        } else {
            for (i = 0, r = this.Wr.length; i < r; i++) {
                a = this.Wr[i];
                s[a.a].add(a.Hn);
                s[a.b].add(a.Hn);
                s[a.c].add(a.Hn);
            }
        }
        for (e = 0, n = this.Bn.length; e < n; e++) {
            s[e].normalize();
        }
        for (i = 0, r = this.Wr.length; i < r; i++) {
            a = this.Wr[i];
            var l = a.nr;
            if (l.length === 3) {
                l[0].xi(s[a.a]);
                l[1].xi(s[a.b]);
                l[2].xi(s[a.c]);
            } else {
                l[0] = s[a.a].clone();
                l[1] = s[a.b].clone();
                l[2] = s[a.c].clone();
            }
        }
        if (this.Wr.length > 0) {
            this.fs = true;
        }
    },
    rs: function() {
        var t, e, n, i, r;
        for (n = 0, i = this.Wr.length; n < i; n++) {
            r = this.Wr[n];
            if (!r.ss) {
                r.ss = r.Hn.clone();
            } else {
                r.ss.xi(r.Hn);
            }
            if (!r.ts) r.ts = [];
            for (t = 0, e = r.nr.length; t < e; t++) {
                if (!r.ts[t]) {
                    r.ts[t] = r.nr[t].clone();
                } else {
                    r.ts[t].xi(r.nr[t]);
                }
            }
        }
        var a = new THREE.An();
        a.Wr = this.Wr;
        for (t = 0, e = this.Yr.length; t < e; t++) {
            if (!this.Zr[t]) {
                this.Zr[t] = {};
                this.Zr[t].us = [];
                this.Zr[t].nr = [];
                var s = this.Zr[t].us;
                var o = this.Zr[t].nr;
                var f, u;
                for (n = 0, i = this.Wr.length; n < i; n++) {
                    f = new THREE.K();
                    u = {
                        a: new THREE.K(),
                        b: new THREE.K(),
                        c: new THREE.K()
                    };
                    s.push(f);
                    o.push(u);
                }
            }
            var h = this.Zr[t];
            a.Bn = this.Yr[t].Bn;
            a.ps();
            a.qs();
            var f, u;
            for (n = 0, i = this.Wr.length; n < i; n++) {
                r = this.Wr[n];
                f = h.us[n];
                u = h.nr[n];
                f.xi(r.Hn);
                u.a.xi(r.nr[0]);
                u.b.xi(r.nr[1]);
                u.c.xi(r.nr[2]);
            }
        }
        for (n = 0, i = this.Wr.length; n < i; n++) {
            r = this.Wr[n];
            r.Hn = r.ss;
            r.nr = r.ts;
        }
    },
    vs: function() {
        console.warn("THREE.Geometry: .computeTangents() has been removed.");
    },
    ws: function() {
        var t = 0;
        var e = this.Bn;
        for (var n = 0, i = e.length; n < i; n++) {
            if (n > 0) {
                t += e[n].jm(e[n - 1]);
            }
            this.as[n] = t;
        }
    },
    ks: function() {
        if (this.bs === null) {
            this.bs = new THREE.vn();
        }
        this.bs.jn(this.Bn);
    },
    Io: function() {
        if (this.Ho === null) {
            this.Ho = new THREE.Jn();
        }
        this.Ho.jn(this.Bn);
    },
    jd: function(t, e, n) {
        if (t instanceof THREE.An === false) {
            console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
            return;
        }
        var i, r = this.Bn.length, a = this.Bn, s = t.Bn, o = this.Wr, f = t.Wr, u = this.Xr[0], h = t.Xr[0];
        if (n === undefined) n = 0;
        if (e !== undefined) {
            i = new THREE.Kn().Vn(e);
        }
        for (var c = 0, l = s.length; c < l; c++) {
            var d = s[c];
            var v = d.clone();
            if (e !== undefined) v.xm(e);
            a.push(v);
        }
        for (c = 0, l = f.length; c < l; c++) {
            var p = f[c], E, g, m, T = p.nr, y = p.or;
            E = new THREE.mr(p.a + r, p.b + r, p.c + r);
            E.Hn.xi(p.Hn);
            if (i !== undefined) {
                E.Hn.wm(i).normalize();
            }
            for (var R = 0, w = T.length; R < w; R++) {
                g = T[R].clone();
                if (i !== undefined) {
                    g.wm(i).normalize();
                }
                E.nr.push(g);
            }
            E.color.xi(p.color);
            for (var R = 0, w = y.length; R < w; R++) {
                m = y[R];
                E.or.push(m.clone());
            }
            E.pr = p.pr + n;
            o.push(E);
        }
        for (c = 0, l = h.length; c < l; c++) {
            var x = h[c], b = [];
            if (x === undefined) {
                continue;
            }
            for (var R = 0, w = x.length; R < w; R++) {
                b.push(x[R].clone());
            }
            u.push(b);
        }
    },
    xs: function(t) {
        if (t instanceof THREE.dq === false) {
            console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t);
            return;
        }
        t.zq && t.gr();
        this.jd(t.j, t.matrix);
    },
    ys: function() {
        var t = {};
        var e = [], n = [];
        var i, r;
        var a = 4;
        var s = Math.pow(10, a);
        var o, f, u;
        var h, c, l;
        for (o = 0, f = this.Bn.length; o < f; o++) {
            i = this.Bn[o];
            r = Math.round(i.x * s) + "_" + Math.round(i.y * s) + "_" + Math.round(i.z * s);
            if (t[r] === undefined) {
                t[r] = o;
                e.push(this.Bn[o]);
                n[o] = e.length - 1;
            } else {
                n[o] = n[t[r]];
            }
        }
        var d = [];
        for (o = 0, f = this.Wr.length; o < f; o++) {
            u = this.Wr[o];
            u.a = n[u.a];
            u.b = n[u.b];
            u.c = n[u.c];
            h = [ u.a, u.b, u.c ];
            var v = -1;
            for (var p = 0; p < 3; p++) {
                if (h[p] === h[(p + 1) % 3]) {
                    v = p;
                    d.push(o);
                    break;
                }
            }
        }
        for (o = d.length - 1; o >= 0; o--) {
            var E = d[o];
            this.Wr.splice(E, 1);
            for (c = 0, l = this.Xr.length; c < l; c++) {
                this.Xr[c].splice(E, 1);
            }
        }
        var g = this.Bn.length - e.length;
        this.Bn = e;
        return g;
    },
    zs: function() {
        var t = this.Wr;
        var e = t.length;
        for (var n = 0; n < e; n++) {
            t[n].As = n;
        }
        function i(t, e) {
            return t.pr - e.pr;
        }
        t.sort(i);
        var r = this.Xr[0];
        var a = this.Xr[1];
        var s, o;
        if (r && r.length === e) s = [];
        if (a && a.length === e) o = [];
        for (var n = 0; n < e; n++) {
            var f = t[n].As;
            if (s) s.push(r[f]);
            if (o) o.push(a[f]);
        }
        if (s) this.Xr[0] = s;
        if (o) this.Xr[1] = o;
    },
    toJSON: function() {
        var t = {
            kr: {
                version: 4.4,
                type: "Geometry",
                lr: "Geometry.toJSON"
            }
        };
        t.sq = this.sq;
        t.type = this.type;
        if (this.name !== "") t.name = this.name;
        if (this.Bs !== undefined) {
            var e = this.Bs;
            for (var n in e) {
                if (e[n] !== undefined) t[n] = e[n];
            }
            return t;
        }
        var i = [];
        for (var r = 0; r < this.Bn.length; r++) {
            var a = this.Bn[r];
            i.push(a.x, a.y, a.z);
        }
        var s = [];
        var o = [];
        var f = {};
        var u = [];
        var h = {};
        var c = [];
        var l = {};
        for (var r = 0; r < this.Wr.length; r++) {
            var d = this.Wr[r];
            var v = true;
            var p = false;
            var E = this.Xr[0][r] !== undefined;
            var g = d.Hn.length() > 0;
            var m = d.nr.length > 0;
            var T = d.color.r !== 1 || d.color.wi !== 1 || d.color.b !== 1;
            var y = d.or.length > 0;
            var R = 0;
            R = H(R, 0, 0);
            R = H(R, 1, v);
            R = H(R, 2, p);
            R = H(R, 3, E);
            R = H(R, 4, g);
            R = H(R, 5, m);
            R = H(R, 6, T);
            R = H(R, 7, y);
            s.push(R);
            s.push(d.a, d.b, d.c);
            s.push(d.pr);
            if (E) {
                var w = this.Xr[0][r];
                s.push(O(w[0]), O(w[1]), O(w[2]));
            }
            if (g) {
                s.push(A(d.Hn));
            }
            if (m) {
                var x = d.nr;
                s.push(A(x[0]), A(x[1]), A(x[2]));
            }
            if (T) {
                s.push(M(d.color));
            }
            if (y) {
                var b = d.or;
                s.push(M(b[0]), M(b[1]), M(b[2]));
            }
        }
        function H(t, e, n) {
            return n ? t | 1 << e : t & ~(1 << e);
        }
        function A(t) {
            var e = t.x.toString() + t.y.toString() + t.z.toString();
            if (f[e] !== undefined) {
                return f[e];
            }
            f[e] = o.length / 3;
            o.push(t.x, t.y, t.z);
            return f[e];
        }
        function M(t) {
            var e = t.r.toString() + t.wi.toString() + t.b.toString();
            if (h[e] !== undefined) {
                return h[e];
            }
            h[e] = u.length;
            u.push(t.Ii());
            return h[e];
        }
        function O(t) {
            var e = t.x.toString() + t.y.toString();
            if (l[e] !== undefined) {
                return l[e];
            }
            l[e] = c.length / 2;
            c.push(t.x, t.y);
            return l[e];
        }
        t.data = {};
        t.data.Bn = i;
        t.data.Cs = o;
        if (u.length > 0) t.data.Vr = u;
        if (c.length > 0) t.data.Ds = [ c ];
        t.data.Wr = s;
        return t;
    },
    clone: function() {
        return new THREE.An().xi(this);
    },
    xi: function(t) {
        this.Bn = [];
        this.Wr = [];
        this.Xr = [ [] ];
        var e = t.Bn;
        for (var n = 0, i = e.length; n < i; n++) {
            this.Bn.push(e[n].clone());
        }
        var r = t.Wr;
        for (var n = 0, i = r.length; n < i; n++) {
            this.Wr.push(r[n].clone());
        }
        for (var n = 0, i = t.Xr.length; n < i; n++) {
            var a = t.Xr[n];
            if (this.Xr[n] === undefined) {
                this.Xr[n] = [];
            }
            for (var s = 0, o = a.length; s < o; s++) {
                var f = a[s], u = [];
                for (var h = 0, c = f.length; h < c; h++) {
                    var l = f[h];
                    u.push(l.clone());
                }
                this.Xr[n].push(u);
            }
        }
        return this;
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
});

THREE.Ur = 0;

THREE.Fs = function() {
    Object.defineProperty(this, "id", {
        value: THREE.Ur++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.type = "DirectGeometry";
    this.Gs = [];
    this.Bn = [];
    this.Cs = [];
    this.Vr = [];
    this.Ds = [];
    this.Hs = [];
    this.os = [];
    this.Yr = {};
    this.$r = [];
    this._r = [];
    this.bs = null;
    this.Ho = null;
    this.ds = false;
    this.fs = false;
    this.gs = false;
    this.es = false;
    this.js = false;
};

Object.assign(THREE.Fs.prototype, THREE.Xp.prototype, {
    ks: THREE.An.prototype.ks,
    Io: THREE.An.prototype.Io,
    ps: function() {
        console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.");
    },
    qs: function() {
        console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.");
    },
    Is: function(t) {
        var e;
        var n = [];
        var i;
        var r = t.Wr;
        for (var a = 0; a < r.length; a++) {
            var s = r[a];
            if (s.pr !== i) {
                i = s.pr;
                if (e !== undefined) {
                    e.count = a * 3 - e.start;
                    n.push(e);
                }
                e = {
                    start: a * 3,
                    pr: i
                };
            }
        }
        if (e !== undefined) {
            e.count = a * 3 - e.start;
            n.push(e);
        }
        this.os = n;
    },
    Js: function(t) {
        var e = t.Wr;
        var n = t.Bn;
        var i = t.Xr;
        var r = i[0] && i[0].length > 0;
        var a = i[1] && i[1].length > 0;
        var s = t.Yr;
        var o = s.length;
        var f;
        if (o > 0) {
            f = [];
            for (var u = 0; u < o; u++) {
                f[u] = [];
            }
            this.Yr.position = f;
        }
        var h = t.Zr;
        var c = h.length;
        var l;
        if (c > 0) {
            l = [];
            for (var u = 0; u < c; u++) {
                l[u] = [];
            }
            this.Yr.Hn = l;
        }
        var d = t._r;
        var v = t.$r;
        var p = d.length === n.length;
        var E = v.length === n.length;
        for (var u = 0; u < e.length; u++) {
            var g = e[u];
            this.Bn.push(n[g.a], n[g.b], n[g.c]);
            var m = g.nr;
            if (m.length === 3) {
                this.Cs.push(m[0], m[1], m[2]);
            } else {
                var T = g.Hn;
                this.Cs.push(T, T, T);
            }
            var y = g.or;
            if (y.length === 3) {
                this.Vr.push(y[0], y[1], y[2]);
            } else {
                var R = g.color;
                this.Vr.push(R, R, R);
            }
            if (r === true) {
                var w = i[0][u];
                if (w !== undefined) {
                    this.Ds.push(w[0], w[1], w[2]);
                } else {
                    console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u);
                    this.Ds.push(new THREE.fa(), new THREE.fa(), new THREE.fa());
                }
            }
            if (a === true) {
                var w = i[1][u];
                if (w !== undefined) {
                    this.Hs.push(w[0], w[1], w[2]);
                } else {
                    console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u);
                    this.Hs.push(new THREE.fa(), new THREE.fa(), new THREE.fa());
                }
            }
            for (var x = 0; x < o; x++) {
                var b = s[x].Bn;
                f[x].push(b[g.a], b[g.b], b[g.c]);
            }
            for (var x = 0; x < c; x++) {
                var H = h[x].nr[u];
                l[x].push(H.a, H.b, H.c);
            }
            if (p) {
                this._r.push(d[g.a], d[g.b], d[g.c]);
            }
            if (E) {
                this.$r.push(v[g.a], v[g.b], v[g.c]);
            }
        }
        this.Is(t);
        this.ds = t.ds;
        this.fs = t.fs;
        this.gs = t.gs;
        this.es = t.es;
        this.js = t.js;
        return this;
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
});

THREE.Cn = function() {
    Object.defineProperty(this, "id", {
        value: THREE.Ur++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.type = "BufferGeometry";
    this.index = null;
    this.attributes = {};
    this.Ks = {};
    this.os = [];
    this.bs = null;
    this.Ho = null;
    this.Ls = {
        start: 0,
        count: Infinity
    };
};

Object.assign(THREE.Cn.prototype, THREE.Xp.prototype, {
    Ms: function() {
        return this.index;
    },
    Ns: function(t) {
        this.index = t;
    },
    Os: function(t, e) {
        if (e instanceof THREE.qr === false && e instanceof THREE.Dn === false) {
            console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");
            this.Os(t, new THREE.qr(arguments[1], arguments[2]));
            return;
        }
        if (t === "index") {
            console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");
            this.Ns(e);
            return;
        }
        this.attributes[t] = e;
        return this;
    },
    getAttribute: function(t) {
        return this.attributes[t];
    },
    removeAttribute: function(t) {
        delete this.attributes[t];
        return this;
    },
    Ps: function(t, e, n) {
        this.os.push({
            start: t,
            count: e,
            pr: n !== undefined ? n : 0
        });
    },
    Qs: function() {
        this.os = [];
    },
    Rs: function(t, e) {
        this.Ls.start = t;
        this.Ls.count = e;
    },
    Iq: function(t) {
        var e = this.attributes.position;
        if (e !== undefined) {
            t.Mn(e.dc);
            e.ur = true;
        }
        var n = this.attributes.Hn;
        if (n !== undefined) {
            var i = new THREE.Kn().Vn(t);
            i.Mn(n.dc);
            n.ur = true;
        }
        if (this.bs !== null) {
            this.ks();
        }
        if (this.Ho !== null) {
            this.Io();
        }
        return this;
    },
    Oq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.fo(n);
            this.Iq(t);
            return this;
        };
    }(),
    Pq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.ho(n);
            this.Iq(t);
            return this;
        };
    }(),
    Qq: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.Am();
            t.io(n);
            this.Iq(t);
            return this;
        };
    }(),
    translate: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.Am();
            t.eo(n, i, r);
            this.Iq(t);
            return this;
        };
    }(),
    scale: function() {
        var t;
        return function e(n, i, r) {
            if (t === undefined) t = new THREE.Am();
            t.ko(n, i, r);
            this.Iq(t);
            return this;
        };
    }(),
    ao: function() {
        var t;
        return function e(n) {
            if (t === undefined) t = new THREE.qq();
            t.ao(n);
            t.gr();
            this.Iq(t.matrix);
        };
    }(),
    dn: function() {
        this.ks();
        var t = this.bs.dn().nd();
        this.translate(t.x, t.y, t.z);
        return t;
    },
    xn: function(t) {
        var e = t.j;
        if (t instanceof THREE.gq || t instanceof THREE.eq) {
            var n = new THREE.Nr(e.Bn.length * 3, 3);
            var i = new THREE.Nr(e.Vr.length * 3, 3);
            this.Os("position", n.Br(e.Bn));
            this.Os("color", i.yr(e.Vr));
            if (e.as && e.as.length === e.Bn.length) {
                var r = new THREE.Nr(e.as.length, 1);
                this.Os("lineDistance", r.xr(e.as));
            }
            if (e.Ho !== null) {
                this.Ho = e.Ho.clone();
            }
            if (e.bs !== null) {
                this.bs = e.bs.clone();
            }
        } else if (t instanceof THREE.dq) {
            if (e instanceof THREE.An) {
                this.Js(e);
            }
        }
        return this;
    },
    Ss: function(t) {
        var e = t.j;
        if (t instanceof THREE.dq) {
            var n = e.Ts;
            if (n === undefined || e.cs === true) {
                return this.Js(e);
            }
            n.ds = e.ds || e.cs;
            n.fs = e.fs || e.cs;
            n.gs = e.gs || e.cs;
            n.es = e.es || e.cs;
            n.js = e.js || e.cs;
            e.cs = false;
            e.ds = false;
            e.fs = false;
            e.gs = false;
            e.es = false;
            e.js = false;
            e = n;
        }
        var i;
        if (e.ds === true) {
            i = this.attributes.position;
            if (i !== undefined) {
                i.Br(e.Bn);
                i.ur = true;
            }
            e.ds = false;
        }
        if (e.fs === true) {
            i = this.attributes.Hn;
            if (i !== undefined) {
                i.Br(e.Cs);
                i.ur = true;
            }
            e.fs = false;
        }
        if (e.gs === true) {
            i = this.attributes.color;
            if (i !== undefined) {
                i.yr(e.Vr);
                i.ur = true;
            }
            e.gs = false;
        }
        if (e.es) {
            i = this.attributes.ms;
            if (i !== undefined) {
                i.Ar(e.Ds);
                i.ur = true;
            }
            e.es = false;
        }
        if (e.hs) {
            i = this.attributes.Us;
            if (i !== undefined) {
                i.xr(e.as);
                i.ur = true;
            }
            e.hs = false;
        }
        if (e.js) {
            e.Is(t.j);
            this.os = e.os;
            e.js = false;
        }
        return this;
    },
    Js: function(t) {
        t.Ts = new THREE.Fs().Js(t);
        return this.Vs(t.Ts);
    },
    Vs: function(t) {
        var e = new Float32Array(t.Bn.length * 3);
        this.Os("position", new THREE.qr(e, 3).Br(t.Bn));
        if (t.Cs.length > 0) {
            var n = new Float32Array(t.Cs.length * 3);
            this.Os("normal", new THREE.qr(n, 3).Br(t.Cs));
        }
        if (t.Vr.length > 0) {
            var i = new Float32Array(t.Vr.length * 3);
            this.Os("color", new THREE.qr(i, 3).yr(t.Vr));
        }
        if (t.Ds.length > 0) {
            var r = new Float32Array(t.Ds.length * 2);
            this.Os("uv", new THREE.qr(r, 2).Ar(t.Ds));
        }
        if (t.Hs.length > 0) {
            var a = new Float32Array(t.Hs.length * 2);
            this.Os("uv2", new THREE.qr(a, 2).Ar(t.Hs));
        }
        if (t.Gs.length > 0) {
            var s = t.Bn.length > 65535 ? Uint32Array : Uint16Array;
            var o = new s(t.Gs.length * 3);
            this.Ns(new THREE.qr(o, 1).zr(t.Gs));
        }
        this.os = t.os;
        for (var f in t.Yr) {
            var u = [];
            var h = t.Yr[f];
            for (var c = 0, l = h.length; c < l; c++) {
                var d = h[c];
                var v = new THREE.Nr(d.length * 3, 3);
                u.push(v.Br(d));
            }
            this.Ks[f] = u;
        }
        if (t._r.length > 0) {
            var p = new THREE.Nr(t._r.length * 4, 4);
            this.Os("skinIndex", p.Cr(t._r));
        }
        if (t.$r.length > 0) {
            var E = new THREE.Nr(t.$r.length * 4, 4);
            this.Os("skinWeight", E.Cr(t.$r));
        }
        if (t.Ho !== null) {
            this.Ho = t.Ho.clone();
        }
        if (t.bs !== null) {
            this.bs = t.bs.clone();
        }
        return this;
    },
    ks: function() {
        if (this.bs === null) {
            this.bs = new THREE.vn();
        }
        var t = this.attributes.position.dc;
        if (t !== undefined) {
            this.bs.wn(t);
        } else {
            this.bs.kn();
        }
        if (isNaN(this.bs.min.x) || isNaN(this.bs.min.y) || isNaN(this.bs.min.z)) {
            console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
        }
    },
    Io: function() {
        var t = new THREE.vn();
        var e = new THREE.K();
        return function n() {
            if (this.Ho === null) {
                this.Ho = new THREE.Jn();
            }
            var i = this.attributes.position;
            if (i) {
                var r = i.dc;
                var a = this.Ho.dn;
                t.wn(r);
                t.dn(a);
                var s = 0;
                for (var o = 0, f = r.length; o < f; o += 3) {
                    e.Ui(r, o);
                    s = Math.max(s, a.km(e));
                }
                this.Ho.N = Math.sqrt(s);
                if (isNaN(this.Ho.N)) {
                    console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
                }
            }
        };
    }(),
    ps: function() {},
    qs: function() {
        var t = this.index;
        var e = this.attributes;
        var n = this.os;
        if (e.position) {
            var i = e.position.dc;
            if (e.Hn === undefined) {
                this.Os("normal", new THREE.qr(new Float32Array(i.length), 3));
            } else {
                var r = e.Hn.dc;
                for (var a = 0, s = r.length; a < s; a++) {
                    r[a] = 0;
                }
            }
            var o = e.Hn.dc;
            var f, u, h, c = new THREE.K(), l = new THREE.K(), d = new THREE.K(), v = new THREE.K(), p = new THREE.K();
            if (t) {
                var E = t.dc;
                if (n.length === 0) {
                    this.Ps(0, E.length);
                }
                for (var g = 0, m = n.length; g < m; ++g) {
                    var T = n[g];
                    var y = T.start;
                    var R = T.count;
                    for (var a = y, s = y + R; a < s; a += 3) {
                        f = E[a + 0] * 3;
                        u = E[a + 1] * 3;
                        h = E[a + 2] * 3;
                        c.Ui(i, f);
                        l.Ui(i, u);
                        d.Ui(i, h);
                        v.bm(d, l);
                        p.bm(c, l);
                        v.Hm(p);
                        o[f] += v.x;
                        o[f + 1] += v.y;
                        o[f + 2] += v.z;
                        o[u] += v.x;
                        o[u + 1] += v.y;
                        o[u + 2] += v.z;
                        o[h] += v.x;
                        o[h + 1] += v.y;
                        o[h + 2] += v.z;
                    }
                }
            } else {
                for (var a = 0, s = i.length; a < s; a += 9) {
                    c.Ui(i, a);
                    l.Ui(i, a + 3);
                    d.Ui(i, a + 6);
                    v.bm(d, l);
                    p.bm(c, l);
                    v.Hm(p);
                    o[a] = v.x;
                    o[a + 1] = v.y;
                    o[a + 2] = v.z;
                    o[a + 3] = v.x;
                    o[a + 4] = v.y;
                    o[a + 5] = v.z;
                    o[a + 6] = v.x;
                    o[a + 7] = v.y;
                    o[a + 8] = v.z;
                }
            }
            this.Ws();
            e.Hn.ur = true;
        }
    },
    jd: function(t, e) {
        if (t instanceof THREE.Cn === false) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
            return;
        }
        if (e === undefined) e = 0;
        var n = this.attributes;
        for (var i in n) {
            if (t.attributes[i] === undefined) continue;
            var r = n[i];
            var a = r.dc;
            var s = t.attributes[i];
            var o = s.dc;
            var f = s.pm;
            for (var u = 0, h = f * e; u < o.length; u++, h++) {
                a[h] = o[u];
            }
        }
        return this;
    },
    Ws: function() {
        var t = this.attributes.Hn.dc;
        var e, n, i, r;
        for (var a = 0, s = t.length; a < s; a += 3) {
            e = t[a];
            n = t[a + 1];
            i = t[a + 2];
            r = 1 / Math.sqrt(e * e + n * n + i * i);
            t[a] *= r;
            t[a + 1] *= r;
            t[a + 2] *= r;
        }
    },
    Xs: function() {
        if (this.index === null) {
            console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.");
            return this;
        }
        var t = new THREE.Cn();
        var e = this.index.dc;
        var n = this.attributes;
        for (var i in n) {
            var r = n[i];
            var a = r.dc;
            var s = r.pm;
            var o = new a.constructor(e.length * s);
            var f = 0, u = 0;
            for (var h = 0, c = e.length; h < c; h++) {
                f = e[h] * s;
                for (var l = 0; l < s; l++) {
                    o[u++] = a[f++];
                }
            }
            t.Os(i, new THREE.qr(o, s));
        }
        return t;
    },
    toJSON: function() {
        var t = {
            kr: {
                version: 4.4,
                type: "BufferGeometry",
                lr: "BufferGeometry.toJSON"
            }
        };
        t.sq = this.sq;
        t.type = this.type;
        if (this.name !== "") t.name = this.name;
        if (this.Bs !== undefined) {
            var e = this.Bs;
            for (var n in e) {
                if (e[n] !== undefined) t[n] = e[n];
            }
            return t;
        }
        t.data = {
            attributes: {}
        };
        var i = this.index;
        if (i !== null) {
            var r = Array.prototype.slice.call(i.dc);
            t.data.index = {
                type: i.dc.constructor.name,
                dc: r
            };
        }
        var a = this.attributes;
        for (var n in a) {
            var s = a[n];
            var r = Array.prototype.slice.call(s.dc);
            t.data.attributes[n] = {
                pm: s.pm,
                type: s.dc.constructor.name,
                dc: r,
                tr: s.tr
            };
        }
        var o = this.os;
        if (o.length > 0) {
            t.data.os = JSON.parse(JSON.stringify(o));
        }
        var f = this.Ho;
        if (f !== null) {
            t.data.Ho = {
                dn: f.dn.toArray(),
                N: f.N
            };
        }
        return t;
    },
    clone: function() {
        return new THREE.Cn().xi(this);
    },
    xi: function(t) {
        var e = t.index;
        if (e !== null) {
            this.Ns(e.clone());
        }
        var n = t.attributes;
        for (var i in n) {
            var r = n[i];
            this.Os(i, r.clone());
        }
        var a = t.os;
        for (var s = 0, o = a.length; s < o; s++) {
            var f = a[s];
            this.Ps(f.start, f.count, f.pr);
        }
        return this;
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
});

THREE.Cn.Ys = 65535;

THREE.Zs = function() {
    THREE.Cn.call(this);
    this.type = "InstancedBufferGeometry";
    this.$s = undefined;
};

THREE.Zs.prototype = Object.create(THREE.Cn.prototype);

THREE.Zs.prototype.constructor = THREE.Zs;

THREE.Zs.prototype.Ps = function(t, e, n) {
    this.os.push({
        start: t,
        count: e,
        _s: n
    });
};

THREE.Zs.prototype.xi = function(t) {
    var e = t.index;
    if (e !== null) {
        this.Ns(e.clone());
    }
    var n = t.attributes;
    for (var i in n) {
        var r = n[i];
        this.Os(i, r.clone());
    }
    var a = t.os;
    for (var s = 0, o = a.length; s < o; s++) {
        var f = a[s];
        this.Ps(f.start, f.count, f._s);
    }
    return this;
};

THREE.at = function(t) {
    if (typeof t === "string") {
        console.warn("THREE.Uniform: Type parameter is no longer needed.");
        t = arguments[1];
    }
    this.value = t;
    this.rr = false;
};

THREE.at.prototype = {
    constructor: THREE.at,
    bt: function(t) {
        this.rr = true;
        this.ct = t;
        return this;
    }
};

THREE.dt = function() {
    throw new Error("THREE.AnimationAction: " + "Use mixer.clipAction for construction.");
};

THREE.dt.et = function t(e, n, i) {
    this.ft = e;
    this.gt = n;
    this.ht = i || null;
    var r = n.it, a = r.length, s = new Array(a);
    var o = {
        Mp: THREE.fi,
        Np: THREE.fi
    };
    for (var f = 0; f !== a; ++f) {
        var u = r[f].jt(null);
        s[f] = u;
        u.Dp = o;
    }
    this.kt = o;
    this.lt = s;
    this.nt = new Array(a);
    this.ot = null;
    this.pt = null;
    this.qt = null;
    this.rt = null;
    this.loop = THREE.ai;
    this.st = -1;
    this.tt = null;
    this.time = 0;
    this.ut = 1;
    this.vt = 1;
    this.weight = 1;
    this.wt = 1;
    this.xt = Infinity;
    this.paused = false;
    this.enabled = true;
    this.yt = false;
    this.zt = true;
    this.At = true;
};

THREE.dt.et.prototype = {
    constructor: THREE.dt.et,
    play: function() {
        this.ft.Bt(this);
        return this;
    },
    stop: function() {
        this.ft.Ct(this);
        return this.reset();
    },
    reset: function() {
        this.paused = false;
        this.enabled = true;
        this.time = 0;
        this.st = -1;
        this.tt = null;
        return this.Et().Dt();
    },
    Ft: function() {
        var t = this.tt;
        return this.enabled && !this.paused && this.ut !== 0 && this.tt === null && this.ft.Gt(this);
    },
    Ht: function() {
        return this.ft.Gt(this);
    },
    It: function(t) {
        this.tt = t;
        return this;
    },
    Jt: function(t, e) {
        this.loop = t;
        this.xt = e;
        return this;
    },
    Kt: function(t) {
        this.weight = t;
        this.wt = this.enabled ? t : 0;
        return this.Et();
    },
    Lt: function() {
        return this.wt;
    },
    Mt: function(t) {
        return this.Nt(t, 0, 1);
    },
    Ot: function(t) {
        return this.Nt(t, 1, 0);
    },
    Pt: function(t, e, n) {
        var i = this.ft;
        t.Ot(e);
        this.Mt(e);
        if (n) {
            var r = this.gt.duration, a = t.gt.duration, s = a / r, o = r / a;
            t.Qt(1, s, e);
            this.Qt(o, 1, e);
        }
        return this;
    },
    Rt: function(t, e, n) {
        return t.Pt(this, e, n);
    },
    Et: function() {
        var t = this.rt;
        if (t !== null) {
            this.rt = null;
            this.ft.St(t);
        }
        return this;
    },
    Tt: function(t) {
        this.ut = t;
        this.vt = this.paused ? 0 : t;
        return this.Dt();
    },
    Ut: function() {
        return this.vt;
    },
    Vt: function(t) {
        this.ut = this.gt.duration / t;
        return this.Dt();
    },
    Wt: function(t) {
        this.time = t.time;
        this.ut = t.ut;
        return this.Dt();
    },
    Xt: function(t) {
        return this.Qt(this.vt, 0, t);
    },
    Qt: function(t, e, n) {
        var i = this.ft, r = i.time, a = this.qt, s = this.ut;
        if (a === null) {
            a = i.Yt(), this.qt = a;
        }
        var o = a.up, f = a.xp;
        o[0] = r;
        o[1] = r + n;
        f[0] = t / s;
        f[1] = e / s;
        return this;
    },
    Dt: function() {
        var t = this.qt;
        if (t !== null) {
            this.qt = null;
            this.ft.St(t);
        }
        return this;
    },
    Zt: function() {
        return this.ft;
    },
    $t: function() {
        return this.gt;
    },
    getRoot: function() {
        return this.ht || this.ft._t;
    },
    au: function(t, e, n, i) {
        var r = this.tt;
        if (r !== null) {
            var a = (t - r) * n;
            if (a < 0 || n === 0) {
                return;
            }
            this.tt = null;
            e = n * a;
        }
        e *= this.bu(t);
        var s = this.cu(e);
        var o = this.du(t);
        if (o > 0) {
            var f = this.lt;
            var u = this.nt;
            for (var h = 0, c = f.length; h !== c; ++h) {
                f[h].evaluate(s);
                u[h].eu(i, o);
            }
        }
    },
    du: function(t) {
        var e = 0;
        if (this.enabled) {
            e = this.weight;
            var n = this.rt;
            if (n !== null) {
                var i = n.evaluate(t)[0];
                e *= i;
                if (t > n.up[1]) {
                    this.Et();
                    if (i === 0) {
                        this.enabled = false;
                    }
                }
            }
        }
        this.wt = e;
        return e;
    },
    bu: function(t) {
        var e = 0;
        if (!this.paused) {
            e = this.ut;
            var n = this.qt;
            if (n !== null) {
                var i = n.evaluate(t)[0];
                e *= i;
                if (t > n.up[1]) {
                    this.Dt();
                    if (e === 0) {
                        this.paused = true;
                    } else {
                        this.ut = e;
                    }
                }
            }
        }
        this.vt = e;
        return e;
    },
    cu: function(t) {
        var e = this.time + t;
        if (t === 0) return e;
        var n = this.gt.duration, i = this.loop, r = this.st;
        if (i === THREE._h) {
            if (r === -1) {
                this.fu = 0;
                this.gu(true, true, false);
            }
            t: {
                if (e >= n) {
                    e = n;
                } else if (e < 0) {
                    e = 0;
                } else break t;
                if (this.yt) this.paused = true; else this.enabled = false;
                this.ft.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: t < 0 ? -1 : 1
                });
            }
        } else {
            var a = i === THREE.bi;
            if (r === -1) {
                if (t >= 0) {
                    r = 0;
                    this.gu(true, this.xt === 0, a);
                } else {
                    this.gu(this.xt === 0, true, a);
                }
            }
            if (e >= n || e < 0) {
                var s = Math.floor(e / n);
                e -= n * s;
                r += Math.abs(s);
                var o = this.xt - r;
                if (o < 0) {
                    if (this.yt) this.paused = true; else this.enabled = false;
                    e = t > 0 ? n : 0;
                    this.ft.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: t > 0 ? 1 : -1
                    });
                } else {
                    if (o === 0) {
                        var f = t < 0;
                        this.gu(f, !f, a);
                    } else {
                        this.gu(false, false, a);
                    }
                    this.st = r;
                    this.ft.dispatchEvent({
                        type: "loop",
                        action: this,
                        hu: s
                    });
                }
            }
            if (a && (r & 1) === 1) {
                this.time = e;
                return n - e;
            }
        }
        this.time = e;
        return e;
    },
    gu: function(t, e, n) {
        var i = this.kt;
        if (n) {
            i.Mp = THREE.gi;
            i.Np = THREE.gi;
        } else {
            if (t) {
                i.Mp = this.zt ? THREE.gi : THREE.fi;
            } else {
                i.Mp = THREE.hi;
            }
            if (e) {
                i.Np = this.At ? THREE.gi : THREE.fi;
            } else {
                i.Np = THREE.hi;
            }
        }
    },
    Nt: function(t, e, n) {
        var i = this.ft, r = i.time, a = this.rt;
        if (a === null) {
            a = i.Yt(), this.rt = a;
        }
        var s = a.up, o = a.xp;
        s[0] = r;
        o[0] = e;
        s[1] = r + t;
        o[1] = n;
        return this;
    }
};

THREE.iu = function(t, e, n) {
    this.name = t;
    this.it = n;
    this.duration = e !== undefined ? e : -1;
    this.sq = THREE.Math.Vo();
    if (this.duration < 0) {
        this.ju();
    }
    this.trim();
    this.ku();
};

THREE.iu.prototype = {
    constructor: THREE.iu,
    ju: function() {
        var t = this.it, e = 0;
        for (var n = 0, i = t.length; n !== i; ++n) {
            var r = this.it[n];
            e = Math.max(e, r.Nf[r.Nf.length - 1]);
        }
        this.duration = e;
    },
    trim: function() {
        for (var t = 0; t < this.it.length; t++) {
            this.it[t].trim(0, this.duration);
        }
        return this;
    },
    ku: function() {
        for (var t = 0; t < this.it.length; t++) {
            this.it[t].ku();
        }
        return this;
    }
};

Object.assign(THREE.iu, {
    parse: function(t) {
        var e = [], n = t.it, i = 1 / (t.lu || 1);
        for (var r = 0, a = n.length; r !== a; ++r) {
            e.push(THREE.mu.parse(n[r]).scale(i));
        }
        return new THREE.iu(t.name, t.duration, e);
    },
    toJSON: function(t) {
        var e = [], n = t.it;
        var i = {
            name: t.name,
            duration: t.duration,
            it: e
        };
        for (var r = 0, a = n.length; r !== a; ++r) {
            e.push(THREE.mu.toJSON(n[r]));
        }
        return i;
    },
    nu: function(t, e, n, i) {
        var r = e.length;
        var a = [];
        for (var s = 0; s < r; s++) {
            var o = [];
            var f = [];
            o.push((s + r - 1) % r, s, (s + 1) % r);
            f.push(0, 1, 0);
            var u = THREE.pu.ou(o);
            o = THREE.pu.qu(o, 1, u);
            f = THREE.pu.qu(f, 1, u);
            if (!i && o[0] === 0) {
                o.push(r);
                f.push(f[0]);
            }
            a.push(new THREE.ru(".morphTargetInfluences[" + e[s].name + "]", o, f).scale(1 / n));
        }
        return new THREE.iu(t, -1, a);
    },
    su: function(t, e) {
        var n = t;
        if (!Array.isArray(t)) {
            var i = t;
            n = i.j && i.j.tu || i.tu;
        }
        for (var r = 0; r < n.length; r++) {
            if (n[r].name === e) {
                return n[r];
            }
        }
        return null;
    },
    uu: function(t, e, n) {
        var i = {};
        var r = /^([\w-]*?)([\d]+)$/;
        for (var a = 0, s = t.length; a < s; a++) {
            var o = t[a];
            var f = o.name.match(r);
            if (f && f.length > 1) {
                var u = f[1];
                var h = i[u];
                if (!h) {
                    i[u] = h = [];
                }
                h.push(o);
            }
        }
        var c = [];
        for (var u in i) {
            c.push(THREE.iu.nu(u, i[u], e, n));
        }
        return c;
    },
    vu: function(t, e, n) {
        if (!t) {
            console.error("  no animation in JSONLoader data");
            return null;
        }
        var i = function(t, e, n, i, r) {
            if (n.length !== 0) {
                var a = [];
                var s = [];
                THREE.pu.wu(n, a, s, i);
                if (a.length !== 0) {
                    r.push(new t(e, a, s));
                }
            }
        };
        var r = [];
        var a = t.name || "default";
        var s = t.length || -1;
        var o = t.lu || 30;
        var f = t.xu || [];
        for (var u = 0; u < f.length; u++) {
            var h = f[u].keys;
            if (!h || h.length === 0) continue;
            if (h[0].Yr) {
                var c = {};
                for (var l = 0; l < h.length; l++) {
                    if (h[l].Yr) {
                        for (var d = 0; d < h[l].Yr.length; d++) {
                            c[h[l].Yr[d]] = -1;
                        }
                    }
                }
                for (var v in c) {
                    var p = [];
                    var E = [];
                    for (var d = 0; d !== h[l].Yr.length; ++d) {
                        var g = h[l];
                        p.push(g.time);
                        E.push(g.yu === v ? 1 : 0);
                    }
                    r.push(new THREE.ru(".morphTargetInfluence[" + v + "]", p, E));
                }
                s = c.length * (o || 1);
            } else {
                var m = ".bones[" + e[u].name + "]";
                i(THREE.zu, m + ".position", h, "pos", r);
                i(THREE.Au, m + ".quaternion", h, "rot", r);
                i(THREE.zu, m + ".scale", h, "scl", r);
            }
        }
        if (r.length === 0) {
            return null;
        }
        var T = new THREE.iu(a, s, r);
        return T;
    }
});

THREE.Bu = function(t) {
    this._t = t;
    this.Cu();
    this.Du = 0;
    this.time = 0;
    this.ut = 1;
};

Object.assign(THREE.Bu.prototype, THREE.Xp.prototype, {
    Eu: function(t, e) {
        var n = e || this._t, i = n.sq, r = typeof t === "string" ? THREE.iu.su(n, t) : t, a = r !== null ? r.sq : t, s = this.Fu[a], o = null;
        if (s !== undefined) {
            var f = s.Gu[i];
            if (f !== undefined) {
                return f;
            }
            o = s.Hu[0];
            if (r === null) r = o.gt;
        }
        if (r === null) return null;
        var u = new THREE.Bu.Iu(this, r, e);
        this.Ju(u, o);
        this.Ku(u, a, i);
        return u;
    },
    Lu: function(t, e) {
        var n = e || this._t, i = n.sq, r = typeof t === "string" ? THREE.iu.su(n, t) : t, a = r ? r.sq : t, s = this.Fu[a];
        if (s !== undefined) {
            return s.Gu[i] || null;
        }
        return null;
    },
    Mu: function() {
        var t = this.Nu, e = this.Ou, n = this.Pu, i = this.Qu;
        this.Ou = 0;
        this.Qu = 0;
        for (var r = 0; r !== e; ++r) {
            t[r].reset();
        }
        for (var r = 0; r !== i; ++r) {
            n[r].Ru = 0;
        }
        return this;
    },
    update: function(t) {
        t *= this.ut;
        var e = this.Nu, n = this.Ou, i = this.time += t, r = Math.sign(t), a = this.Du ^= 1;
        for (var s = 0; s !== n; ++s) {
            var o = e[s];
            if (o.enabled) {
                o.au(i, t, r, a);
            }
        }
        var f = this.Pu, u = this.Qu;
        for (var s = 0; s !== u; ++s) {
            f[s].apply(a);
        }
        return this;
    },
    getRoot: function() {
        return this._t;
    },
    Su: function(t) {
        var e = this.Nu, n = t.sq, i = this.Fu, r = i[n];
        if (r !== undefined) {
            var a = r.Hu;
            for (var s = 0, o = a.length; s !== o; ++s) {
                var f = a[s];
                this.Ct(f);
                var u = f.ot, h = e[e.length - 1];
                f.ot = null;
                f.pt = null;
                h.ot = u;
                e[u] = h;
                e.pop();
                this.Tu(f);
            }
            delete i[n];
        }
    },
    Uu: function(t) {
        var e = t.sq, n = this.Fu;
        for (var i in n) {
            var r = n[i].Gu, a = r[e];
            if (a !== undefined) {
                this.Ct(a);
                this.Vu(a);
            }
        }
        var s = this.Wu, o = s[e];
        if (o !== undefined) {
            for (var f in o) {
                var u = o[f];
                u.Xu();
                this.Yu(u);
            }
        }
    },
    Zu: function(t, e) {
        var n = this.Lu(t, e);
        if (n !== null) {
            this.Ct(n);
            this.Vu(n);
        }
    }
});

THREE.Bu.Iu = THREE.dt.et;

Object.assign(THREE.Bu.prototype, {
    Ju: function(t, e) {
        var n = t.ht || this._t, i = t.gt.it, r = i.length, a = t.nt, s = t.lt, o = n.sq, f = this.Wu, u = f[o];
        if (u === undefined) {
            u = {};
            f[o] = u;
        }
        for (var h = 0; h !== r; ++h) {
            var c = i[h], l = c.name, d = u[l];
            if (d !== undefined) {
                a[h] = d;
            } else {
                d = a[h];
                if (d !== undefined) {
                    if (d.ot === null) {
                        ++d.$u;
                        this._u(d, o, l);
                    }
                    continue;
                }
                var v = e && e.nt[h].bv.av;
                d = new THREE.cv(THREE.dv.create(n, l, v), c.ev, c.fv());
                ++d.$u;
                this._u(d, o, l);
                a[h] = d;
            }
            s[h].wp = d.buffer;
        }
    },
    Bt: function(t) {
        if (!this.Gt(t)) {
            if (t.ot === null) {
                var e = (t.ht || this._t).sq, n = t.gt.sq, i = this.Fu[n];
                this.Ju(t, i && i.Hu[0]);
                this.Ku(t, n, e);
            }
            var r = t.nt;
            for (var a = 0, s = r.length; a !== s; ++a) {
                var o = r[a];
                if (o.Ru++ === 0) {
                    this.gv(o);
                    o.hv();
                }
            }
            this.iv(t);
        }
    },
    Ct: function(t) {
        if (this.Gt(t)) {
            var e = t.nt;
            for (var n = 0, i = e.length; n !== i; ++n) {
                var r = e[n];
                if (--r.Ru === 0) {
                    r.Xu();
                    this.jv(r);
                }
            }
            this.kv(t);
        }
    },
    Cu: function() {
        this.Nu = [];
        this.Ou = 0;
        this.Fu = {};
        this.Pu = [];
        this.Qu = 0;
        this.Wu = {};
        this.lv = [];
        this.mv = 0;
        var t = this;
        this.nv = {
            ov: {
                get total() {
                    return t.Nu.length;
                },
                get pv() {
                    return t.Ou;
                }
            },
            qv: {
                get total() {
                    return t.Pu.length;
                },
                get pv() {
                    return t.Qu;
                }
            },
            rv: {
                get total() {
                    return t.lv.length;
                },
                get pv() {
                    return t.mv;
                }
            }
        };
    },
    Gt: function(t) {
        var e = t.ot;
        return e !== null && e < this.Ou;
    },
    Ku: function(t, e, n) {
        var i = this.Nu, r = this.Fu, a = r[e];
        if (a === undefined) {
            a = {
                Hu: [ t ],
                Gu: {}
            };
            t.pt = 0;
            r[e] = a;
        } else {
            var s = a.Hu;
            t.pt = s.length;
            s.push(t);
        }
        t.ot = i.length;
        i.push(t);
        a.Gu[n] = t;
    },
    Vu: function(t) {
        var e = this.Nu, n = e[e.length - 1], i = t.ot;
        n.ot = i;
        e[i] = n;
        e.pop();
        t.ot = null;
        var r = t.gt.sq, a = this.Fu, s = a[r], o = s.Hu, f = o[o.length - 1], u = t.pt;
        f.pt = u;
        o[u] = f;
        o.pop();
        t.pt = null;
        var h = s.Gu, c = (e.ht || this._t).sq;
        delete h[c];
        if (o.length === 0) {
            delete a[r];
        }
        this.Tu(t);
    },
    Tu: function(t) {
        var e = t.nt;
        for (var n = 0, i = e.length; n !== i; ++n) {
            var r = e[n];
            if (--r.$u === 0) {
                this.Yu(r);
            }
        }
    },
    iv: function(t) {
        var e = this.Nu, n = t.ot, i = this.Ou++, r = e[i];
        t.ot = i;
        e[i] = t;
        r.ot = n;
        e[n] = r;
    },
    kv: function(t) {
        var e = this.Nu, n = t.ot, i = --this.Ou, r = e[i];
        t.ot = i;
        e[i] = t;
        r.ot = n;
        e[n] = r;
    },
    _u: function(t, e, n) {
        var i = this.Wu, r = i[e], a = this.Pu;
        if (r === undefined) {
            r = {};
            i[e] = r;
        }
        r[n] = t;
        t.ot = a.length;
        a.push(t);
    },
    Yu: function(t) {
        var e = this.Pu, n = t.bv, i = n.sv.sq, r = n.path, a = this.Wu, s = a[i], o = e[e.length - 1], f = t.ot;
        o.ot = f;
        e[f] = o;
        e.pop();
        delete s[r];
        t: {
            for (var _ in s) break t;
            delete a[i];
        }
    },
    gv: function(t) {
        var e = this.Pu, n = t.ot, i = this.Qu++, r = e[i];
        t.ot = i;
        e[i] = t;
        r.ot = n;
        e[n] = r;
    },
    jv: function(t) {
        var e = this.Pu, n = t.ot, i = --this.Qu, r = e[i];
        t.ot = i;
        e[i] = t;
        r.ot = n;
        e[n] = r;
    },
    Yt: function() {
        var t = this.lv, e = this.mv++, n = t[e];
        if (n === undefined) {
            n = new THREE.Pp(new Float32Array(2), new Float32Array(2), 1, this.tv);
            n.uv = e;
            t[e] = n;
        }
        return n;
    },
    St: function(t) {
        var e = this.lv, n = t.uv, i = --this.mv, r = e[i];
        t.uv = i;
        e[i] = t;
        r.uv = n;
        e[n] = r;
    },
    tv: new Float32Array(1)
});

THREE.vv = function(t) {
    this.sq = THREE.Math.Vo();
    this.wv = Array.prototype.slice.call(arguments);
    this.xv = 0;
    var e = {};
    this.yv = e;
    for (var n = 0, i = arguments.length; n !== i; ++n) {
        e[arguments[n].sq] = n;
    }
    this.zv = [];
    this.Av = [];
    this.Pu = [];
    this.Bv = {};
    var r = this;
    this.nv = {
        Cv: {
            get total() {
                return r.wv.length;
            },
            get pv() {
                return this.total - r.xv;
            }
        },
        get Dv() {
            return r.Pu.length;
        }
    };
};

THREE.vv.prototype = {
    constructor: THREE.vv,
    add: function(t) {
        var e = this.wv, n = e.length, i = this.xv, r = this.yv, a = this.zv, s = this.Av, o = this.Pu, f = o.length;
        for (var u = 0, h = arguments.length; u !== h; ++u) {
            var c = arguments[u], l = c.sq, d = r[l];
            if (d === undefined) {
                d = n++;
                r[l] = d;
                e.push(c);
                for (var v = 0, p = f; v !== p; ++v) {
                    o[v].push(new THREE.dv(c, a[v], s[v]));
                }
            } else if (d < i) {
                var E = e[d];
                var g = --i, m = e[g];
                r[m.sq] = d;
                e[d] = m;
                r[l] = g;
                e[g] = c;
                for (var v = 0, p = f; v !== p; ++v) {
                    var T = o[v], y = T[g], R = T[d];
                    T[d] = y;
                    if (R === undefined) {
                        R = new THREE.dv(c, a[v], s[v]);
                    }
                    T[g] = R;
                }
            } else if (e[d] !== E) {
                console.error("Different objects with the same UUID " + "detected. Clean the caches or recreate your " + "infrastructure when reloading scenes...");
            }
        }
        this.xv = i;
    },
    remove: function(t) {
        var e = this.wv, n = e.length, i = this.xv, r = this.yv, a = this.Pu, s = a.length;
        for (var o = 0, f = arguments.length; o !== f; ++o) {
            var u = arguments[o], h = u.sq, c = r[h];
            if (c !== undefined && c >= i) {
                var l = i++, d = e[l];
                r[d.sq] = c;
                e[c] = d;
                r[h] = l;
                e[l] = u;
                for (var v = 0, p = s; v !== p; ++v) {
                    var E = a[v], g = E[l], m = E[c];
                    E[c] = g;
                    E[l] = m;
                }
            }
        }
        this.xv = i;
    },
    Ev: function(t) {
        var e = this.wv, n = e.length, i = this.xv, r = this.yv, a = this.Pu, s = a.length;
        for (var o = 0, f = arguments.length; o !== f; ++o) {
            var u = arguments[o], h = u.sq, c = r[h];
            if (c !== undefined) {
                delete r[h];
                if (c < i) {
                    var l = --i, d = e[l], v = --n, p = e[v];
                    r[d.sq] = c;
                    e[c] = d;
                    r[p.sq] = l;
                    e[l] = p;
                    e.pop();
                    for (var E = 0, g = s; E !== g; ++E) {
                        var m = a[E], T = m[l], y = m[v];
                        m[c] = T;
                        m[l] = y;
                        m.pop();
                    }
                } else {
                    var v = --n, p = e[v];
                    r[p.sq] = c;
                    e[c] = p;
                    e.pop();
                    for (var E = 0, g = s; E !== g; ++E) {
                        var m = a[E];
                        m[c] = m[v];
                        m.pop();
                    }
                }
            }
        }
        this.xv = i;
    },
    Fv: function(t, e) {
        var n = this.Bv, i = n[t], r = this.Pu;
        if (i !== undefined) return r[i];
        var a = this.zv, s = this.Av, o = this.wv, f = o.length, u = this.xv, h = new Array(f);
        i = r.length;
        n[t] = i;
        a.push(t);
        s.push(e);
        r.push(h);
        for (var c = u, l = o.length; c !== l; ++c) {
            var d = o[c];
            h[c] = new THREE.dv(d, t, e);
        }
        return h;
    },
    Gv: function(t) {
        var e = this.Bv, n = e[t];
        if (n !== undefined) {
            var i = this.zv, r = this.Av, a = this.Pu, s = a.length - 1, o = a[s], f = t[s];
            e[f] = n;
            a[n] = o;
            a.pop();
            r[n] = r[s];
            r.pop();
            i[n] = i[s];
            i.pop();
        }
    }
};

THREE.pu = {
    Hv: function(t, e, n) {
        if (THREE.pu.jf(t)) {
            return new t.constructor(t.subarray(e, n));
        }
        return t.slice(e, n);
    },
    Iv: function(t, e, n) {
        if (!t || !n && t.constructor === e) return t;
        if (typeof e.BYTES_PER_ELEMENT === "number") {
            return new e(t);
        }
        return Array.prototype.slice.call(t);
    },
    jf: function(t) {
        return ArrayBuffer.isView(t) && !(t instanceof DataView);
    },
    ou: function(t) {
        function e(e, n) {
            return t[e] - t[n];
        }
        var n = t.length;
        var i = new Array(n);
        for (var r = 0; r !== n; ++r) i[r] = r;
        i.sort(e);
        return i;
    },
    qu: function(t, e, n) {
        var i = t.length;
        var r = new t.constructor(i);
        for (var a = 0, s = 0; s !== i; ++a) {
            var o = n[a] * e;
            for (var f = 0; f !== e; ++f) {
                r[s++] = t[o + f];
            }
        }
        return r;
    },
    wu: function(t, e, n, i) {
        var r = 1, a = t[0];
        while (a !== undefined && a[i] === undefined) {
            a = t[r++];
        }
        if (a === undefined) return;
        var s = a[i];
        if (s === undefined) return;
        if (Array.isArray(s)) {
            do {
                s = a[i];
                if (s !== undefined) {
                    e.push(a.time);
                    n.push.apply(n, s);
                }
                a = t[r++];
            } while (a !== undefined);
        } else if (s.toArray !== undefined) {
            do {
                s = a[i];
                if (s !== undefined) {
                    e.push(a.time);
                    s.toArray(n, n.length);
                }
                a = t[r++];
            } while (a !== undefined);
        } else {
            do {
                s = a[i];
                if (s !== undefined) {
                    e.push(a.time);
                    n.push(s);
                }
                a = t[r++];
            } while (a !== undefined);
        }
    }
};

THREE.mu = function(t, e, n, i) {
    if (t === undefined) throw new Error("track name is undefined");
    if (e === undefined || e.length === 0) {
        throw new Error("no keyframes in track named " + t);
    }
    this.name = t;
    this.Nf = THREE.pu.Iv(e, this.Jv);
    this.values = THREE.pu.Iv(n, this.Kv);
    this.Lv(i || this.Mv);
    this.Nv();
    this.ku();
};

THREE.mu.prototype = {
    constructor: THREE.mu,
    Jv: Float32Array,
    Kv: Float32Array,
    Mv: THREE.di,
    Ov: function(t) {
        return new THREE.Op(this.Nf, this.values, this.fv(), t);
    },
    Pv: function(t) {
        return new THREE.Pp(this.Nf, this.values, this.fv(), t);
    },
    Qv: function(t) {
        return new THREE.Hp(this.Nf, this.values, this.fv(), t);
    },
    Lv: function(t) {
        var e;
        switch (t) {
          case THREE.ci:
            e = this.Ov;
            break;

          case THREE.di:
            e = this.Pv;
            break;

          case THREE.ei:
            e = this.Qv;
            break;
        }
        if (e === undefined) {
            var n = "unsupported interpolation for " + this.ev + " keyframe track named " + this.name;
            if (this.jt === undefined) {
                if (t !== this.Mv) {
                    this.Lv(this.Mv);
                } else {
                    throw new Error(n);
                }
            }
            console.warn(n);
            return;
        }
        this.jt = e;
    },
    Rv: function() {
        switch (this.jt) {
          case this.Ov:
            return THREE.ci;

          case this.Pv:
            return THREE.di;

          case this.Qv:
            return THREE.ei;
        }
    },
    fv: function() {
        return this.values.length / this.Nf.length;
    },
    shift: function(t) {
        if (t !== 0) {
            var e = this.Nf;
            for (var n = 0, i = e.length; n !== i; ++n) {
                e[n] += t;
            }
        }
        return this;
    },
    scale: function(t) {
        if (t !== 1) {
            var e = this.Nf;
            for (var n = 0, i = e.length; n !== i; ++n) {
                e[n] *= t;
            }
        }
        return this;
    },
    trim: function(t, e) {
        var n = this.Nf, i = n.length, r = 0, a = i - 1;
        while (r !== i && n[r] < t) ++r;
        while (a !== -1 && n[a] > e) --a;
        ++a;
        if (r !== 0 || a !== i) {
            if (r >= a) a = Math.max(a, 1), r = a - 1;
            var s = this.fv();
            this.Nf = THREE.pu.Hv(n, r, a);
            this.values = THREE.pu.Hv(this.values, r * s, a * s);
        }
        return this;
    },
    Nv: function() {
        var t = true;
        var e = this.fv();
        if (e - Math.floor(e) !== 0) {
            console.error("invalid value size in track", this);
            t = false;
        }
        var n = this.Nf, i = this.values, r = n.length;
        if (r === 0) {
            console.error("track is empty", this);
            t = false;
        }
        var a = null;
        for (var s = 0; s !== r; s++) {
            var o = n[s];
            if (typeof o === "number" && isNaN(o)) {
                console.error("time is not a valid number", this, s, o);
                t = false;
                break;
            }
            if (a !== null && a > o) {
                console.error("out of order keys", this, s, o, a);
                t = false;
                break;
            }
            a = o;
        }
        if (i !== undefined) {
            if (THREE.pu.jf(i)) {
                for (var s = 0, f = i.length; s !== f; ++s) {
                    var u = i[s];
                    if (isNaN(u)) {
                        console.error("value is not a valid number", this, s, u);
                        t = false;
                        break;
                    }
                }
            }
        }
        return t;
    },
    ku: function() {
        var t = this.Nf, e = this.values, n = this.fv(), i = 1;
        for (var r = 1, a = t.length - 1; r <= a; ++r) {
            var s = false;
            var o = t[r];
            var f = t[r + 1];
            if (o !== f && (r !== 1 || o !== o[0])) {
                var u = r * n, h = u - n, c = u + n;
                for (var l = 0; l !== n; ++l) {
                    var d = e[u + l];
                    if (d !== e[h + l] || d !== e[c + l]) {
                        s = true;
                        break;
                    }
                }
            }
            if (s) {
                if (r !== i) {
                    t[i] = t[r];
                    var v = r * n, p = i * n;
                    for (var l = 0; l !== n; ++l) {
                        e[p + l] = e[v + l];
                    }
                }
                ++i;
            }
        }
        if (i !== t.length) {
            this.Nf = THREE.pu.Hv(t, 0, i);
            this.values = THREE.pu.Hv(e, 0, i * n);
        }
        return this;
    }
};

Object.assign(THREE.mu, {
    parse: function(t) {
        if (t.type === undefined) {
            throw new Error("track type undefined, can not parse");
        }
        var e = THREE.mu.Sv(t.type);
        if (t.Nf === undefined) {
            var n = [], i = [];
            THREE.pu.wu(t.keys, n, i, "value");
            t.Nf = n;
            t.values = i;
        }
        if (e.parse !== undefined) {
            return e.parse(t);
        } else {
            return new e(t.name, t.Nf, t.values, t.Tv);
        }
    },
    toJSON: function(t) {
        var e = t.constructor;
        var n;
        if (e.toJSON !== undefined) {
            n = e.toJSON(t);
        } else {
            n = {
                name: t.name,
                Nf: THREE.pu.Iv(t.Nf, Array),
                values: THREE.pu.Iv(t.values, Array)
            };
            var i = t.Rv();
            if (i !== t.Mv) {
                n.Tv = i;
            }
        }
        n.type = t.ev;
        return n;
    },
    Sv: function(t) {
        switch (t.toLowerCase()) {
          case "scalar":
          case "double":
          case "float":
          case "number":
          case "integer":
            return THREE.ru;

          case "vector":
          case "vector2":
          case "vector3":
          case "vector4":
            return THREE.zu;

          case "color":
            return THREE.Uv;

          case "quaternion":
            return THREE.Au;

          case "bool":
          case "boolean":
            return THREE.Vv;

          case "string":
            return THREE.Wv;
        }
        throw new Error("Unsupported typeName: " + t);
    }
});

THREE.dv = function(t, e, n) {
    this.path = e;
    this.av = n || THREE.dv.Xv(e);
    this.Yv = THREE.dv.Zv(t, this.av.nodeName) || t;
    this.sv = t;
};

THREE.dv.prototype = {
    constructor: THREE.dv,
    $v: function t(e, n) {
        this.bind();
        this.$v(e, n);
    },
    _v: function t(e, n) {
        this.bind();
        this._v(e, n);
    },
    bind: function() {
        var t = this.Yv, e = this.av, n = e.aw, i = e.propertyName, r = e.bw;
        if (!t) {
            t = THREE.dv.Zv(this.sv, e.nodeName) || this.sv;
            this.Yv = t;
        }
        this.$v = this.cw;
        this._v = this.dw;
        if (!t) {
            console.error("  trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            var a = e.ew;
            switch (n) {
              case "materials":
                if (!t.k) {
                    console.error("  can not bind to material as node does not have a material", this);
                    return;
                }
                if (!t.k.ir) {
                    console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                    return;
                }
                t = t.k.ir;
                break;

              case "bones":
                if (!t.fw) {
                    console.error("  can not bind to bones as node does not have a skeleton", this);
                    return;
                }
                t = t.fw.gw;
                for (var s = 0; s < t.length; s++) {
                    if (t[s].name === a) {
                        a = s;
                        break;
                    }
                }
                break;

              default:
                if (t[n] === undefined) {
                    console.error("  can not bind to objectName of node, undefined", this);
                    return;
                }
                t = t[n];
            }
            if (a !== undefined) {
                if (t[a] === undefined) {
                    console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, t);
                    return;
                }
                t = t[a];
            }
        }
        var o = t[i];
        if (o === undefined) {
            var f = e.nodeName;
            console.error("  trying to update property for track: " + f + "." + i + " but it wasn't found.", t);
            return;
        }
        var u = this.iw.hw;
        if (t.ur !== undefined) {
            u = this.iw.jw;
            this.kw = t;
        } else if (t.Bq !== undefined) {
            u = this.iw.lw;
            this.kw = t;
        }
        var h = this.nw.mw;
        if (r !== undefined) {
            if (i === "morphTargetInfluences") {
                if (!t.j) {
                    console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this);
                    return;
                }
                if (!t.j.Yr) {
                    console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                    return;
                }
                for (var s = 0; s < this.Yv.j.Yr.length; s++) {
                    if (t.j.Yr[s].name === r) {
                        r = s;
                        break;
                    }
                }
            }
            h = this.nw.ow;
            this.pw = o;
            this.bw = r;
        } else if (o.Ui !== undefined && o.toArray !== undefined) {
            h = this.nw.qw;
            this.pw = o;
        } else if (o.length !== undefined) {
            h = this.nw.rw;
            this.pw = o;
        } else {
            this.propertyName = i;
        }
        this.$v = this.sw[h];
        this._v = this.tw[h][u];
    },
    uw: function() {
        this.Yv = null;
        this.$v = this.vw;
        this._v = this.ww;
    }
};

Object.assign(THREE.dv.prototype, {
    cw: function() {},
    dw: function() {},
    vw: THREE.dv.prototype.$v,
    ww: THREE.dv.prototype._v,
    nw: {
        mw: 0,
        rw: 1,
        ow: 2,
        qw: 3
    },
    iw: {
        hw: 0,
        jw: 1,
        lw: 2
    },
    sw: [ function t(e, n) {
        e[n] = this.Yv[this.propertyName];
    }, function t(e, n) {
        var i = this.pw;
        for (var r = 0, a = i.length; r !== a; ++r) {
            e[n++] = i[r];
        }
    }, function t(e, n) {
        e[n] = this.pw[this.bw];
    }, function t(e, n) {
        this.pw.toArray(e, n);
    } ],
    tw: [ [ function t(e, n) {
        this.Yv[this.propertyName] = e[n];
    }, function t(e, n) {
        this.Yv[this.propertyName] = e[n];
        this.kw.ur = true;
    }, function t(e, n) {
        this.Yv[this.propertyName] = e[n];
        this.kw.Bq = true;
    } ], [ function t(e, n) {
        var i = this.pw;
        for (var r = 0, a = i.length; r !== a; ++r) {
            i[r] = e[n++];
        }
    }, function t(e, n) {
        var i = this.pw;
        for (var r = 0, a = i.length; r !== a; ++r) {
            i[r] = e[n++];
        }
        this.kw.ur = true;
    }, function t(e, n) {
        var i = this.pw;
        for (var r = 0, a = i.length; r !== a; ++r) {
            i[r] = e[n++];
        }
        this.kw.Bq = true;
    } ], [ function t(e, n) {
        this.pw[this.bw] = e[n];
    }, function t(e, n) {
        this.pw[this.bw] = e[n];
        this.kw.ur = true;
    }, function t(e, n) {
        this.pw[this.bw] = e[n];
        this.kw.Bq = true;
    } ], [ function t(e, n) {
        this.pw.Ui(e, n);
    }, function t(e, n) {
        this.pw.Ui(e, n);
        this.kw.ur = true;
    }, function t(e, n) {
        this.pw.Ui(e, n);
        this.kw.Bq = true;
    } ] ]
});

THREE.dv.xw = function(t, e, n) {
    var i = n || THREE.dv.Xv(e);
    this.yw = t;
    this.Pu = t.Fv(e, i);
};

THREE.dv.xw.prototype = {
    constructor: THREE.dv.xw,
    $v: function(t, e) {
        this.bind();
        var n = this.yw.xv, i = this.Pu[n];
        if (i !== undefined) i.$v(t, e);
    },
    _v: function(t, e) {
        var n = this.Pu;
        for (var i = this.yw.xv, r = n.length; i !== r; ++i) {
            n[i]._v(t, e);
        }
    },
    bind: function() {
        var t = this.Pu;
        for (var e = this.yw.xv, n = t.length; e !== n; ++e) {
            t[e].bind();
        }
    },
    uw: function() {
        var t = this.Pu;
        for (var e = this.yw.xv, n = t.length; e !== n; ++e) {
            t[e].uw();
        }
    }
};

THREE.dv.create = function(t, e, n) {
    if (!(t instanceof THREE.vv)) {
        return new THREE.dv(t, e, n);
    } else {
        return new THREE.dv.xw(t, e, n);
    }
};

THREE.dv.Xv = function(t) {
    var e = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/;
    var n = e.exec(t);
    if (!n) {
        throw new Error("cannot parse trackName at all: " + t);
    }
    if (n.index === e.lastIndex) {
        e.lastIndex++;
    }
    var i = {
        nodeName: n[3],
        aw: n[5],
        ew: n[7],
        propertyName: n[9],
        bw: n[11]
    };
    if (i.propertyName === null || i.propertyName.length === 0) {
        throw new Error("can not parse propertyName from trackName: " + t);
    }
    return i;
};

THREE.dv.Zv = function(t, e) {
    if (!e || e === "" || e === "root" || e === "." || e === -1 || e === t.name || e === t.sq) {
        return t;
    }
    if (t.fw) {
        var n = function(t) {
            for (var n = 0; n < t.gw.length; n++) {
                var i = t.gw[n];
                if (i.name === e) {
                    return i;
                }
            }
            return null;
        };
        var i = n(t.fw);
        if (i) {
            return i;
        }
    }
    if (t.children) {
        var r = function(t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                if (i.name === e || i.sq === e) {
                    return i;
                }
                var a = r(i.children);
                if (a) return a;
            }
            return null;
        };
        var a = r(t.children);
        if (a) {
            return a;
        }
    }
    return null;
};

THREE.cv = function(t, e, n) {
    this.bv = t;
    this.yp = n;
    var i = Float64Array, r;
    switch (e) {
      case "quaternion":
        r = this.zw;
        break;

      case "string":
      case "bool":
        i = Array, r = this.Aw;
        break;

      default:
        r = this.Bw;
    }
    this.buffer = new i(n * 4);
    this.Cw = r;
    this.Dw = 0;
    this.Ru = 0;
    this.$u = 0;
};

THREE.cv.prototype = {
    constructor: THREE.cv,
    eu: function(t, e) {
        var n = this.buffer, i = this.yp, r = t * i + i, a = this.Dw;
        if (a === 0) {
            for (var s = 0; s !== i; ++s) {
                n[r + s] = n[s];
            }
            a = e;
        } else {
            a += e;
            var o = e / a;
            this.Cw(n, r, 0, o, i);
        }
        this.Dw = a;
    },
    apply: function(t) {
        var e = this.yp, n = this.buffer, i = t * e + e, r = this.Dw, a = this.bv;
        this.Dw = 0;
        if (r < 1) {
            var s = e * 3;
            this.Cw(n, i, s, 1 - r, e);
        }
        for (var o = e, f = e + e; o !== f; ++o) {
            if (n[o] !== n[o + e]) {
                a._v(n, i);
                break;
            }
        }
    },
    hv: function() {
        var t = this.bv;
        var e = this.buffer, n = this.yp, i = n * 3;
        t.$v(e, i);
        for (var r = n, a = i; r !== a; ++r) {
            e[r] = e[i + r % n];
        }
        this.Dw = 0;
    },
    Xu: function() {
        var t = this.yp * 3;
        this.bv._v(this.buffer, t);
    },
    Aw: function(t, e, n, i, r) {
        if (i >= .5) {
            for (var a = 0; a !== r; ++a) {
                t[e + a] = t[n + a];
            }
        }
    },
    zw: function(t, e, n, i, r) {
        THREE.Dl.Wl(t, e, t, e, t, n, i);
    },
    Bw: function(t, e, n, i, r) {
        var a = 1 - i;
        for (var s = 0; s !== r; ++s) {
            var o = e + s;
            t[o] = t[o] * a + t[n + s] * i;
        }
    }
};

THREE.Vv = function(t, e, n) {
    THREE.mu.call(this, t, e, n);
};

THREE.Vv.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.Vv,
    ev: "bool",
    Kv: Array,
    Mv: THREE.ci,
    Pv: undefined,
    Qv: undefined
});

THREE.Uv = function(t, e, n, i) {
    THREE.mu.call(this, t, e, n, i);
};

THREE.Uv.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.Uv,
    ev: "color"
});

THREE.ru = function(t, e, n, i) {
    THREE.mu.call(this, t, e, n, i);
};

THREE.ru.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.ru,
    ev: "number"
});

THREE.Au = function(t, e, n, i) {
    THREE.mu.call(this, t, e, n, i);
};

THREE.Au.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.Au,
    ev: "quaternion",
    Mv: THREE.di,
    Pv: function(t) {
        return new THREE.Qp(this.Nf, this.values, this.fv(), t);
    },
    Qv: undefined
});

THREE.Wv = function(t, e, n, i) {
    THREE.mu.call(this, t, e, n, i);
};

THREE.Wv.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.Wv,
    ev: "string",
    Kv: Array,
    Mv: THREE.ci,
    Pv: undefined,
    Qv: undefined
});

THREE.zu = function(t, e, n, i) {
    THREE.mu.call(this, t, e, n, i);
};

THREE.zu.prototype = Object.assign(Object.create(THREE.mu.prototype), {
    constructor: THREE.zu,
    ev: "vector"
});

THREE.Audio = function(t) {
    THREE.qq.call(this);
    this.type = "Audio";
    this.context = t.context;
    this.source = this.context.createBufferSource();
    this.source.onended = this.Ew.bind(this);
    this.gain = this.context.createGain();
    this.gain.connect(t.Fw());
    this.autoplay = false;
    this.startTime = 0;
    this.playbackRate = 1;
    this.Gw = false;
    this.Hw = true;
    this.Iw = "empty";
    this.filters = [];
};

THREE.Audio.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.Audio,
    Jw: function() {
        return this.gain;
    },
    Kw: function(t) {
        this.Hw = false;
        this.Iw = "audioNode";
        this.source = t;
        this.connect();
        return this;
    },
    Lw: function(t) {
        this.source.buffer = t;
        this.Iw = "buffer";
        if (this.autoplay) this.play();
        return this;
    },
    play: function() {
        if (this.Gw === true) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        var t = this.context.createBufferSource();
        t.buffer = this.source.buffer;
        t.loop = this.source.loop;
        t.onended = this.source.onended;
        t.start(0, this.startTime);
        t.playbackRate.value = this.playbackRate;
        this.Gw = true;
        this.source = t;
        return this.connect();
    },
    pause: function() {
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this.source.stop();
        this.startTime = this.context.currentTime;
        this.Gw = false;
        return this;
    },
    stop: function() {
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this.source.stop();
        this.startTime = 0;
        this.Gw = false;
        return this;
    },
    connect: function() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (var t = 1, e = this.filters.length; t < e; t++) {
                this.filters[t - 1].connect(this.filters[t]);
            }
            this.filters[this.filters.length - 1].connect(this.Jw());
        } else {
            this.source.connect(this.Jw());
        }
        return this;
    },
    disconnect: function() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for (var t = 1, e = this.filters.length; t < e; t++) {
                this.filters[t - 1].disconnect(this.filters[t]);
            }
            this.filters[this.filters.length - 1].disconnect(this.Jw());
        } else {
            this.source.disconnect(this.Jw());
        }
        return this;
    },
    Mw: function() {
        return this.filters;
    },
    Nw: function(t) {
        if (!t) t = [];
        if (this.Gw === true) {
            this.disconnect();
            this.filters = t;
            this.connect();
        } else {
            this.filters = t;
        }
        return this;
    },
    Ow: function() {
        return this.Mw()[0];
    },
    Pw: function(t) {
        return this.Nw(t ? [ t ] : []);
    },
    Qw: function(t) {
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this.playbackRate = t;
        if (this.Gw === true) {
            this.source.playbackRate.value = this.playbackRate;
        }
        return this;
    },
    Rw: function() {
        return this.playbackRate;
    },
    Ew: function() {
        this.Gw = false;
    },
    Sw: function() {
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return false;
        }
        return this.source.loop;
    },
    Jt: function(t) {
        if (this.Hw === false) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this.source.loop = t;
    },
    Tw: function() {
        return this.gain.gain.value;
    },
    Uw: function(t) {
        this.gain.gain.value = t;
        return this;
    }
});

THREE.Vw = function(t, e) {
    this.Ww = t.context.createAnalyser();
    this.Ww.fftSize = e !== undefined ? e : 2048;
    this.data = new Uint8Array(this.Ww.frequencyBinCount);
    t.Jw().connect(this.Ww);
};

Object.assign(THREE.Vw.prototype, {
    Xw: function() {
        this.Ww.getByteFrequencyData(this.data);
        return this.data;
    },
    Yw: function() {
        var t = 0, e = this.Xw();
        for (var n = 0; n < e.length; n++) {
            t += e[n];
        }
        return t / e.length;
    }
});

Object.defineProperty(THREE, "AudioContext", {
    get: function() {
        var t;
        return function e() {
            if (t === undefined) {
                t = new (window.AudioContext || window.webkitAudioContext)();
            }
            return t;
        };
    }()
});

THREE.Zw = function(t) {
    THREE.Audio.call(this, t);
    this.$w = this.context.createPanner();
    this.$w.connect(this.gain);
};

THREE.Zw.prototype = Object.assign(Object.create(THREE.Audio.prototype), {
    constructor: THREE.Zw,
    Jw: function() {
        return this.$w;
    },
    _w: function() {
        return this.$w.refDistance;
    },
    ax: function(t) {
        this.$w.refDistance = t;
    },
    bx: function() {
        return this.$w.rolloffFactor;
    },
    ex: function(t) {
        this.$w.rolloffFactor = t;
    },
    gx: function() {
        return this.$w.distanceModel;
    },
    hx: function(t) {
        this.$w.distanceModel = t;
    },
    ix: function() {
        return this.$w.maxDistance;
    },
    jx: function(t) {
        this.$w.maxDistance = t;
    },
    yn: function() {
        var t = new THREE.K();
        return function e(n) {
            THREE.qq.prototype.yn.call(this, n);
            t.Pm(this.Em);
            this.$w.setPosition(t.x, t.y, t.z);
        };
    }()
});

THREE.AudioListener = function() {
    THREE.qq.call(this);
    this.type = "AudioListener";
    this.context = THREE.AudioContext;
    this.gain = this.context.createGain();
    this.gain.connect(this.context.destination);
    this.filter = null;
};

THREE.AudioListener.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.AudioListener,
    Fw: function() {
        return this.gain;
    },
    removeFilter: function() {
        if (this.filter !== null) {
            this.gain.disconnect(this.filter);
            this.filter.disconnect(this.context.destination);
            this.gain.connect(this.context.destination);
            this.filter = null;
        }
    },
    Ow: function() {
        return this.filter;
    },
    Pw: function(t) {
        if (this.filter !== null) {
            this.gain.disconnect(this.filter);
            this.filter.disconnect(this.context.destination);
        } else {
            this.gain.disconnect(this.context.destination);
        }
        this.filter = t;
        this.gain.connect(this.filter);
        this.filter.connect(this.context.destination);
    },
    kx: function() {
        return this.gain.gain.value;
    },
    lx: function(t) {
        this.gain.gain.value = t;
    },
    yn: function() {
        var t = new THREE.K();
        var e = new THREE.Dl();
        var n = new THREE.K();
        var i = new THREE.K();
        return function r(a) {
            THREE.qq.prototype.yn.call(this, a);
            var s = this.context.listener;
            var o = this.tq;
            this.Em.mo(t, e, n);
            i.set(0, 0, -1).um(e);
            s.setPosition(t.x, t.y, t.z);
            s.setOrientation(i.x, i.y, i.z, o.x, o.y, o.z);
        };
    }()
});

THREE.mx = function() {
    THREE.qq.call(this);
    this.type = "Camera";
    this.nx = new THREE.Am();
    this.Cm = new THREE.Am();
};

THREE.mx.prototype = Object.create(THREE.qq.prototype);

THREE.mx.prototype.constructor = THREE.mx;

THREE.mx.prototype.cr = function() {
    var t = new THREE.Dl();
    return function e(n) {
        var i = n || new THREE.K();
        this._q(t);
        return i.set(0, 0, -1).um(t);
    };
}();

THREE.mx.prototype.ao = function() {
    var t = new THREE.Am();
    return function e(n) {
        t.ao(this.position, n, this.tq);
        this.wq.Ml(t);
    };
}();

THREE.mx.prototype.clone = function() {
    return new this.constructor().xi(this);
};

THREE.mx.prototype.xi = function(t) {
    THREE.qq.prototype.xi.call(this, t);
    this.nx.xi(t.nx);
    this.Cm.xi(t.Cm);
    return this;
};

THREE.ox = function(t, e, n) {
    THREE.qq.call(this);
    this.type = "CubeCamera";
    var i = 90, r = 1;
    var a = new THREE.mq(i, r, t, e);
    a.tq.set(0, -1, 0);
    a.ao(new THREE.K(1, 0, 0));
    this.add(a);
    var s = new THREE.mq(i, r, t, e);
    s.tq.set(0, -1, 0);
    s.ao(new THREE.K(-1, 0, 0));
    this.add(s);
    var o = new THREE.mq(i, r, t, e);
    o.tq.set(0, 0, 1);
    o.ao(new THREE.K(0, 1, 0));
    this.add(o);
    var f = new THREE.mq(i, r, t, e);
    f.tq.set(0, 0, -1);
    f.ao(new THREE.K(0, -1, 0));
    this.add(f);
    var u = new THREE.mq(i, r, t, e);
    u.tq.set(0, -1, 0);
    u.ao(new THREE.K(0, 0, 1));
    this.add(u);
    var h = new THREE.mq(i, r, t, e);
    h.tq.set(0, -1, 0);
    h.ao(new THREE.K(0, 0, -1));
    this.add(h);
    var c = {
        format: THREE.Mh,
        px: THREE.xh,
        qx: THREE.xh
    };
    this.sx = new THREE.tx(n, n, c);
    this.ux = function(t, e) {
        if (this.parent === null) this.yn();
        var n = this.sx;
        var i = n.G.vx;
        n.G.vx = false;
        n.wx = 0;
        t.xx(e, a, n);
        n.wx = 1;
        t.xx(e, s, n);
        n.wx = 2;
        t.xx(e, o, n);
        n.wx = 3;
        t.xx(e, f, n);
        n.wx = 4;
        t.xx(e, u, n);
        n.G.vx = i;
        n.wx = 5;
        t.xx(e, h, n);
        t.yx(null);
    };
};

THREE.ox.prototype = Object.create(THREE.qq.prototype);

THREE.ox.prototype.constructor = THREE.ox;

THREE.nq = function(t, e, n, i, r, a) {
    THREE.mx.call(this);
    this.type = "OrthographicCamera";
    this.zoom = 1;
    this.view = null;
    this.left = t;
    this.right = e;
    this.top = n;
    this.bottom = i;
    this.near = r !== undefined ? r : .1;
    this.bq = a !== undefined ? a : 2e3;
    this.zx();
};

THREE.nq.prototype = Object.assign(Object.create(THREE.mx.prototype), {
    constructor: THREE.nq,
    xi: function(t) {
        THREE.mx.prototype.xi.call(this, t);
        this.left = t.left;
        this.right = t.right;
        this.top = t.top;
        this.bottom = t.bottom;
        this.near = t.near;
        this.bq = t.bq;
        this.zoom = t.zoom;
        this.view = t.view === null ? null : Object.assign({}, t.view);
        return this;
    },
    Ax: function(t, e, n, i, r, a) {
        this.view = {
            Bx: t,
            Cx: e,
            offsetX: n,
            offsetY: i,
            width: r,
            height: a
        };
        this.zx();
    },
    Dx: function() {
        this.view = null;
        this.zx();
    },
    zx: function() {
        var t = (this.right - this.left) / (2 * this.zoom);
        var e = (this.top - this.bottom) / (2 * this.zoom);
        var n = (this.right + this.left) / 2;
        var i = (this.top + this.bottom) / 2;
        var r = n - t;
        var a = n + t;
        var s = i + e;
        var o = i - e;
        if (this.view !== null) {
            var f = this.zoom / (this.view.width / this.view.Bx);
            var u = this.zoom / (this.view.height / this.view.Cx);
            var h = (this.right - this.left) / this.view.width;
            var c = (this.top - this.bottom) / this.view.height;
            r += h * (this.view.offsetX / f);
            a = r + h * (this.view.width / f);
            s -= c * (this.view.offsetY / u);
            o = s - c * (this.view.height / u);
        }
        this.Cm.qo(r, a, s, o, this.near, this.bq);
    },
    toJSON: function(t) {
        var e = THREE.qq.prototype.toJSON.call(this, t);
        e.object.zoom = this.zoom;
        e.object.left = this.left;
        e.object.right = this.right;
        e.object.top = this.top;
        e.object.bottom = this.bottom;
        e.object.near = this.near;
        e.object.bq = this.bq;
        if (this.view !== null) e.object.view = Object.assign({}, this.view);
        return e;
    }
});

THREE.mq = function(t, e, n, i) {
    THREE.mx.call(this);
    this.type = "PerspectiveCamera";
    this.Ex = t !== undefined ? t : 50;
    this.zoom = 1;
    this.near = n !== undefined ? n : .1;
    this.bq = i !== undefined ? i : 2e3;
    this.focus = 10;
    this.Fx = e !== undefined ? e : 1;
    this.view = null;
    this.Gx = 35;
    this.Hx = 0;
    this.zx();
};

THREE.mq.prototype = Object.assign(Object.create(THREE.mx.prototype), {
    constructor: THREE.mq,
    xi: function(t) {
        THREE.mx.prototype.xi.call(this, t);
        this.Ex = t.Ex;
        this.zoom = t.zoom;
        this.near = t.near;
        this.bq = t.bq;
        this.focus = t.focus;
        this.Fx = t.Fx;
        this.view = t.view === null ? null : Object.assign({}, t.view);
        this.Gx = t.Gx;
        this.Hx = t.Hx;
        return this;
    },
    Ix: function(t) {
        var e = .5 * this.Jx() / t;
        this.Ex = THREE.Math.Uo * 2 * Math.atan(e);
        this.zx();
    },
    Kx: function() {
        var t = Math.tan(THREE.Math.po * .5 * this.Ex);
        return .5 * this.Jx() / t;
    },
    Lx: function() {
        return THREE.Math.Uo * 2 * Math.atan(Math.tan(THREE.Math.po * .5 * this.Ex) / this.zoom);
    },
    Mx: function() {
        return this.Gx * Math.min(this.Fx, 1);
    },
    Jx: function() {
        return this.Gx / Math.max(this.Fx, 1);
    },
    Ax: function(t, e, n, i, r, a) {
        this.Fx = t / e;
        this.view = {
            Bx: t,
            Cx: e,
            offsetX: n,
            offsetY: i,
            width: r,
            height: a
        };
        this.zx();
    },
    Dx: function() {
        this.view = null;
        this.zx();
    },
    zx: function() {
        var t = this.near, e = t * Math.tan(THREE.Math.po * .5 * this.Ex) / this.zoom, n = 2 * e, i = this.Fx * n, r = -.5 * i, a = this.view;
        if (a !== null) {
            var s = a.Bx, o = a.Cx;
            r += a.offsetX * i / s;
            e -= a.offsetY * n / o;
            i *= a.width / s;
            n *= a.height / o;
        }
        var f = this.Hx;
        if (f !== 0) r += t * f / this.Mx();
        this.Cm.no(r, r + i, e - n, e, t, this.bq);
    },
    toJSON: function(t) {
        var e = THREE.qq.prototype.toJSON.call(this, t);
        e.object.Ex = this.Ex;
        e.object.zoom = this.zoom;
        e.object.near = this.near;
        e.object.bq = this.bq;
        e.object.focus = this.focus;
        e.object.Fx = this.Fx;
        if (this.view !== null) e.object.view = Object.assign({}, this.view);
        e.object.Gx = this.Gx;
        e.object.Hx = this.Hx;
        return e;
    }
});

THREE.Nx = function() {
    this.type = "StereoCamera";
    this.Fx = 1;
    this.Ox = new THREE.mq();
    this.Ox.Cq.enable(1);
    this.Ox.zq = false;
    this.Px = new THREE.mq();
    this.Px.Cq.enable(2);
    this.Px.zq = false;
};

Object.assign(THREE.Nx.prototype, {
    update: function() {
        var t, e, n, i, r;
        var a = new THREE.Am();
        var s = new THREE.Am();
        return function o(f) {
            var u = t !== f.focus || e !== f.Ex || n !== f.Fx * this.Fx || i !== f.near || r !== f.bq;
            if (u) {
                t = f.focus;
                e = f.Ex;
                n = f.Fx * this.Fx;
                i = f.near;
                r = f.bq;
                var h = f.Cm.clone();
                var c = .064 / 2;
                var l = c * i / t;
                var d = i * Math.tan(THREE.Math.po * e * .5);
                var v, p;
                s.elements[12] = -c;
                a.elements[12] = c;
                v = -d * n + l;
                p = d * n + l;
                h.elements[0] = 2 * i / (p - v);
                h.elements[8] = (p + v) / (p - v);
                this.Ox.Cm.xi(h);
                v = -d * n - l;
                p = d * n - l;
                h.elements[0] = 2 * i / (p - v);
                h.elements[8] = (p + v) / (p - v);
                this.Px.Cm.xi(h);
            }
            this.Ox.Em.xi(f.Em).multiply(s);
            this.Px.Em.xi(f.Em).multiply(a);
        };
    }()
});

THREE.Qx = function(t, e) {
    THREE.qq.call(this);
    this.type = "Light";
    this.color = new THREE.T(t);
    this.Rx = e !== undefined ? e : 1;
    this.Eq = undefined;
};

THREE.Qx.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.Qx,
    xi: function(t) {
        THREE.qq.prototype.xi.call(this, t);
        this.color.xi(t.color);
        this.Rx = t.Rx;
        return this;
    },
    toJSON: function(t) {
        var e = THREE.qq.prototype.toJSON.call(this, t);
        e.object.color = this.color.Ii();
        e.object.Rx = this.Rx;
        if (this.Sx !== undefined) e.object.Sx = this.Sx.Ii();
        if (this.fn !== undefined) e.object.fn = this.fn;
        if (this.angle !== undefined) e.object.angle = this.angle;
        if (this.Tx !== undefined) e.object.Tx = this.Tx;
        if (this.Ux !== undefined) e.object.Ux = this.Ux;
        return e;
    }
});

THREE.Vx = function(t) {
    this.Wx = t;
    this.bias = 0;
    this.N = 1;
    this.Xx = new THREE.fa(512, 512);
    this.map = null;
    this.matrix = new THREE.Am();
};

Object.assign(THREE.Vx.prototype, {
    xi: function(t) {
        this.Wx = t.Wx.clone();
        this.bias = t.bias;
        this.N = t.N;
        this.Xx.xi(t.Xx);
        return this;
    },
    clone: function() {
        return new this.constructor().xi(this);
    }
});

THREE.Yx = function(t, e) {
    THREE.Qx.call(this, t, e);
    this.type = "AmbientLight";
    this.Dq = undefined;
};

THREE.Yx.prototype = Object.assign(Object.create(THREE.Qx.prototype), {
    constructor: THREE.Yx
});

THREE.Zx = function(t, e) {
    THREE.Qx.call(this, t, e);
    this.type = "DirectionalLight";
    this.position.xi(THREE.qq.uq);
    this.gr();
    this.target = new THREE.qq();
    this.$x = new THREE._x();
};

THREE.Zx.prototype = Object.assign(Object.create(THREE.Qx.prototype), {
    constructor: THREE.Zx,
    xi: function(t) {
        THREE.Qx.prototype.xi.call(this, t);
        this.target = t.target.clone();
        this.$x = t.$x.clone();
        return this;
    }
});

THREE._x = function(t) {
    THREE.Vx.call(this, new THREE.nq(-5, 5, 5, -5, .5, 500));
};

THREE._x.prototype = Object.assign(Object.create(THREE.Vx.prototype), {
    constructor: THREE._x
});

THREE.ay = function(t, e, n) {
    THREE.Qx.call(this, t, n);
    this.type = "HemisphereLight";
    this.Dq = undefined;
    this.position.xi(THREE.qq.uq);
    this.gr();
    this.Sx = new THREE.T(e);
};

THREE.ay.prototype = Object.assign(Object.create(THREE.Qx.prototype), {
    constructor: THREE.ay,
    xi: function(t) {
        THREE.Qx.prototype.xi.call(this, t);
        this.Sx.xi(t.Sx);
        return this;
    }
});

THREE.by = function(t, e, n, i) {
    THREE.Qx.call(this, t, e);
    this.type = "PointLight";
    Object.defineProperty(this, "power", {
        get: function() {
            return this.Rx * 4 * Math.PI;
        },
        set: function(t) {
            this.Rx = t / (4 * Math.PI);
        }
    });
    this.fn = n !== undefined ? n : 0;
    this.Tx = i !== undefined ? i : 1;
    this.$x = new THREE.Vx(new THREE.mq(90, 1, .5, 500));
};

THREE.by.prototype = Object.assign(Object.create(THREE.Qx.prototype), {
    constructor: THREE.by,
    xi: function(t) {
        THREE.Qx.prototype.xi.call(this, t);
        this.fn = t.fn;
        this.Tx = t.Tx;
        this.$x = t.$x.clone();
        return this;
    }
});

THREE.ey = function(t, e, n, i, r, a) {
    THREE.Qx.call(this, t, e);
    this.type = "SpotLight";
    this.position.xi(THREE.qq.uq);
    this.gr();
    this.target = new THREE.qq();
    Object.defineProperty(this, "power", {
        get: function() {
            return this.Rx * Math.PI;
        },
        set: function(t) {
            this.Rx = t / Math.PI;
        }
    });
    this.fn = n !== undefined ? n : 0;
    this.angle = i !== undefined ? i : Math.PI / 3;
    this.Ux = r !== undefined ? r : 0;
    this.Tx = a !== undefined ? a : 1;
    this.$x = new THREE.gy();
};

THREE.ey.prototype = Object.assign(Object.create(THREE.Qx.prototype), {
    constructor: THREE.ey,
    xi: function(t) {
        THREE.Qx.prototype.xi.call(this, t);
        this.fn = t.fn;
        this.angle = t.angle;
        this.Ux = t.Ux;
        this.Tx = t.Tx;
        this.target = t.target.clone();
        this.$x = t.$x.clone();
        return this;
    }
});

THREE.gy = function() {
    THREE.Vx.call(this, new THREE.mq(50, 1, .5, 500));
};

THREE.gy.prototype = Object.assign(Object.create(THREE.Vx.prototype), {
    constructor: THREE.gy,
    update: function(t) {
        var e = THREE.Math.Uo * 2 * t.angle;
        var n = this.Xx.width / this.Xx.height;
        var i = t.fn || 500;
        var r = this.Wx;
        if (e !== r.Ex || n !== r.Fx || i !== r.bq) {
            r.Ex = e;
            r.Fx = n;
            r.bq = i;
            r.zx();
        }
    }
});

THREE.hy = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.hy.prototype, {
    load: function(t, e, n, i) {
        var r = new THREE.ky(this.iy);
        r.ly("arraybuffer");
        r.load(t, function(t) {
            var n = THREE.AudioContext;
            n.decodeAudioData(t, function(t) {
                e(t);
            });
        }, n, i);
    }
});

THREE.oc = {
    enabled: false,
    files: {},
    add: function(t, e) {
        if (this.enabled === false) return;
        this.files[t] = e;
    },
    get: function(t) {
        if (this.enabled === false) return;
        return this.files[t];
    },
    remove: function(t) {
        delete this.files[t];
    },
    clear: function() {
        this.files = {};
    }
};

THREE.my = function() {
    this.ny = function() {};
    this.oy = function() {};
    this.py = function() {};
};

THREE.my.prototype = {
    constructor: THREE.my,
    crossOrigin: undefined,
    qy: function(t) {
        var e = t.split("/");
        if (e.length === 1) return "./";
        e.pop();
        return e.join("/") + "/";
    },
    sy: function(t, e, n) {
        var i = [];
        for (var r = 0; r < t.length; ++r) {
            i[r] = this.ty(t[r], e, n);
        }
        return i;
    },
    ty: function() {
        var t, e, n;
        return function i(r, a, s) {
            if (t === undefined) t = new THREE.T();
            if (e === undefined) e = new THREE.A();
            if (n === undefined) n = new THREE.uy();
            var o = {};
            function f(t, n, i, r, f) {
                var u = a + t;
                var h = THREE.my.vy.get(u);
                var c;
                if (h !== null) {
                    c = h.load(u);
                } else {
                    e.wy(s);
                    c = e.load(u);
                }
                if (n !== undefined) {
                    c.repeat.Ui(n);
                    if (n[0] !== 1) c.xy = THREE.rh;
                    if (n[1] !== 1) c.yy = THREE.rh;
                }
                if (i !== undefined) {
                    c.offset.Ui(i);
                }
                if (r !== undefined) {
                    if (r[0] === "repeat") c.xy = THREE.rh;
                    if (r[0] === "mirror") c.xy = THREE.th;
                    if (r[1] === "repeat") c.yy = THREE.rh;
                    if (r[1] === "mirror") c.yy = THREE.th;
                }
                if (f !== undefined) {
                    c.zy = f;
                }
                var l = THREE.Math.Vo();
                o[l] = c;
                return l;
            }
            var u = {
                sq: THREE.Math.Vo(),
                type: "MeshLambertMaterial"
            };
            for (var h in r) {
                var c = r[h];
                switch (h) {
                  case "DbgColor":
                  case "DbgIndex":
                  case "opticalDensity":
                  case "illumination":
                    break;

                  case "DbgName":
                    u.name = c;
                    break;

                  case "blending":
                    u.Ay = THREE[c];
                    break;

                  case "colorAmbient":
                  case "mapAmbient":
                    console.warn("THREE.Loader.createMaterial:", h, "is no longer supported.");
                    break;

                  case "colorDiffuse":
                    u.color = t.Ui(c).Ii();
                    break;

                  case "colorSpecular":
                    u.By = t.Ui(c).Ii();
                    break;

                  case "colorEmissive":
                    u.Cy = t.Ui(c).Ii();
                    break;

                  case "specularCoef":
                    u.Dy = c;
                    break;

                  case "shading":
                    if (c.toLowerCase() === "basic") u.type = "MeshBasicMaterial";
                    if (c.toLowerCase() === "phong") u.type = "MeshPhongMaterial";
                    if (c.toLowerCase() === "standard") u.type = "MeshStandardMaterial";
                    break;

                  case "mapDiffuse":
                    u.map = f(c, r.Ey, r.Fy, r.Gy, r.Hy);
                    break;

                  case "mapDiffuseRepeat":
                  case "mapDiffuseOffset":
                  case "mapDiffuseWrap":
                  case "mapDiffuseAnisotropy":
                    break;

                  case "mapEmissive":
                    u.Iy = f(c, r.Jy, r.Ky, r.Ly, r.My);
                    break;

                  case "mapEmissiveRepeat":
                  case "mapEmissiveOffset":
                  case "mapEmissiveWrap":
                  case "mapEmissiveAnisotropy":
                    break;

                  case "mapLight":
                    u.Ny = f(c, r.Oy, r.Py, r.Qy, r.Ry);
                    break;

                  case "mapLightRepeat":
                  case "mapLightOffset":
                  case "mapLightWrap":
                  case "mapLightAnisotropy":
                    break;

                  case "mapAO":
                    u.Sy = f(c, r.Ty, r.Uy, r.Vy, r.Wy);
                    break;

                  case "mapAORepeat":
                  case "mapAOOffset":
                  case "mapAOWrap":
                  case "mapAOAnisotropy":
                    break;

                  case "mapBump":
                    u.Xy = f(c, r.Yy, r.Zy, r.$y, r._y);
                    break;

                  case "mapBumpScale":
                    u.az = c;
                    break;

                  case "mapBumpRepeat":
                  case "mapBumpOffset":
                  case "mapBumpWrap":
                  case "mapBumpAnisotropy":
                    break;

                  case "mapNormal":
                    u.bz = f(c, r.cz, r.dz, r.ez, r.fz);
                    break;

                  case "mapNormalFactor":
                    u.gz = [ c, c ];
                    break;

                  case "mapNormalRepeat":
                  case "mapNormalOffset":
                  case "mapNormalWrap":
                  case "mapNormalAnisotropy":
                    break;

                  case "mapSpecular":
                    u.hz = f(c, r.iz, r.jz, r.kz, r.lz);
                    break;

                  case "mapSpecularRepeat":
                  case "mapSpecularOffset":
                  case "mapSpecularWrap":
                  case "mapSpecularAnisotropy":
                    break;

                  case "mapMetalness":
                    u.mz = f(c, r.nz, r.oz, r.pz, r.qz);
                    break;

                  case "mapMetalnessRepeat":
                  case "mapMetalnessOffset":
                  case "mapMetalnessWrap":
                  case "mapMetalnessAnisotropy":
                    break;

                  case "mapRoughness":
                    u.rz = f(c, r.sz, r.tz, r.uz, r.vz);
                    break;

                  case "mapRoughnessRepeat":
                  case "mapRoughnessOffset":
                  case "mapRoughnessWrap":
                  case "mapRoughnessAnisotropy":
                    break;

                  case "mapAlpha":
                    u.wz = f(c, r.xz, r.yz, r.zz, r.Az);
                    break;

                  case "mapAlphaRepeat":
                  case "mapAlphaOffset":
                  case "mapAlphaWrap":
                  case "mapAlphaAnisotropy":
                    break;

                  case "flipSided":
                    u.Bz = THREE.rg;
                    break;

                  case "doubleSided":
                    u.Bz = THREE.sg;
                    break;

                  case "transparency":
                    console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity");
                    u.opacity = c;
                    break;

                  case "depthTest":
                  case "depthWrite":
                  case "colorWrite":
                  case "opacity":
                  case "reflectivity":
                  case "transparent":
                  case "visible":
                  case "wireframe":
                    u[h] = c;
                    break;

                  case "vertexColors":
                    if (c === true) u.or = THREE.xg;
                    if (c === "face") u.or = THREE.wg;
                    break;

                  default:
                    console.error("THREE.Loader.createMaterial: Unsupported", h, c);
                    break;
                }
            }
            if (u.type === "MeshBasicMaterial") delete u.Cy;
            if (u.type !== "MeshPhongMaterial") delete u.By;
            if (u.opacity < 1) u.D = true;
            n.Cz(o);
            return n.parse(u);
        };
    }()
};

THREE.my.vy = {
    Dz: [],
    add: function(t, e) {
        this.Dz.push(t, e);
    },
    get: function(t) {
        var e = this.Dz;
        for (var n = 0, i = e.length; n < i; n += 2) {
            var r = e[n];
            var a = e[n + 1];
            if (r.test(t)) {
                return a;
            }
        }
        return null;
    }
};

THREE.ky = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.ky.prototype, {
    load: function(t, e, n, i) {
        if (this.path !== undefined) t = this.path + t;
        var r = this;
        var a = THREE.oc.get(t);
        if (a !== undefined) {
            r.iy.Ez(t);
            setTimeout(function() {
                if (e) e(a);
                r.iy.Fz(t);
            }, 0);
            return a;
        }
        var s = new XMLHttpRequest();
        s.overrideMimeType("text/plain");
        s.open("GET", t, true);
        s.addEventListener("load", function(n) {
            var a = n.target.response;
            THREE.oc.add(t, a);
            if (this.status === 200) {
                if (e) e(a);
                r.iy.Fz(t);
            } else if (this.status === 0) {
                console.warn("THREE.XHRLoader: HTTP Status 0 received.");
                if (e) e(a);
                r.iy.Fz(t);
            } else {
                if (i) i(n);
                r.iy.Gz(t);
            }
        }, false);
        if (n !== undefined) {
            s.addEventListener("progress", function(t) {
                n(t);
            }, false);
        }
        s.addEventListener("error", function(e) {
            if (i) i(e);
            r.iy.Gz(t);
        }, false);
        if (this.responseType !== undefined) s.responseType = this.responseType;
        if (this.withCredentials !== undefined) s.withCredentials = this.withCredentials;
        s.send(null);
        r.iy.Ez(t);
        return s;
    },
    Hz: function(t) {
        this.path = t;
        return this;
    },
    ly: function(t) {
        this.responseType = t;
        return this;
    },
    Iz: function(t) {
        this.withCredentials = t;
        return this;
    }
});

THREE.Jz = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.Jz.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = new THREE.ky(this.iy);
        a.load(t, function(t) {
            var n;
            try {
                n = JSON.parse(t);
            } catch (e) {
                console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.");
                n = JSON.parse(t.substring(65, t.length - 2));
            }
            var i = r.parse(n);
            if (e) e(i);
        }, n, i);
    },
    parse: function(t) {
        return new THREE.Kz(t);
    }
});

THREE.Lz = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.Lz.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        a.onload = function() {
            URL.revokeObjectURL(a.src);
            if (e) e(a);
            r.iy.Fz(t);
        };
        if (t.indexOf("data:") === 0) {
            a.src = t;
        } else {
            var s = new THREE.ky();
            s.Hz(this.path);
            s.ly("blob");
            s.load(t, function(t) {
                a.src = URL.createObjectURL(t);
            }, n, i);
        }
        r.iy.Ez(t);
        return a;
    },
    wy: function(t) {
        this.crossOrigin = t;
        return this;
    },
    Hz: function(t) {
        this.path = t;
        return this;
    }
});

THREE.Mz = function(t) {
    if (typeof t === "boolean") {
        console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor.");
        t = undefined;
    }
    this.iy = t !== undefined ? t : THREE.jy;
    this.withCredentials = false;
};

Object.assign(THREE.Mz.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = this.Nz && typeof this.Nz === "string" ? this.Nz : THREE.my.prototype.qy(t);
        var s = new THREE.ky(this.iy);
        s.Iz(this.withCredentials);
        s.load(t, function(n) {
            var i = JSON.parse(n);
            var s = i.kr;
            if (s !== undefined) {
                var o = s.type;
                if (o !== undefined) {
                    if (o.toLowerCase() === "object") {
                        console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
                        return;
                    }
                    if (o.toLowerCase() === "scene") {
                        console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.SceneLoader instead.");
                        return;
                    }
                }
            }
            var f = r.parse(i, a);
            e(f.j, f.ir);
        }, n, i);
    },
    Oz: function(t) {
        this.Nz = t;
    },
    parse: function(t, e) {
        var n = new THREE.An(), i = t.scale !== undefined ? 1 / t.scale : 1;
        r(i);
        a();
        s(i);
        o();
        n.ps();
        n.Io();
        function r(e) {
            function i(t, e) {
                return t & 1 << e;
            }
            var r, a, s, o, f, u, h, c, l, d, v, p, E, g, m, T, y, R, w, x, b, H, A, M, O, S, U, C = t.Wr, L = t.Bn, P = t.Cs, N = t.Vr, I = 0;
            if (t.Ds !== undefined) {
                for (r = 0; r < t.Ds.length; r++) {
                    if (t.Ds[r].length) I++;
                }
                for (r = 0; r < I; r++) {
                    n.Xr[r] = [];
                }
            }
            o = 0;
            f = L.length;
            while (o < f) {
                R = new THREE.K();
                R.x = L[o++] * e;
                R.y = L[o++] * e;
                R.z = L[o++] * e;
                n.Bn.push(R);
            }
            o = 0;
            f = C.length;
            while (o < f) {
                d = C[o++];
                v = i(d, 0);
                p = i(d, 1);
                E = i(d, 3);
                g = i(d, 4);
                m = i(d, 5);
                T = i(d, 6);
                y = i(d, 7);
                if (v) {
                    x = new THREE.mr();
                    x.a = C[o];
                    x.b = C[o + 1];
                    x.c = C[o + 3];
                    b = new THREE.mr();
                    b.a = C[o + 1];
                    b.b = C[o + 2];
                    b.c = C[o + 3];
                    o += 4;
                    if (p) {
                        l = C[o++];
                        x.pr = l;
                        b.pr = l;
                    }
                    s = n.Wr.length;
                    if (E) {
                        for (r = 0; r < I; r++) {
                            M = t.Ds[r];
                            n.Xr[r][s] = [];
                            n.Xr[r][s + 1] = [];
                            for (a = 0; a < 4; a++) {
                                c = C[o++];
                                S = M[c * 2];
                                U = M[c * 2 + 1];
                                O = new THREE.fa(S, U);
                                if (a !== 2) n.Xr[r][s].push(O);
                                if (a !== 0) n.Xr[r][s + 1].push(O);
                            }
                        }
                    }
                    if (g) {
                        h = C[o++] * 3;
                        x.Hn.set(P[h++], P[h++], P[h]);
                        b.Hn.xi(x.Hn);
                    }
                    if (m) {
                        for (r = 0; r < 4; r++) {
                            h = C[o++] * 3;
                            A = new THREE.K(P[h++], P[h++], P[h]);
                            if (r !== 2) x.nr.push(A);
                            if (r !== 0) b.nr.push(A);
                        }
                    }
                    if (T) {
                        u = C[o++];
                        H = N[u];
                        x.color.yi(H);
                        b.color.yi(H);
                    }
                    if (y) {
                        for (r = 0; r < 4; r++) {
                            u = C[o++];
                            H = N[u];
                            if (r !== 2) x.or.push(new THREE.T(H));
                            if (r !== 0) b.or.push(new THREE.T(H));
                        }
                    }
                    n.Wr.push(x);
                    n.Wr.push(b);
                } else {
                    w = new THREE.mr();
                    w.a = C[o++];
                    w.b = C[o++];
                    w.c = C[o++];
                    if (p) {
                        l = C[o++];
                        w.pr = l;
                    }
                    s = n.Wr.length;
                    if (E) {
                        for (r = 0; r < I; r++) {
                            M = t.Ds[r];
                            n.Xr[r][s] = [];
                            for (a = 0; a < 3; a++) {
                                c = C[o++];
                                S = M[c * 2];
                                U = M[c * 2 + 1];
                                O = new THREE.fa(S, U);
                                n.Xr[r][s].push(O);
                            }
                        }
                    }
                    if (g) {
                        h = C[o++] * 3;
                        w.Hn.set(P[h++], P[h++], P[h]);
                    }
                    if (m) {
                        for (r = 0; r < 3; r++) {
                            h = C[o++] * 3;
                            A = new THREE.K(P[h++], P[h++], P[h]);
                            w.nr.push(A);
                        }
                    }
                    if (T) {
                        u = C[o++];
                        w.color.yi(N[u]);
                    }
                    if (y) {
                        for (r = 0; r < 3; r++) {
                            u = C[o++];
                            w.or.push(new THREE.T(N[u]));
                        }
                    }
                    n.Wr.push(w);
                }
            }
        }
        function a() {
            var e = t.Pz !== undefined ? t.Pz : 2;
            if (t.$r) {
                for (var i = 0, r = t.$r.length; i < r; i += e) {
                    var a = t.$r[i];
                    var s = e > 1 ? t.$r[i + 1] : 0;
                    var o = e > 2 ? t.$r[i + 2] : 0;
                    var f = e > 3 ? t.$r[i + 3] : 0;
                    n.$r.push(new THREE.Sm(a, s, o, f));
                }
            }
            if (t._r) {
                for (var i = 0, r = t._r.length; i < r; i += e) {
                    var u = t._r[i];
                    var h = e > 1 ? t._r[i + 1] : 0;
                    var c = e > 2 ? t._r[i + 2] : 0;
                    var l = e > 3 ? t._r[i + 3] : 0;
                    n._r.push(new THREE.Sm(u, h, c, l));
                }
            }
            n.gw = t.gw;
            if (n.gw && n.gw.length > 0 && (n.$r.length !== n._r.length || n._r.length !== n.Bn.length)) {
                console.warn("When skinning, number of vertices (" + n.Bn.length + "), skinIndices (" + n._r.length + "), and skinWeights (" + n.$r.length + ") should match.");
            }
        }
        function s(e) {
            if (t.Yr !== undefined) {
                for (var i = 0, r = t.Yr.length; i < r; i++) {
                    n.Yr[i] = {};
                    n.Yr[i].name = t.Yr[i].name;
                    n.Yr[i].Bn = [];
                    var a = n.Yr[i].Bn;
                    var s = t.Yr[i].Bn;
                    for (var o = 0, f = s.length; o < f; o += 3) {
                        var u = new THREE.K();
                        u.x = s[o] * e;
                        u.y = s[o + 1] * e;
                        u.z = s[o + 2] * e;
                        a.push(u);
                    }
                }
            }
            if (t.Qz !== undefined && t.Qz.length > 0) {
                console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                var h = n.Wr;
                var c = t.Qz[0].Vr;
                for (var i = 0, r = h.length; i < r; i++) {
                    h[i].color.Ui(c, i * 3);
                }
            }
        }
        function o() {
            var e = [];
            var i = [];
            if (t.animation !== undefined) {
                i.push(t.animation);
            }
            if (t.tu !== undefined) {
                if (t.tu.length) {
                    i = i.concat(t.tu);
                } else {
                    i.push(t.tu);
                }
            }
            for (var r = 0; r < i.length; r++) {
                var a = THREE.iu.vu(i[r], n.gw);
                if (a) e.push(a);
            }
            if (n.Yr) {
                var s = THREE.iu.uu(n.Yr, 10);
                e = e.concat(s);
            }
            if (e.length > 0) n.tu = e;
        }
        if (t.ir === undefined || t.ir.length === 0) {
            return {
                j: n
            };
        } else {
            var f = THREE.my.prototype.sy(t.ir, e, this.crossOrigin);
            return {
                j: n,
                ir: f
            };
        }
    }
});

THREE.Rz = function(t, e, n) {
    var i = this;
    var r = false, a = 0, s = 0;
    this.Sz = undefined;
    this.Tz = t;
    this.Uz = e;
    this.Vz = n;
    this.Ez = function(t) {
        s++;
        if (r === false) {
            if (i.Sz !== undefined) {
                i.Sz(t, a, s);
            }
        }
        r = true;
    };
    this.Fz = function(t) {
        a++;
        if (i.Uz !== undefined) {
            i.Uz(t, a, s);
        }
        if (a === s) {
            r = false;
            if (i.Tz !== undefined) {
                i.Tz();
            }
        }
    };
    this.Gz = function(t) {
        if (i.Vz !== undefined) {
            i.Vz(t);
        }
    };
};

THREE.jy = new THREE.Rz();

THREE.Wz = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.Wz.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = new THREE.ky(r.iy);
        a.load(t, function(t) {
            e(r.parse(JSON.parse(t)));
        }, n, i);
    },
    parse: function(t) {
        var e = new THREE.Cn();
        var n = t.data.index;
        var i = {
            Int8Array: Int8Array,
            Uint8Array: Uint8Array,
            Uint8ClampedArray: Uint8ClampedArray,
            Int16Array: Int16Array,
            Uint16Array: Uint16Array,
            Int32Array: Int32Array,
            Uint32Array: Uint32Array,
            Float32Array: Float32Array,
            Float64Array: Float64Array
        };
        if (n !== undefined) {
            var r = new i[n.type](n.dc);
            e.Ns(new THREE.qr(r, 1));
        }
        var a = t.data.attributes;
        for (var s in a) {
            var o = a[s];
            var r = new i[o.type](o.dc);
            e.Os(s, new THREE.qr(r, o.pm, o.tr));
        }
        var f = t.data.os || t.data.Xz || t.data.Yz;
        if (f !== undefined) {
            for (var u = 0, h = f.length; u !== h; ++u) {
                var c = f[u];
                e.Ps(c.start, c.count, c.pr);
            }
        }
        var l = t.data.Ho;
        if (l !== undefined) {
            var d = new THREE.K();
            if (l.dn !== undefined) {
                d.Ui(l.dn);
            }
            e.Ho = new THREE.Jn(d, l.N);
        }
        return e;
    }
});

THREE.uy = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
    this.jr = {};
};

Object.assign(THREE.uy.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = new THREE.ky(r.iy);
        a.load(t, function(t) {
            e(r.parse(JSON.parse(t)));
        }, n, i);
    },
    Cz: function(t) {
        this.jr = t;
    },
    Zz: function(t) {
        var e = this.jr;
        if (e[t] === undefined) {
            console.warn("THREE.MaterialLoader: Undefined texture", t);
        }
        return e[t];
    },
    parse: function(t) {
        var e = new THREE[t.type]();
        if (t.sq !== undefined) e.sq = t.sq;
        if (t.name !== undefined) e.name = t.name;
        if (t.color !== undefined) e.color.yi(t.color);
        if (t.$z !== undefined) e.$z = t.$z;
        if (t._z !== undefined) e._z = t._z;
        if (t.Cy !== undefined) e.Cy.yi(t.Cy);
        if (t.By !== undefined) e.By.yi(t.By);
        if (t.Dy !== undefined) e.Dy = t.Dy;
        if (t.l !== undefined) e.l = t.l;
        if (t.B !== undefined) e.B = t.B;
        if (t.C !== undefined) e.C = t.C;
        if (t.or !== undefined) e.or = t.or;
        if (t.aA !== undefined) e.aA = t.aA;
        if (t.Ay !== undefined) e.Ay = t.Ay;
        if (t.Bz !== undefined) e.Bz = t.Bz;
        if (t.opacity !== undefined) e.opacity = t.opacity;
        if (t.D !== undefined) e.D = t.D;
        if (t.bA !== undefined) e.bA = t.bA;
        if (t.cA !== undefined) e.cA = t.cA;
        if (t.dA !== undefined) e.dA = t.dA;
        if (t.eA !== undefined) e.eA = t.eA;
        if (t.fA !== undefined) e.fA = t.fA;
        if (t.gA !== undefined) e.gA = t.gA;
        if (t.size !== undefined) e.size = t.size;
        if (t.hA !== undefined) e.hA = t.hA;
        if (t.map !== undefined) e.map = this.Zz(t.map);
        if (t.wz !== undefined) {
            e.wz = this.Zz(t.wz);
            e.D = true;
        }
        if (t.Xy !== undefined) e.Xy = this.Zz(t.Xy);
        if (t.az !== undefined) e.az = t.az;
        if (t.bz !== undefined) e.bz = this.Zz(t.bz);
        if (t.gz !== undefined) {
            var n = t.gz;
            if (Array.isArray(n) === false) {
                n = [ n, n ];
            }
            e.gz = new THREE.fa().Ui(n);
        }
        if (t.iA !== undefined) e.iA = this.Zz(t.iA);
        if (t.jA !== undefined) e.jA = t.jA;
        if (t.kA !== undefined) e.kA = t.kA;
        if (t.rz !== undefined) e.rz = this.Zz(t.rz);
        if (t.mz !== undefined) e.mz = this.Zz(t.mz);
        if (t.Iy !== undefined) e.Iy = this.Zz(t.Iy);
        if (t.lA !== undefined) e.lA = t.lA;
        if (t.hz !== undefined) e.hz = this.Zz(t.hz);
        if (t.mA !== undefined) {
            e.mA = this.Zz(t.mA);
            e.nA = THREE.ah;
        }
        if (t.oA !== undefined) e.oA = t.oA;
        if (t.Ny !== undefined) e.Ny = this.Zz(t.Ny);
        if (t.pA !== undefined) e.pA = t.pA;
        if (t.Sy !== undefined) e.Sy = this.Zz(t.Sy);
        if (t.qA !== undefined) e.qA = t.qA;
        if (t.ir !== undefined) {
            for (var i = 0, r = t.ir.length; i < r; i++) {
                e.ir.push(this.parse(t.ir[i]));
            }
        }
        return e;
    }
});

THREE.rA = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
    this.Nz = "";
};

Object.assign(THREE.rA.prototype, {
    load: function(t, e, n, i) {
        if (this.Nz === "") {
            this.Nz = t.substring(0, t.lastIndexOf("/") + 1);
        }
        var r = this;
        var a = new THREE.ky(r.iy);
        a.load(t, function(t) {
            r.parse(JSON.parse(t), e);
        }, n, i);
    },
    Oz: function(t) {
        this.Nz = t;
    },
    wy: function(t) {
        this.crossOrigin = t;
    },
    parse: function(t, e) {
        var n = this.sA(t.hr);
        var i = this.tA(t.images, function() {
            if (e !== undefined) e(s);
        });
        var r = this.uA(t.jr, i);
        var a = this.vA(t.ir, r);
        var s = this.wA(t.object, n, a);
        if (t.tu) {
            s.tu = this.xA(t.tu);
        }
        if (t.images === undefined || t.images.length === 0) {
            if (e !== undefined) e(s);
        }
        return s;
    },
    sA: function(t) {
        var e = {};
        if (t !== undefined) {
            var n = new THREE.Mz();
            var i = new THREE.Wz();
            for (var r = 0, a = t.length; r < a; r++) {
                var s;
                var o = t[r];
                switch (o.type) {
                  case "PlaneGeometry":
                  case "PlaneBufferGeometry":
                    s = new THREE[o.type](o.width, o.height, o.yA, o.zA);
                    break;

                  case "BoxGeometry":
                  case "BoxBufferGeometry":
                  case "CubeGeometry":
                    s = new THREE[o.type](o.width, o.height, o.AA, o.yA, o.zA, o.BA);
                    break;

                  case "CircleGeometry":
                  case "CircleBufferGeometry":
                    s = new THREE[o.type](o.N, o.CA, o.DA, o.EA);
                    break;

                  case "CylinderGeometry":
                  case "CylinderBufferGeometry":
                    s = new THREE[o.type](o.FA, o.GA, o.height, o.HA, o.zA, o.IA, o.DA, o.EA);
                    break;

                  case "ConeGeometry":
                  case "ConeBufferGeometry":
                    s = new THREE[o.type](o.N, o.height, o.HA, o.zA, o.IA, o.DA, o.EA);
                    break;

                  case "SphereGeometry":
                  case "SphereBufferGeometry":
                    s = new THREE[o.type](o.N, o.yA, o.zA, o.JA, o.KA, o.DA, o.EA);
                    break;

                  case "DodecahedronGeometry":
                  case "IcosahedronGeometry":
                  case "OctahedronGeometry":
                  case "TetrahedronGeometry":
                    s = new THREE[o.type](o.N, o.detail);
                    break;

                  case "RingGeometry":
                  case "RingBufferGeometry":
                    s = new THREE[o.type](o.LA, o.MA, o.NA, o.OA, o.DA, o.EA);
                    break;

                  case "TorusGeometry":
                  case "TorusBufferGeometry":
                    s = new THREE[o.type](o.N, o.PA, o.HA, o.QA, o.arc);
                    break;

                  case "TorusKnotGeometry":
                  case "TorusKnotBufferGeometry":
                    s = new THREE[o.type](o.N, o.PA, o.QA, o.HA, o.m, o.RA);
                    break;

                  case "LatheGeometry":
                  case "LatheBufferGeometry":
                    s = new THREE[o.type](o.points, o.CA, o.JA, o.KA);
                    break;

                  case "BufferGeometry":
                    s = i.parse(o);
                    break;

                  case "Geometry":
                    s = n.parse(o.data, this.Nz).j;
                    break;

                  default:
                    console.warn('THREE.ObjectLoader: Unsupported geometry type "' + o.type + '"');
                    continue;
                }
                s.sq = o.sq;
                if (o.name !== undefined) s.name = o.name;
                e[o.sq] = s;
            }
        }
        return e;
    },
    vA: function(t, e) {
        var n = {};
        if (t !== undefined) {
            var i = new THREE.uy();
            i.Cz(e);
            for (var r = 0, a = t.length; r < a; r++) {
                var s = i.parse(t[r]);
                n[s.sq] = s;
            }
        }
        return n;
    },
    xA: function(t) {
        var e = [];
        for (var n = 0; n < t.length; n++) {
            var i = THREE.iu.parse(t[n]);
            e.push(i);
        }
        return e;
    },
    tA: function(t, e) {
        var n = this;
        var i = {};
        function r(t) {
            n.iy.Ez(t);
            return s.load(t, function() {
                n.iy.Fz(t);
            });
        }
        if (t !== undefined && t.length > 0) {
            var a = new THREE.Rz(e);
            var s = new THREE.Lz(a);
            s.wy(this.crossOrigin);
            for (var o = 0, f = t.length; o < f; o++) {
                var u = t[o];
                var h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url) ? u.url : n.Nz + u.url;
                i[u.sq] = r(h);
            }
        }
        return i;
    },
    uA: function(t, e) {
        function n(t) {
            if (typeof t === "number") return t;
            console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t);
            return THREE[t];
        }
        var i = {};
        if (t !== undefined) {
            for (var r = 0, a = t.length; r < a; r++) {
                var s = t[r];
                if (s.SA === undefined) {
                    console.warn('THREE.ObjectLoader: No "image" specified for', s.sq);
                }
                if (e[s.SA] === undefined) {
                    console.warn("THREE.ObjectLoader: Undefined image", s.SA);
                }
                var o = new THREE.TA(e[s.SA]);
                o.ur = true;
                o.sq = s.sq;
                if (s.name !== undefined) o.name = s.name;
                if (s.mapping !== undefined) o.mapping = n(s.mapping);
                if (s.offset !== undefined) o.offset.Ui(s.offset);
                if (s.repeat !== undefined) o.repeat.Ui(s.repeat);
                if (s.wrap !== undefined) {
                    o.xy = n(s.wrap[0]);
                    o.yy = n(s.wrap[1]);
                }
                if (s.qx !== undefined) o.qx = n(s.qx);
                if (s.px !== undefined) o.px = n(s.px);
                if (s.zy !== undefined) o.zy = s.zy;
                if (s.flipY !== undefined) o.flipY = s.flipY;
                i[s.sq] = o;
            }
        }
        return i;
    },
    wA: function() {
        var t = new THREE.Am();
        return function e(n, i, r) {
            var a;
            function s(t) {
                if (i[t] === undefined) {
                    console.warn("THREE.ObjectLoader: Undefined geometry", t);
                }
                return i[t];
            }
            function o(t) {
                if (t === undefined) return undefined;
                if (r[t] === undefined) {
                    console.warn("THREE.ObjectLoader: Undefined material", t);
                }
                return r[t];
            }
            switch (n.type) {
              case "Scene":
                a = new THREE.UA();
                break;

              case "PerspectiveCamera":
                a = new THREE.mq(n.Ex, n.Fx, n.near, n.bq);
                if (n.focus !== undefined) a.focus = n.focus;
                if (n.zoom !== undefined) a.zoom = n.zoom;
                if (n.Gx !== undefined) a.Gx = n.Gx;
                if (n.Hx !== undefined) a.Hx = n.Hx;
                if (n.view !== undefined) a.view = Object.assign({}, n.view);
                break;

              case "OrthographicCamera":
                a = new THREE.nq(n.left, n.right, n.top, n.bottom, n.near, n.bq);
                break;

              case "AmbientLight":
                a = new THREE.Yx(n.color, n.Rx);
                break;

              case "DirectionalLight":
                a = new THREE.Zx(n.color, n.Rx);
                break;

              case "PointLight":
                a = new THREE.by(n.color, n.Rx, n.fn, n.Tx);
                break;

              case "SpotLight":
                a = new THREE.ey(n.color, n.Rx, n.fn, n.angle, n.Ux, n.Tx);
                break;

              case "HemisphereLight":
                a = new THREE.ay(n.color, n.Sx, n.Rx);
                break;

              case "Mesh":
                var f = s(n.j);
                var u = o(n.k);
                if (f.gw && f.gw.length > 0) {
                    a = new THREE.VA(f, u);
                } else {
                    a = new THREE.dq(f, u);
                }
                break;

              case "LOD":
                a = new THREE.fq();
                break;

              case "Line":
                a = new THREE.eq(s(n.j), o(n.k), n.mode);
                break;

              case "PointCloud":
              case "Points":
                a = new THREE.gq(s(n.j), o(n.k));
                break;

              case "Sprite":
                a = new THREE.hq(o(n.k));
                break;

              case "Group":
                a = new THREE.WA();
                break;

              default:
                a = new THREE.qq();
            }
            a.sq = n.sq;
            if (n.name !== undefined) a.name = n.name;
            if (n.matrix !== undefined) {
                t.Ui(n.matrix);
                t.mo(a.position, a.wq, a.scale);
            } else {
                if (n.position !== undefined) a.position.Ui(n.position);
                if (n.rotation !== undefined) a.rotation.Ui(n.rotation);
                if (n.scale !== undefined) a.scale.Ui(n.scale);
            }
            if (n.Dq !== undefined) a.Dq = n.Dq;
            if (n.Eq !== undefined) a.Eq = n.Eq;
            if (n.visible !== undefined) a.visible = n.visible;
            if (n.Hq !== undefined) a.Hq = n.Hq;
            if (n.children !== undefined) {
                for (var h in n.children) {
                    a.add(this.wA(n.children[h], i, r));
                }
            }
            if (n.type === "LOD") {
                var c = n.XA;
                for (var l = 0; l < c.length; l++) {
                    var d = c[l];
                    var h = a.Yq("uuid", d.object);
                    if (h !== undefined) {
                        a.YA(h, d.fn);
                    }
                }
            }
            return a;
        };
    }()
});

THREE.A = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.A.prototype, {
    load: function(t, e, n, i) {
        var r = new THREE.TA();
        var a = new THREE.Lz(this.iy);
        a.wy(this.crossOrigin);
        a.Hz(this.path);
        a.load(t, function(n) {
            var i = t.search(/\.(jpg|jpeg)$/) > 0 || t.search(/^data\:image\/jpeg/) === 0;
            r.format = i ? THREE.Mh : THREE.Nh;
            r.SA = n;
            r.ur = true;
            if (e !== undefined) {
                e(r);
            }
        }, n, i);
        return r;
    },
    wy: function(t) {
        this.crossOrigin = t;
        return this;
    },
    Hz: function(t) {
        this.path = t;
        return this;
    }
});

THREE.ZA = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
};

Object.assign(THREE.ZA.prototype, {
    load: function(t, e, n, i) {
        var r = new THREE.$A();
        var a = new THREE.Lz(this.iy);
        a.wy(this.crossOrigin);
        a.Hz(this.path);
        var s = 0;
        function o(n) {
            a.load(t[n], function(t) {
                r.images[n] = t;
                s++;
                if (s === 6) {
                    r.ur = true;
                    if (e) e(r);
                }
            }, undefined, i);
        }
        for (var f = 0; f < t.length; ++f) {
            o(f);
        }
        return r;
    },
    wy: function(t) {
        this.crossOrigin = t;
        return this;
    },
    Hz: function(t) {
        this.path = t;
        return this;
    }
});

THREE._A = THREE.aB = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
    this.bB = null;
};

Object.assign(THREE.aB.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = new THREE.cB();
        var s = new THREE.ky(this.iy);
        s.ly("arraybuffer");
        s.load(t, function(t) {
            var n = r.bB(t);
            if (!n) return;
            if (undefined !== n.SA) {
                a.SA = n.SA;
            } else if (undefined !== n.data) {
                a.SA.width = n.width;
                a.SA.height = n.height;
                a.SA.data = n.data;
            }
            a.xy = undefined !== n.xy ? n.xy : THREE.sh;
            a.yy = undefined !== n.yy ? n.yy : THREE.sh;
            a.px = undefined !== n.px ? n.px : THREE.xh;
            a.qx = undefined !== n.qx ? n.qx : THREE.zh;
            a.zy = undefined !== n.zy ? n.zy : 1;
            if (undefined !== n.format) {
                a.format = n.format;
            }
            if (undefined !== n.type) {
                a.type = n.type;
            }
            if (undefined !== n.dB) {
                a.dB = n.dB;
            }
            if (1 === n.eB) {
                a.qx = THREE.xh;
            }
            a.ur = true;
            if (e) e(a, n);
        }, n, i);
        return a;
    }
});

THREE.fB = function(t) {
    this.iy = t !== undefined ? t : THREE.jy;
    this.bB = null;
};

Object.assign(THREE.fB.prototype, {
    load: function(t, e, n, i) {
        var r = this;
        var a = [];
        var s = new THREE.gB();
        s.SA = a;
        var o = new THREE.ky(this.iy);
        o.Hz(this.path);
        o.ly("arraybuffer");
        function f(f) {
            o.load(t[f], function(t) {
                var n = r.bB(t, true);
                a[f] = {
                    width: n.width,
                    height: n.height,
                    format: n.format,
                    dB: n.dB
                };
                u += 1;
                if (u === 6) {
                    if (n.eB === 1) s.qx = THREE.xh;
                    s.format = n.format;
                    s.ur = true;
                    if (e) e(s);
                }
            }, n, i);
        }
        if (Array.isArray(t)) {
            var u = 0;
            for (var h = 0, c = t.length; h < c; ++h) {
                f(h);
            }
        } else {
            o.load(t, function(t) {
                var n = r.bB(t, true);
                if (n.hB) {
                    var i = n.dB.length / n.eB;
                    for (var o = 0; o < i; o++) {
                        a[o] = {
                            dB: []
                        };
                        for (var f = 0; f < n.eB; f++) {
                            a[o].dB.push(n.dB[o * n.eB + f]);
                            a[o].format = n.format;
                            a[o].width = n.width;
                            a[o].height = n.height;
                        }
                    }
                } else {
                    s.SA.width = n.width;
                    s.SA.height = n.height;
                    s.dB = n.dB;
                }
                if (n.eB === 1) {
                    s.qx = THREE.xh;
                }
                s.format = n.format;
                s.ur = true;
                if (e) e(s);
            }, n, i);
        }
        return s;
    },
    Hz: function(t) {
        this.path = t;
        return this;
    }
});

THREE.iB = function() {
    Object.defineProperty(this, "id", {
        value: THREE.jB++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.type = "Material";
    this.kB = true;
    this.lB = true;
    this.Ay = THREE.zg;
    this.Bz = THREE.qg;
    this.aA = THREE.ug;
    this.or = THREE.vg;
    this.opacity = 1;
    this.D = false;
    this.mB = THREE.Ng;
    this.nB = THREE.Og;
    this.blendEquation = THREE.Eg;
    this.oB = null;
    this.pB = null;
    this.qB = null;
    this.depthFunc = THREE.Xg;
    this.cA = true;
    this.dA = true;
    this.rB = null;
    this.sB = false;
    this.eA = true;
    this.precision = null;
    this.polygonOffset = false;
    this.tB = 0;
    this.uB = 0;
    this.bA = 0;
    this.vB = false;
    this.wB = 0;
    this.visible = true;
    this.xB = true;
};

THREE.iB.prototype = {
    constructor: THREE.iB,
    get ur() {
        return this.xB;
    },
    set ur(t) {
        if (t === true) this.update();
        this.xB = t;
    },
    yB: function(t) {
        if (t === undefined) return;
        for (var e in t) {
            var n = t[e];
            if (n === undefined) {
                console.warn("THREE.Material: '" + e + "' parameter is undefined.");
                continue;
            }
            var i = this[e];
            if (i === undefined) {
                console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.");
                continue;
            }
            if (i instanceof THREE.T) {
                i.set(n);
            } else if (i instanceof THREE.K && n instanceof THREE.K) {
                i.xi(n);
            } else if (e === "overdraw") {
                this[e] = Number(n);
            } else {
                this[e] = n;
            }
        }
    },
    toJSON: function(t) {
        var e = t === undefined;
        if (e) {
            t = {
                jr: {},
                images: {}
            };
        }
        var n = {
            kr: {
                version: 4.4,
                type: "Material",
                lr: "Material.toJSON"
            }
        };
        n.sq = this.sq;
        n.type = this.type;
        if (this.name !== "") n.name = this.name;
        if (this.color instanceof THREE.T) n.color = this.color.Ii();
        if (this.$z !== undefined) n.$z = this.$z;
        if (this._z !== undefined) n._z = this._z;
        if (this.Cy instanceof THREE.T) n.Cy = this.Cy.Ii();
        if (this.By instanceof THREE.T) n.By = this.By.Ii();
        if (this.Dy !== undefined) n.Dy = this.Dy;
        if (this.map instanceof THREE.TA) n.map = this.map.toJSON(t).sq;
        if (this.wz instanceof THREE.TA) n.wz = this.wz.toJSON(t).sq;
        if (this.Ny instanceof THREE.TA) n.Ny = this.Ny.toJSON(t).sq;
        if (this.Xy instanceof THREE.TA) {
            n.Xy = this.Xy.toJSON(t).sq;
            n.az = this.az;
        }
        if (this.bz instanceof THREE.TA) {
            n.bz = this.bz.toJSON(t).sq;
            n.gz = this.gz.toArray();
        }
        if (this.iA instanceof THREE.TA) {
            n.iA = this.iA.toJSON(t).sq;
            n.jA = this.jA;
            n.kA = this.kA;
        }
        if (this.rz instanceof THREE.TA) n.rz = this.rz.toJSON(t).sq;
        if (this.mz instanceof THREE.TA) n.mz = this.mz.toJSON(t).sq;
        if (this.Iy instanceof THREE.TA) n.Iy = this.Iy.toJSON(t).sq;
        if (this.hz instanceof THREE.TA) n.hz = this.hz.toJSON(t).sq;
        if (this.mA instanceof THREE.TA) {
            n.mA = this.mA.toJSON(t).sq;
            n.oA = this.oA;
        }
        if (this.size !== undefined) n.size = this.size;
        if (this.hA !== undefined) n.hA = this.hA;
        if (this.Ay !== THREE.zg) n.Ay = this.Ay;
        if (this.aA !== THREE.ug) n.aA = this.aA;
        if (this.Bz !== THREE.qg) n.Bz = this.Bz;
        if (this.or !== THREE.vg) n.or = this.or;
        if (this.opacity < 1) n.opacity = this.opacity;
        if (this.D === true) n.D = this.D;
        if (this.bA > 0) n.bA = this.bA;
        if (this.vB === true) n.vB = this.vB;
        if (this.fA === true) n.fA = this.fA;
        if (this.gA > 1) n.gA = this.gA;
        function i(t) {
            var e = [];
            for (var n in t) {
                var i = t[n];
                delete i.kr;
                e.push(i);
            }
            return e;
        }
        if (e) {
            var r = i(t.jr);
            var a = i(t.images);
            if (r.length > 0) n.jr = r;
            if (a.length > 0) n.images = a;
        }
        return n;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.name = t.name;
        this.kB = t.kB;
        this.lB = t.lB;
        this.Ay = t.Ay;
        this.Bz = t.Bz;
        this.aA = t.aA;
        this.or = t.or;
        this.opacity = t.opacity;
        this.D = t.D;
        this.mB = t.mB;
        this.nB = t.nB;
        this.blendEquation = t.blendEquation;
        this.oB = t.oB;
        this.pB = t.pB;
        this.qB = t.qB;
        this.depthFunc = t.depthFunc;
        this.cA = t.cA;
        this.dA = t.dA;
        this.eA = t.eA;
        this.precision = t.precision;
        this.polygonOffset = t.polygonOffset;
        this.tB = t.tB;
        this.uB = t.uB;
        this.bA = t.bA;
        this.vB = t.vB;
        this.wB = t.wB;
        this.visible = t.visible;
        this.sB = t.sB;
        var e = t.rB, n = null;
        if (e !== null) {
            var i = e.length;
            n = new Array(i);
            for (var r = 0; r !== i; ++r) n[r] = e[r].clone();
        }
        this.rB = n;
        return this;
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        });
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

Object.assign(THREE.iB.prototype, THREE.Xp.prototype);

THREE.jB = 0;

THREE.zB = function(t) {
    THREE.iB.call(this);
    this.type = "LineBasicMaterial";
    this.color = new THREE.T(16777215);
    this.AB = 1;
    this.BB = "round";
    this.CB = "round";
    this.lB = false;
    this.yB(t);
};

THREE.zB.prototype = Object.create(THREE.iB.prototype);

THREE.zB.prototype.constructor = THREE.zB;

THREE.zB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.AB = t.AB;
    this.BB = t.BB;
    this.CB = t.CB;
    return this;
};

THREE.DB = function(t) {
    THREE.iB.call(this);
    this.type = "LineDashedMaterial";
    this.color = new THREE.T(16777215);
    this.AB = 1;
    this.scale = 1;
    this.EB = 3;
    this.FB = 1;
    this.lB = false;
    this.yB(t);
};

THREE.DB.prototype = Object.create(THREE.iB.prototype);

THREE.DB.prototype.constructor = THREE.DB;

THREE.DB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.AB = t.AB;
    this.scale = t.scale;
    this.EB = t.EB;
    this.FB = t.FB;
    return this;
};

THREE.GB = function(t) {
    THREE.iB.call(this);
    this.type = "MeshBasicMaterial";
    this.color = new THREE.T(16777215);
    this.map = null;
    this.Sy = null;
    this.qA = 1;
    this.hz = null;
    this.wz = null;
    this.mA = null;
    this.nA = THREE.ah;
    this.oA = 1;
    this.HB = .98;
    this.fA = false;
    this.gA = 1;
    this.IB = "round";
    this.JB = "round";
    this.KB = false;
    this.Yr = false;
    this.lB = false;
    this.yB(t);
};

THREE.GB.prototype = Object.create(THREE.iB.prototype);

THREE.GB.prototype.constructor = THREE.GB;

THREE.GB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.map = t.map;
    this.Sy = t.Sy;
    this.qA = t.qA;
    this.hz = t.hz;
    this.wz = t.wz;
    this.mA = t.mA;
    this.nA = t.nA;
    this.oA = t.oA;
    this.HB = t.HB;
    this.fA = t.fA;
    this.gA = t.gA;
    this.IB = t.IB;
    this.JB = t.JB;
    this.KB = t.KB;
    this.Yr = t.Yr;
    return this;
};

THREE.LB = function(t) {
    THREE.iB.call(this);
    this.type = "MeshDepthMaterial";
    this.MB = THREE.ti;
    this.KB = false;
    this.Yr = false;
    this.map = null;
    this.wz = null;
    this.iA = null;
    this.jA = 1;
    this.kA = 0;
    this.fA = false;
    this.gA = 1;
    this.kB = false;
    this.lB = false;
    this.yB(t);
};

THREE.LB.prototype = Object.create(THREE.iB.prototype);

THREE.LB.prototype.constructor = THREE.LB;

THREE.LB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.MB = t.MB;
    this.KB = t.KB;
    this.Yr = t.Yr;
    this.map = t.map;
    this.wz = t.wz;
    this.iA = t.iA;
    this.jA = t.jA;
    this.kA = t.kA;
    this.fA = t.fA;
    this.gA = t.gA;
    return this;
};

THREE.NB = function(t) {
    THREE.iB.call(this);
    this.type = "MeshLambertMaterial";
    this.color = new THREE.T(16777215);
    this.map = null;
    this.Ny = null;
    this.pA = 1;
    this.Sy = null;
    this.qA = 1;
    this.Cy = new THREE.T(0);
    this.lA = 1;
    this.Iy = null;
    this.hz = null;
    this.wz = null;
    this.mA = null;
    this.nA = THREE.ah;
    this.oA = 1;
    this.HB = .98;
    this.fA = false;
    this.gA = 1;
    this.IB = "round";
    this.JB = "round";
    this.KB = false;
    this.Yr = false;
    this.Zr = false;
    this.yB(t);
};

THREE.NB.prototype = Object.create(THREE.iB.prototype);

THREE.NB.prototype.constructor = THREE.NB;

THREE.NB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.map = t.map;
    this.Ny = t.Ny;
    this.pA = t.pA;
    this.Sy = t.Sy;
    this.qA = t.qA;
    this.Cy.xi(t.Cy);
    this.Iy = t.Iy;
    this.lA = t.lA;
    this.hz = t.hz;
    this.wz = t.wz;
    this.mA = t.mA;
    this.nA = t.nA;
    this.oA = t.oA;
    this.HB = t.HB;
    this.fA = t.fA;
    this.gA = t.gA;
    this.IB = t.IB;
    this.JB = t.JB;
    this.KB = t.KB;
    this.Yr = t.Yr;
    this.Zr = t.Zr;
    return this;
};

THREE.OB = function(t) {
    THREE.iB.call(this, t);
    this.type = "MeshNormalMaterial";
    this.fA = false;
    this.gA = 1;
    this.kB = false;
    this.lB = false;
    this.Yr = false;
    this.yB(t);
};

THREE.OB.prototype = Object.create(THREE.iB.prototype);

THREE.OB.prototype.constructor = THREE.OB;

THREE.OB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.fA = t.fA;
    this.gA = t.gA;
    return this;
};

THREE.PB = function(t) {
    THREE.iB.call(this);
    this.type = "MeshPhongMaterial";
    this.color = new THREE.T(16777215);
    this.By = new THREE.T(1118481);
    this.Dy = 30;
    this.map = null;
    this.Ny = null;
    this.pA = 1;
    this.Sy = null;
    this.qA = 1;
    this.Cy = new THREE.T(0);
    this.lA = 1;
    this.Iy = null;
    this.Xy = null;
    this.az = 1;
    this.bz = null;
    this.gz = new THREE.fa(1, 1);
    this.iA = null;
    this.jA = 1;
    this.kA = 0;
    this.hz = null;
    this.wz = null;
    this.mA = null;
    this.nA = THREE.ah;
    this.oA = 1;
    this.HB = .98;
    this.fA = false;
    this.gA = 1;
    this.IB = "round";
    this.JB = "round";
    this.KB = false;
    this.Yr = false;
    this.Zr = false;
    this.yB(t);
};

THREE.PB.prototype = Object.create(THREE.iB.prototype);

THREE.PB.prototype.constructor = THREE.PB;

THREE.PB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.By.xi(t.By);
    this.Dy = t.Dy;
    this.map = t.map;
    this.Ny = t.Ny;
    this.pA = t.pA;
    this.Sy = t.Sy;
    this.qA = t.qA;
    this.Cy.xi(t.Cy);
    this.Iy = t.Iy;
    this.lA = t.lA;
    this.Xy = t.Xy;
    this.az = t.az;
    this.bz = t.bz;
    this.gz.xi(t.gz);
    this.iA = t.iA;
    this.jA = t.jA;
    this.kA = t.kA;
    this.hz = t.hz;
    this.wz = t.wz;
    this.mA = t.mA;
    this.nA = t.nA;
    this.oA = t.oA;
    this.HB = t.HB;
    this.fA = t.fA;
    this.gA = t.gA;
    this.IB = t.IB;
    this.JB = t.JB;
    this.KB = t.KB;
    this.Yr = t.Yr;
    this.Zr = t.Zr;
    return this;
};

THREE.QB = function(t) {
    THREE.iB.call(this);
    this.RB = {
        SB: ""
    };
    this.type = "MeshStandardMaterial";
    this.color = new THREE.T(16777215);
    this.$z = .5;
    this._z = .5;
    this.map = null;
    this.Ny = null;
    this.pA = 1;
    this.Sy = null;
    this.qA = 1;
    this.Cy = new THREE.T(0);
    this.lA = 1;
    this.Iy = null;
    this.Xy = null;
    this.az = 1;
    this.bz = null;
    this.gz = new THREE.fa(1, 1);
    this.iA = null;
    this.jA = 1;
    this.kA = 0;
    this.rz = null;
    this.mz = null;
    this.wz = null;
    this.mA = null;
    this.TB = 1;
    this.HB = .98;
    this.fA = false;
    this.gA = 1;
    this.IB = "round";
    this.JB = "round";
    this.KB = false;
    this.Yr = false;
    this.Zr = false;
    this.yB(t);
};

THREE.QB.prototype = Object.create(THREE.iB.prototype);

THREE.QB.prototype.constructor = THREE.QB;

THREE.QB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.RB = {
        SB: ""
    };
    this.color.xi(t.color);
    this.$z = t.$z;
    this._z = t._z;
    this.map = t.map;
    this.Ny = t.Ny;
    this.pA = t.pA;
    this.Sy = t.Sy;
    this.qA = t.qA;
    this.Cy.xi(t.Cy);
    this.Iy = t.Iy;
    this.lA = t.lA;
    this.Xy = t.Xy;
    this.az = t.az;
    this.bz = t.bz;
    this.gz.xi(t.gz);
    this.iA = t.iA;
    this.jA = t.jA;
    this.kA = t.kA;
    this.rz = t.rz;
    this.mz = t.mz;
    this.wz = t.wz;
    this.mA = t.mA;
    this.TB = t.TB;
    this.HB = t.HB;
    this.fA = t.fA;
    this.gA = t.gA;
    this.IB = t.IB;
    this.JB = t.JB;
    this.KB = t.KB;
    this.Yr = t.Yr;
    this.Zr = t.Zr;
    return this;
};

THREE.UB = function(t) {
    THREE.QB.call(this);
    this.RB = {
        VB: ""
    };
    this.type = "MeshPhysicalMaterial";
    this.oA = .5;
    this.WB = 0;
    this.XB = 0;
    this.yB(t);
};

THREE.UB.prototype = Object.create(THREE.QB.prototype);

THREE.UB.prototype.constructor = THREE.UB;

THREE.UB.prototype.xi = function(t) {
    THREE.QB.prototype.xi.call(this, t);
    this.RB = {
        VB: ""
    };
    this.oA = t.oA;
    this.WB = t.WB;
    this.XB = t.XB;
    return this;
};

THREE.YB = function(t) {
    this.sq = THREE.Math.Vo();
    this.type = "MultiMaterial";
    this.ir = t instanceof Array ? t : [];
    this.visible = true;
};

THREE.YB.prototype = {
    constructor: THREE.YB,
    toJSON: function(t) {
        var e = {
            kr: {
                version: 4.2,
                type: "material",
                lr: "MaterialExporter"
            },
            sq: this.sq,
            type: this.type,
            ir: []
        };
        var n = this.ir;
        for (var i = 0, r = n.length; i < r; i++) {
            var a = n[i].toJSON(t);
            delete a.kr;
            e.ir.push(a);
        }
        e.visible = this.visible;
        return e;
    },
    clone: function() {
        var t = new this.constructor();
        for (var e = 0; e < this.ir.length; e++) {
            t.ir.push(this.ir[e].clone());
        }
        t.visible = this.visible;
        return t;
    }
};

THREE.ZB = function(t) {
    THREE.iB.call(this);
    this.type = "PointsMaterial";
    this.color = new THREE.T(16777215);
    this.map = null;
    this.size = 1;
    this.hA = true;
    this.lB = false;
    this.yB(t);
};

THREE.ZB.prototype = Object.create(THREE.iB.prototype);

THREE.ZB.prototype.constructor = THREE.ZB;

THREE.ZB.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.map = t.map;
    this.size = t.size;
    this.hA = t.hA;
    return this;
};

THREE.$B = function(t) {
    THREE.iB.call(this);
    this.type = "ShaderMaterial";
    this.RB = {};
    this.l = {};
    this.B = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";
    this.C = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
    this.AB = 1;
    this.fA = false;
    this.gA = 1;
    this.kB = false;
    this.lB = false;
    this._B = false;
    this.KB = false;
    this.Yr = false;
    this.Zr = false;
    this.extensions = {
        aC: false,
        bC: false,
        cC: false,
        dC: false
    };
    this.eC = {
        color: [ 1, 1, 1 ],
        ms: [ 0, 0 ],
        ns: [ 0, 0 ]
    };
    this.fC = undefined;
    if (t !== undefined) {
        if (t.attributes !== undefined) {
            console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.");
        }
        this.yB(t);
    }
};

THREE.$B.prototype = Object.create(THREE.iB.prototype);

THREE.$B.prototype.constructor = THREE.$B;

THREE.$B.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.C = t.C;
    this.B = t.B;
    this.l = THREE.gC.clone(t.l);
    this.RB = t.RB;
    this.fA = t.fA;
    this.gA = t.gA;
    this.lB = t.lB;
    this._B = t._B;
    this.KB = t.KB;
    this.Yr = t.Yr;
    this.Zr = t.Zr;
    this.extensions = t.extensions;
    return this;
};

THREE.$B.prototype.toJSON = function(t) {
    var e = THREE.iB.prototype.toJSON.call(this, t);
    e.l = this.l;
    e.B = this.B;
    e.C = this.C;
    return e;
};

THREE.hC = function(t) {
    THREE.$B.call(this, t);
    this.type = "RawShaderMaterial";
};

THREE.hC.prototype = Object.create(THREE.$B.prototype);

THREE.hC.prototype.constructor = THREE.hC;

THREE.iC = function(t) {
    THREE.iB.call(this);
    this.type = "SpriteMaterial";
    this.color = new THREE.T(16777215);
    this.map = null;
    this.rotation = 0;
    this.kB = false;
    this.lB = false;
    this.yB(t);
};

THREE.iC.prototype = Object.create(THREE.iB.prototype);

THREE.iC.prototype.constructor = THREE.iC;

THREE.iC.prototype.xi = function(t) {
    THREE.iB.prototype.xi.call(this, t);
    this.color.xi(t.color);
    this.map = t.map;
    this.rotation = t.rotation;
    return this;
};

THREE.jC = function() {
    THREE.$B.call(this, {
        l: THREE.gC.jd([ THREE.kC["lB"], {
            opacity: {
                value: 1
            }
        } ]),
        B: THREE.mC["lC"],
        C: THREE.mC["nC"]
    });
    this.lB = true;
    this.D = true;
    Object.defineProperties(this, {
        opacity: {
            vq: true,
            get: function() {
                return this.l.opacity.value;
            },
            set: function(t) {
                this.l.opacity.value = t;
            }
        }
    });
};

THREE.jC.prototype = Object.create(THREE.$B.prototype);

THREE.jC.prototype.constructor = THREE.jC;

THREE.TA = function(t, e, n, i, r, a, s, o, f, u) {
    Object.defineProperty(this, "id", {
        value: THREE.oC++
    });
    this.sq = THREE.Math.Vo();
    this.name = "";
    this.pC = "";
    this.SA = t !== undefined ? t : THREE.TA.qC;
    this.dB = [];
    this.mapping = e !== undefined ? e : THREE.TA.rC;
    this.xy = n !== undefined ? n : THREE.sh;
    this.yy = i !== undefined ? i : THREE.sh;
    this.px = r !== undefined ? r : THREE.xh;
    this.qx = a !== undefined ? a : THREE.zh;
    this.zy = f !== undefined ? f : 1;
    this.format = s !== undefined ? s : THREE.Nh;
    this.type = o !== undefined ? o : THREE.Ah;
    this.offset = new THREE.fa(0, 0);
    this.repeat = new THREE.fa(1, 1);
    this.vx = true;
    this.sC = false;
    this.flipY = true;
    this.tC = 4;
    this.encoding = u !== undefined ? u : THREE.li;
    this.version = 0;
    this.bt = null;
};

THREE.TA.qC = undefined;

THREE.TA.rC = THREE.jh;

THREE.TA.prototype = {
    constructor: THREE.TA,
    set ur(t) {
        if (t === true) this.version++;
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.SA = t.SA;
        this.dB = t.dB.slice(0);
        this.mapping = t.mapping;
        this.xy = t.xy;
        this.yy = t.yy;
        this.px = t.px;
        this.qx = t.qx;
        this.zy = t.zy;
        this.format = t.format;
        this.type = t.type;
        this.offset.xi(t.offset);
        this.repeat.xi(t.repeat);
        this.vx = t.vx;
        this.sC = t.sC;
        this.flipY = t.flipY;
        this.tC = t.tC;
        this.encoding = t.encoding;
        return this;
    },
    toJSON: function(t) {
        if (t.jr[this.sq] !== undefined) {
            return t.jr[this.sq];
        }
        function e(t) {
            var e;
            if (t.toDataURL !== undefined) {
                e = t;
            } else {
                e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                e.width = t.width;
                e.height = t.height;
                e.getContext("2d").drawImage(t, 0, 0, t.width, t.height);
            }
            if (e.width > 2048 || e.height > 2048) {
                return e.toDataURL("image/jpeg", .6);
            } else {
                return e.toDataURL("image/png");
            }
        }
        var n = {
            kr: {
                version: 4.4,
                type: "Texture",
                lr: "Texture.toJSON"
            },
            sq: this.sq,
            name: this.name,
            mapping: this.mapping,
            repeat: [ this.repeat.x, this.repeat.y ],
            offset: [ this.offset.x, this.offset.y ],
            wrap: [ this.xy, this.yy ],
            qx: this.qx,
            px: this.px,
            zy: this.zy,
            flipY: this.flipY
        };
        if (this.SA !== undefined) {
            var i = this.SA;
            if (i.sq === undefined) {
                i.sq = THREE.Math.Vo();
            }
            if (t.images[i.sq] === undefined) {
                t.images[i.sq] = {
                    sq: i.sq,
                    url: e(i)
                };
            }
            n.SA = i.sq;
        }
        t.jr[this.sq] = n;
        return n;
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    },
    uC: function(t) {
        if (this.mapping !== THREE.jh) return;
        t.multiply(this.repeat);
        t.add(this.offset);
        if (t.x < 0 || t.x > 1) {
            switch (this.xy) {
              case THREE.rh:
                t.x = t.x - Math.floor(t.x);
                break;

              case THREE.sh:
                t.x = t.x < 0 ? 0 : 1;
                break;

              case THREE.th:
                if (Math.abs(Math.floor(t.x) % 2) === 1) {
                    t.x = Math.ceil(t.x) - t.x;
                } else {
                    t.x = t.x - Math.floor(t.x);
                }
                break;
            }
        }
        if (t.y < 0 || t.y > 1) {
            switch (this.yy) {
              case THREE.rh:
                t.y = t.y - Math.floor(t.y);
                break;

              case THREE.sh:
                t.y = t.y < 0 ? 0 : 1;
                break;

              case THREE.th:
                if (Math.abs(Math.floor(t.y) % 2) === 1) {
                    t.y = Math.ceil(t.y) - t.y;
                } else {
                    t.y = t.y - Math.floor(t.y);
                }
                break;
            }
        }
        if (this.flipY) {
            t.y = 1 - t.y;
        }
    }
};

Object.assign(THREE.TA.prototype, THREE.Xp.prototype);

THREE.oC = 0;

THREE.vC = function(t, e, n, i, r, a, s, o, f) {
    THREE.TA.call(this, null, i, r, a, s, o, THREE.Rh, n, f);
    this.SA = {
        width: t,
        height: e
    };
    this.type = n !== undefined ? n : THREE.Dh;
    this.px = s !== undefined ? s : THREE.uh;
    this.qx = o !== undefined ? o : THREE.uh;
    this.flipY = false;
    this.vx = false;
};

THREE.vC.prototype = Object.create(THREE.TA.prototype);

THREE.vC.prototype.constructor = THREE.vC;

THREE.wC = function(t, e, n, i, r, a, s, o, f) {
    THREE.TA.call(this, t, e, n, i, r, a, s, o, f);
    this.ur = true;
};

THREE.wC.prototype = Object.create(THREE.TA.prototype);

THREE.wC.prototype.constructor = THREE.wC;

THREE.$A = function(t, e, n, i, r, a, s, o, f, u) {
    t = t !== undefined ? t : [];
    e = e !== undefined ? e : THREE.kh;
    THREE.TA.call(this, t, e, n, i, r, a, s, o, f, u);
    this.flipY = false;
};

THREE.$A.prototype = Object.create(THREE.TA.prototype);

THREE.$A.prototype.constructor = THREE.$A;

Object.defineProperty(THREE.$A.prototype, "images", {
    get: function() {
        return this.SA;
    },
    set: function(t) {
        this.SA = t;
    }
});

THREE.gB = function(t, e, n, i, r, a, s, o, f, u, h, c) {
    THREE.TA.call(this, null, a, s, o, f, u, i, r, h, c);
    this.SA = {
        width: e,
        height: n
    };
    this.dB = t;
    this.flipY = false;
    this.vx = false;
};

THREE.gB.prototype = Object.create(THREE.TA.prototype);

THREE.gB.prototype.constructor = THREE.gB;

THREE.cB = function(t, e, n, i, r, a, s, o, f, u, h, c) {
    THREE.TA.call(this, null, a, s, o, f, u, i, r, h, c);
    this.SA = {
        data: t,
        width: e,
        height: n
    };
    this.px = f !== undefined ? f : THREE.uh;
    this.qx = u !== undefined ? u : THREE.uh;
    this.flipY = false;
    this.vx = false;
};

THREE.cB.prototype = Object.create(THREE.TA.prototype);

THREE.cB.prototype.constructor = THREE.cB;

THREE.xC = function(t, e, n, i, r, a, s, o, f) {
    THREE.TA.call(this, t, e, n, i, r, a, s, o, f);
    this.vx = false;
    var u = this;
    function h() {
        requestAnimationFrame(h);
        if (t.readyState >= t.HAVE_CURRENT_DATA) {
            u.ur = true;
        }
    }
    h();
};

THREE.xC.prototype = Object.create(THREE.TA.prototype);

THREE.xC.prototype.constructor = THREE.xC;

THREE.WA = function() {
    THREE.qq.call(this);
    this.type = "Group";
};

THREE.WA.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.WA
});

THREE.gq = function(t, e) {
    THREE.qq.call(this);
    this.type = "Points";
    this.j = t !== undefined ? t : new THREE.Cn();
    this.k = e !== undefined ? e : new THREE.ZB({
        color: Math.random() * 16777215
    });
};

THREE.gq.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.gq,
    jq: function() {
        var t = new THREE.Am();
        var e = new THREE.ro();
        var n = new THREE.Jn();
        return function i(r, a) {
            var s = this;
            var o = this.j;
            var f = this.Em;
            var u = r.cq.gq.threshold;
            if (o.Ho === null) o.Io();
            n.xi(o.Ho);
            n.xm(f);
            if (r.aq.Fn(n) === false) return;
            t.Dm(f);
            e.xi(r.aq).xm(t);
            var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3);
            var c = h * h;
            var l = new THREE.K();
            function d(t, n) {
                var i = e.to(t);
                if (i < c) {
                    var o = e.hn(t);
                    o.xm(f);
                    var u = r.aq.origin.jm(o);
                    if (u < r.near || u > r.bq) return;
                    a.push({
                        fn: u,
                        yC: Math.sqrt(i),
                        zC: o.clone(),
                        index: n,
                        face: null,
                        object: s
                    });
                }
            }
            if (o instanceof THREE.Cn) {
                var v = o.index;
                var p = o.attributes;
                var E = p.position.dc;
                if (v !== null) {
                    var g = v.dc;
                    for (var m = 0, T = g.length; m < T; m++) {
                        var y = g[m];
                        l.Ui(E, y * 3);
                        d(l, y);
                    }
                } else {
                    for (var m = 0, R = E.length / 3; m < R; m++) {
                        l.Ui(E, m * 3);
                        d(l, m);
                    }
                }
            } else {
                var w = o.Bn;
                for (var m = 0, R = w.length; m < R; m++) {
                    d(w[m], m);
                }
            }
        };
    }(),
    clone: function() {
        return new this.constructor(this.j, this.k).xi(this);
    }
});

THREE.eq = function(t, e, n) {
    if (n === 1) {
        console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.");
        return new THREE.AC(t, e);
    }
    THREE.qq.call(this);
    this.type = "Line";
    this.j = t !== undefined ? t : new THREE.Cn();
    this.k = e !== undefined ? e : new THREE.zB({
        color: Math.random() * 16777215
    });
};

THREE.eq.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.eq,
    jq: function() {
        var t = new THREE.Am();
        var e = new THREE.ro();
        var n = new THREE.Jn();
        return function i(r, a) {
            var s = r.kq;
            var o = s * s;
            var f = this.j;
            var u = this.Em;
            if (f.Ho === null) f.Io();
            n.xi(f.Ho);
            n.xm(u);
            if (r.aq.Fn(n) === false) return;
            t.Dm(u);
            e.xi(r.aq).xm(t);
            var h = new THREE.K();
            var c = new THREE.K();
            var l = new THREE.K();
            var d = new THREE.K();
            var v = this instanceof THREE.AC ? 2 : 1;
            if (f instanceof THREE.Cn) {
                var p = f.index;
                var E = f.attributes;
                var g = E.position.dc;
                if (p !== null) {
                    var m = p.dc;
                    for (var T = 0, y = m.length - 1; T < y; T += v) {
                        var R = m[T];
                        var w = m[T + 1];
                        h.Ui(g, R * 3);
                        c.Ui(g, w * 3);
                        var x = e.uo(h, c, d, l);
                        if (x > o) continue;
                        d.xm(this.Em);
                        var b = r.aq.origin.jm(d);
                        if (b < r.near || b > r.bq) continue;
                        a.push({
                            fn: b,
                            zC: l.clone().xm(this.Em),
                            index: T,
                            face: null,
                            BC: null,
                            object: this
                        });
                    }
                } else {
                    for (var T = 0, y = g.length / 3 - 1; T < y; T += v) {
                        h.Ui(g, 3 * T);
                        c.Ui(g, 3 * T + 3);
                        var x = e.uo(h, c, d, l);
                        if (x > o) continue;
                        d.xm(this.Em);
                        var b = r.aq.origin.jm(d);
                        if (b < r.near || b > r.bq) continue;
                        a.push({
                            fn: b,
                            zC: l.clone().xm(this.Em),
                            index: T,
                            face: null,
                            BC: null,
                            object: this
                        });
                    }
                }
            } else if (f instanceof THREE.An) {
                var H = f.Bn;
                var A = H.length;
                for (var T = 0; T < A - 1; T += v) {
                    var x = e.uo(H[T], H[T + 1], d, l);
                    if (x > o) continue;
                    d.xm(this.Em);
                    var b = r.aq.origin.jm(d);
                    if (b < r.near || b > r.bq) continue;
                    a.push({
                        fn: b,
                        zC: l.clone().xm(this.Em),
                        index: T,
                        face: null,
                        BC: null,
                        object: this
                    });
                }
            }
        };
    }(),
    clone: function() {
        return new this.constructor(this.j, this.k).xi(this);
    }
});

THREE.AC = function(t, e) {
    THREE.eq.call(this, t, e);
    this.type = "LineSegments";
};

THREE.AC.prototype = Object.assign(Object.create(THREE.eq.prototype), {
    constructor: THREE.AC
});

THREE.dq = function(t, e) {
    THREE.qq.call(this);
    this.type = "Mesh";
    this.j = t !== undefined ? t : new THREE.Cn();
    this.k = e !== undefined ? e : new THREE.GB({
        color: Math.random() * 16777215
    });
    this.CC = THREE.ii;
    this.DC();
};

THREE.dq.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.dq,
    EC: function(t) {
        this.CC = t;
    },
    xi: function(t) {
        THREE.qq.prototype.xi.call(this, t);
        this.CC = t.CC;
        return this;
    },
    DC: function() {
        if (this.j.Yr !== undefined && this.j.Yr.length > 0) {
            this.FC = -1;
            this.GC = [];
            this.HC = {};
            for (var t = 0, e = this.j.Yr.length; t < e; t++) {
                this.GC.push(0);
                this.HC[this.j.Yr[t].name] = t;
            }
        }
    },
    IC: function(t) {
        if (this.HC[t] !== undefined) {
            return this.HC[t];
        }
        console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + t + " does not exist. Returning 0.");
        return 0;
    },
    jq: function() {
        var t = new THREE.Am();
        var e = new THREE.ro();
        var n = new THREE.Jn();
        var i = new THREE.K();
        var r = new THREE.K();
        var a = new THREE.K();
        var s = new THREE.K();
        var o = new THREE.K();
        var f = new THREE.K();
        var u = new THREE.fa();
        var h = new THREE.fa();
        var c = new THREE.fa();
        var l = new THREE.K();
        var d = new THREE.K();
        var v = new THREE.K();
        function p(t, e, n, i, r, a, s) {
            THREE.np.op(t, e, n, i, l);
            r.Ri(l.x);
            a.Ri(l.y);
            s.Ri(l.z);
            r.add(a).add(s);
            return r.clone();
        }
        function E(t, e, n, i, r, a, s) {
            var o;
            var f = t.k;
            if (f.Bz === THREE.rg) {
                o = n.zo(a, r, i, true, s);
            } else {
                o = n.zo(i, r, a, f.Bz !== THREE.sg, s);
            }
            if (o === null) return null;
            v.xi(s);
            v.xm(t.Em);
            var u = e.aq.origin.jm(v);
            if (u < e.near || u > e.bq) return null;
            return {
                fn: u,
                zC: v.clone(),
                object: t
            };
        }
        function g(t, e, n, s, o, f, l, v) {
            i.Ui(s, f * 3);
            r.Ui(s, l * 3);
            a.Ui(s, v * 3);
            var g = E(t, e, n, i, r, a, d);
            if (g) {
                if (o) {
                    u.Ui(o, f * 2);
                    h.Ui(o, l * 2);
                    c.Ui(o, v * 2);
                    g.ms = p(d, i, r, a, u, h, c);
                }
                g.face = new THREE.mr(f, l, v, THREE.np.Hn(i, r, a));
                g.BC = f;
            }
            return g;
        }
        return function l(v, m) {
            var T = this.j;
            var y = this.k;
            var R = this.Em;
            if (y === undefined) return;
            if (T.Ho === null) T.Io();
            n.xi(T.Ho);
            n.xm(R);
            if (v.aq.Fn(n) === false) return;
            t.Dm(R);
            e.xi(v.aq).xm(t);
            if (T.bs !== null) {
                if (e.rn(T.bs) === false) return;
            }
            var w, x;
            if (T instanceof THREE.Cn) {
                var b, H, A;
                var M = T.index;
                var O = T.attributes;
                var S = O.position.dc;
                if (O.ms !== undefined) {
                    w = O.ms.dc;
                }
                if (M !== null) {
                    var U = M.dc;
                    for (var C = 0, L = U.length; C < L; C += 3) {
                        b = U[C];
                        H = U[C + 1];
                        A = U[C + 2];
                        x = g(this, v, e, S, w, b, H, A);
                        if (x) {
                            x.BC = Math.floor(C / 3);
                            m.push(x);
                        }
                    }
                } else {
                    for (var C = 0, L = S.length; C < L; C += 9) {
                        b = C / 3;
                        H = b + 1;
                        A = b + 2;
                        x = g(this, v, e, S, w, b, H, A);
                        if (x) {
                            x.index = b;
                            m.push(x);
                        }
                    }
                }
            } else if (T instanceof THREE.An) {
                var P, N, I;
                var q = y instanceof THREE.YB;
                var z = q === true ? y.ir : null;
                var B = T.Bn;
                var k = T.Wr;
                var j = T.Xr[0];
                if (j.length > 0) w = j;
                for (var D = 0, G = k.length; D < G; D++) {
                    var F = k[D];
                    var V = q === true ? z[F.pr] : y;
                    if (V === undefined) continue;
                    P = B[F.a];
                    N = B[F.b];
                    I = B[F.c];
                    if (V.Yr === true) {
                        var W = T.Yr;
                        var Y = this.GC;
                        i.set(0, 0, 0);
                        r.set(0, 0, 0);
                        a.set(0, 0, 0);
                        for (var X = 0, K = W.length; X < K; X++) {
                            var Z = Y[X];
                            if (Z === 0) continue;
                            var $ = W[X].Bn;
                            i.am(s.bm($[F.a], P), Z);
                            r.am(o.bm($[F.b], N), Z);
                            a.am(f.bm($[F.c], I), Z);
                        }
                        i.add(P);
                        r.add(N);
                        a.add(I);
                        P = i;
                        N = r;
                        I = a;
                    }
                    x = E(this, v, e, P, N, I, d);
                    if (x) {
                        if (w) {
                            var J = w[D];
                            u.xi(J[0]);
                            h.xi(J[1]);
                            c.xi(J[2]);
                            x.ms = p(d, P, N, I, u, h, c);
                        }
                        x.face = F;
                        x.BC = D;
                        m.push(x);
                    }
                }
            }
        };
    }(),
    clone: function() {
        return new this.constructor(this.j, this.k).xi(this);
    }
});

THREE.JC = function(t) {
    THREE.qq.call(this);
    this.type = "Bone";
    this.KC = t;
};

THREE.JC.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.JC,
    xi: function(t) {
        THREE.qq.prototype.xi.call(this, t);
        this.KC = t.KC;
        return this;
    }
});

THREE.LC = function(t, e, n) {
    this.MC = n !== undefined ? n : true;
    this.NC = new THREE.Am();
    t = t || [];
    this.gw = t.slice(0);
    if (this.MC) {
        var i = Math.sqrt(this.gw.length * 4);
        i = THREE.Math.fp(Math.ceil(i));
        i = Math.max(i, 4);
        this.OC = i;
        this.PC = i;
        this.QC = new Float32Array(this.OC * this.PC * 4);
        this.RC = new THREE.cB(this.QC, this.OC, this.PC, THREE.Nh, THREE.Gh);
    } else {
        this.QC = new Float32Array(16 * this.gw.length);
    }
    if (e === undefined) {
        this.SC();
    } else {
        if (this.gw.length === e.length) {
            this.TC = e.slice(0);
        } else {
            console.warn("THREE.Skeleton bonInverses is the wrong length.");
            this.TC = [];
            for (var r = 0, a = this.gw.length; r < a; r++) {
                this.TC.push(new THREE.Am());
            }
        }
    }
};

Object.assign(THREE.LC.prototype, {
    SC: function() {
        this.TC = [];
        for (var t = 0, e = this.gw.length; t < e; t++) {
            var n = new THREE.Am();
            if (this.gw[t]) {
                n.Dm(this.gw[t].Em);
            }
            this.TC.push(n);
        }
    },
    UC: function() {
        var t;
        for (var e = 0, n = this.gw.length; e < n; e++) {
            t = this.gw[e];
            if (t) {
                t.Em.Dm(this.TC[e]);
            }
        }
        for (var e = 0, n = this.gw.length; e < n; e++) {
            t = this.gw[e];
            if (t) {
                if (t.parent instanceof THREE.JC) {
                    t.matrix.Dm(t.parent.Em);
                    t.matrix.multiply(t.Em);
                } else {
                    t.matrix.xi(t.Em);
                }
                t.matrix.mo(t.position, t.wq, t.scale);
            }
        }
    },
    update: function() {
        var t = new THREE.Am();
        return function e() {
            for (var n = 0, i = this.gw.length; n < i; n++) {
                var r = this.gw[n] ? this.gw[n].Em : this.NC;
                t.Bm(r, this.TC[n]);
                t.toArray(this.QC, n * 16);
            }
            if (this.MC) {
                this.RC.ur = true;
            }
        };
    }(),
    clone: function() {
        return new THREE.LC(this.gw, this.TC, this.MC);
    }
});

THREE.VA = function(t, e, n) {
    THREE.dq.call(this, t, e);
    this.type = "SkinnedMesh";
    this.VC = "attached";
    this.WC = new THREE.Am();
    this.XC = new THREE.Am();
    var i = [];
    if (this.j && this.j.gw !== undefined) {
        var r, a;
        for (var s = 0, o = this.j.gw.length; s < o; ++s) {
            a = this.j.gw[s];
            r = new THREE.JC(this);
            i.push(r);
            r.name = a.name;
            r.position.Ui(a.YC);
            r.wq.Ui(a.ZC);
            if (a.$C !== undefined) r.scale.Ui(a.$C);
        }
        for (var s = 0, o = this.j.gw.length; s < o; ++s) {
            a = this.j.gw[s];
            if (a.parent !== -1 && a.parent !== null && i[a.parent] !== undefined) {
                i[a.parent].add(i[s]);
            } else {
                this.add(i[s]);
            }
        }
    }
    this._C();
    this.yn(true);
    this.bind(new THREE.LC(i, undefined, n), this.Em);
};

THREE.VA.prototype = Object.assign(Object.create(THREE.dq.prototype), {
    constructor: THREE.VA,
    bind: function(t, e) {
        this.fw = t;
        if (e === undefined) {
            this.yn(true);
            this.fw.SC();
            e = this.Em;
        }
        this.WC.xi(e);
        this.XC.Dm(e);
    },
    UC: function() {
        this.fw.UC();
    },
    _C: function() {
        if (this.j instanceof THREE.An) {
            for (var t = 0; t < this.j.$r.length; t++) {
                var e = this.j.$r[t];
                var n = 1 / e.im();
                if (n !== Infinity) {
                    e.Ri(n);
                } else {
                    e.set(1, 0, 0, 0);
                }
            }
        } else if (this.j instanceof THREE.Cn) {
            var i = new THREE.Sm();
            var r = this.j.attributes.aD;
            for (var t = 0; t < r.count; t++) {
                i.x = r.On(t);
                i.y = r.Pn(t);
                i.z = r.Qn(t);
                i.w = r.Dr(t);
                var n = 1 / i.im();
                if (n !== Infinity) {
                    i.Ri(n);
                } else {
                    i.set(1, 0, 0, 0);
                }
                r.Fr(t, i.x, i.y, i.z, i.w);
            }
        }
    },
    yn: function(t) {
        THREE.dq.prototype.yn.call(this, true);
        if (this.VC === "attached") {
            this.XC.Dm(this.Em);
        } else if (this.VC === "detached") {
            this.XC.Dm(this.WC);
        } else {
            console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.VC);
        }
    },
    clone: function() {
        return new this.constructor(this.j, this.k, this.fw.MC).xi(this);
    }
});

THREE.fq = function() {
    THREE.qq.call(this);
    this.type = "LOD";
    Object.defineProperties(this, {
        XA: {
            vq: true,
            value: []
        }
    });
};

THREE.fq.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.fq,
    xi: function(t) {
        THREE.qq.prototype.xi.call(this, t, false);
        var e = t.XA;
        for (var n = 0, i = e.length; n < i; n++) {
            var r = e[n];
            this.YA(r.object.clone(), r.fn);
        }
        return this;
    },
    YA: function(t, e) {
        if (e === undefined) e = 0;
        e = Math.abs(e);
        var n = this.XA;
        for (var i = 0; i < n.length; i++) {
            if (e < n[i].fn) {
                break;
            }
        }
        n.splice(i, 0, {
            fn: e,
            object: t
        });
        this.add(t);
    },
    bD: function(t) {
        var e = this.XA;
        for (var n = 1, i = e.length; n < i; n++) {
            if (t < e[n].fn) {
                break;
            }
        }
        return e[n - 1].object;
    },
    jq: function() {
        var t = new THREE.K();
        return function e(n, i) {
            t.Pm(this.Em);
            var r = n.aq.origin.jm(t);
            this.bD(r).jq(n, i);
        };
    }(),
    update: function() {
        var t = new THREE.K();
        var e = new THREE.K();
        return function n(i) {
            var r = this.XA;
            if (r.length > 1) {
                t.Pm(i.Em);
                e.Pm(this.Em);
                var a = t.jm(e);
                r[0].object.visible = true;
                for (var s = 1, o = r.length; s < o; s++) {
                    if (a >= r[s].fn) {
                        r[s - 1].object.visible = false;
                        r[s].object.visible = true;
                    } else {
                        break;
                    }
                }
                for (;s < o; s++) {
                    r[s].object.visible = false;
                }
            }
        };
    }(),
    toJSON: function(t) {
        var e = THREE.qq.prototype.toJSON.call(this, t);
        e.object.XA = [];
        var n = this.XA;
        for (var i = 0, r = n.length; i < r; i++) {
            var a = n[i];
            e.object.XA.push({
                object: a.object.sq,
                fn: a.fn
            });
        }
        return e;
    }
});

THREE.hq = function(t) {
    THREE.qq.call(this);
    this.type = "Sprite";
    this.k = t !== undefined ? t : new THREE.iC();
};

THREE.hq.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.hq,
    jq: function() {
        var t = new THREE.K();
        return function e(n, i) {
            t.Pm(this.Em);
            var r = n.aq.to(t);
            var a = this.scale.x * this.scale.y / 4;
            if (r > a) {
                return;
            }
            i.push({
                fn: Math.sqrt(r),
                zC: this.position,
                face: null,
                object: this
            });
        };
    }(),
    clone: function() {
        return new this.constructor(this.k).xi(this);
    }
});

THREE.cD = function(t, e, n, i, r) {
    THREE.qq.call(this);
    this.dD = [];
    this.eD = new THREE.K();
    this.fD = undefined;
    if (t !== undefined) {
        this.add(t, e, n, i, r);
    }
};

THREE.cD.prototype = Object.assign(Object.create(THREE.qq.prototype), {
    constructor: THREE.cD,
    xi: function(t) {
        THREE.qq.prototype.xi.call(this, t);
        this.eD.xi(t.eD);
        this.fD = t.fD;
        for (var e = 0, n = t.dD.length; e < n; e++) {
            this.dD.push(t.dD[e]);
        }
        return this;
    },
    add: function(t, e, n, i, r, a) {
        if (e === undefined) e = -1;
        if (n === undefined) n = 0;
        if (a === undefined) a = 1;
        if (r === undefined) r = new THREE.T(16777215);
        if (i === undefined) i = THREE.zg;
        n = Math.min(n, Math.max(0, n));
        this.dD.push({
            G: t,
            size: e,
            fn: n,
            x: 0,
            y: 0,
            z: 0,
            scale: 1,
            rotation: 0,
            opacity: a,
            color: r,
            Ay: i
        });
    },
    gD: function() {
        var t, e = this.dD.length;
        var n;
        var i = -this.eD.x * 2;
        var r = -this.eD.y * 2;
        for (t = 0; t < e; t++) {
            n = this.dD[t];
            n.x = this.eD.x + i * n.fn;
            n.y = this.eD.y + r * n.fn;
            n.hD = n.x * Math.PI * .25;
            n.rotation += (n.hD - n.rotation) * .25;
        }
    }
});

THREE.UA = function() {
    THREE.qq.call(this);
    this.type = "Scene";
    this.background = null;
    this.kB = null;
    this.iD = null;
    this.jD = true;
};

THREE.UA.prototype = Object.create(THREE.qq.prototype);

THREE.UA.prototype.constructor = THREE.UA;

THREE.UA.prototype.xi = function(t, e) {
    THREE.qq.prototype.xi.call(this, t, e);
    if (t.background !== null) this.background = t.background.clone();
    if (t.kB !== null) this.kB = t.kB.clone();
    if (t.iD !== null) this.iD = t.iD.clone();
    this.jD = t.jD;
    this.zq = t.zq;
    return this;
};

THREE.kD = function(t, e, n) {
    this.name = "";
    this.color = new THREE.T(t);
    this.near = e !== undefined ? e : 1;
    this.bq = n !== undefined ? n : 1e3;
};

THREE.kD.prototype.clone = function() {
    return new THREE.kD(this.color.Ii(), this.near, this.bq);
};

THREE.lD = function(t, e) {
    this.name = "";
    this.color = new THREE.T(t);
    this.mD = e !== undefined ? e : 25e-5;
};

THREE.lD.prototype.clone = function() {
    return new THREE.lD(this.color.Ii(), this.mD);
};

THREE.mC = {};

THREE.mC["nD"] = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n";

THREE.mC["oD"] = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n";

THREE.mC["pD"] = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n";

THREE.mC["qD"] = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n";

THREE.mC["rD"] = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";

THREE.mC["sD"] = "\nvec3 transformed = vec3( position );\n";

THREE.mC["tD"] = "\nvec3 objectNormal = vec3( normal );\n";

THREE.mC["uD"] = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n";

THREE.mC["vD"] = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n";

THREE.mC["wD"] = "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n#endif\n";

THREE.mC["xD"] = "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n";

THREE.mC["yD"] = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n";

THREE.mC["zD"] = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n";

THREE.mC["AD"] = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";

THREE.mC["BD"] = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n";

THREE.mC["CD"] = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";

THREE.mC["DD"] = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";

THREE.mC["ED"] = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n";

THREE.mC["FD"] = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n";

THREE.mC["GD"] = "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n";

THREE.mC["HD"] = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n";

THREE.mC["ID"] = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n";

THREE.mC["JD"] = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n";

THREE.mC["KD"] = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n";

THREE.mC["LD"] = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n";

THREE.mC["MD"] = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n";

THREE.mC["ND"] = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n";

THREE.mC["OD"] = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n";

THREE.mC["PD"] = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n";

THREE.mC["QD"] = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n";

THREE.mC["RD"] = "#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n";

THREE.mC["SD"] = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";

THREE.mC["TD"] = "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n";

THREE.mC["UD"] = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";

THREE.mC["VD"] = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n";

THREE.mC["WD"] = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#include <normal_flip>\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#include <normal_flip>\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n";

THREE.mC["XD"] = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";

THREE.mC["YD"] = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n";

THREE.mC["ZD"] = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n";

THREE.mC["$D"] = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n";

THREE.mC["_D"] = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\t\t\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n";

THREE.mC["aE"] = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif";

THREE.mC["bE"] = "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n";

THREE.mC["cE"] = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif";

THREE.mC["dE"] = "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n";

THREE.mC["eE"] = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n";

THREE.mC["fE"] = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n";

THREE.mC["gE"] = "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n";

THREE.mC["hE"] = "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n";

THREE.mC["iE"] = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n";

THREE.mC["jE"] = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";

THREE.mC["kE"] = "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n";

THREE.mC["lE"] = "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";

THREE.mC["mE"] = "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n";

THREE.mC["nE"] = "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n";

THREE.mC["oE"] = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n";

THREE.mC["pE"] = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n";

THREE.mC["qE"] = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n";

THREE.mC["rE"] = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n";

THREE.mC["sE"] = "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n";

THREE.mC["tE"] = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n";

THREE.mC["uE"] = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";

THREE.mC["vE"] = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n";

THREE.mC["wE"] = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n";

THREE.mC["xE"] = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n";

THREE.mC["yE"] = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n";

THREE.mC["zE"] = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";

THREE.mC["AE"] = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n";

THREE.mC["BE"] = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n";

THREE.mC["CE"] = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n";

THREE.mC["DE"] = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";

THREE.mC["EE"] = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";

THREE.mC["FE"] = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n";

THREE.mC["GE"] = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n";

THREE.mC["HE"] = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";

THREE.mC["IE"] = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif";

THREE.mC["JE"] = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif";

THREE.mC["KE"] = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif";

THREE.mC["LE"] = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n";

THREE.mC["ME"] = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif";

THREE.mC["NE"] = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n";

THREE.gC = {
    jd: function(t) {
        var e = {};
        for (var n = 0; n < t.length; n++) {
            var i = this.clone(t[n]);
            for (var r in i) {
                e[r] = i[r];
            }
        }
        return e;
    },
    clone: function(t) {
        var e = {};
        for (var n in t) {
            e[n] = {};
            for (var i in t[n]) {
                var r = t[n][i];
                if (r instanceof THREE.T || r instanceof THREE.fa || r instanceof THREE.K || r instanceof THREE.Sm || r instanceof THREE.Kn || r instanceof THREE.Am || r instanceof THREE.TA) {
                    e[n][i] = r.clone();
                } else if (Array.isArray(r)) {
                    e[n][i] = r.slice();
                } else {
                    e[n][i] = r;
                }
            }
        }
        return e;
    }
};

THREE.kC = {
    ED: {
        OE: {
            value: new THREE.T(15658734)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        PE: {
            value: new THREE.Sm(0, 0, 1, 1)
        },
        hz: {
            value: null
        },
        wz: {
            value: null
        },
        mA: {
            value: null
        },
        QE: {
            value: -1
        },
        oA: {
            value: 1
        },
        HB: {
            value: .98
        }
    },
    RE: {
        Sy: {
            value: null
        },
        qA: {
            value: 1
        }
    },
    SE: {
        Ny: {
            value: null
        },
        pA: {
            value: 1
        }
    },
    TE: {
        Iy: {
            value: null
        }
    },
    UE: {
        Xy: {
            value: null
        },
        az: {
            value: 1
        }
    },
    VE: {
        bz: {
            value: null
        },
        gz: {
            value: new THREE.fa(1, 1)
        }
    },
    WE: {
        iA: {
            value: null
        },
        jA: {
            value: 1
        },
        kA: {
            value: 0
        }
    },
    XE: {
        rz: {
            value: null
        }
    },
    YE: {
        mz: {
            value: null
        }
    },
    kB: {
        ZE: {
            value: 25e-5
        },
        $E: {
            value: 1
        },
        _E: {
            value: 2e3
        },
        aF: {
            value: new THREE.T(16777215)
        }
    },
    lB: {
        bF: {
            value: []
        },
        cF: {
            value: [],
            properties: {
                direction: {},
                color: {},
                $x: {},
                dF: {},
                eF: {},
                fF: {}
            }
        },
        gF: {
            value: []
        },
        hF: {
            value: []
        },
        iF: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                fn: {},
                jF: {},
                kF: {},
                Tx: {},
                $x: {},
                dF: {},
                eF: {},
                fF: {}
            }
        },
        lF: {
            value: []
        },
        mF: {
            value: []
        },
        nF: {
            value: [],
            properties: {
                color: {},
                position: {},
                Tx: {},
                fn: {},
                $x: {},
                dF: {},
                eF: {},
                fF: {}
            }
        },
        oF: {
            value: []
        },
        pF: {
            value: []
        },
        qF: {
            value: [],
            properties: {
                direction: {},
                rF: {},
                Sx: {}
            }
        }
    },
    points: {
        OE: {
            value: new THREE.T(15658734)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        PE: {
            value: new THREE.Sm(0, 0, 1, 1)
        }
    }
};

THREE.mC["sF"] = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n";

THREE.mC["tF"] = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";

THREE.mC["uF"] = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n";

THREE.mC["vF"] = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";

THREE.mC["wF"] = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n";

THREE.mC["xF"] = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n";

THREE.mC["yF"] = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n";

THREE.mC["zF"] = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";

THREE.mC["AF"] = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["BF"] = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";

THREE.mC["CF"] = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["DF"] = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n}\n";

THREE.mC["EF"] = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["FF"] = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n";

THREE.mC["GF"] = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["HF"] = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n";

THREE.mC["IF"] = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["JF"] = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";

THREE.mC["KF"] = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\t#include <logdepthbuf_fragment>\n}\n";

THREE.mC["LF"] = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";

THREE.mC["MF"] = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

THREE.mC["NF"] = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";

THREE.mC["nC"] = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n";

THREE.mC["lC"] = "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";

THREE.OF = {
    PF: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["RE"], THREE.kC["kB"] ]),
        B: THREE.mC["DF"],
        C: THREE.mC["CF"]
    },
    QF: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["RE"], THREE.kC["SE"], THREE.kC["TE"], THREE.kC["kB"], THREE.kC["lB"], {
            Cy: {
                value: new THREE.T(0)
            }
        } ]),
        B: THREE.mC["FF"],
        C: THREE.mC["EF"]
    },
    RF: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["RE"], THREE.kC["SE"], THREE.kC["TE"], THREE.kC["UE"], THREE.kC["VE"], THREE.kC["WE"], THREE.kC["kB"], THREE.kC["lB"], {
            Cy: {
                value: new THREE.T(0)
            },
            By: {
                value: new THREE.T(1118481)
            },
            Dy: {
                value: 30
            }
        } ]),
        B: THREE.mC["HF"],
        C: THREE.mC["GF"]
    },
    SF: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["RE"], THREE.kC["SE"], THREE.kC["TE"], THREE.kC["UE"], THREE.kC["VE"], THREE.kC["WE"], THREE.kC["XE"], THREE.kC["YE"], THREE.kC["kB"], THREE.kC["lB"], {
            Cy: {
                value: new THREE.T(0)
            },
            $z: {
                value: .5
            },
            _z: {
                value: 0
            },
            TB: {
                value: 1
            }
        } ]),
        B: THREE.mC["JF"],
        C: THREE.mC["IF"]
    },
    points: {
        l: THREE.gC.jd([ THREE.kC["points"], THREE.kC["kB"] ]),
        B: THREE.mC["NF"],
        C: THREE.mC["MF"]
    },
    TF: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["kB"], {
            scale: {
                value: 1
            },
            EB: {
                value: 1
            },
            UF: {
                value: 2
            }
        } ]),
        B: THREE.mC["BF"],
        C: THREE.mC["AF"]
    },
    AA: {
        l: THREE.gC.jd([ THREE.kC["ED"], THREE.kC["WE"] ]),
        B: THREE.mC["vF"],
        C: THREE.mC["uF"]
    },
    Hn: {
        l: {
            opacity: {
                value: 1
            }
        },
        B: THREE.mC["LF"],
        C: THREE.mC["KF"]
    },
    VF: {
        l: {
            WF: {
                value: null
            },
            XF: {
                value: -1
            },
            opacity: {
                value: 1
            }
        },
        B: THREE.mC["tF"],
        C: THREE.mC["sF"]
    },
    YF: {
        l: {
            ZF: {
                value: null
            },
            XF: {
                value: -1
            }
        },
        B: THREE.mC["zF"],
        C: THREE.mC["yF"]
    },
    $F: {
        l: {
            _F: {
                value: new THREE.K()
            }
        },
        B: THREE.mC["xF"],
        C: THREE.mC["wF"]
    }
};

THREE.OF["aG"] = {
    l: THREE.gC.jd([ THREE.OF["SF"].l, {
        WB: {
            value: 0
        },
        XB: {
            value: 0
        }
    } ]),
    B: THREE.mC["JF"],
    C: THREE.mC["IF"]
};

THREE.bG = function(t) {
    console.log("THREE.WebGLRenderer", THREE.cg);
    t = t || {};
    var e = t.canvas !== undefined ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), n = t.context !== undefined ? t.context : null, i = t.alpha !== undefined ? t.alpha : false, r = t.AA !== undefined ? t.AA : true, a = t.cG !== undefined ? t.cG : true, s = t.dG !== undefined ? t.dG : false, o = t.vB !== undefined ? t.vB : true, f = t.eG !== undefined ? t.eG : false;
    var u = [];
    var h = [];
    var c = -1;
    var l = [];
    var d = -1;
    var v = new Float32Array(8);
    var p = [];
    var E = [];
    this.fG = e;
    this.context = null;
    this.gG = true;
    this.hG = true;
    this.iG = true;
    this.jG = true;
    this.kG = true;
    this.rB = [];
    this.lG = false;
    this.mG = 2;
    this.nG = false;
    this.oG = false;
    this.pG = false;
    this.qG = THREE.fh;
    this.rG = 1;
    this.sG = 1;
    this.tG = 8;
    this.uG = 4;
    var g = this, m = null, T = null, y = null, R = -1, w = "", x = null, b = new THREE.Sm(), H = null, A = new THREE.Sm(), M = 0, O = new THREE.T(0), S = 0, U = e.width, C = e.height, L = 1, P = new THREE.Sm(0, 0, U, C), N = false, I = new THREE.Sm(0, 0, U, C), q = new THREE.Bo(), z = new THREE.vG(), B = false, k = false, j = new THREE.Jn(), D = new THREE.Am(), G = new THREE.K(), F = {
        hash: "",
        wG: [ 0, 0, 0 ],
        xG: [],
        gF: [],
        hF: [],
        yG: [],
        lF: [],
        mF: [],
        zC: [],
        oF: [],
        pF: [],
        zG: [],
        AG: []
    }, V = {
        BG: 0,
        Bn: 0,
        Wr: 0,
        points: 0
    };
    this.info = {
        xx: V,
        memory: {
            hr: 0,
            jr: 0
        },
        CG: null
    };
    var W;
    try {
        var Y = {
            alpha: i,
            AA: r,
            cG: a,
            dG: s,
            vB: o,
            eG: f
        };
        W = n || e.getContext("webgl", Y) || e.getContext("experimental-webgl", Y);
        if (W === null) {
            if (e.getContext("webgl") !== null) {
                throw "Error creating WebGL context with your selected attributes.";
            } else {
                throw "Error creating WebGL context.";
            }
        }
        if (W.getShaderPrecisionFormat === undefined) {
            W.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                };
            };
        }
        e.addEventListener("webglcontextlost", Et, false);
    } catch (t) {
        console.error("THREE.WebGLRenderer: " + t);
    }
    var X = new THREE.DG(W);
    X.get("WEBGL_depth_texture");
    X.get("OES_texture_float");
    X.get("OES_texture_float_linear");
    X.get("OES_texture_half_float");
    X.get("OES_texture_half_float_linear");
    X.get("OES_standard_derivatives");
    X.get("ANGLE_instanced_arrays");
    if (X.get("OES_element_index_uint")) {
        THREE.Cn.Ys = 4294967296;
    }
    var K = new THREE.EG(W, X, t);
    var Z = new THREE.FG(W, X, Wt);
    var $ = new THREE.GG();
    var J = new THREE.HG(W, X, Z, $, K, Wt, this.info);
    var Q = new THREE.IG(W, $, this.info);
    var tt = new THREE.JG(this, K);
    var et = new THREE.KG();
    this.info.CG = tt.CG;
    var nt = new THREE.LG(W, X, V);
    var it = new THREE.MG(W, X, V);
    var rt = new THREE.nq(-1, 1, 1, -1, 0, 1);
    var at = new THREE.mq();
    var st = new THREE.dq(new THREE.NG(2, 2), new THREE.GB({
        cA: false,
        dA: false,
        kB: false
    }));
    var ot = THREE.OF["VF"];
    var ft = new THREE.dq(new THREE.OG(5, 5, 5), new THREE.$B({
        l: ot.l,
        B: ot.B,
        C: ot.C,
        Bz: THREE.rg,
        cA: false,
        dA: false,
        kB: false
    }));
    function ut() {
        return T === null ? L : 1;
    }
    function ht(t, e, n, i) {
        if (o === true) {
            t *= i;
            e *= i;
            n *= i;
        }
        Z.clearColor(t, e, n, i);
    }
    function ct() {
        Z.init();
        Z.scissor(b.xi(P).Ri(L));
        Z.viewport(A.xi(I).Ri(L));
        ht(O.r, O.wi, O.b, S);
    }
    function lt() {
        m = null;
        x = null;
        w = "";
        R = -1;
        Z.reset();
    }
    ct();
    this.context = W;
    this.PG = K;
    this.extensions = X;
    this.properties = $;
    this.state = Z;
    var dt = new THREE.QG(this, F, Q, K);
    this.RG = dt;
    var vt = new THREE.SG(this, p);
    var pt = new THREE.TG(this, E);
    this.getContext = function() {
        return W;
    };
    this.getContextAttributes = function() {
        return W.getContextAttributes();
    };
    this.UG = function() {
        X.get("WEBGL_lose_context").VG();
    };
    this.WG = function() {
        return K.WG();
    };
    this.XG = function() {
        return K.precision;
    };
    this.YG = function() {
        return L;
    };
    this.ZG = function(t) {
        if (t === undefined) return;
        L = t;
        this.$G(I.z, I.w, false);
    };
    this._G = function() {
        return {
            width: U,
            height: C
        };
    };
    this.$G = function(t, n, i) {
        U = t;
        C = n;
        e.width = t * L;
        e.height = n * L;
        if (i !== false) {
            e.style.width = t + "px";
            e.style.height = n + "px";
        }
        this.aH(0, 0, t, n);
    };
    this.aH = function(t, e, n, i) {
        Z.viewport(I.set(t, e, n, i));
    };
    this.bH = function(t, e, n, i) {
        Z.scissor(P.set(t, e, n, i));
    };
    this.cH = function(t) {
        Z.cH(N = t);
    };
    this.dH = function() {
        return O;
    };
    this.eH = function(t, e) {
        O.set(t);
        S = e !== undefined ? e : 1;
        ht(O.r, O.wi, O.b, S);
    };
    this.fH = function() {
        return S;
    };
    this.gH = function(t) {
        S = t;
        ht(O.r, O.wi, O.b, S);
    };
    this.clear = function(t, e, n) {
        var i = 0;
        if (t === undefined || t) i |= W.COLOR_BUFFER_BIT;
        if (e === undefined || e) i |= W.DEPTH_BUFFER_BIT;
        if (n === undefined || n) i |= W.STENCIL_BUFFER_BIT;
        W.clear(i);
    };
    this.clearColor = function() {
        this.clear(true, false, false);
    };
    this.clearDepth = function() {
        this.clear(false, true, false);
    };
    this.clearStencil = function() {
        this.clear(false, false, true);
    };
    this.hH = function(t, e, n, i) {
        this.yx(t);
        this.clear(e, n, i);
    };
    this.iH = lt;
    this.Es = function() {
        l = [];
        d = -1;
        h = [];
        c = -1;
        e.removeEventListener("webglcontextlost", Et, false);
    };
    function Et(t) {
        t.preventDefault();
        lt();
        ct();
        $.clear();
    }
    function gt(t) {
        var e = t.target;
        e.removeEventListener("dispose", gt);
        mt(e);
    }
    function mt(t) {
        Tt(t);
        $.delete(t);
    }
    function Tt(t) {
        var e = $.get(t).jH;
        t.jH = undefined;
        if (e !== undefined) {
            tt.kH(e);
        }
    }
    this.lH = function(t, e, n) {
        Z.mH();
        var i = $.get(t);
        if (t.nH && !i.position) i.position = W.createBuffer();
        if (t.oH && !i.Hn) i.Hn = W.createBuffer();
        if (t.pH && !i.ms) i.ms = W.createBuffer();
        if (t.qH && !i.color) i.color = W.createBuffer();
        var r = e.rH();
        if (t.nH) {
            W.bindBuffer(W.ARRAY_BUFFER, i.position);
            W.bufferData(W.ARRAY_BUFFER, t.sH, W.DYNAMIC_DRAW);
            Z.tH(r.position);
            W.vertexAttribPointer(r.position, 3, W.FLOAT, false, 0, 0);
        }
        if (t.oH) {
            W.bindBuffer(W.ARRAY_BUFFER, i.Hn);
            if (n.type !== "MeshPhongMaterial" && n.type !== "MeshStandardMaterial" && n.type !== "MeshPhysicalMaterial" && n.aA === THREE.tg) {
                for (var a = 0, s = t.count * 3; a < s; a += 9) {
                    var o = t.uH;
                    var f = (o[a + 0] + o[a + 3] + o[a + 6]) / 3;
                    var u = (o[a + 1] + o[a + 4] + o[a + 7]) / 3;
                    var h = (o[a + 2] + o[a + 5] + o[a + 8]) / 3;
                    o[a + 0] = f;
                    o[a + 1] = u;
                    o[a + 2] = h;
                    o[a + 3] = f;
                    o[a + 4] = u;
                    o[a + 5] = h;
                    o[a + 6] = f;
                    o[a + 7] = u;
                    o[a + 8] = h;
                }
            }
            W.bufferData(W.ARRAY_BUFFER, t.uH, W.DYNAMIC_DRAW);
            Z.tH(r.Hn);
            W.vertexAttribPointer(r.Hn, 3, W.FLOAT, false, 0, 0);
        }
        if (t.pH && n.map) {
            W.bindBuffer(W.ARRAY_BUFFER, i.ms);
            W.bufferData(W.ARRAY_BUFFER, t.vH, W.DYNAMIC_DRAW);
            Z.tH(r.ms);
            W.vertexAttribPointer(r.ms, 2, W.FLOAT, false, 0, 0);
        }
        if (t.qH && n.or !== THREE.vg) {
            W.bindBuffer(W.ARRAY_BUFFER, i.color);
            W.bufferData(W.ARRAY_BUFFER, t.wH, W.DYNAMIC_DRAW);
            Z.tH(r.color);
            W.vertexAttribPointer(r.color, 3, W.FLOAT, false, 0, 0);
        }
        Z.xH();
        W.drawArrays(W.TRIANGLES, 0, t.count);
        t.count = 0;
    };
    this.yH = function(t, e, n, i, r, a) {
        Ut(i);
        var s = Ct(t, e, i, r);
        var o = false;
        var f = n.id + "_" + s.id + "_" + i.fA;
        if (f !== w) {
            w = f;
            o = true;
        }
        var u = r.GC;
        if (u !== undefined) {
            var h = [];
            for (var c = 0, l = u.length; c < l; c++) {
                var d = u[c];
                h.push([ d, c ]);
            }
            h.sort(Rt);
            if (h.length > 8) {
                h.length = 8;
            }
            var p = n.Ks;
            for (var c = 0, l = h.length; c < l; c++) {
                var d = h[c];
                v[c] = d[0];
                if (d[0] !== 0) {
                    var E = d[1];
                    if (i.Yr === true && p.position) n.Os("morphTarget" + c, p.position[E]);
                    if (i.Zr === true && p.Hn) n.Os("morphNormal" + c, p.Hn[E]);
                } else {
                    if (i.Yr === true) n.removeAttribute("morphTarget" + c);
                    if (i.Zr === true) n.removeAttribute("morphNormal" + c);
                }
            }
            s.zH()._v(W, "morphTargetInfluences", v);
            o = true;
        }
        var E = n.index;
        var g = n.attributes.position;
        if (i.fA === true) {
            E = Q.AH(n);
        }
        var m;
        if (E !== null) {
            m = it;
            m.Ns(E);
        } else {
            m = nt;
        }
        if (o) {
            yt(i, s, n);
            if (E !== null) {
                W.bindBuffer(W.ELEMENT_ARRAY_BUFFER, Q.BH(E));
            }
        }
        var T = 0;
        var y = Infinity;
        if (E !== null) {
            y = E.count;
        } else if (g !== undefined) {
            y = g.count;
        }
        var R = n.Ls.start;
        var x = n.Ls.count;
        var b = a !== null ? a.start : 0;
        var H = a !== null ? a.count : Infinity;
        var A = Math.max(T, R, b);
        var M = Math.min(T + y, R + x, b + H) - 1;
        var O = Math.max(0, M - A + 1);
        if (r instanceof THREE.dq) {
            if (i.fA === true) {
                Z.setLineWidth(i.gA * ut());
                m.CH(W.LINES);
            } else {
                switch (r.CC) {
                  case THREE.ii:
                    m.CH(W.TRIANGLES);
                    break;

                  case THREE.ji:
                    m.CH(W.TRIANGLE_STRIP);
                    break;

                  case THREE.ki:
                    m.CH(W.TRIANGLE_FAN);
                    break;
                }
            }
        } else if (r instanceof THREE.eq) {
            var S = i.AB;
            if (S === undefined) S = 1;
            Z.setLineWidth(S * ut());
            if (r instanceof THREE.AC) {
                m.CH(W.LINES);
            } else {
                m.CH(W.LINE_STRIP);
            }
        } else if (r instanceof THREE.gq) {
            m.CH(W.POINTS);
        }
        if (n instanceof THREE.Zs) {
            if (n.$s > 0) {
                m.DH(n, A, O);
            }
        } else {
            m.xx(A, O);
        }
    };
    function yt(t, e, n, i) {
        var r;
        if (n instanceof THREE.Zs) {
            r = X.get("ANGLE_instanced_arrays");
            if (r === null) {
                console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                return;
            }
        }
        if (i === undefined) i = 0;
        Z.mH();
        var a = n.attributes;
        var s = e.rH();
        var o = t.eC;
        for (var f in s) {
            var u = s[f];
            if (u >= 0) {
                var h = a[f];
                if (h !== undefined) {
                    var c = W.FLOAT;
                    var l = h.dc;
                    var d = h.tr;
                    if (l instanceof Float32Array) {
                        c = W.FLOAT;
                    } else if (l instanceof Float64Array) {
                        console.warn("Unsupported data buffer format: Float64Array");
                    } else if (l instanceof Uint16Array) {
                        c = W.UNSIGNED_SHORT;
                    } else if (l instanceof Int16Array) {
                        c = W.SHORT;
                    } else if (l instanceof Uint32Array) {
                        c = W.UNSIGNED_INT;
                    } else if (l instanceof Int32Array) {
                        c = W.INT;
                    } else if (l instanceof Int8Array) {
                        c = W.BYTE;
                    } else if (l instanceof Uint8Array) {
                        c = W.UNSIGNED_BYTE;
                    }
                    var v = h.pm;
                    var p = Q.BH(h);
                    if (h instanceof THREE.Dn) {
                        var E = h.data;
                        var g = E.En;
                        var m = h.offset;
                        if (E instanceof THREE.Tr) {
                            Z.EH(u, E.Rr, r);
                            if (n.$s === undefined) {
                                n.$s = E.Rr * E.count;
                            }
                        } else {
                            Z.tH(u);
                        }
                        W.bindBuffer(W.ARRAY_BUFFER, p);
                        W.vertexAttribPointer(u, v, c, d, g * E.dc.BYTES_PER_ELEMENT, (i * g + m) * E.dc.BYTES_PER_ELEMENT);
                    } else {
                        if (h instanceof THREE.Qr) {
                            Z.EH(u, h.Rr, r);
                            if (n.$s === undefined) {
                                n.$s = h.Rr * h.count;
                            }
                        } else {
                            Z.tH(u);
                        }
                        W.bindBuffer(W.ARRAY_BUFFER, p);
                        W.vertexAttribPointer(u, v, c, d, 0, i * v * h.dc.BYTES_PER_ELEMENT);
                    }
                } else if (o !== undefined) {
                    var T = o[f];
                    if (T !== undefined) {
                        switch (T.length) {
                          case 2:
                            W.vertexAttrib2fv(u, T);
                            break;

                          case 3:
                            W.vertexAttrib3fv(u, T);
                            break;

                          case 4:
                            W.vertexAttrib4fv(u, T);
                            break;

                          default:
                            W.vertexAttrib1fv(u, T);
                        }
                    }
                }
            }
        }
        Z.xH();
    }
    function Rt(t, e) {
        return Math.abs(e[0]) - Math.abs(t[0]);
    }
    function wt(t, e) {
        if (t.object.Gq !== e.object.Gq) {
            return t.object.Gq - e.object.Gq;
        } else if (t.k.jH && e.k.jH && t.k.jH !== e.k.jH) {
            return t.k.jH.id - e.k.jH.id;
        } else if (t.k.id !== e.k.id) {
            return t.k.id - e.k.id;
        } else if (t.z !== e.z) {
            return t.z - e.z;
        } else {
            return t.id - e.id;
        }
    }
    function xt(t, e) {
        if (t.object.Gq !== e.object.Gq) {
            return t.object.Gq - e.object.Gq;
        }
        if (t.z !== e.z) {
            return e.z - t.z;
        } else {
            return t.id - e.id;
        }
    }
    this.xx = function(t, e, n, i) {
        if (e instanceof THREE.mx === false) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        var r = t.kB;
        w = "";
        R = -1;
        x = null;
        if (t.jD === true) t.yn();
        if (e.parent === null) e.yn();
        e.nx.Dm(e.Em);
        D.Bm(e.Cm, e.nx);
        q.Eo(D);
        u.length = 0;
        c = -1;
        d = -1;
        p.length = 0;
        E.length = 0;
        k = this.lG;
        B = z.init(this.rB, k, e);
        Mt(t, e);
        h.length = c + 1;
        l.length = d + 1;
        if (g.kG === true) {
            h.sort(wt);
            l.sort(xt);
        }
        if (B) z.FH();
        Gt(u);
        dt.xx(t, e);
        Ft(u, e);
        if (B) z.GH();
        V.BG = 0;
        V.Bn = 0;
        V.Wr = 0;
        V.points = 0;
        if (n === undefined) {
            n = null;
        }
        this.yx(n);
        var a = t.background;
        if (a === null) {
            ht(O.r, O.wi, O.b, S);
        } else if (a instanceof THREE.T) {
            ht(a.r, a.wi, a.b, 1);
        }
        if (this.gG || i) {
            this.clear(this.hG, this.iG, this.jG);
        }
        if (a instanceof THREE.$A) {
            at.Cm.xi(e.Cm);
            at.Em.$n(e.Em);
            at.nx.Dm(at.Em);
            ft.k.l["WF"].value = a;
            ft.xq.Bm(at.nx, ft.Em);
            Q.update(ft);
            g.yH(at, null, ft.j, ft.k, ft, null);
        } else if (a instanceof THREE.TA) {
            st.k.map = a;
            Q.update(st);
            g.yH(rt, null, st.j, st.k, st, null);
        }
        if (t.iD) {
            var s = t.iD;
            Ot(h, e, r, s);
            Ot(l, e, r, s);
        } else {
            Z.HH(THREE.yg);
            Ot(h, e, r);
            Ot(l, e, r);
        }
        vt.xx(t, e);
        pt.xx(t, e, A);
        if (n) {
            J.IH(n);
        }
        Z.JH(true);
        Z.KH(true);
        Z.LH(true);
    };
    function bt(t, e, n, i, r) {
        var a, s;
        if (n.D) {
            a = l;
            s = ++d;
        } else {
            a = h;
            s = ++c;
        }
        var o = a[s];
        if (o !== undefined) {
            o.id = t.id;
            o.object = t;
            o.j = e;
            o.k = n;
            o.z = G.z;
            o.group = r;
        } else {
            o = {
                id: t.id,
                object: t,
                j: e,
                k: n,
                z: G.z,
                group: r
            };
            a.push(o);
        }
    }
    function Ht(t) {
        var e = t.j;
        if (e.Ho === null) e.Io();
        j.xi(e.Ho).xm(t.Em);
        return At(j);
    }
    function _t(t) {
        j.dn.set(0, 0, 0);
        j.N = .7071067811865476;
        j.xm(t.Em);
        return At(j);
    }
    function At(t) {
        if (!q.Fn(t)) return false;
        var e = z.MH;
        if (e === 0) return true;
        var n = g.rB, i = t.dn, r = -t.N, a = 0;
        do {
            if (n[a].tn(i) < r) return false;
        } while (++a !== e);
        return true;
    }
    function Mt(t, e) {
        if (t.visible === false) return;
        if (t.Cq.test(e.Cq)) {
            if (t instanceof THREE.Qx) {
                u.push(t);
            } else if (t instanceof THREE.hq) {
                if (t.Fq === false || _t(t) === true) {
                    p.push(t);
                }
            } else if (t instanceof THREE.cD) {
                E.push(t);
            } else if (t instanceof THREE.NH) {
                if (g.kG === true) {
                    G.Pm(t.Em);
                    G.ym(D);
                }
                bt(t, null, t.k, G.z, null);
            } else if (t instanceof THREE.dq || t instanceof THREE.eq || t instanceof THREE.gq) {
                if (t instanceof THREE.VA) {
                    t.fw.update();
                }
                if (t.Fq === false || Ht(t) === true) {
                    var n = t.k;
                    if (n.visible === true) {
                        if (g.kG === true) {
                            G.Pm(t.Em);
                            G.ym(D);
                        }
                        var i = Q.update(t);
                        if (n instanceof THREE.YB) {
                            var r = i.os;
                            var a = n.ir;
                            for (var s = 0, o = r.length; s < o; s++) {
                                var f = r[s];
                                var h = a[f.pr];
                                if (h.visible === true) {
                                    bt(t, i, h, G.z, f);
                                }
                            }
                        } else {
                            bt(t, i, n, G.z, null);
                        }
                    }
                }
            }
        }
        var c = t.children;
        for (var s = 0, o = c.length; s < o; s++) {
            Mt(c[s], e);
        }
    }
    function Ot(t, e, n, i) {
        for (var r = 0, a = t.length; r < a; r++) {
            var s = t[r];
            var o = s.object;
            var f = s.j;
            var u = i === undefined ? s.k : i;
            var h = s.group;
            o.xq.Bm(e.nx, o.Em);
            o.yq.Vn(o.xq);
            if (o instanceof THREE.NH) {
                Ut(u);
                var c = Ct(e, n, u, o);
                w = "";
                o.xx(function(t) {
                    g.lH(t, c, u);
                });
            } else {
                g.yH(e, n, f, u, o, h);
            }
        }
    }
    function St(t, e, n) {
        var i = $.get(t);
        var r = tt.OH(t, F, e, z.MH, n);
        var a = tt.PH(t, r);
        var s = i.jH;
        var o = true;
        if (s === undefined) {
            t.addEventListener("dispose", gt);
        } else if (s.code !== a) {
            Tt(t);
        } else if (r.QH !== undefined) {
            return;
        } else {
            o = false;
        }
        if (o) {
            if (r.QH) {
                var f = THREE.OF[r.QH];
                i.RH = {
                    name: t.type,
                    l: THREE.gC.clone(f.l),
                    B: f.B,
                    C: f.C
                };
            } else {
                i.RH = {
                    name: t.type,
                    l: t.l,
                    B: t.B,
                    C: t.C
                };
            }
            t.RH = i.RH;
            s = tt.SH(t, r, a);
            i.jH = s;
            t.jH = s;
        }
        var u = s.rH();
        if (t.Yr) {
            t.TH = 0;
            for (var h = 0; h < g.tG; h++) {
                if (u["morphTarget" + h] >= 0) {
                    t.TH++;
                }
            }
        }
        if (t.Zr) {
            t.UH = 0;
            for (var h = 0; h < g.uG; h++) {
                if (u["morphNormal" + h] >= 0) {
                    t.UH++;
                }
            }
        }
        var c = i.RH.l;
        if (!(t instanceof THREE.$B) && !(t instanceof THREE.hC) || t._B === true) {
            i.VH = z.MH;
            c.rB = z.WH;
        }
        if (t.lB) {
            i.XH = F.hash;
            c.bF.value = F.wG;
            c.cF.value = F.xG;
            c.iF.value = F.yG;
            c.nF.value = F.zC;
            c.qF.value = F.zG;
            c.gF.value = F.gF;
            c.hF.value = F.hF;
            c.lF.value = F.lF;
            c.mF.value = F.mF;
            c.oF.value = F.oF;
            c.pF.value = F.pF;
        }
        var l = i.jH.zH(), d = THREE.ZH.YH(l.$H, c);
        i._H = d;
        i.aI = THREE.ZH.bI(d, c);
    }
    function Ut(t) {
        if (t.Bz !== THREE.sg) Z.enable(W.CULL_FACE); else Z.disable(W.CULL_FACE);
        Z.cI(t.Bz === THREE.rg);
        if (t.D === true) {
            Z.HH(t.Ay, t.blendEquation, t.mB, t.nB, t.qB, t.oB, t.pB, t.vB);
        } else {
            Z.HH(THREE.yg);
        }
        Z.dI(t.depthFunc);
        Z.JH(t.cA);
        Z.KH(t.dA);
        Z.LH(t.eA);
        Z.eI(t.polygonOffset, t.tB, t.uB);
    }
    function Ct(t, e, n, i) {
        M = 0;
        var r = $.get(n);
        if (B) {
            if (k || t !== x) {
                var a = t === x && n.id === R;
                z.fI(n.rB, n.sB, t, r, a);
            }
            if (r.VH !== undefined && r.VH !== z.MH) {
                n.ur = true;
            }
        }
        if (r.jH === undefined) {
            n.ur = true;
        }
        if (r.XH !== undefined && r.XH !== F.hash) {
            n.ur = true;
        }
        if (n.ur) {
            St(n, e, i);
            n.ur = false;
        }
        var s = false;
        var o = false;
        var f = false;
        var u = r.jH, h = u.zH(), c = r.RH.l;
        if (u.id !== m) {
            W.useProgram(u.jH);
            m = u.id;
            s = true;
            o = true;
            f = true;
        }
        if (n.id !== R) {
            R = n.id;
            o = true;
        }
        if (s || t !== x) {
            h.set(W, t, "projectionMatrix");
            if (K.gI) {
                h._v(W, "logDepthBufFC", 2 / (Math.log(t.bq + 1) / Math.LN2));
            }
            if (t !== x) {
                x = t;
                o = true;
                f = true;
            }
            if (n instanceof THREE.$B || n instanceof THREE.PB || n instanceof THREE.QB || n.mA) {
                var l = h.map.hI;
                if (l !== undefined) {
                    l._v(W, G.Pm(t.Em));
                }
            }
            if (n instanceof THREE.PB || n instanceof THREE.NB || n instanceof THREE.GB || n instanceof THREE.QB || n instanceof THREE.$B || n.KB) {
                h._v(W, "viewMatrix", t.nx);
            }
            h.set(W, g, "toneMappingExposure");
            h.set(W, g, "toneMappingWhitePoint");
        }
        if (n.KB) {
            h.iI(W, i, "bindMatrix");
            h.iI(W, i, "bindMatrixInverse");
            var d = i.fw;
            if (d) {
                if (K.jI && d.MC) {
                    h.set(W, d, "boneTexture");
                    h.set(W, d, "boneTextureWidth");
                    h.set(W, d, "boneTextureHeight");
                } else {
                    h.iI(W, d, "boneMatrices");
                }
            }
        }
        if (o) {
            if (n.lB) {
                Dt(c, f);
            }
            if (e && n.kB) {
                qt(c, e);
            }
            if (n instanceof THREE.GB || n instanceof THREE.NB || n instanceof THREE.PB || n instanceof THREE.QB || n instanceof THREE.LB) {
                Lt(c, n);
            }
            if (n instanceof THREE.zB) {
                Pt(c, n);
            } else if (n instanceof THREE.DB) {
                Pt(c, n);
                Nt(c, n);
            } else if (n instanceof THREE.ZB) {
                It(c, n);
            } else if (n instanceof THREE.NB) {
                zt(c, n);
            } else if (n instanceof THREE.PB) {
                Bt(c, n);
            } else if (n instanceof THREE.UB) {
                jt(c, n);
            } else if (n instanceof THREE.QB) {
                kt(c, n);
            } else if (n instanceof THREE.LB) {
                if (n.iA) {
                    c.iA.value = n.iA;
                    c.jA.value = n.jA;
                    c.kA.value = n.kA;
                }
            } else if (n instanceof THREE.OB) {
                c.opacity.value = n.opacity;
            }
            THREE.ZH.upload(W, r._H, c, g);
        }
        h.set(W, i, "modelViewMatrix");
        h.set(W, i, "normalMatrix");
        h._v(W, "modelMatrix", i.Em);
        var v = r.aI;
        if (v !== null) {
            THREE.ZH.kI(v, c, i, t);
            THREE.ZH.upload(W, v, c, g);
        }
        return u;
    }
    function Lt(t, e) {
        t.opacity.value = e.opacity;
        t.OE.value = e.color;
        if (e.Cy) {
            t.Cy.value.xi(e.Cy).Ri(e.lA);
        }
        t.map.value = e.map;
        t.hz.value = e.hz;
        t.wz.value = e.wz;
        if (e.Sy) {
            t.Sy.value = e.Sy;
            t.qA.value = e.qA;
        }
        var n;
        if (e.map) {
            n = e.map;
        } else if (e.hz) {
            n = e.hz;
        } else if (e.iA) {
            n = e.iA;
        } else if (e.bz) {
            n = e.bz;
        } else if (e.Xy) {
            n = e.Xy;
        } else if (e.rz) {
            n = e.rz;
        } else if (e.mz) {
            n = e.mz;
        } else if (e.wz) {
            n = e.wz;
        } else if (e.Iy) {
            n = e.Iy;
        }
        if (n !== undefined) {
            if (n instanceof THREE.lI) {
                n = n.G;
            }
            var i = n.offset;
            var r = n.repeat;
            t.PE.value.set(i.x, i.y, r.x, r.y);
        }
        t.mA.value = e.mA;
        t.QE.value = !(e.mA instanceof THREE.$A) ? 1 : -1;
        t.oA.value = e.oA;
        t.HB.value = e.HB;
    }
    function Pt(t, e) {
        t.OE.value = e.color;
        t.opacity.value = e.opacity;
    }
    function Nt(t, e) {
        t.EB.value = e.EB;
        t.UF.value = e.EB + e.FB;
        t.scale.value = e.scale;
    }
    function It(t, n) {
        t.OE.value = n.color;
        t.opacity.value = n.opacity;
        t.size.value = n.size * L;
        t.scale.value = e.clientHeight * .5;
        t.map.value = n.map;
        if (n.map !== null) {
            var i = n.map.offset;
            var r = n.map.repeat;
            t.PE.value.set(i.x, i.y, r.x, r.y);
        }
    }
    function qt(t, e) {
        t.aF.value = e.color;
        if (e instanceof THREE.kD) {
            t.$E.value = e.near;
            t._E.value = e.bq;
        } else if (e instanceof THREE.lD) {
            t.ZE.value = e.mD;
        }
    }
    function zt(t, e) {
        if (e.Ny) {
            t.Ny.value = e.Ny;
            t.pA.value = e.pA;
        }
        if (e.Iy) {
            t.Iy.value = e.Iy;
        }
    }
    function Bt(t, e) {
        t.By.value = e.By;
        t.Dy.value = Math.max(e.Dy, 1e-4);
        if (e.Ny) {
            t.Ny.value = e.Ny;
            t.pA.value = e.pA;
        }
        if (e.Iy) {
            t.Iy.value = e.Iy;
        }
        if (e.Xy) {
            t.Xy.value = e.Xy;
            t.az.value = e.az;
        }
        if (e.bz) {
            t.bz.value = e.bz;
            t.gz.value.xi(e.gz);
        }
        if (e.iA) {
            t.iA.value = e.iA;
            t.jA.value = e.jA;
            t.kA.value = e.kA;
        }
    }
    function kt(t, e) {
        t.$z.value = e.$z;
        t._z.value = e._z;
        if (e.rz) {
            t.rz.value = e.rz;
        }
        if (e.mz) {
            t.mz.value = e.mz;
        }
        if (e.Ny) {
            t.Ny.value = e.Ny;
            t.pA.value = e.pA;
        }
        if (e.Iy) {
            t.Iy.value = e.Iy;
        }
        if (e.Xy) {
            t.Xy.value = e.Xy;
            t.az.value = e.az;
        }
        if (e.bz) {
            t.bz.value = e.bz;
            t.gz.value.xi(e.gz);
        }
        if (e.iA) {
            t.iA.value = e.iA;
            t.jA.value = e.jA;
            t.kA.value = e.kA;
        }
        if (e.mA) {
            t.TB.value = e.TB;
        }
    }
    function jt(t, e) {
        t.WB.value = e.WB;
        t.XB.value = e.XB;
        kt(t, e);
    }
    function Dt(t, e) {
        t.bF.ur = e;
        t.cF.ur = e;
        t.nF.ur = e;
        t.iF.ur = e;
        t.qF.ur = e;
    }
    function Gt(t) {
        var e = 0;
        for (var n = 0, i = t.length; n < i; n++) {
            var r = t[n];
            if (r.Dq) {
                F.AG[e++] = r;
            }
        }
        F.AG.length = e;
    }
    function Ft(t, e) {
        var n, i, r, a = 0, s = 0, o = 0, f, u, h, c, l = e.nx, d = 0, v = 0, p = 0, E = 0;
        for (n = 0, i = t.length; n < i; n++) {
            r = t[n];
            f = r.color;
            u = r.Rx;
            h = r.fn;
            c = r.$x && r.$x.map ? r.$x.map.G : null;
            if (r instanceof THREE.Yx) {
                a += f.r * u;
                s += f.wi * u;
                o += f.b * u;
            } else if (r instanceof THREE.Zx) {
                var g = et.get(r);
                g.color.xi(r.color).Ri(r.Rx);
                g.direction.Pm(r.Em);
                G.Pm(r.target.Em);
                g.direction.sub(G);
                g.direction.Gm(l);
                g.$x = r.Dq;
                if (r.Dq) {
                    g.dF = r.$x.bias;
                    g.eF = r.$x.N;
                    g.fF = r.$x.Xx;
                }
                F.gF[d] = c;
                F.hF[d] = r.$x.matrix;
                F.xG[d++] = g;
            } else if (r instanceof THREE.ey) {
                var g = et.get(r);
                g.position.Pm(r.Em);
                g.position.xm(l);
                g.color.xi(f).Ri(u);
                g.fn = h;
                g.direction.Pm(r.Em);
                G.Pm(r.target.Em);
                g.direction.sub(G);
                g.direction.Gm(l);
                g.jF = Math.cos(r.angle);
                g.kF = Math.cos(r.angle * (1 - r.Ux));
                g.Tx = r.fn === 0 ? 0 : r.Tx;
                g.$x = r.Dq;
                if (r.Dq) {
                    g.dF = r.$x.bias;
                    g.eF = r.$x.N;
                    g.fF = r.$x.Xx;
                }
                F.lF[p] = c;
                F.mF[p] = r.$x.matrix;
                F.yG[p++] = g;
            } else if (r instanceof THREE.by) {
                var g = et.get(r);
                g.position.Pm(r.Em);
                g.position.xm(l);
                g.color.xi(r.color).Ri(r.Rx);
                g.fn = r.fn;
                g.Tx = r.fn === 0 ? 0 : r.Tx;
                g.$x = r.Dq;
                if (r.Dq) {
                    g.dF = r.$x.bias;
                    g.eF = r.$x.N;
                    g.fF = r.$x.Xx;
                }
                F.oF[v] = c;
                if (F.pF[v] === undefined) {
                    F.pF[v] = new THREE.Am();
                }
                G.Pm(r.Em).nd();
                F.pF[v].identity().setPosition(G);
                F.zC[v++] = g;
            } else if (r instanceof THREE.ay) {
                var g = et.get(r);
                g.direction.Pm(r.Em);
                g.direction.Gm(l);
                g.direction.normalize();
                g.rF.xi(r.color).Ri(u);
                g.Sx.xi(r.Sx).Ri(u);
                F.zG[E++] = g;
            }
        }
        F.wG[0] = a;
        F.wG[1] = s;
        F.wG[2] = o;
        F.xG.length = d;
        F.yG.length = p;
        F.zC.length = v;
        F.zG.length = E;
        F.hash = d + "," + v + "," + p + "," + E + "," + F.AG.length;
    }
    this.mI = function(t, e) {
        Z.nI(t);
        Z.cI(e === THREE.lg);
    };
    function Vt() {
        var t = M;
        if (t >= K.oI) {
            console.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + K.oI);
        }
        M += 1;
        return t;
    }
    this.pI = Vt;
    this.qI = function() {
        var t = false;
        return function e(n, i) {
            if (n instanceof THREE.lI) {
                if (!t) {
                    console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.");
                    t = true;
                }
                n = n.G;
            }
            J.qI(n, i);
        };
    }();
    this.rI = function() {
        var t = false;
        return function e(n, i) {
            if (!t) {
                console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.");
                t = true;
            }
            J.qI(n, i);
        };
    }();
    this.sI = function() {
        var t = false;
        return function e(n, i) {
            if (n instanceof THREE.tx) {
                if (!t) {
                    console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.");
                    t = true;
                }
                n = n.G;
            }
            if (n instanceof THREE.$A || Array.isArray(n.SA) && n.SA.length === 6) {
                J.sI(n, i);
            } else {
                J.tI(n, i);
            }
        };
    }();
    this.uI = function() {
        return T;
    };
    this.yx = function(t) {
        T = t;
        if (t && $.get(t).vI === undefined) {
            J.wI(t);
        }
        var e = t instanceof THREE.tx;
        var n;
        if (t) {
            var i = $.get(t);
            if (e) {
                n = i.vI[t.wx];
            } else {
                n = i.vI;
            }
            b.xi(t.scissor);
            H = t.xI;
            A.xi(t.viewport);
        } else {
            n = null;
            b.xi(P).Ri(L);
            H = N;
            A.xi(I).Ri(L);
        }
        if (y !== n) {
            W.bindFramebuffer(W.FRAMEBUFFER, n);
            y = n;
        }
        Z.scissor(b);
        Z.cH(H);
        Z.viewport(A);
        if (e) {
            var r = $.get(t.G);
            W.framebufferTexture2D(W.FRAMEBUFFER, W.COLOR_ATTACHMENT0, W.TEXTURE_CUBE_MAP_POSITIVE_X + t.wx, r.yI, t.zI);
        }
    };
    this.AI = function(t, e, n, i, r, a) {
        if (t instanceof THREE.lI === false) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        var s = $.get(t).vI;
        if (s) {
            var o = false;
            if (s !== y) {
                W.bindFramebuffer(W.FRAMEBUFFER, s);
                o = true;
            }
            try {
                var f = t.G;
                if (f.format !== THREE.Nh && Wt(f.format) !== W.getParameter(W.IMPLEMENTATION_COLOR_READ_FORMAT)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                if (f.type !== THREE.Ah && Wt(f.type) !== W.getParameter(W.IMPLEMENTATION_COLOR_READ_TYPE) && !(f.type === THREE.Gh && X.get("WEBGL_color_buffer_float")) && !(f.type === THREE.Hh && X.get("EXT_color_buffer_half_float"))) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                if (W.checkFramebufferStatus(W.FRAMEBUFFER) === W.FRAMEBUFFER_COMPLETE) {
                    if (e >= 0 && e <= t.width - i && (n >= 0 && n <= t.height - r)) {
                        W.readPixels(e, n, i, r, Wt(f.format), Wt(f.type), a);
                    }
                } else {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
                }
            } finally {
                if (o) {
                    W.bindFramebuffer(W.FRAMEBUFFER, y);
                }
            }
        }
    };
    function Wt(t) {
        var e;
        if (t === THREE.rh) return W.REPEAT;
        if (t === THREE.sh) return W.CLAMP_TO_EDGE;
        if (t === THREE.th) return W.MIRRORED_REPEAT;
        if (t === THREE.uh) return W.NEAREST;
        if (t === THREE.vh) return W.NEAREST_MIPMAP_NEAREST;
        if (t === THREE.wh) return W.NEAREST_MIPMAP_LINEAR;
        if (t === THREE.xh) return W.LINEAR;
        if (t === THREE.yh) return W.LINEAR_MIPMAP_NEAREST;
        if (t === THREE.zh) return W.LINEAR_MIPMAP_LINEAR;
        if (t === THREE.Ah) return W.UNSIGNED_BYTE;
        if (t === THREE.Ih) return W.UNSIGNED_SHORT_4_4_4_4;
        if (t === THREE.Jh) return W.UNSIGNED_SHORT_5_5_5_1;
        if (t === THREE.Kh) return W.UNSIGNED_SHORT_5_6_5;
        if (t === THREE.Bh) return W.BYTE;
        if (t === THREE.Ch) return W.SHORT;
        if (t === THREE.Dh) return W.UNSIGNED_SHORT;
        if (t === THREE.Eh) return W.INT;
        if (t === THREE.Fh) return W.UNSIGNED_INT;
        if (t === THREE.Gh) return W.FLOAT;
        e = X.get("OES_texture_half_float");
        if (e !== null) {
            if (t === THREE.Hh) return e.BI;
        }
        if (t === THREE.Lh) return W.ALPHA;
        if (t === THREE.Mh) return W.RGB;
        if (t === THREE.Nh) return W.RGBA;
        if (t === THREE.Oh) return W.LUMINANCE;
        if (t === THREE.Ph) return W.LUMINANCE_ALPHA;
        if (t === THREE.Rh) return W.DEPTH_COMPONENT;
        if (t === THREE.Eg) return W.FUNC_ADD;
        if (t === THREE.Fg) return W.FUNC_SUBTRACT;
        if (t === THREE.Gg) return W.FUNC_REVERSE_SUBTRACT;
        if (t === THREE.Jg) return W.ZERO;
        if (t === THREE.Kg) return W.ONE;
        if (t === THREE.Lg) return W.SRC_COLOR;
        if (t === THREE.Mg) return W.ONE_MINUS_SRC_COLOR;
        if (t === THREE.Ng) return W.SRC_ALPHA;
        if (t === THREE.Og) return W.ONE_MINUS_SRC_ALPHA;
        if (t === THREE.Pg) return W.DST_ALPHA;
        if (t === THREE.Qg) return W.ONE_MINUS_DST_ALPHA;
        if (t === THREE.Rg) return W.DST_COLOR;
        if (t === THREE.Sg) return W.ONE_MINUS_DST_COLOR;
        if (t === THREE.Tg) return W.SRC_ALPHA_SATURATE;
        e = X.get("WEBGL_compressed_texture_s3tc");
        if (e !== null) {
            if (t === THREE.Sh) return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (t === THREE.Th) return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (t === THREE.Uh) return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (t === THREE.Vh) return e.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        }
        e = X.get("WEBGL_compressed_texture_pvrtc");
        if (e !== null) {
            if (t === THREE.Wh) return e.CI;
            if (t === THREE.Xh) return e.DI;
            if (t === THREE.Yh) return e.EI;
            if (t === THREE.Zh) return e.FI;
        }
        e = X.get("WEBGL_compressed_texture_etc1");
        if (e !== null) {
            if (t === THREE.$h) return e.GI;
        }
        e = X.get("EXT_blend_minmax");
        if (e !== null) {
            if (t === THREE.Hg) return e.HI;
            if (t === THREE.Ig) return e.II;
        }
        return 0;
    }
};

THREE.lI = function(t, e, n) {
    this.sq = THREE.Math.Vo();
    this.width = t;
    this.height = e;
    this.scissor = new THREE.Sm(0, 0, t, e);
    this.xI = false;
    this.viewport = new THREE.Sm(0, 0, t, e);
    n = n || {};
    if (n.qx === undefined) n.qx = THREE.xh;
    this.G = new THREE.TA(undefined, undefined, n.xy, n.yy, n.px, n.qx, n.format, n.type, n.zy, n.encoding);
    this.JI = n.JI !== undefined ? n.JI : true;
    this.KI = n.KI !== undefined ? n.KI : true;
    this.LI = null;
};

Object.assign(THREE.lI.prototype, THREE.Xp.prototype, {
    $G: function(t, e) {
        if (this.width !== t || this.height !== e) {
            this.width = t;
            this.height = e;
            this.Es();
        }
        this.viewport.set(0, 0, t, e);
        this.scissor.set(0, 0, t, e);
    },
    clone: function() {
        return new this.constructor().xi(this);
    },
    xi: function(t) {
        this.width = t.width;
        this.height = t.height;
        this.viewport.xi(t.viewport);
        this.G = t.G.clone();
        this.JI = t.JI;
        this.KI = t.KI;
        this.LI = t.LI;
        return this;
    },
    Es: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
});

THREE.tx = function(t, e, n) {
    THREE.lI.call(this, t, e, n);
    this.wx = 0;
    this.zI = 0;
};

THREE.tx.prototype = Object.create(THREE.lI.prototype);

THREE.tx.prototype.constructor = THREE.tx;

THREE.LG = function(t, e, n) {
    var i;
    function r(t) {
        i = t;
    }
    function a(e, r) {
        t.drawArrays(i, e, r);
        n.BG++;
        n.Bn += r;
        if (i === t.TRIANGLES) n.Wr += r / 3;
    }
    function s(r) {
        var a = e.get("ANGLE_instanced_arrays");
        if (a === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        var s = r.attributes.position;
        var o = 0;
        if (s instanceof THREE.Dn) {
            o = s.data.count;
            a.drawArraysInstancedANGLE(i, 0, o, r.$s);
        } else {
            o = s.count;
            a.drawArraysInstancedANGLE(i, 0, o, r.$s);
        }
        n.BG++;
        n.Bn += o * r.$s;
        if (i === t.TRIANGLES) n.Wr += r.$s * o / 3;
    }
    this.CH = r;
    this.xx = a;
    this.DH = s;
};

THREE.vG = function() {
    var t = this, e = null, n = 0, i = false, r = false, a = new THREE.Do(), s = new THREE.Kn(), o = {
        value: null,
        ur: false
    };
    this.WH = o;
    this.MH = 0;
    this.init = function(t, r, a) {
        var s = t.length !== 0 || r || n !== 0 || i;
        i = r;
        e = u(t, a, 0);
        n = t.length;
        return s;
    };
    this.FH = function() {
        r = true;
        u(null);
    };
    this.GH = function() {
        r = false;
        f();
    };
    this.fI = function(t, a, s, h, c) {
        if (!i || t === null || t.length === 0 || r && !a) {
            if (r) {
                u(null);
            } else {
                f();
            }
        } else {
            var l = r ? 0 : n, d = l * 4, v = h.MI || null;
            o.value = v;
            v = u(t, s, d, c);
            for (var p = 0; p !== d; ++p) {
                v[p] = e[p];
            }
            h.MI = v;
            this.MH += l;
        }
    };
    function f() {
        if (o.value !== e) {
            o.value = e;
            o.ur = n > 0;
        }
        t.MH = n;
    }
    function u(e, n, i, r) {
        var f = e !== null ? e.length : 0, u = null;
        if (f !== 0) {
            u = o.value;
            if (r !== true || u === null) {
                var h = i + f * 4, c = n.nx;
                s.Vn(c);
                if (u === null || u.length < h) {
                    u = new Float32Array(h);
                }
                for (var l = 0, d = i; l !== f; ++l, d += 4) {
                    a.xi(e[l]).xm(c, s);
                    a.Hn.toArray(u, d);
                    u[d + 3] = a.Cc;
                }
            }
            o.value = u;
            o.ur = true;
        }
        t.MH = f;
        return u;
    }
};

THREE.MG = function(t, e, n) {
    var i;
    function r(t) {
        i = t;
    }
    var a, s;
    function o(n) {
        if (n.dc instanceof Uint32Array && e.get("OES_element_index_uint")) {
            a = t.UNSIGNED_INT;
            s = 4;
        } else {
            a = t.UNSIGNED_SHORT;
            s = 2;
        }
    }
    function f(e, r) {
        t.drawElements(i, r, a, e * s);
        n.BG++;
        n.Bn += r;
        if (i === t.TRIANGLES) n.Wr += r / 3;
    }
    function u(r, o, f) {
        var u = e.get("ANGLE_instanced_arrays");
        if (u === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        u.drawElementsInstancedANGLE(i, f, a, o * s, r.$s);
        n.BG++;
        n.Bn += f * r.$s;
        if (i === t.TRIANGLES) n.Wr += r.$s * f / 3;
    }
    this.CH = r;
    this.Ns = o;
    this.xx = f;
    this.DH = u;
};

THREE.DG = function(t) {
    var e = {};
    this.get = function(n) {
        if (e[n] !== undefined) {
            return e[n];
        }
        var i;
        switch (n) {
          case "WEBGL_depth_texture":
            i = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
            break;

          case "EXT_texture_filter_anisotropic":
            i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
            break;

          case "WEBGL_compressed_texture_s3tc":
            i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
            break;

          case "WEBGL_compressed_texture_pvrtc":
            i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
            break;

          case "WEBGL_compressed_texture_etc1":
            i = t.getExtension("WEBGL_compressed_texture_etc1");
            break;

          default:
            i = t.getExtension(n);
        }
        if (i === null) {
            console.warn("THREE.WebGLRenderer: " + n + " extension not supported.");
        }
        e[n] = i;
        return i;
    };
};

THREE.EG = function(t, e, n) {
    var i;
    function r() {
        if (i !== undefined) return i;
        var n = e.get("EXT_texture_filter_anisotropic");
        if (n !== null) {
            i = t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else {
            i = 0;
        }
        return i;
    }
    function a(e) {
        if (e === "highp") {
            if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) {
                return "highp";
            }
            e = "mediump";
        }
        if (e === "mediump") {
            if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0) {
                return "mediump";
            }
        }
        return "lowp";
    }
    this.WG = r;
    this.NI = a;
    this.precision = n.precision !== undefined ? n.precision : "highp";
    this.gI = n.gI !== undefined ? n.gI : false;
    this.oI = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);
    this.OI = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
    this.QI = t.getParameter(t.MAX_TEXTURE_SIZE);
    this.RI = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE);
    this.SI = t.getParameter(t.MAX_VERTEX_ATTRIBS);
    this.TI = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS);
    this.UI = t.getParameter(t.MAX_VARYING_VECTORS);
    this.VI = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS);
    this.WI = this.OI > 0;
    this.XI = !!e.get("OES_texture_float");
    this.jI = this.WI && this.XI;
    var s = a(this.precision);
    if (s !== this.precision) {
        console.warn("THREE.WebGLRenderer:", this.precision, "not supported, using", s, "instead.");
        this.precision = s;
    }
    if (this.gI) {
        this.gI = !!e.get("EXT_frag_depth");
    }
};

THREE.YI = function(t, e, n) {
    var i = {};
    function r(t) {
        var e = t.j;
        if (i[e.id] !== undefined) {
            return i[e.id];
        }
        e.addEventListener("dispose", a);
        var r;
        if (e instanceof THREE.Cn) {
            r = e;
        } else if (e instanceof THREE.An) {
            if (e.ZI === undefined) {
                e.ZI = new THREE.Cn().xn(t);
            }
            r = e.ZI;
        }
        i[e.id] = r;
        n.memory.hr++;
        return r;
    }
    function a(t) {
        var r = t.target;
        var s = i[r.id];
        if (s.index !== null) {
            o(s.index);
        }
        f(s.attributes);
        r.removeEventListener("dispose", a);
        delete i[r.id];
        var u = e.get(r);
        if (u.fA) {
            o(u.fA);
        }
        e.delete(r);
        var h = e.get(s);
        if (h.fA) {
            o(h.fA);
        }
        e.delete(s);
        n.memory.hr--;
    }
    function s(t) {
        if (t instanceof THREE.Dn) {
            return e.get(t.data).$I;
        }
        return e.get(t).$I;
    }
    function o(e) {
        var n = s(e);
        if (n !== undefined) {
            t.deleteBuffer(n);
            u(e);
        }
    }
    function f(t) {
        for (var e in t) {
            o(t[e]);
        }
    }
    function u(t) {
        if (t instanceof THREE.Dn) {
            e.delete(t.data);
        } else {
            e.delete(t);
        }
    }
    this.get = r;
};

THREE.KG = function() {
    var t = {};
    this.get = function(e) {
        if (t[e.id] !== undefined) {
            return t[e.id];
        }
        var n;
        switch (e.type) {
          case "DirectionalLight":
            n = {
                direction: new THREE.K(),
                color: new THREE.T(),
                $x: false,
                dF: 0,
                eF: 1,
                fF: new THREE.fa()
            };
            break;

          case "SpotLight":
            n = {
                position: new THREE.K(),
                direction: new THREE.K(),
                color: new THREE.T(),
                fn: 0,
                jF: 0,
                kF: 0,
                Tx: 0,
                $x: false,
                dF: 0,
                eF: 1,
                fF: new THREE.fa()
            };
            break;

          case "PointLight":
            n = {
                position: new THREE.K(),
                color: new THREE.T(),
                fn: 0,
                Tx: 0,
                $x: false,
                dF: 0,
                eF: 1,
                fF: new THREE.fa()
            };
            break;

          case "HemisphereLight":
            n = {
                direction: new THREE.K(),
                rF: new THREE.T(),
                Sx: new THREE.T()
            };
            break;
        }
        t[e.id] = n;
        return n;
    };
};

THREE.IG = function(t, e, n) {
    var i = new THREE.YI(t, e, n);
    function r(e) {
        var n = i.get(e);
        if (e.j instanceof THREE.An) {
            n.Ss(e);
        }
        var r = n.index;
        var s = n.attributes;
        if (r !== null) {
            a(r, t.ELEMENT_ARRAY_BUFFER);
        }
        for (var o in s) {
            a(s[o], t.ARRAY_BUFFER);
        }
        var f = n.Ks;
        for (var o in f) {
            var u = f[o];
            for (var h = 0, c = u.length; h < c; h++) {
                a(u[h], t.ARRAY_BUFFER);
            }
        }
        return n;
    }
    function a(t, n) {
        var i = t instanceof THREE.Dn ? t.data : t;
        var r = e.get(i);
        if (r.$I === undefined) {
            s(r, i, n);
        } else if (r.version !== i.version) {
            o(r, i, n);
        }
    }
    function s(e, n, i) {
        e.$I = t.createBuffer();
        t.bindBuffer(i, e.$I);
        var r = n.rr ? t.DYNAMIC_DRAW : t.STATIC_DRAW;
        t.bufferData(i, n.dc, r);
        e.version = n.version;
    }
    function o(e, n, i) {
        t.bindBuffer(i, e.$I);
        if (n.rr === false || n.sr.count === -1) {
            t.bufferSubData(i, 0, n.dc);
        } else if (n.sr.count === 0) {
            console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.");
        } else {
            t.bufferSubData(i, n.sr.offset * n.dc.BYTES_PER_ELEMENT, n.dc.subarray(n.sr.offset, n.sr.offset + n.sr.count));
            n.sr.count = 0;
        }
        e.version = n.version;
    }
    function f(t) {
        if (t instanceof THREE.Dn) {
            return e.get(t.data).$I;
        }
        return e.get(t).$I;
    }
    function u(n) {
        var i = e.get(n);
        if (i.fA !== undefined) {
            return i.fA;
        }
        var r = [];
        var s = n.index;
        var o = n.attributes;
        var f = o.position;
        if (s !== null) {
            var u = {};
            var c = s.dc;
            for (var l = 0, d = c.length; l < d; l += 3) {
                var v = c[l + 0];
                var p = c[l + 1];
                var E = c[l + 2];
                if (h(u, v, p)) r.push(v, p);
                if (h(u, p, E)) r.push(p, E);
                if (h(u, E, v)) r.push(E, v);
            }
        } else {
            var c = o.position.dc;
            for (var l = 0, d = c.length / 3 - 1; l < d; l += 3) {
                var v = l + 0;
                var p = l + 1;
                var E = l + 2;
                r.push(v, p, p, E, E, v);
            }
        }
        var g = f.count > 65535 ? Uint32Array : Uint16Array;
        var m = new THREE.qr(new g(r), 1);
        a(m, t.ELEMENT_ARRAY_BUFFER);
        i.fA = m;
        return m;
    }
    function h(t, e, n) {
        if (e > n) {
            var i = e;
            e = n;
            n = i;
        }
        var r = t[e];
        if (r === undefined) {
            t[e] = [ n ];
            return true;
        } else if (r.indexOf(n) === -1) {
            r.push(n);
            return true;
        }
        return false;
    }
    this.BH = f;
    this.AH = u;
    this.update = r;
};

THREE.WebGLProgram = function() {
    var t = 0;
    function e(t) {
        switch (t) {
          case THREE.li:
            return [ "Linear", "( value )" ];

          case THREE.mi:
            return [ "sRGB", "( value )" ];

          case THREE.oi:
            return [ "RGBE", "( value )" ];

          case THREE.qi:
            return [ "RGBM", "( value, 7.0 )" ];

          case THREE.ri:
            return [ "RGBM", "( value, 16.0 )" ];

          case THREE.si:
            return [ "RGBD", "( value, 256.0 )" ];

          case THREE.ni:
            return [ "Gamma", "( value, float( GAMMA_FACTOR ) )" ];

          default:
            throw new Error("unsupported encoding: " + t);
        }
    }
    function n(t, n) {
        var i = e(n);
        return "vec4 " + t + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }";
    }
    function i(t, n) {
        var i = e(n);
        return "vec4 " + t + "( vec4 value ) { return LinearTo" + i[0] + i[1] + "; }";
    }
    function r(t, e) {
        var n;
        switch (e) {
          case THREE.fh:
            n = "Linear";
            break;

          case THREE.gh:
            n = "Reinhard";
            break;

          case THREE.hh:
            n = "Uncharted2";
            break;

          case THREE.ih:
            n = "OptimizedCineon";
            break;

          default:
            throw new Error("unsupported toneMapping: " + e);
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
    }
    function a(t, e, n) {
        t = t || {};
        var i = [ t.aC || e._I || e.Xy || e.bz || e.aJ ? "#extension GL_OES_standard_derivatives : enable" : "", (t.bC || e.gI) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.cC && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.dC || e.mA) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : "" ];
        return i.filter(f).join("\n");
    }
    function s(t) {
        var e = [];
        for (var n in t) {
            var i = t[n];
            if (i === false) continue;
            e.push("#define " + n + " " + i);
        }
        return e.join("\n");
    }
    function o(t, e, n) {
        var i = {};
        var r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES);
        for (var a = 0; a < r; a++) {
            var s = t.getActiveAttrib(e, a);
            var o = s.name;
            i[o] = t.getAttribLocation(e, o);
        }
        return i;
    }
    function f(t) {
        return t !== "";
    }
    function u(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.bJ).replace(/NUM_SPOT_LIGHTS/g, e.cJ).replace(/NUM_POINT_LIGHTS/g, e.dJ).replace(/NUM_HEMI_LIGHTS/g, e.eJ);
    }
    function h(t) {
        var e = /#include +<([\w\d.]+)>/g;
        function n(t, e) {
            var n = THREE.mC[e];
            if (n === undefined) {
                throw new Error("Can not resolve #include <" + e + ">");
            }
            return h(n);
        }
        return t.replace(e, n);
    }
    function c(t) {
        var e = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
        function n(t, e, n, i) {
            var r = "";
            for (var a = parseInt(e); a < parseInt(n); a++) {
                r += i.replace(/\[ i \]/g, "[ " + a + " ]");
            }
            return r;
        }
        return t.replace(e, n);
    }
    return function e(l, d, v, p) {
        var E = l.context;
        var g = v.extensions;
        var m = v.RB;
        var T = v.RH.B;
        var y = v.RH.C;
        var R = "SHADOWMAP_TYPE_BASIC";
        if (p.fJ === THREE.og) {
            R = "SHADOWMAP_TYPE_PCF";
        } else if (p.fJ === THREE.pg) {
            R = "SHADOWMAP_TYPE_PCF_SOFT";
        }
        var w = "ENVMAP_TYPE_CUBE";
        var x = "ENVMAP_MODE_REFLECTION";
        var b = "ENVMAP_BLENDING_MULTIPLY";
        if (p.mA) {
            switch (v.mA.mapping) {
              case THREE.kh:
              case THREE.lh:
                w = "ENVMAP_TYPE_CUBE";
                break;

              case THREE.ph:
              case THREE.qh:
                w = "ENVMAP_TYPE_CUBE_UV";
                break;

              case THREE.mh:
              case THREE.nh:
                w = "ENVMAP_TYPE_EQUIREC";
                break;

              case THREE.oh:
                w = "ENVMAP_TYPE_SPHERE";
                break;
            }
            switch (v.mA.mapping) {
              case THREE.lh:
              case THREE.nh:
                x = "ENVMAP_MODE_REFRACTION";
                break;
            }
            switch (v.nA) {
              case THREE.ah:
                b = "ENVMAP_BLENDING_MULTIPLY";
                break;

              case THREE.bh:
                b = "ENVMAP_BLENDING_MIX";
                break;

              case THREE.dh:
                b = "ENVMAP_BLENDING_ADD";
                break;
            }
        }
        var H = l.mG > 0 ? l.mG : 1;
        var A = a(g, p, l.extensions);
        var M = s(m);
        var O = E.createProgram();
        var S, U;
        if (v instanceof THREE.hC) {
            S = [ M ].filter(f).join("\n");
            U = [ M ].filter(f).join("\n");
        } else {
            S = [ "precision " + p.precision + " float;", "precision " + p.precision + " int;", "#define SHADER_NAME " + v.RH.name, M, p.gJ ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + H, "#define MAX_BONES " + p.hJ, p.map ? "#define USE_MAP" : "", p.mA ? "#define USE_ENVMAP" : "", p.mA ? "#define " + x : "", p.Ny ? "#define USE_LIGHTMAP" : "", p.Sy ? "#define USE_AOMAP" : "", p.Iy ? "#define USE_EMISSIVEMAP" : "", p.Xy ? "#define USE_BUMPMAP" : "", p.bz ? "#define USE_NORMALMAP" : "", p.iA && p.gJ ? "#define USE_DISPLACEMENTMAP" : "", p.hz ? "#define USE_SPECULARMAP" : "", p.rz ? "#define USE_ROUGHNESSMAP" : "", p.mz ? "#define USE_METALNESSMAP" : "", p.wz ? "#define USE_ALPHAMAP" : "", p.or ? "#define USE_COLOR" : "", p.aJ ? "#define FLAT_SHADED" : "", p.KB ? "#define USE_SKINNING" : "", p.MC ? "#define BONE_TEXTURE" : "", p.Yr ? "#define USE_MORPHTARGETS" : "", p.Zr && p.aJ === false ? "#define USE_MORPHNORMALS" : "", p.iJ ? "#define DOUBLE_SIDED" : "", p.jJ ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + p.VH, p.kJ ? "#define USE_SHADOWMAP" : "", p.kJ ? "#define " + R : "", p.hA ? "#define USE_SIZEATTENUATION" : "", p.gI ? "#define USE_LOGDEPTHBUF" : "", p.gI && l.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n" ].filter(f).join("\n");
            U = [ A, "precision " + p.precision + " float;", "precision " + p.precision + " int;", "#define SHADER_NAME " + v.RH.name, M, p.bA ? "#define ALPHATEST " + p.bA : "", "#define GAMMA_FACTOR " + H, p.lJ && p.kB ? "#define USE_FOG" : "", p.lJ && p.mJ ? "#define FOG_EXP2" : "", p.map ? "#define USE_MAP" : "", p.mA ? "#define USE_ENVMAP" : "", p.mA ? "#define " + w : "", p.mA ? "#define " + x : "", p.mA ? "#define " + b : "", p.Ny ? "#define USE_LIGHTMAP" : "", p.Sy ? "#define USE_AOMAP" : "", p.Iy ? "#define USE_EMISSIVEMAP" : "", p.Xy ? "#define USE_BUMPMAP" : "", p.bz ? "#define USE_NORMALMAP" : "", p.hz ? "#define USE_SPECULARMAP" : "", p.rz ? "#define USE_ROUGHNESSMAP" : "", p.mz ? "#define USE_METALNESSMAP" : "", p.wz ? "#define USE_ALPHAMAP" : "", p.or ? "#define USE_COLOR" : "", p.aJ ? "#define FLAT_SHADED" : "", p.iJ ? "#define DOUBLE_SIDED" : "", p.jJ ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + p.VH, p.kJ ? "#define USE_SHADOWMAP" : "", p.kJ ? "#define " + R : "", p.vB ? "#define PREMULTIPLIED_ALPHA" : "", p.pG ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", p.gI ? "#define USE_LOGDEPTHBUF" : "", p.gI && l.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", p.mA && l.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", p.qG !== THREE.eh ? "#define TONE_MAPPING" : "", p.qG !== THREE.eh ? THREE.mC["GE"] : "", p.qG !== THREE.eh ? r("toneMapping", p.qG) : "", p.nJ || p.oJ || p.pJ || p.qJ ? THREE.mC["LD"] : "", p.oJ ? n("mapTexelToLinear", p.oJ) : "", p.pJ ? n("envMapTexelToLinear", p.pJ) : "", p.qJ ? n("emissiveMapTexelToLinear", p.qJ) : "", p.nJ ? i("linearToOutputTexel", p.nJ) : "", p.MB ? "#define DEPTH_PACKING " + v.MB : "", "\n" ].filter(f).join("\n");
        }
        T = h(T, p);
        T = u(T, p);
        y = h(y, p);
        y = u(y, p);
        if (v instanceof THREE.$B === false) {
            T = c(T);
            y = c(y);
        }
        var C = S + T;
        var L = U + y;
        var P = THREE.WebGLShader(E, E.VERTEX_SHADER, C);
        var N = THREE.WebGLShader(E, E.FRAGMENT_SHADER, L);
        E.attachShader(O, P);
        E.attachShader(O, N);
        if (v.fC !== undefined) {
            E.bindAttribLocation(O, 0, v.fC);
        } else if (p.Yr === true) {
            E.bindAttribLocation(O, 0, "position");
        }
        E.linkProgram(O);
        var I = E.getProgramInfoLog(O);
        var q = E.getShaderInfoLog(P);
        var z = E.getShaderInfoLog(N);
        var B = true;
        var k = true;
        if (E.getProgramParameter(O, E.LINK_STATUS) === false) {
            B = false;
            console.error("THREE.WebGLProgram: shader error: ", E.getError(), "gl.VALIDATE_STATUS", E.getProgramParameter(O, E.VALIDATE_STATUS), "gl.getProgramInfoLog", I, q, z);
        } else if (I !== "") {
            console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", I);
        } else if (q === "" || z === "") {
            k = false;
        }
        if (k) {
            this.rJ = {
                sJ: B,
                k: v,
                tJ: I,
                B: {
                    log: q,
                    prefix: S
                },
                C: {
                    log: z,
                    prefix: U
                }
            };
        }
        E.deleteShader(P);
        E.deleteShader(N);
        var j;
        this.zH = function() {
            if (j === undefined) {
                j = new THREE.ZH(E, O, l);
            }
            return j;
        };
        var D;
        this.rH = function() {
            if (D === undefined) {
                D = o(E, O);
            }
            return D;
        };
        this.uJ = function() {
            E.deleteProgram(O);
            this.jH = undefined;
        };
        Object.defineProperties(this, {
            l: {
                get: function() {
                    console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");
                    return this.zH();
                }
            },
            attributes: {
                get: function() {
                    console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");
                    return this.rH();
                }
            }
        });
        this.id = t++;
        this.code = d;
        this.vJ = 1;
        this.jH = O;
        this.B = P;
        this.C = N;
        return this;
    };
}();

THREE.JG = function(t, e) {
    var n = [];
    var i = {
        LB: "depth",
        OB: "normal",
        GB: "basic",
        NB: "lambert",
        PB: "phong",
        QB: "physical",
        UB: "physical",
        zB: "basic",
        DB: "dashed",
        ZB: "points"
    };
    var r = [ "precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "depthPacking" ];
    function a(t) {
        if (e.jI && t && t.fw && t.fw.MC) {
            return 1024;
        } else {
            var n = e.TI;
            var i = Math.floor((n - 20) / 4);
            var r = i;
            if (t !== undefined && t instanceof THREE.VA) {
                r = Math.min(t.fw.gw.length, r);
                if (r < t.fw.gw.length) {
                    console.warn("WebGLRenderer: too many bones - " + t.fw.gw.length + ", this GPU supports just " + r + " (try OpenGL instead of ANGLE)");
                }
            }
            return r;
        }
    }
    function s(t, e) {
        var n;
        if (!t) {
            n = THREE.li;
        } else if (t instanceof THREE.TA) {
            n = t.encoding;
        } else if (t instanceof THREE.lI) {
            console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");
            n = t.G.encoding;
        }
        if (n === THREE.li && e) {
            n = THREE.ni;
        }
        return n;
    }
    this.OH = function(n, r, o, f, u) {
        var h = i[n.type];
        var c = a(u);
        var l = t.XG();
        if (n.precision !== null) {
            l = e.NI(n.precision);
            if (l !== n.precision) {
                console.warn("THREE.WebGLProgram.getParameters:", n.precision, "not supported, using", l, "instead.");
            }
        }
        var d = t.uI();
        var v = {
            QH: h,
            precision: l,
            gJ: e.WI,
            nJ: s(!d ? null : d.G, t.oG),
            map: !!n.map,
            oJ: s(n.map, t.nG),
            mA: !!n.mA,
            wJ: n.mA && n.mA.mapping,
            pJ: s(n.mA, t.nG),
            _I: !!n.mA && (n.mA.mapping === THREE.ph || n.mA.mapping === THREE.qh),
            Ny: !!n.Ny,
            Sy: !!n.Sy,
            Iy: !!n.Iy,
            qJ: s(n.Iy, t.nG),
            Xy: !!n.Xy,
            bz: !!n.bz,
            iA: !!n.iA,
            rz: !!n.rz,
            mz: !!n.mz,
            hz: !!n.hz,
            wz: !!n.wz,
            nA: n.nA,
            or: n.or,
            kB: !!o,
            lJ: n.kB,
            mJ: o instanceof THREE.lD,
            aJ: n.aA === THREE.tg,
            hA: n.hA,
            gI: e.gI,
            KB: n.KB,
            hJ: c,
            MC: e.jI && u && u.fw && u.fw.MC,
            Yr: n.Yr,
            Zr: n.Zr,
            tG: t.tG,
            uG: t.uG,
            bJ: r.xG.length,
            dJ: r.zC.length,
            cJ: r.yG.length,
            eJ: r.zG.length,
            VH: f,
            kJ: t.RG.enabled && u.Eq && r.AG.length > 0,
            fJ: t.RG.type,
            qG: t.qG,
            pG: t.pG,
            vB: n.vB,
            bA: n.bA,
            iJ: n.Bz === THREE.sg,
            jJ: n.Bz === THREE.rg,
            MB: n.MB !== undefined ? n.MB : false
        };
        return v;
    };
    this.PH = function(t, e) {
        var n = [];
        if (e.QH) {
            n.push(e.QH);
        } else {
            n.push(t.C);
            n.push(t.B);
        }
        if (t.RB !== undefined) {
            for (var i in t.RB) {
                n.push(i);
                n.push(t.RB[i]);
            }
        }
        for (var a = 0; a < r.length; a++) {
            n.push(e[r[a]]);
        }
        return n.join();
    };
    this.SH = function(e, i, r) {
        var a;
        for (var s = 0, o = n.length; s < o; s++) {
            var f = n[s];
            if (f.code === r) {
                a = f;
                ++a.vJ;
                break;
            }
        }
        if (a === undefined) {
            a = new THREE.WebGLProgram(t, r, e, i);
            n.push(a);
        }
        return a;
    };
    this.kH = function(t) {
        if (--t.vJ === 0) {
            var e = n.indexOf(t);
            n[e] = n[n.length - 1];
            n.pop();
            t.uJ();
        }
    };
    this.CG = n;
};

THREE.GG = function() {
    var t = {};
    this.get = function(e) {
        var n = e.sq;
        var i = t[n];
        if (i === undefined) {
            i = {};
            t[n] = i;
        }
        return i;
    };
    this.delete = function(e) {
        delete t[e.sq];
    };
    this.clear = function() {
        t = {};
    };
};

THREE.WebGLShader = function() {
    function t(t) {
        var e = t.split("\n");
        for (var n = 0; n < e.length; n++) {
            e[n] = n + 1 + ": " + e[n];
        }
        return e.join("\n");
    }
    return function e(n, i, r) {
        var a = n.createShader(i);
        n.shaderSource(a, r);
        n.compileShader(a);
        if (n.getShaderParameter(a, n.COMPILE_STATUS) === false) {
            console.error("THREE.WebGLShader: Shader couldn't compile.");
        }
        if (n.getShaderInfoLog(a) !== "") {
            console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", i === n.VERTEX_SHADER ? "vertex" : "fragment", n.getShaderInfoLog(a), t(r));
        }
        return a;
    };
}();

THREE.QG = function(t, e, n, i) {
    var r = t.context, a = t.state, s = new THREE.Bo(), o = new THREE.Am(), f = e.AG, u = new THREE.fa(), h = new THREE.fa(i.QI, i.QI), c = new THREE.K(), l = new THREE.K(), d = [], v = 1, p = 2, E = (v | p) + 1, g = new Array(E), m = new Array(E), T = {};
    var y = [ new THREE.K(1, 0, 0), new THREE.K(-1, 0, 0), new THREE.K(0, 0, 1), new THREE.K(0, 0, -1), new THREE.K(0, 1, 0), new THREE.K(0, -1, 0) ];
    var R = [ new THREE.K(0, 1, 0), new THREE.K(0, 1, 0), new THREE.K(0, 1, 0), new THREE.K(0, 1, 0), new THREE.K(0, 0, 1), new THREE.K(0, 0, -1) ];
    var w = [ new THREE.Sm(), new THREE.Sm(), new THREE.Sm(), new THREE.Sm(), new THREE.Sm(), new THREE.Sm() ];
    var x = new THREE.LB();
    x.MB = THREE.ui;
    x._B = true;
    var b = THREE.OF["$F"];
    var H = THREE.gC.clone(b.l);
    for (var A = 0; A !== E; ++A) {
        var M = (A & v) !== 0;
        var O = (A & p) !== 0;
        var S = x.clone();
        S.Yr = M;
        S.KB = O;
        g[A] = S;
        var U = new THREE.$B({
            RB: {
                xJ: ""
            },
            l: H,
            B: b.B,
            C: b.C,
            Yr: M,
            KB: O,
            _B: true
        });
        m[A] = U;
    }
    var C = this;
    this.enabled = false;
    this.jD = true;
    this.ur = false;
    this.type = THREE.og;
    this.yJ = true;
    this.zJ = true;
    this.xx = function(e, i) {
        if (C.enabled === false) return;
        if (C.jD === false && C.ur === false) return;
        if (f.length === 0) return;
        a.clearColor(1, 1, 1, 1);
        a.disable(r.BLEND);
        a.JH(true);
        a.cH(false);
        var v, p;
        for (var E = 0, g = f.length; E < g; E++) {
            var m = f[E];
            var T = m.$x;
            if (T === undefined) {
                console.warn("THREE.WebGLShadowMap:", m, "has no shadow.");
                continue;
            }
            var x = T.Wx;
            u.xi(T.Xx);
            u.min(h);
            if (m instanceof THREE.by) {
                v = 6;
                p = true;
                var b = u.x;
                var H = u.y;
                w[0].set(b * 2, H, b, H);
                w[1].set(0, H, b, H);
                w[2].set(b * 3, H, b, H);
                w[3].set(b, H, b, H);
                w[4].set(b * 3, 0, b, H);
                w[5].set(b, 0, b, H);
                u.x *= 4;
                u.y *= 2;
            } else {
                v = 1;
                p = false;
            }
            if (T.map === null) {
                var A = {
                    qx: THREE.uh,
                    px: THREE.uh,
                    format: THREE.Nh
                };
                T.map = new THREE.lI(u.x, u.y, A);
                x.zx();
            }
            if (T instanceof THREE.gy) {
                T.update(m);
            }
            var M = T.map;
            var O = T.matrix;
            l.Pm(m.Em);
            x.position.xi(l);
            t.yx(M);
            t.clear();
            for (var S = 0; S < v; S++) {
                if (p) {
                    c.xi(x.position);
                    c.add(y[S]);
                    x.tq.xi(R[S]);
                    x.ao(c);
                    var U = w[S];
                    a.viewport(U);
                } else {
                    c.Pm(m.target.Em);
                    x.ao(c);
                }
                x.yn();
                x.nx.Dm(x.Em);
                O.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1);
                O.multiply(x.Cm);
                O.multiply(x.nx);
                o.Bm(x.Cm, x.nx);
                s.Eo(o);
                d.length = 0;
                P(e, i, x);
                for (var N = 0, I = d.length; N < I; N++) {
                    var q = d[N];
                    var z = n.update(q);
                    var B = q.k;
                    if (B instanceof THREE.YB) {
                        var k = z.os;
                        var j = B.ir;
                        for (var D = 0, G = k.length; D < G; D++) {
                            var F = k[D];
                            var V = j[F.pr];
                            if (V.visible === true) {
                                var W = L(q, V, p, l);
                                t.yH(x, null, z, W, q, F);
                            }
                        }
                    } else {
                        var W = L(q, B, p, l);
                        t.yH(x, null, z, W, q, null);
                    }
                }
            }
        }
        var Y = t.dH(), X = t.fH();
        t.eH(Y, X);
        C.ur = false;
    };
    function L(e, n, i, r) {
        var a = e.j;
        var s = null;
        var o = g;
        var f = e.AJ;
        if (i) {
            o = m;
            f = e.BJ;
        }
        if (!f) {
            var u = false;
            if (n.Yr) {
                if (a instanceof THREE.Cn) {
                    u = a.Ks && a.Ks.position && a.Ks.position.length > 0;
                } else if (a instanceof THREE.An) {
                    u = a.Yr && a.Yr.length > 0;
                }
            }
            var h = e instanceof THREE.VA && n.KB;
            var c = 0;
            if (u) c |= v;
            if (h) c |= p;
            s = o[c];
        } else {
            s = f;
        }
        if (t.lG && n.sB === true && n.rB.length !== 0) {
            var l = s.sq, d = n.sq;
            var E = T[l];
            if (E === undefined) {
                E = {};
                T[l] = E;
            }
            var y = E[d];
            if (y === undefined) {
                y = s.clone();
                E[d] = y;
            }
            s = y;
        }
        s.visible = n.visible;
        s.fA = n.fA;
        var R = n.Bz;
        if (C.zJ && R == THREE.sg) {
            R = THREE.qg;
        }
        if (C.yJ) {
            if (R === THREE.qg) R = THREE.rg; else if (R === THREE.rg) R = THREE.qg;
        }
        s.Bz = R;
        s.sB = n.sB;
        s.rB = n.rB;
        s.gA = n.gA;
        s.AB = n.AB;
        if (i && s.l._F !== undefined) {
            s.l._F.value.xi(r);
        }
        return s;
    }
    function P(t, e, n) {
        if (t.visible === false) return;
        if (t.Cq.test(e.Cq) && (t instanceof THREE.dq || t instanceof THREE.eq || t instanceof THREE.gq)) {
            if (t.Dq && (t.Fq === false || s.Go(t) === true)) {
                var i = t.k;
                if (i.visible === true) {
                    t.xq.Bm(n.nx, t.Em);
                    d.push(t);
                }
            }
        }
        var r = t.children;
        for (var a = 0, o = r.length; a < o; a++) {
            P(r[a], e, n);
        }
    }
};

THREE.FG = function(t, e, n) {
    var i = this;
    this.CJ = {
        color: new THREE.DJ(t, this),
        AA: new THREE.EJ(t, this),
        cG: new THREE.FJ(t, this)
    };
    var r = t.getParameter(t.MAX_VERTEX_ATTRIBS);
    var a = new Uint8Array(r);
    var s = new Uint8Array(r);
    var o = new Uint8Array(r);
    var f = {};
    var u = null;
    var h = null;
    var c = null;
    var l = null;
    var d = null;
    var v = null;
    var p = null;
    var E = null;
    var g = false;
    var m = null;
    var T = null;
    var y = null;
    var R = null;
    var w = null;
    var x = null;
    var b = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);
    var H = null;
    var A = {};
    var M = new THREE.Sm();
    var O = new THREE.Sm();
    function S(e, n, i) {
        var r = new Uint8Array(4);
        var a = t.createTexture();
        t.bindTexture(e, a);
        t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST);
        t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
        for (var s = 0; s < i; s++) {
            t.texImage2D(n + s, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
        }
        return a;
    }
    var U = {};
    U[t.TEXTURE_2D] = S(t.TEXTURE_2D, t.TEXTURE_2D, 1);
    U[t.TEXTURE_CUBE_MAP] = S(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6);
    this.init = function() {
        this.clearColor(0, 0, 0, 1);
        this.clearDepth(1);
        this.clearStencil(0);
        this.enable(t.DEPTH_TEST);
        this.dI(THREE.Xg);
        this.cI(false);
        this.nI(THREE.ig);
        this.enable(t.CULL_FACE);
        this.enable(t.BLEND);
        this.HH(THREE.zg);
    };
    this.mH = function() {
        for (var t = 0, e = a.length; t < e; t++) {
            a[t] = 0;
        }
    };
    this.tH = function(n) {
        a[n] = 1;
        if (s[n] === 0) {
            t.enableVertexAttribArray(n);
            s[n] = 1;
        }
        if (o[n] !== 0) {
            var i = e.get("ANGLE_instanced_arrays");
            i.vertexAttribDivisorANGLE(n, 0);
            o[n] = 0;
        }
    };
    this.EH = function(e, n, i) {
        a[e] = 1;
        if (s[e] === 0) {
            t.enableVertexAttribArray(e);
            s[e] = 1;
        }
        if (o[e] !== n) {
            i.vertexAttribDivisorANGLE(e, n);
            o[e] = n;
        }
    };
    this.xH = function() {
        for (var e = 0, n = s.length; e !== n; ++e) {
            if (s[e] !== a[e]) {
                t.disableVertexAttribArray(e);
                s[e] = 0;
            }
        }
    };
    this.enable = function(e) {
        if (f[e] !== true) {
            t.enable(e);
            f[e] = true;
        }
    };
    this.disable = function(e) {
        if (f[e] !== false) {
            t.disable(e);
            f[e] = false;
        }
    };
    this.GJ = function() {
        if (u === null) {
            u = [];
            if (e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")) {
                var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS);
                for (var i = 0; i < n.length; i++) {
                    u.push(n[i]);
                }
            }
        }
        return u;
    };
    this.HH = function(e, i, r, a, s, o, f, u) {
        if (e !== THREE.yg) {
            this.enable(t.BLEND);
        } else {
            this.disable(t.BLEND);
            h = e;
            return;
        }
        if (e !== h || u !== g) {
            if (e === THREE.Ag) {
                if (u) {
                    t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD);
                    t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE);
                } else {
                    t.blendEquation(t.FUNC_ADD);
                    t.blendFunc(t.SRC_ALPHA, t.ONE);
                }
            } else if (e === THREE.Bg) {
                if (u) {
                    t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD);
                    t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA);
                } else {
                    t.blendEquation(t.FUNC_ADD);
                    t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR);
                }
            } else if (e === THREE.Cg) {
                if (u) {
                    t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD);
                    t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA);
                } else {
                    t.blendEquation(t.FUNC_ADD);
                    t.blendFunc(t.ZERO, t.SRC_COLOR);
                }
            } else {
                if (u) {
                    t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD);
                    t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                } else {
                    t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD);
                    t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                }
            }
            h = e;
            g = u;
        }
        if (e === THREE.Dg) {
            s = s || i;
            o = o || r;
            f = f || a;
            if (i !== c || s !== v) {
                t.blendEquationSeparate(n(i), n(s));
                c = i;
                v = s;
            }
            if (r !== l || a !== d || o !== p || f !== E) {
                t.blendFuncSeparate(n(r), n(a), n(o), n(f));
                l = r;
                d = a;
                p = o;
                E = f;
            }
        } else {
            c = null;
            l = null;
            d = null;
            v = null;
            p = null;
            E = null;
        }
    };
    this.LH = function(t) {
        this.CJ.color.HJ(t);
    };
    this.JH = function(t) {
        this.CJ.AA.IJ(t);
    };
    this.KH = function(t) {
        this.CJ.AA.HJ(t);
    };
    this.dI = function(t) {
        this.CJ.AA.JJ(t);
    };
    this.KJ = function(t) {
        this.CJ.cG.IJ(t);
    };
    this.LJ = function(t) {
        this.CJ.cG.HJ(t);
    };
    this.MJ = function(t, e, n) {
        this.CJ.cG.JJ(t, e, n);
    };
    this.NJ = function(t, e, n) {
        this.CJ.cG.OJ(t, e, n);
    };
    this.cI = function(e) {
        if (m !== e) {
            if (e) {
                t.frontFace(t.CW);
            } else {
                t.frontFace(t.CCW);
            }
            m = e;
        }
    };
    this.nI = function(e) {
        if (e !== THREE.hg) {
            this.enable(t.CULL_FACE);
            if (e !== T) {
                if (e === THREE.ig) {
                    t.cullFace(t.BACK);
                } else if (e === THREE.jg) {
                    t.cullFace(t.FRONT);
                } else {
                    t.cullFace(t.FRONT_AND_BACK);
                }
            }
        } else {
            this.disable(t.CULL_FACE);
        }
        T = e;
    };
    this.setLineWidth = function(e) {
        if (e !== y) {
            t.lineWidth(e);
            y = e;
        }
    };
    this.eI = function(e, n, i) {
        if (e) {
            this.enable(t.POLYGON_OFFSET_FILL);
            if (R !== n || w !== i) {
                t.polygonOffset(n, i);
                R = n;
                w = i;
            }
        } else {
            this.disable(t.POLYGON_OFFSET_FILL);
        }
    };
    this.PJ = function() {
        return x;
    };
    this.cH = function(e) {
        x = e;
        if (e) {
            this.enable(t.SCISSOR_TEST);
        } else {
            this.disable(t.SCISSOR_TEST);
        }
    };
    this.activeTexture = function(e) {
        if (e === undefined) e = t.TEXTURE0 + b - 1;
        if (H !== e) {
            t.activeTexture(e);
            H = e;
        }
    };
    this.bindTexture = function(e, n) {
        if (H === null) {
            i.activeTexture();
        }
        var r = A[H];
        if (r === undefined) {
            r = {
                type: undefined,
                G: undefined
            };
            A[H] = r;
        }
        if (r.type !== e || r.G !== n) {
            t.bindTexture(e, n || U[e]);
            r.type = e;
            r.G = n;
        }
    };
    this.compressedTexImage2D = function() {
        try {
            t.compressedTexImage2D.apply(t, arguments);
        } catch (t) {
            console.error(t);
        }
    };
    this.texImage2D = function() {
        try {
            t.texImage2D.apply(t, arguments);
        } catch (t) {
            console.error(t);
        }
    };
    this.clearColor = function(t, e, n, i) {
        this.CJ.color.QJ(t, e, n, i);
    };
    this.clearDepth = function(t) {
        this.CJ.AA.QJ(t);
    };
    this.clearStencil = function(t) {
        this.CJ.cG.QJ(t);
    };
    this.scissor = function(e) {
        if (M.Ti(e) === false) {
            t.scissor(e.x, e.y, e.z, e.w);
            M.xi(e);
        }
    };
    this.viewport = function(e) {
        if (O.Ti(e) === false) {
            t.viewport(e.x, e.y, e.z, e.w);
            O.xi(e);
        }
    };
    this.reset = function() {
        for (var e = 0; e < s.length; e++) {
            if (s[e] === 1) {
                t.disableVertexAttribArray(e);
                s[e] = 0;
            }
        }
        f = {};
        u = null;
        H = null;
        A = {};
        h = null;
        m = null;
        T = null;
        this.CJ.color.reset();
        this.CJ.AA.reset();
        this.CJ.cG.reset();
    };
};

THREE.DJ = function(t, e) {
    var n = false;
    var i = new THREE.Sm();
    var r = null;
    var a = new THREE.Sm();
    this.HJ = function(e) {
        if (r !== e && !n) {
            t.colorMask(e, e, e, e);
            r = e;
        }
    };
    this.RJ = function(t) {
        n = t;
    };
    this.QJ = function(e, n, r, s) {
        i.set(e, n, r, s);
        if (a.Ti(i) === false) {
            t.clearColor(e, n, r, s);
            a.xi(i);
        }
    };
    this.reset = function() {
        n = false;
        r = null;
        a = new THREE.Sm();
    };
};

THREE.EJ = function(t, e) {
    var n = false;
    var i = null;
    var r = null;
    var a = null;
    this.IJ = function(n) {
        if (n) {
            e.enable(t.DEPTH_TEST);
        } else {
            e.disable(t.DEPTH_TEST);
        }
    };
    this.HJ = function(e) {
        if (i !== e && !n) {
            t.depthMask(e);
            i = e;
        }
    };
    this.JJ = function(e) {
        if (r !== e) {
            if (e) {
                switch (e) {
                  case THREE.Ug:
                    t.depthFunc(t.NEVER);
                    break;

                  case THREE.Vg:
                    t.depthFunc(t.ALWAYS);
                    break;

                  case THREE.Wg:
                    t.depthFunc(t.LESS);
                    break;

                  case THREE.Xg:
                    t.depthFunc(t.LEQUAL);
                    break;

                  case THREE.Yg:
                    t.depthFunc(t.EQUAL);
                    break;

                  case THREE.Zg:
                    t.depthFunc(t.GEQUAL);
                    break;

                  case THREE.$g:
                    t.depthFunc(t.GREATER);
                    break;

                  case THREE._g:
                    t.depthFunc(t.NOTEQUAL);
                    break;

                  default:
                    t.depthFunc(t.LEQUAL);
                }
            } else {
                t.depthFunc(t.LEQUAL);
            }
            r = e;
        }
    };
    this.RJ = function(t) {
        n = t;
    };
    this.QJ = function(e) {
        if (a !== e) {
            t.clearDepth(e);
            a = e;
        }
    };
    this.reset = function() {
        n = false;
        i = null;
        r = null;
        a = null;
    };
};

THREE.FJ = function(t, e) {
    var n = false;
    var i = null;
    var r = null;
    var a = null;
    var s = null;
    var o = null;
    var f = null;
    var u = null;
    var h = null;
    this.IJ = function(n) {
        if (n) {
            e.enable(t.STENCIL_TEST);
        } else {
            e.disable(t.STENCIL_TEST);
        }
    };
    this.HJ = function(e) {
        if (i !== e && !n) {
            t.stencilMask(e);
            i = e;
        }
    };
    this.JJ = function(e, n, i) {
        if (r !== e || a !== n || s !== i) {
            t.stencilFunc(e, n, i);
            r = e;
            a = n;
            s = i;
        }
    };
    this.OJ = function(e, n, i) {
        if (o !== e || f !== n || u !== i) {
            t.stencilOp(e, n, i);
            o = e;
            f = n;
            u = i;
        }
    };
    this.RJ = function(t) {
        n = t;
    };
    this.QJ = function(e) {
        if (h !== e) {
            t.clearStencil(e);
            h = e;
        }
    };
    this.reset = function() {
        n = false;
        i = null;
        r = null;
        a = null;
        s = null;
        o = null;
        f = null;
        u = null;
        h = null;
    };
};

THREE.HG = function(t, e, n, i, r, a, s) {
    var o = s.memory;
    var f = typeof WebGL2RenderingContext !== "undefined" && t instanceof WebGL2RenderingContext;
    function u(t, e) {
        if (t.width > e || t.height > e) {
            var n = e / Math.max(t.width, t.height);
            var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            i.width = Math.floor(t.width * n);
            i.height = Math.floor(t.height * n);
            var r = i.getContext("2d");
            r.drawImage(t, 0, 0, t.width, t.height, 0, 0, i.width, i.height);
            console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + i.width + "x" + i.height, t);
            return i;
        }
        return t;
    }
    function h(t) {
        return THREE.Math.dp(t.width) && THREE.Math.dp(t.height);
    }
    function c(t) {
        if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
            var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            e.width = THREE.Math.ep(t.width);
            e.height = THREE.Math.ep(t.height);
            var n = e.getContext("2d");
            n.drawImage(t, 0, 0, e.width, e.height);
            console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + e.width + "x" + e.height, t);
            return e;
        }
        return t;
    }
    function l(t) {
        if (t.xy !== THREE.sh || t.yy !== THREE.sh) return true;
        if (t.qx !== THREE.uh && t.qx !== THREE.xh) return true;
        return false;
    }
    function d(e) {
        if (e === THREE.uh || e === THREE.vh || e === THREE.wh) {
            return t.NEAREST;
        }
        return t.LINEAR;
    }
    function v(t) {
        var e = t.target;
        e.removeEventListener("dispose", v);
        E(e);
        o.jr--;
    }
    function p(t) {
        var e = t.target;
        e.removeEventListener("dispose", p);
        g(e);
        o.jr--;
    }
    function E(e) {
        var n = i.get(e);
        if (e.SA && n.SJ) {
            t.deleteTexture(n.SJ);
        } else {
            if (n.TJ === undefined) return;
            t.deleteTexture(n.yI);
        }
        i.delete(e);
    }
    function g(e) {
        var n = i.get(e);
        var r = i.get(e.G);
        if (!e) return;
        if (r.yI !== undefined) {
            t.deleteTexture(r.yI);
        }
        if (e.LI) {
            e.LI.Es();
        }
        if (e instanceof THREE.tx) {
            for (var a = 0; a < 6; a++) {
                t.deleteFramebuffer(n.vI[a]);
                if (n.UJ) t.deleteRenderbuffer(n.UJ[a]);
            }
        } else {
            t.deleteFramebuffer(n.vI);
            if (n.UJ) t.deleteRenderbuffer(n.UJ);
        }
        i.delete(e.G);
        i.delete(e);
    }
    function m(e, r) {
        var a = i.get(e);
        if (e.version > 0 && a.VJ !== e.version) {
            var s = e.SA;
            if (s === undefined) {
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e);
            } else if (s.complete === false) {
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e);
            } else {
                w(a, e, r);
                return;
            }
        }
        n.activeTexture(t.TEXTURE0 + r);
        n.bindTexture(t.TEXTURE_2D, a.yI);
    }
    function T(e, s) {
        var f = i.get(e);
        if (e.SA.length === 6) {
            if (e.version > 0 && f.VJ !== e.version) {
                if (!f.SJ) {
                    e.addEventListener("dispose", v);
                    f.SJ = t.createTexture();
                    o.jr++;
                }
                n.activeTexture(t.TEXTURE0 + s);
                n.bindTexture(t.TEXTURE_CUBE_MAP, f.SJ);
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                var c = e instanceof THREE.gB;
                var l = e.SA[0] instanceof THREE.cB;
                var d = [];
                for (var p = 0; p < 6; p++) {
                    if (!c && !l) {
                        d[p] = u(e.SA[p], r.RI);
                    } else {
                        d[p] = l ? e.SA[p].SA : e.SA[p];
                    }
                }
                var E = d[0], g = h(E), m = a(e.format), T = a(e.type);
                R(t.TEXTURE_CUBE_MAP, e, g);
                for (var p = 0; p < 6; p++) {
                    if (!c) {
                        if (l) {
                            n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + p, 0, m, d[p].width, d[p].height, 0, m, T, d[p].data);
                        } else {
                            n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + p, 0, m, m, T, d[p]);
                        }
                    } else {
                        var y, w = d[p].dB;
                        for (var x = 0, b = w.length; x < b; x++) {
                            y = w[x];
                            if (e.format !== THREE.Nh && e.format !== THREE.Mh) {
                                if (n.GJ().indexOf(m) > -1) {
                                    n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + p, x, m, y.width, y.height, 0, y.data);
                                } else {
                                    console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()");
                                }
                            } else {
                                n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + p, x, m, y.width, y.height, 0, m, T, y.data);
                            }
                        }
                    }
                }
                if (e.vx && g) {
                    t.generateMipmap(t.TEXTURE_CUBE_MAP);
                }
                f.VJ = e.version;
                if (e.bt) e.bt(e);
            } else {
                n.activeTexture(t.TEXTURE0 + s);
                n.bindTexture(t.TEXTURE_CUBE_MAP, f.SJ);
            }
        }
    }
    function y(e, r) {
        n.activeTexture(t.TEXTURE0 + r);
        n.bindTexture(t.TEXTURE_CUBE_MAP, i.get(e).yI);
    }
    function R(n, s, o) {
        var f;
        if (o) {
            t.texParameteri(n, t.TEXTURE_WRAP_S, a(s.xy));
            t.texParameteri(n, t.TEXTURE_WRAP_T, a(s.yy));
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, a(s.px));
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, a(s.qx));
        } else {
            t.texParameteri(n, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE);
            t.texParameteri(n, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE);
            if (s.xy !== THREE.sh || s.yy !== THREE.sh) {
                console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", s);
            }
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, d(s.px));
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, d(s.qx));
            if (s.qx !== THREE.uh && s.qx !== THREE.xh) {
                console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", s);
            }
        }
        f = e.get("EXT_texture_filter_anisotropic");
        if (f) {
            if (s.type === THREE.Gh && e.get("OES_texture_float_linear") === null) return;
            if (s.type === THREE.Hh && e.get("OES_texture_half_float_linear") === null) return;
            if (s.zy > 1 || i.get(s).WJ) {
                t.texParameterf(n, f.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.zy, r.WG()));
                i.get(s).WJ = s.zy;
            }
        }
    }
    function w(e, i, s) {
        if (e.TJ === undefined) {
            e.TJ = true;
            i.addEventListener("dispose", v);
            e.yI = t.createTexture();
            o.jr++;
        }
        n.activeTexture(t.TEXTURE0 + s);
        n.bindTexture(t.TEXTURE_2D, e.yI);
        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, i.flipY);
        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, i.sC);
        t.pixelStorei(t.UNPACK_ALIGNMENT, i.tC);
        var d = u(i.SA, r.QI);
        if (l(i) && h(d) === false) {
            d = c(d);
        }
        var p = h(d), E = a(i.format), g = a(i.type);
        R(t.TEXTURE_2D, i, p);
        var m, T = i.dB;
        if (i instanceof THREE.vC) {
            var y = t.DEPTH_COMPONENT;
            if (i.type === THREE.Gh) {
                if (!f) throw new Error("Float Depth Texture only supported in WebGL2.0");
                y = t.XJ;
            } else if (f) {
                y = t.DEPTH_COMPONENT16;
            }
            n.texImage2D(t.TEXTURE_2D, 0, y, d.width, d.height, 0, E, g, null);
        } else if (i instanceof THREE.cB) {
            if (T.length > 0 && p) {
                for (var w = 0, x = T.length; w < x; w++) {
                    m = T[w];
                    n.texImage2D(t.TEXTURE_2D, w, E, m.width, m.height, 0, E, g, m.data);
                }
                i.vx = false;
            } else {
                n.texImage2D(t.TEXTURE_2D, 0, E, d.width, d.height, 0, E, g, d.data);
            }
        } else if (i instanceof THREE.gB) {
            for (var w = 0, x = T.length; w < x; w++) {
                m = T[w];
                if (i.format !== THREE.Nh && i.format !== THREE.Mh) {
                    if (n.GJ().indexOf(E) > -1) {
                        n.compressedTexImage2D(t.TEXTURE_2D, w, E, m.width, m.height, 0, m.data);
                    } else {
                        console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
                    }
                } else {
                    n.texImage2D(t.TEXTURE_2D, w, E, m.width, m.height, 0, E, g, m.data);
                }
            }
        } else {
            if (T.length > 0 && p) {
                for (var w = 0, x = T.length; w < x; w++) {
                    m = T[w];
                    n.texImage2D(t.TEXTURE_2D, w, E, E, g, m);
                }
                i.vx = false;
            } else {
                n.texImage2D(t.TEXTURE_2D, 0, E, E, g, d);
            }
        }
        if (i.vx && p) t.generateMipmap(t.TEXTURE_2D);
        e.VJ = i.version;
        if (i.bt) i.bt(i);
    }
    function x(e, r, s, o) {
        var f = a(r.G.format);
        var u = a(r.G.type);
        n.texImage2D(o, 0, f, r.width, r.height, 0, f, u, null);
        t.bindFramebuffer(t.FRAMEBUFFER, e);
        t.framebufferTexture2D(t.FRAMEBUFFER, s, o, i.get(r.G).yI, 0);
        t.bindFramebuffer(t.FRAMEBUFFER, null);
    }
    function b(e, n) {
        t.bindRenderbuffer(t.RENDERBUFFER, e);
        if (n.JI && !n.KI) {
            t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, n.width, n.height);
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e);
        } else if (n.JI && n.KI) {
            t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, n.width, n.height);
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e);
        } else {
            t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, n.width, n.height);
        }
        t.bindRenderbuffer(t.RENDERBUFFER, null);
    }
    function H(e, n) {
        var r = n instanceof THREE.tx;
        if (r) throw new Error("Depth Texture with cube render targets is not supported!");
        t.bindFramebuffer(t.FRAMEBUFFER, e);
        if (!(n.LI instanceof THREE.vC)) {
            throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        }
        if (!i.get(n.LI).yI || n.LI.SA.width !== n.width || n.LI.SA.height !== n.height) {
            n.LI.SA.width = n.width;
            n.LI.SA.height = n.height;
            n.LI.ur = true;
        }
        m(n.LI, 0);
        var a = i.get(n.LI).yI;
        t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, a, 0);
    }
    function A(e) {
        var n = i.get(e);
        var r = e instanceof THREE.tx;
        if (e.LI) {
            if (r) throw new Error("target.depthTexture not supported in Cube render targets");
            H(n.vI, e);
        } else {
            if (r) {
                n.UJ = [];
                for (var a = 0; a < 6; a++) {
                    t.bindFramebuffer(t.FRAMEBUFFER, n.vI[a]);
                    n.UJ[a] = t.createRenderbuffer();
                    b(n.UJ[a], e);
                }
            } else {
                t.bindFramebuffer(t.FRAMEBUFFER, n.vI);
                n.UJ = t.createRenderbuffer();
                b(n.UJ, e);
            }
        }
        t.bindFramebuffer(t.FRAMEBUFFER, null);
    }
    function M(e) {
        var r = i.get(e);
        var a = i.get(e.G);
        e.addEventListener("dispose", p);
        a.yI = t.createTexture();
        o.jr++;
        var s = e instanceof THREE.tx;
        var f = h(e);
        if (s) {
            r.vI = [];
            for (var u = 0; u < 6; u++) {
                r.vI[u] = t.createFramebuffer();
            }
        } else {
            r.vI = t.createFramebuffer();
        }
        if (s) {
            n.bindTexture(t.TEXTURE_CUBE_MAP, a.yI);
            R(t.TEXTURE_CUBE_MAP, e.G, f);
            for (var u = 0; u < 6; u++) {
                x(r.vI[u], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + u);
            }
            if (e.G.vx && f) t.generateMipmap(t.TEXTURE_CUBE_MAP);
            n.bindTexture(t.TEXTURE_CUBE_MAP, null);
        } else {
            n.bindTexture(t.TEXTURE_2D, a.yI);
            R(t.TEXTURE_2D, e.G, f);
            x(r.vI, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D);
            if (e.G.vx && f) t.generateMipmap(t.TEXTURE_2D);
            n.bindTexture(t.TEXTURE_2D, null);
        }
        if (e.JI) {
            A(e);
        }
    }
    function O(e) {
        var r = e.G;
        if (r.vx && h(e) && r.qx !== THREE.uh && r.qx !== THREE.xh) {
            var a = e instanceof THREE.tx ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D;
            var s = i.get(r).yI;
            n.bindTexture(a, s);
            t.generateMipmap(a);
            n.bindTexture(a, null);
        }
    }
    this.qI = m;
    this.sI = T;
    this.tI = y;
    this.wI = M;
    this.IH = O;
};

THREE.ZH = function() {
    var t = new THREE.TA();
    var e = new THREE.$A();
    var n = function() {
        this.$H = [];
        this.map = {};
    }, i = [], r = [], a = function() {
        i.length = 0;
        r.length = 0;
    }, s = function(t, e, n) {
        var r = t[0];
        if (r <= 0 || r > 0) return t;
        var a = e * n, s = i[a];
        if (s === undefined) {
            s = new Float32Array(a);
            i[a] = s;
        }
        if (e !== 0) {
            r.toArray(s, 0);
            for (var o = 1, f = 0; o !== e; ++o) {
                f += n;
                t[o].toArray(s, f);
            }
        }
        return s;
    }, o = function(t, e) {
        var n = r[e];
        if (n === undefined) {
            n = new Int32Array(e);
            r[e] = n;
        }
        for (var i = 0; i !== e; ++i) n[i] = t.pI();
        return n;
    }, f = function(t, e) {
        t.uniform1f(this.YJ, e);
    }, u = function(t, e) {
        t.uniform1i(this.YJ, e);
    }, h = function(t, e) {
        if (e.x === undefined) t.uniform2fv(this.YJ, e); else t.uniform2f(this.YJ, e.x, e.y);
    }, c = function(t, e) {
        if (e.x !== undefined) t.uniform3f(this.YJ, e.x, e.y, e.z); else if (e.r !== undefined) t.uniform3f(this.YJ, e.r, e.wi, e.b); else t.uniform3fv(this.YJ, e);
    }, l = function(t, e) {
        if (e.x === undefined) t.uniform4fv(this.YJ, e); else t.uniform4f(this.YJ, e.x, e.y, e.z, e.w);
    }, d = function(t, e) {
        t.uniformMatrix2fv(this.YJ, false, e.elements || e);
    }, v = function(t, e) {
        t.uniformMatrix3fv(this.YJ, false, e.elements || e);
    }, p = function(t, e) {
        t.uniformMatrix4fv(this.YJ, false, e.elements || e);
    }, E = function(e, n, i) {
        var r = i.pI();
        e.uniform1i(this.YJ, r);
        i.qI(n || t, r);
    }, g = function(t, n, i) {
        var r = i.pI();
        t.uniform1i(this.YJ, r);
        i.sI(n || e, r);
    }, m = function(t, e) {
        t.uniform2iv(this.YJ, e);
    }, T = function(t, e) {
        t.uniform3iv(this.YJ, e);
    }, y = function(t, e) {
        t.uniform4iv(this.YJ, e);
    }, R = function(t) {
        switch (t) {
          case 5126:
            return f;

          case 35664:
            return h;

          case 35665:
            return c;

          case 35666:
            return l;

          case 35674:
            return d;

          case 35675:
            return v;

          case 35676:
            return p;

          case 35678:
            return E;

          case 35680:
            return g;

          case 5124:
          case 35670:
            return u;

          case 35667:
          case 35671:
            return m;

          case 35668:
          case 35672:
            return T;

          case 35669:
          case 35673:
            return y;
        }
    }, w = function(t, e) {
        t.uniform1fv(this.YJ, e);
    }, x = function(t, e) {
        t.uniform1iv(this.YJ, e);
    }, b = function(t, e) {
        t.uniform2fv(this.YJ, s(e, this.size, 2));
    }, H = function(t, e) {
        t.uniform3fv(this.YJ, s(e, this.size, 3));
    }, A = function(t, e) {
        t.uniform4fv(this.YJ, s(e, this.size, 4));
    }, M = function(t, e) {
        t.uniformMatrix2fv(this.YJ, false, s(e, this.size, 4));
    }, O = function(t, e) {
        t.uniformMatrix3fv(this.YJ, false, s(e, this.size, 9));
    }, S = function(t, e) {
        t.uniformMatrix4fv(this.YJ, false, s(e, this.size, 16));
    }, U = function(e, n, i) {
        var r = n.length, a = o(i, r);
        e.uniform1iv(this.YJ, a);
        for (var s = 0; s !== r; ++s) {
            i.qI(n[s] || t, a[s]);
        }
    }, C = function(t, n, i) {
        var r = n.length, a = o(i, r);
        t.uniform1iv(this.YJ, a);
        for (var s = 0; s !== r; ++s) {
            i.sI(n[s] || e, a[s]);
        }
    }, L = function(t) {
        switch (t) {
          case 5126:
            return w;

          case 35664:
            return b;

          case 35665:
            return H;

          case 35666:
            return A;

          case 35674:
            return M;

          case 35675:
            return O;

          case 35676:
            return S;

          case 35678:
            return U;

          case 35680:
            return C;

          case 5124:
          case 35670:
            return x;

          case 35667:
          case 35671:
            return m;

          case 35668:
          case 35672:
            return T;

          case 35669:
          case 35673:
            return y;
        }
    }, P = function t(e, n, i) {
        this.id = e;
        this.YJ = i;
        this._v = R(n.type);
    }, N = function(t, e, n) {
        this.id = t;
        this.YJ = n;
        this.size = e.size;
        this._v = L(e.type);
    }, I = function(t) {
        this.id = t;
        n.call(this);
    };
    I.prototype._v = function(t, e) {
        var n = this.$H;
        for (var i = 0, r = n.length; i !== r; ++i) {
            var a = n[i];
            a._v(t, e[a.id]);
        }
    };
    var q = /([\w\d_]+)(\])?(\[|\.)?/g, z = function(t, e) {
        t.$H.push(e);
        t.map[e.id] = e;
    }, B = function(t, e, n) {
        var i = t.name, r = i.length;
        q.lastIndex = 0;
        for (;;) {
            var a = q.exec(i), s = q.lastIndex, o = a[1], f = a[2] === "]", u = a[3];
            if (f) o = o | 0;
            if (u === undefined || u === "[" && s + 2 === r) {
                z(n, u === undefined ? new P(o, t, e) : new N(o, t, e));
                break;
            } else {
                var h = n.map, c = h[o];
                if (c === undefined) {
                    c = new I(o);
                    z(n, c);
                }
                n = c;
            }
        }
    }, k = function t(e, i, r) {
        n.call(this);
        this.ZJ = r;
        var a = e.getProgramParameter(i, e.ACTIVE_UNIFORMS);
        for (var s = 0; s !== a; ++s) {
            var o = e.getActiveUniform(i, s), f = o.name, u = e.getUniformLocation(i, f);
            B(o, u, this);
        }
    };
    k.prototype._v = function(t, e, n) {
        var i = this.map[e];
        if (i !== undefined) i._v(t, n, this.ZJ);
    };
    k.prototype.set = function(t, e, n) {
        var i = this.map[n];
        if (i !== undefined) i._v(t, e[n], this.ZJ);
    };
    k.prototype.iI = function(t, e, n) {
        var i = e[n];
        if (i !== undefined) this._v(t, n, i);
    };
    k.upload = function(t, e, n, i) {
        for (var r = 0, a = e.length; r !== a; ++r) {
            var s = e[r], o = n[s.id];
            if (o.ur !== false) {
                s._v(t, o.value, i);
            }
        }
    };
    k.YH = function(t, e) {
        var n = [];
        for (var i = 0, r = t.length; i !== r; ++i) {
            var a = t[i];
            if (a.id in e) n.push(a);
        }
        return n;
    };
    k.bI = function(t, e) {
        var n = null, i = t.length, r = 0;
        for (var a = 0; a !== i; ++a) {
            var s = t[a], o = e[s.id];
            if (o && o.rr === true) {
                if (n === null) n = [];
                n.push(s);
            } else {
                if (r < a) t[r] = s;
                ++r;
            }
        }
        if (r < i) t.length = r;
        return n;
    };
    k.kI = function(t, e, n, i) {
        for (var r = 0, a = t.length; r !== a; ++r) {
            var s = e[t[r].id], o = s.ct;
            if (o !== undefined) o.call(s, n, i);
        }
    };
    return k;
}();

THREE.TG = function(t, e) {
    var n = t.context;
    var i = t.state;
    var r, a;
    var s, o, f, u;
    var h, c;
    function l() {
        var t = new Float32Array([ -1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1 ]);
        var e = new Uint16Array([ 0, 1, 2, 0, 2, 3 ]);
        r = n.createBuffer();
        a = n.createBuffer();
        n.bindBuffer(n.ARRAY_BUFFER, r);
        n.bufferData(n.ARRAY_BUFFER, t, n.STATIC_DRAW);
        n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, a);
        n.bufferData(n.ELEMENT_ARRAY_BUFFER, e, n.STATIC_DRAW);
        h = n.createTexture();
        c = n.createTexture();
        i.bindTexture(n.TEXTURE_2D, h);
        n.texImage2D(n.TEXTURE_2D, 0, n.RGB, 16, 16, 0, n.RGB, n.UNSIGNED_BYTE, null);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, n.NEAREST);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, n.NEAREST);
        i.bindTexture(n.TEXTURE_2D, c);
        n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, 16, 16, 0, n.RGBA, n.UNSIGNED_BYTE, null);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, n.NEAREST);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, n.NEAREST);
        s = {
            B: [ "uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}" ].join("\n"),
            C: [ "uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}" ].join("\n")
        };
        o = d(s);
        f = {
            $J: n.getAttribLocation(o, "position"),
            ms: n.getAttribLocation(o, "uv")
        };
        u = {
            _J: n.getUniformLocation(o, "renderType"),
            map: n.getUniformLocation(o, "map"),
            aK: n.getUniformLocation(o, "occlusionMap"),
            opacity: n.getUniformLocation(o, "opacity"),
            color: n.getUniformLocation(o, "color"),
            scale: n.getUniformLocation(o, "scale"),
            rotation: n.getUniformLocation(o, "rotation"),
            bK: n.getUniformLocation(o, "screenPosition")
        };
    }
    this.xx = function(s, d, v) {
        if (e.length === 0) return;
        var p = new THREE.K();
        var E = v.w / v.z, g = v.z * .5, m = v.w * .5;
        var T = 16 / v.w, y = new THREE.fa(T * E, T);
        var R = new THREE.K(1, 1, 0), w = new THREE.fa(1, 1);
        var x = new THREE.in();
        x.min.set(0, 0);
        x.max.set(v.z - 16, v.w - 16);
        if (o === undefined) {
            l();
        }
        n.useProgram(o);
        i.mH();
        i.tH(f.$J);
        i.tH(f.ms);
        i.xH();
        n.uniform1i(u.aK, 0);
        n.uniform1i(u.map, 1);
        n.bindBuffer(n.ARRAY_BUFFER, r);
        n.vertexAttribPointer(f.$J, 2, n.FLOAT, false, 2 * 8, 0);
        n.vertexAttribPointer(f.ms, 2, n.FLOAT, false, 2 * 8, 8);
        n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, a);
        i.disable(n.CULL_FACE);
        i.KH(false);
        for (var b = 0, H = e.length; b < H; b++) {
            T = 16 / v.w;
            y.set(T * E, T);
            var A = e[b];
            p.set(A.Em.elements[12], A.Em.elements[13], A.Em.elements[14]);
            p.xm(d.nx);
            p.ym(d.Cm);
            R.xi(p);
            w.x = v.x + R.x * g + g - 8;
            w.y = v.y + R.y * m + m - 8;
            if (x.pn(w) === true) {
                i.activeTexture(n.TEXTURE0);
                i.bindTexture(n.TEXTURE_2D, null);
                i.activeTexture(n.TEXTURE1);
                i.bindTexture(n.TEXTURE_2D, h);
                n.copyTexImage2D(n.TEXTURE_2D, 0, n.RGB, w.x, w.y, 16, 16, 0);
                n.uniform1i(u._J, 0);
                n.uniform2f(u.scale, y.x, y.y);
                n.uniform3f(u.bK, R.x, R.y, R.z);
                i.disable(n.BLEND);
                i.enable(n.DEPTH_TEST);
                n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
                i.activeTexture(n.TEXTURE0);
                i.bindTexture(n.TEXTURE_2D, c);
                n.copyTexImage2D(n.TEXTURE_2D, 0, n.RGBA, w.x, w.y, 16, 16, 0);
                n.uniform1i(u._J, 1);
                i.disable(n.DEPTH_TEST);
                i.activeTexture(n.TEXTURE1);
                i.bindTexture(n.TEXTURE_2D, h);
                n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
                A.eD.xi(R);
                if (A.fD) {
                    A.fD(A);
                } else {
                    A.gD();
                }
                n.uniform1i(u._J, 2);
                i.enable(n.BLEND);
                for (var M = 0, O = A.dD.length; M < O; M++) {
                    var S = A.dD[M];
                    if (S.opacity > .001 && S.scale > .001) {
                        R.x = S.x;
                        R.y = S.y;
                        R.z = S.z;
                        T = S.size * S.scale / v.w;
                        y.x = T * E;
                        y.y = T;
                        n.uniform3f(u.bK, R.x, R.y, R.z);
                        n.uniform2f(u.scale, y.x, y.y);
                        n.uniform1f(u.rotation, S.rotation);
                        n.uniform1f(u.opacity, S.opacity);
                        n.uniform3f(u.color, S.color.r, S.color.wi, S.color.b);
                        i.HH(S.Ay, S.blendEquation, S.mB, S.nB);
                        t.qI(S.G, 1);
                        n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
                    }
                }
            }
        }
        i.enable(n.CULL_FACE);
        i.enable(n.DEPTH_TEST);
        i.KH(true);
        t.iH();
    };
    function d(e) {
        var i = n.createProgram();
        var r = n.createShader(n.FRAGMENT_SHADER);
        var a = n.createShader(n.VERTEX_SHADER);
        var s = "precision " + t.XG() + " float;\n";
        n.shaderSource(r, s + e.C);
        n.shaderSource(a, s + e.B);
        n.compileShader(r);
        n.compileShader(a);
        n.attachShader(i, r);
        n.attachShader(i, a);
        n.linkProgram(i);
        return i;
    }
};

THREE.SG = function(t, e) {
    var n = t.context;
    var i = t.state;
    var r, a;
    var s, o, f;
    var u;
    var h = new THREE.K();
    var c = new THREE.Dl();
    var l = new THREE.K();
    function d() {
        var t = new Float32Array([ -.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1 ]);
        var e = new Uint16Array([ 0, 1, 2, 0, 2, 3 ]);
        r = n.createBuffer();
        a = n.createBuffer();
        n.bindBuffer(n.ARRAY_BUFFER, r);
        n.bufferData(n.ARRAY_BUFFER, t, n.STATIC_DRAW);
        n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, a);
        n.bufferData(n.ELEMENT_ARRAY_BUFFER, e, n.STATIC_DRAW);
        s = v();
        o = {
            position: n.getAttribLocation(s, "position"),
            ms: n.getAttribLocation(s, "uv")
        };
        f = {
            cK: n.getUniformLocation(s, "uvOffset"),
            dK: n.getUniformLocation(s, "uvScale"),
            rotation: n.getUniformLocation(s, "rotation"),
            scale: n.getUniformLocation(s, "scale"),
            color: n.getUniformLocation(s, "color"),
            map: n.getUniformLocation(s, "map"),
            opacity: n.getUniformLocation(s, "opacity"),
            xq: n.getUniformLocation(s, "modelViewMatrix"),
            Cm: n.getUniformLocation(s, "projectionMatrix"),
            eK: n.getUniformLocation(s, "fogType"),
            ZE: n.getUniformLocation(s, "fogDensity"),
            $E: n.getUniformLocation(s, "fogNear"),
            _E: n.getUniformLocation(s, "fogFar"),
            aF: n.getUniformLocation(s, "fogColor"),
            bA: n.getUniformLocation(s, "alphaTest")
        };
        var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
        i.width = 8;
        i.height = 8;
        var h = i.getContext("2d");
        h.fillStyle = "white";
        h.fillRect(0, 0, 8, 8);
        u = new THREE.TA(i);
        u.ur = true;
    }
    this.xx = function(v, E) {
        if (e.length === 0) return;
        if (s === undefined) {
            d();
        }
        n.useProgram(s);
        i.mH();
        i.tH(o.position);
        i.tH(o.ms);
        i.xH();
        i.disable(n.CULL_FACE);
        i.enable(n.BLEND);
        n.bindBuffer(n.ARRAY_BUFFER, r);
        n.vertexAttribPointer(o.position, 2, n.FLOAT, false, 2 * 8, 0);
        n.vertexAttribPointer(o.ms, 2, n.FLOAT, false, 2 * 8, 8);
        n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, a);
        n.uniformMatrix4fv(f.Cm, false, E.Cm.elements);
        i.activeTexture(n.TEXTURE0);
        n.uniform1i(f.map, 0);
        var g = 0;
        var m = 0;
        var T = v.kB;
        if (T) {
            n.uniform3f(f.aF, T.color.r, T.color.wi, T.color.b);
            if (T instanceof THREE.kD) {
                n.uniform1f(f.$E, T.near);
                n.uniform1f(f._E, T.bq);
                n.uniform1i(f.eK, 1);
                g = 1;
                m = 1;
            } else if (T instanceof THREE.lD) {
                n.uniform1f(f.ZE, T.mD);
                n.uniform1i(f.eK, 2);
                g = 2;
                m = 2;
            }
        } else {
            n.uniform1i(f.eK, 0);
            g = 0;
            m = 0;
        }
        for (var y = 0, R = e.length; y < R; y++) {
            var w = e[y];
            w.xq.Bm(E.nx, w.Em);
            w.z = -w.xq.elements[14];
        }
        e.sort(p);
        var x = [];
        for (var y = 0, R = e.length; y < R; y++) {
            var w = e[y];
            var b = w.k;
            if (b.visible === false) continue;
            n.uniform1f(f.bA, b.bA);
            n.uniformMatrix4fv(f.xq, false, w.xq.elements);
            w.Em.mo(h, c, l);
            x[0] = l.x;
            x[1] = l.y;
            var H = 0;
            if (v.kB && b.kB) {
                H = m;
            }
            if (g !== H) {
                n.uniform1i(f.eK, H);
                g = H;
            }
            if (b.map !== null) {
                n.uniform2f(f.cK, b.map.offset.x, b.map.offset.y);
                n.uniform2f(f.dK, b.map.repeat.x, b.map.repeat.y);
            } else {
                n.uniform2f(f.cK, 0, 0);
                n.uniform2f(f.dK, 1, 1);
            }
            n.uniform1f(f.opacity, b.opacity);
            n.uniform3f(f.color, b.color.r, b.color.wi, b.color.b);
            n.uniform1f(f.rotation, b.rotation);
            n.uniform2fv(f.scale, x);
            i.HH(b.Ay, b.blendEquation, b.mB, b.nB);
            i.JH(b.cA);
            i.KH(b.dA);
            if (b.map) {
                t.qI(b.map, 0);
            } else {
                t.qI(u, 0);
            }
            n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
        }
        i.enable(n.CULL_FACE);
        t.iH();
    };
    function v() {
        var e = n.createProgram();
        var i = n.createShader(n.VERTEX_SHADER);
        var r = n.createShader(n.FRAGMENT_SHADER);
        n.shaderSource(i, [ "precision " + t.XG() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}" ].join("\n"));
        n.shaderSource(r, [ "precision " + t.XG() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}" ].join("\n"));
        n.compileShader(i);
        n.compileShader(r);
        n.attachShader(e, i);
        n.attachShader(e, r);
        n.linkProgram(e);
        return e;
    }
    function p(t, e) {
        if (t.Gq !== e.Gq) {
            return t.Gq - e.Gq;
        } else if (t.z !== e.z) {
            return e.z - t.z;
        } else {
            return e.id - t.id;
        }
    }
};

Object.assign(THREE, {
    fK: function(t, e, n, i, r, a, s) {
        console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");
        return new THREE.mr(t, e, n, r, a, s);
    },
    gK: 0,
    hK: 1,
    iK: THREE.YB,
    iq: function(t, e) {
        console.warn("THREE.PointCloud has been renamed to THREE.Points.");
        return new THREE.gq(t, e);
    },
    jK: THREE.hq,
    kK: function(t, e) {
        console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");
        return new THREE.gq(t, e);
    },
    lK: function(t) {
        console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");
        return new THREE.ZB(t);
    },
    mK: function(t) {
        console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");
        return new THREE.ZB(t);
    },
    nK: function(t) {
        console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");
        return new THREE.ZB(t);
    },
    oK: function(t, e, n) {
        console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");
        return new THREE.K(t, e, n);
    }
});

Object.assign(THREE.in.prototype, {
    empty: function() {
        console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");
        return this.Ue();
    },
    pK: function(t) {
        console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");
        return this.rn(t);
    }
});

Object.assign(THREE.vn.prototype, {
    empty: function() {
        console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");
        return this.Ue();
    },
    pK: function(t) {
        console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");
        return this.rn(t);
    },
    qK: function(t) {
        console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");
        return this.Fn(t);
    }
});

Object.assign(THREE.Kn.prototype, {
    rK: function(t) {
        console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
        return t.wm(this);
    },
    sK: function(t) {
        console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.Mn(t);
    }
});

Object.assign(THREE.Am.prototype, {
    tK: function(t) {
        console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");
        return this.Xn(t);
    },
    Mq: function(t) {
        console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
        return this.$m(t);
    },
    rK: function(t) {
        console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
        return t.ym(this);
    },
    uK: function(t) {
        console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return t.xm(this);
    },
    sK: function(t) {
        console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.Mn(t);
    },
    vK: function(t) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
        t.Gm(this);
    },
    wK: function(t) {
        console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return t.xm(this);
    },
    translate: function(t) {
        console.error("THREE.Matrix4: .translate() has been removed.");
    },
    Oq: function(t) {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
    },
    Pq: function(t) {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
    },
    Qq: function(t) {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
    },
    xK: function(t, e) {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
    }
});

Object.assign(THREE.Do.prototype, {
    yK: function(t) {
        console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");
        return this.Qo(t);
    }
});

Object.assign(THREE.Dl.prototype, {
    rK: function(t) {
        console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
        return t.um(this);
    }
});

Object.assign(THREE.ro.prototype, {
    pK: function(t) {
        console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");
        return this.rn(t);
    },
    zK: function(t) {
        console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");
        return this.Gn(t);
    },
    qK: function(t) {
        console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");
        return this.Fn(t);
    }
});

Object.assign(THREE.K.prototype, {
    AK: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
    },
    BK: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
    },
    CK: function(t) {
        console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
        return this.Pm(t);
    },
    DK: function(t) {
        console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");
        return this.Rm(t);
    },
    EK: function(t, e) {
        console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");
        return this.Qm(e, t);
    }
});

Object.assign(THREE.qq.prototype, {
    FK: function(t) {
        console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");
        return this.Zq(t);
    },
    GK: function(t) {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
    },
    translate: function(t, e) {
        console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");
        return this.Rq(e, t);
    }
});

Object.defineProperties(THREE.qq.prototype, {
    HK: {
        get: function() {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");
            return this.rotation.order;
        },
        set: function(t) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");
            this.rotation.order = t;
        }
    },
    IK: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function(t) {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});

Object.defineProperties(THREE.fq.prototype, {
    Cv: {
        get: function() {
            console.warn("THREE.LOD: .objects has been renamed to .levels.");
            return this.XA;
        }
    }
});

THREE.mq.prototype.JK = function(t, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. " + "Use .setFocalLength and .filmGauge for a photographic setup.");
    if (e !== undefined) this.Gx = e;
    this.Ix(t);
};

Object.defineProperties(THREE.Qx.prototype, {
    KK: {
        set: function(t) {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    LK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");
            this.$x.Wx.Ex = t;
        }
    },
    MK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");
            this.$x.Wx.left = t;
        }
    },
    NK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");
            this.$x.Wx.right = t;
        }
    },
    OK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");
            this.$x.Wx.top = t;
        }
    },
    PK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");
            this.$x.Wx.bottom = t;
        }
    },
    QK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");
            this.$x.Wx.near = t;
        }
    },
    RK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");
            this.$x.Wx.bq = t;
        }
    },
    SK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    dF: {
        set: function(t) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias.");
            this.$x.bias = t;
        }
    },
    TK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    UK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");
            this.$x.Xx.width = t;
        }
    },
    VK: {
        set: function(t) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");
            this.$x.Xx.height = t;
        }
    }
});

Object.defineProperties(THREE.qr.prototype, {
    length: {
        get: function() {
            console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");
            return this.dc.length;
        }
    }
});

Object.assign(THREE.Cn.prototype, {
    WK: function(t) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");
        this.Ns(t);
    },
    XK: function(t, e, n) {
        if (n !== undefined) {
            console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");
        }
        console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");
        this.Ps(t, e);
    },
    YK: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");
        this.Qs();
    },
    vs: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
    },
    ZK: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
    }
});

Object.defineProperties(THREE.Cn.prototype, {
    Xz: {
        get: function() {
            console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");
            return this.os;
        }
    },
    Yz: {
        get: function() {
            console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");
            return this.os;
        }
    }
});

Object.defineProperties(THREE.iB.prototype, {
    $K: {
        get: function() {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.");
        },
        set: function(t) {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.");
        }
    },
    _K: {
        get: function() {
            console.warn("THREE." + this.type + ": .wrapRGB has been removed.");
            return new THREE.T();
        }
    }
});

Object.defineProperties(THREE.PB.prototype, {
    aL: {
        get: function() {
            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");
            return false;
        },
        set: function(t) {
            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
        }
    }
});

Object.defineProperties(THREE.$B.prototype, {
    aC: {
        get: function() {
            console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");
            return this.extensions.aC;
        },
        set: function(t) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");
            this.extensions.aC = t;
        }
    }
});

THREE.Xp.prototype = Object.assign(Object.create({
    constructor: THREE.Xp,
    apply: function(t) {
        console.warn("THREE.EventDispatcher: .apply is deprecated, " + "just inherit or Object.assign the prototype to mix-in.");
        Object.assign(t, this);
    }
}), THREE.Xp.prototype);

Object.assign(THREE.bG.prototype, {
    bL: function() {
        console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");
        return this.extensions.get("OES_texture_float");
    },
    cL: function() {
        console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");
        return this.extensions.get("OES_texture_half_float");
    },
    dL: function() {
        console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");
        return this.extensions.get("OES_standard_derivatives");
    },
    eL: function() {
        console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");
        return this.extensions.get("WEBGL_compressed_texture_s3tc");
    },
    fL: function() {
        console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");
        return this.extensions.get("WEBGL_compressed_texture_pvrtc");
    },
    gL: function() {
        console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");
        return this.extensions.get("EXT_blend_minmax");
    },
    gJ: function() {
        return this.PG.WI;
    },
    hL: function() {
        console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");
        return this.extensions.get("ANGLE_instanced_arrays");
    },
    iL: function(t) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");
        this.cH(t);
    },
    jL: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
    },
    kL: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
    },
    lL: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
    },
    mL: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
    }
});

Object.defineProperties(THREE.bG.prototype, {
    kJ: {
        get: function() {
            return this.RG.enabled;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");
            this.RG.enabled = t;
        }
    },
    fJ: {
        get: function() {
            return this.RG.type;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");
            this.RG.type = t;
        }
    },
    nL: {
        get: function() {
            return this.RG.cullFace;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");
            this.RG.cullFace = t;
        }
    }
});

Object.defineProperties(THREE.QG.prototype, {
    cullFace: {
        get: function() {
            return this.yJ ? THREE.jg : THREE.ig;
        },
        set: function(t) {
            var e = t !== THREE.ig;
            console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + e + ".");
            this.yJ = e;
        }
    }
});

Object.defineProperties(THREE.lI.prototype, {
    xy: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");
            return this.G.xy;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");
            this.G.xy = t;
        }
    },
    yy: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");
            return this.G.yy;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");
            this.G.yy = t;
        }
    },
    px: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");
            return this.G.px;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");
            this.G.px = t;
        }
    },
    qx: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");
            return this.G.qx;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");
            this.G.qx = t;
        }
    },
    zy: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");
            return this.G.zy;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");
            this.G.zy = t;
        }
    },
    offset: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");
            return this.G.offset;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");
            this.G.offset = t;
        }
    },
    repeat: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");
            return this.G.repeat;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");
            this.G.repeat = t;
        }
    },
    format: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");
            return this.G.format;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");
            this.G.format = t;
        }
    },
    type: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");
            return this.G.type;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");
            this.G.type = t;
        }
    },
    vx: {
        get: function() {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");
            return this.G.vx;
        },
        set: function(t) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");
            this.G.vx = t;
        }
    }
});

Object.assign(THREE.Audio.prototype, {
    load: function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");
        var e = this;
        var n = new THREE.hy();
        n.load(t, function(t) {
            e.Lw(t);
        });
        return this;
    }
});

Object.assign(THREE.Vw.prototype, {
    getData: function(t) {
        console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");
        return this.Xw();
    }
});

THREE.oL = {
    jd: function(t, e, n) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var i;
        if (e instanceof THREE.dq) {
            e.zq && e.gr();
            i = e.matrix;
            e = e.j;
        }
        t.jd(e, i, n);
    },
    dn: function(t) {
        console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");
        return t.dn();
    }
};

THREE.pL = {
    crossOrigin: undefined,
    qL: function(t, e, n, i) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var r = new THREE.A();
        r.wy(this.crossOrigin);
        var a = r.load(t, n, undefined, i);
        if (e) a.mapping = e;
        return a;
    },
    rL: function(t, e, n, i) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var r = new THREE.ZA();
        r.wy(this.crossOrigin);
        var a = r.load(t, n, undefined, i);
        if (e) a.mapping = e;
        return a;
    },
    sL: function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
    },
    tL: function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
    }
};

THREE.uL = function() {
    console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");
    this.vL = function(t, e) {
        console.warn("THREE.Projector: .projectVector() is now vector.project().");
        t.zm(e);
    };
    this.wL = function(t, e) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");
        t.Fm(e);
    };
    this.xL = function(t, e) {
        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
    };
};

THREE.yL = function() {
    console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");
    this.fG = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
    this.clear = function() {};
    this.xx = function() {};
    this.eH = function() {};
    this.$G = function() {};
};

THREE.zL = {
    AL: function(t, e, n, i) {
        return 2 * (1 - t) * (n - e) + 2 * t * (i - n);
    },
    BL: function(t, e, n, i, r) {
        return -3 * e * (1 - t) * (1 - t) + 3 * n * (1 - t) * (1 - t) - 6 * t * n * (1 - t) + 6 * t * i * (1 - t) - 3 * t * t * i + 3 * t * t * r;
    },
    CL: function(t, e, n, i, r) {
        var a = 6 * t * t - 6 * t;
        var s = 3 * t * t - 4 * t + 1;
        var o = -6 * t * t + 6 * t;
        var f = 3 * t * t - 2 * t;
        return a + s + o + f;
    },
    Wb: function(t, e, n, i, r) {
        var a = (n - t) * .5;
        var s = (i - e) * .5;
        var o = r * r;
        var f = r * o;
        return (2 * e - 2 * n + a + s) * f + (-3 * e + 3 * n - 2 * a - s) * o + a * r + e;
    }
};

THREE.DL = {
    EL: function(t, e) {
        var n = new THREE.WA();
        for (var i = 0, r = e.length; i < r; i++) {
            n.add(new THREE.dq(t, e[i]));
        }
        return n;
    },
    detach: function(t, e, n) {
        t.Iq(e.Em);
        e.remove(t);
        n.add(t);
    },
    FL: function(t, e, n) {
        var i = new THREE.Am();
        i.Dm(n.Em);
        t.Iq(i);
        e.remove(t);
        n.add(t);
    }
};

THREE.GL = {
    qp: function(t) {
        var e = t.length;
        var n = 0;
        for (var i = e - 1, r = 0; r < e; i = r++) {
            n += t[i].x * t[r].y - t[r].x * t[i].y;
        }
        return n * .5;
    },
    HL: function() {
        function t(t, e, n, i, r, a) {
            var s;
            var o, f, u, h;
            var c, l, d, v;
            o = t[a[e]].x;
            f = t[a[e]].y;
            u = t[a[n]].x;
            h = t[a[n]].y;
            c = t[a[i]].x;
            l = t[a[i]].y;
            if (Number.EPSILON > (u - o) * (l - f) - (h - f) * (c - o)) return false;
            var p, E, g, m, T, y;
            var R, w, x, b, H, A;
            var M, O, S;
            p = c - u;
            E = l - h;
            g = o - c;
            m = f - l;
            T = u - o;
            y = h - f;
            for (s = 0; s < r; s++) {
                d = t[a[s]].x;
                v = t[a[s]].y;
                if (d === o && v === f || d === u && v === h || d === c && v === l) continue;
                R = d - o;
                w = v - f;
                x = d - u;
                b = v - h;
                H = d - c;
                A = v - l;
                S = p * b - E * x;
                M = T * w - y * R;
                O = g * A - m * H;
                if (S >= -Number.EPSILON && O >= -Number.EPSILON && M >= -Number.EPSILON) return false;
            }
            return true;
        }
        return function e(n, i) {
            var r = n.length;
            if (r < 3) return null;
            var a = [], s = [], o = [];
            var f, u, h;
            if (THREE.GL.qp(n) > 0) {
                for (u = 0; u < r; u++) s[u] = u;
            } else {
                for (u = 0; u < r; u++) s[u] = r - 1 - u;
            }
            var c = r;
            var l = 2 * c;
            for (u = c - 1; c > 2; ) {
                if (l-- <= 0) {
                    console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");
                    if (i) return o;
                    return a;
                }
                f = u;
                if (c <= f) f = 0;
                u = f + 1;
                if (c <= u) u = 0;
                h = u + 1;
                if (c <= h) h = 0;
                if (t(n, f, u, h, c, s)) {
                    var d, v, p, E, g;
                    d = s[f];
                    v = s[u];
                    p = s[h];
                    a.push([ n[d], n[v], n[p] ]);
                    o.push([ s[f], s[u], s[h] ]);
                    for (E = u, g = u + 1; g < c; E++, g++) {
                        s[E] = s[g];
                    }
                    c--;
                    l = 2 * c;
                }
            }
            if (i) return o;
            return a;
        };
    }(),
    IL: function(t, e) {
        function n(t) {
            var e = t.length;
            if (e > 2 && t[e - 1].Ti(t[0])) {
                t.pop();
            }
        }
        n(t);
        e.forEach(n);
        function i(t, e, n) {
            if (t.x !== e.x) {
                if (t.x < e.x) {
                    return t.x <= n.x && n.x <= e.x;
                } else {
                    return e.x <= n.x && n.x <= t.x;
                }
            } else {
                if (t.y < e.y) {
                    return t.y <= n.y && n.y <= e.y;
                } else {
                    return e.y <= n.y && n.y <= t.y;
                }
            }
        }
        function r(t, e, n, r, a) {
            var s = e.x - t.x, o = e.y - t.y;
            var f = r.x - n.x, u = r.y - n.y;
            var h = t.x - n.x;
            var c = t.y - n.y;
            var l = o * f - s * u;
            var d = o * h - s * c;
            if (Math.abs(l) > Number.EPSILON) {
                var v;
                if (l > 0) {
                    if (d < 0 || d > l) return [];
                    v = u * h - f * c;
                    if (v < 0 || v > l) return [];
                } else {
                    if (d > 0 || d < l) return [];
                    v = u * h - f * c;
                    if (v > 0 || v < l) return [];
                }
                if (v === 0) {
                    if (a && (d === 0 || d === l)) return [];
                    return [ t ];
                }
                if (v === l) {
                    if (a && (d === 0 || d === l)) return [];
                    return [ e ];
                }
                if (d === 0) return [ n ];
                if (d === l) return [ r ];
                var p = v / l;
                return [ {
                    x: t.x + p * s,
                    y: t.y + p * o
                } ];
            } else {
                if (d !== 0 || u * h !== f * c) return [];
                var E = s === 0 && o === 0;
                var g = f === 0 && u === 0;
                if (E && g) {
                    if (t.x !== n.x || t.y !== n.y) return [];
                    return [ t ];
                }
                if (E) {
                    if (!i(n, r, t)) return [];
                    return [ t ];
                }
                if (g) {
                    if (!i(t, e, n)) return [];
                    return [ n ];
                }
                var m, T, y, R;
                var w, x, b, H;
                if (s !== 0) {
                    if (t.x < e.x) {
                        m = t;
                        y = t.x;
                        T = e;
                        R = e.x;
                    } else {
                        m = e;
                        y = e.x;
                        T = t;
                        R = t.x;
                    }
                    if (n.x < r.x) {
                        w = n;
                        b = n.x;
                        x = r;
                        H = r.x;
                    } else {
                        w = r;
                        b = r.x;
                        x = n;
                        H = n.x;
                    }
                } else {
                    if (t.y < e.y) {
                        m = t;
                        y = t.y;
                        T = e;
                        R = e.y;
                    } else {
                        m = e;
                        y = e.y;
                        T = t;
                        R = t.y;
                    }
                    if (n.y < r.y) {
                        w = n;
                        b = n.y;
                        x = r;
                        H = r.y;
                    } else {
                        w = r;
                        b = r.y;
                        x = n;
                        H = n.y;
                    }
                }
                if (y <= b) {
                    if (R < b) return [];
                    if (R === b) {
                        if (a) return [];
                        return [ w ];
                    }
                    if (R <= H) return [ w, T ];
                    return [ w, x ];
                } else {
                    if (y > H) return [];
                    if (y === H) {
                        if (a) return [];
                        return [ m ];
                    }
                    if (R <= H) return [ m, T ];
                    return [ m, x ];
                }
            }
        }
        function a(t, e, n, i) {
            var r = e.x - t.x, a = e.y - t.y;
            var s = n.x - t.x, o = n.y - t.y;
            var f = i.x - t.x, u = i.y - t.y;
            var h = r * o - a * s;
            var c = r * u - a * f;
            if (Math.abs(h) > Number.EPSILON) {
                var l = f * o - u * s;
                if (h > 0) {
                    return c >= 0 && l >= 0;
                } else {
                    return c >= 0 || l >= 0;
                }
            } else {
                return c > 0;
            }
        }
        function s(t, e) {
            var n = t.concat();
            var i;
            function s(t, e) {
                var r = n.length - 1;
                var s = t - 1;
                if (s < 0) s = r;
                var o = t + 1;
                if (o > r) o = 0;
                var f = a(n[t], n[s], n[o], i[e]);
                if (!f) {
                    return false;
                }
                var u = i.length - 1;
                var h = e - 1;
                if (h < 0) h = u;
                var c = e + 1;
                if (c > u) c = 0;
                f = a(i[e], i[h], i[c], n[t]);
                if (!f) {
                    return false;
                }
                return true;
            }
            function o(t, e) {
                var i, a, s;
                for (i = 0; i < n.length; i++) {
                    a = i + 1;
                    a %= n.length;
                    s = r(t, e, n[i], n[a], true);
                    if (s.length > 0) return true;
                }
                return false;
            }
            var f = [];
            function u(t, n) {
                var i, a, s, o, u;
                for (i = 0; i < f.length; i++) {
                    a = e[f[i]];
                    for (s = 0; s < a.length; s++) {
                        o = s + 1;
                        o %= a.length;
                        u = r(t, n, a[s], a[o], true);
                        if (u.length > 0) return true;
                    }
                }
                return false;
            }
            var h, c, l, d, v, p, E = [], g, m, T, y;
            for (var R = 0, w = e.length; R < w; R++) {
                f.push(R);
            }
            var x = 0;
            var b = f.length * 2;
            while (f.length > 0) {
                b--;
                if (b < 0) {
                    console.log("Infinite Loop! Holes left:" + f.length + ", Probably Hole outside Shape!");
                    break;
                }
                for (c = x; c < n.length; c++) {
                    l = n[c];
                    h = -1;
                    for (var R = 0; R < f.length; R++) {
                        v = f[R];
                        p = l.x + ":" + l.y + ":" + v;
                        if (E[p] !== undefined) continue;
                        i = e[v];
                        for (var H = 0; H < i.length; H++) {
                            d = i[H];
                            if (!s(c, H)) continue;
                            if (o(l, d)) continue;
                            if (u(l, d)) continue;
                            h = H;
                            f.splice(R, 1);
                            g = n.slice(0, c + 1);
                            m = n.slice(c);
                            T = i.slice(h);
                            y = i.slice(0, h + 1);
                            n = g.concat(T).concat(y).concat(m);
                            x = c;
                            break;
                        }
                        if (h >= 0) break;
                        E[p] = true;
                    }
                    if (h >= 0) break;
                }
            }
            return n;
        }
        var o, f, u, h, c, l, d = {};
        var v = t.concat();
        for (var p = 0, E = e.length; p < E; p++) {
            Array.prototype.push.apply(v, e[p]);
        }
        for (o = 0, f = v.length; o < f; o++) {
            c = v[o].x + ":" + v[o].y;
            if (d[c] !== undefined) {
                console.warn("THREE.ShapeUtils: Duplicate point", c, o);
            }
            d[c] = o;
        }
        var g = s(t, e);
        var m = THREE.GL.HL(g, false);
        for (o = 0, f = m.length; o < f; o++) {
            h = m[o];
            for (u = 0; u < 3; u++) {
                c = h[u].x + ":" + h[u].y;
                l = d[c];
                if (l !== undefined) {
                    h[u] = l;
                }
            }
        }
        return m.concat();
    },
    JL: function(t) {
        return THREE.GL.qp(t) < 0;
    },
    KL: function() {
        function t(t, e) {
            var n = 1 - t;
            return n * n * e;
        }
        function e(t, e) {
            return 2 * (1 - t) * t * e;
        }
        function n(t, e) {
            return t * t * e;
        }
        return function i(r, a, s, o) {
            return t(r, a) + e(r, s) + n(r, o);
        };
    }(),
    LL: function() {
        function t(t, e) {
            var n = 1 - t;
            return n * n * n * e;
        }
        function e(t, e) {
            var n = 1 - t;
            return 3 * n * n * t * e;
        }
        function n(t, e) {
            var n = 1 - t;
            return 3 * n * t * t * e;
        }
        function i(t, e) {
            return t * t * t * e;
        }
        return function r(a, s, o, f, u) {
            return t(a, s) + e(a, o) + n(a, f) + i(a, u);
        };
    }()
};

THREE.ML = function() {};

THREE.ML.prototype = {
    constructor: THREE.ML,
    ip: function(t) {
        console.warn("THREE.Curve: Warning, getPoint() not implemented!");
        return null;
    },
    NL: function(t) {
        var e = this.OL(t);
        return this.ip(e);
    },
    PL: function(t) {
        if (!t) t = 5;
        var e = [];
        for (var n = 0; n <= t; n++) {
            e.push(this.ip(n / t));
        }
        return e;
    },
    QL: function(t) {
        if (!t) t = 5;
        var e = [];
        for (var n = 0; n <= t; n++) {
            e.push(this.NL(n / t));
        }
        return e;
    },
    kp: function() {
        var t = this.RL();
        return t[t.length - 1];
    },
    RL: function(t) {
        if (!t) t = this.SL ? this.SL : 200;
        if (this.TL && this.TL.length === t + 1 && !this.ur) {
            return this.TL;
        }
        this.ur = false;
        var e = [];
        var n, i = this.ip(0);
        var r, a = 0;
        e.push(0);
        for (r = 1; r <= t; r++) {
            n = this.ip(r / t);
            a += n.jm(i);
            e.push(a);
            i = n;
        }
        this.TL = e;
        return e;
    },
    UL: function() {
        this.ur = true;
        this.RL();
    },
    OL: function(t, e) {
        var n = this.RL();
        var i = 0, r = n.length;
        var a;
        if (e) {
            a = e;
        } else {
            a = t * n[r - 1];
        }
        var s = 0, o = r - 1, f;
        while (s <= o) {
            i = Math.floor(s + (o - s) / 2);
            f = n[i] - a;
            if (f < 0) {
                s = i + 1;
            } else if (f > 0) {
                o = i - 1;
            } else {
                o = i;
                break;
            }
        }
        i = o;
        if (n[i] === a) {
            var u = i / (r - 1);
            return u;
        }
        var h = n[i];
        var c = n[i + 1];
        var l = c - h;
        var d = (a - h) / l;
        var u = (i + d) / (r - 1);
        return u;
    },
    VL: function(t) {
        var e = 1e-4;
        var n = t - e;
        var i = t + e;
        if (n < 0) n = 0;
        if (i > 1) i = 1;
        var r = this.ip(n);
        var a = this.ip(i);
        var s = a.clone().sub(r);
        return s.normalize();
    },
    WL: function(t) {
        var e = this.OL(t);
        return this.VL(e);
    }
};

THREE.ML.create = function(t, e) {
    t.prototype = Object.create(THREE.ML.prototype);
    t.prototype.constructor = t;
    t.prototype.ip = e;
    return t;
};

THREE.XL = function() {
    this.YL = [];
    this.ZL = false;
};

THREE.XL.prototype = Object.assign(Object.create(THREE.ML.prototype), {
    constructor: THREE.XL,
    add: function(t) {
        this.YL.push(t);
    },
    closePath: function() {
        var t = this.YL[0].ip(0);
        var e = this.YL[this.YL.length - 1].ip(1);
        if (!t.Ti(e)) {
            this.YL.push(new THREE.$L(e, t));
        }
    },
    ip: function(t) {
        var e = t * this.kp();
        var n = this._L();
        var i = 0;
        while (i < n.length) {
            if (n[i] >= e) {
                var r = n[i] - e;
                var a = this.YL[i];
                var s = a.kp();
                var o = s === 0 ? 0 : 1 - r / s;
                return a.NL(o);
            }
            i++;
        }
        return null;
    },
    kp: function() {
        var t = this._L();
        return t[t.length - 1];
    },
    UL: function() {
        this.ur = true;
        this.aM = null;
        this.RL();
    },
    _L: function() {
        if (this.aM && this.aM.length === this.YL.length) {
            return this.aM;
        }
        var t = [], e = 0;
        for (var n = 0, i = this.YL.length; n < i; n++) {
            e += this.YL[n].kp();
            t.push(e);
        }
        this.aM = t;
        return t;
    },
    QL: function(t) {
        if (!t) t = 40;
        var e = [];
        for (var n = 0; n <= t; n++) {
            e.push(this.ip(n / t));
        }
        if (this.ZL) {
            e.push(e[0]);
        }
        return e;
    },
    PL: function(t) {
        t = t || 12;
        var e = [], n;
        for (var i = 0, r = this.YL; i < r.length; i++) {
            var a = r[i];
            var s = a instanceof THREE.bM ? t * 2 : a instanceof THREE.$L ? 1 : a instanceof THREE.cM ? t * a.points.length : t;
            var o = a.PL(s);
            for (var f = 0; f < o.length; f++) {
                var u = o[f];
                if (n && n.Ti(u)) continue;
                e.push(u);
                n = u;
            }
        }
        if (this.ZL && e.length > 1 && !e[e.length - 1].Ti(e[0])) {
            e.push(e[0]);
        }
        return e;
    },
    dM: function(t) {
        var e = this.PL(t);
        return this.eM(e);
    },
    fM: function(t) {
        var e = this.QL(t);
        return this.eM(e);
    },
    eM: function(t) {
        var e = new THREE.An();
        for (var n = 0, i = t.length; n < i; n++) {
            var r = t[n];
            e.Bn.push(new THREE.K(r.x, r.y, r.z || 0));
        }
        return e;
    }
});

THREE.Kz = function(t) {
    this.data = t;
};

Object.assign(THREE.Kz.prototype, {
    gM: function(t, e, n) {
        function i(t) {
            var n = String(t).split("");
            var i = e / a.hM;
            var s = 0;
            var o = [];
            for (var f = 0; f < n.length; f++) {
                var u = r(n[f], i, s);
                s += u.offset;
                o.push(u.path);
            }
            return o;
        }
        function r(t, e, i) {
            var r = a.iM[t] || a.iM["jM"];
            if (!r) return;
            var s = new THREE.kM();
            var o = [], f = THREE.GL.KL, u = THREE.GL.LL;
            var h, c, l, d, v, p, E, g, m, T, y;
            if (r.lM) {
                var R = r.mM || (r.mM = r.lM.split(" "));
                for (var w = 0, x = R.length; w < x; ) {
                    var b = R[w++];
                    switch (b) {
                      case "m":
                        h = R[w++] * e + i;
                        c = R[w++] * e;
                        s.moveTo(h, c);
                        break;

                      case "l":
                        h = R[w++] * e + i;
                        c = R[w++] * e;
                        s.lineTo(h, c);
                        break;

                      case "q":
                        l = R[w++] * e + i;
                        d = R[w++] * e;
                        E = R[w++] * e + i;
                        g = R[w++] * e;
                        s.quadraticCurveTo(E, g, l, d);
                        y = o[o.length - 1];
                        if (y) {
                            v = y.x;
                            p = y.y;
                            for (var H = 1; H <= n; H++) {
                                var A = H / n;
                                f(A, v, E, l);
                                f(A, p, g, d);
                            }
                        }
                        break;

                      case "b":
                        l = R[w++] * e + i;
                        d = R[w++] * e;
                        E = R[w++] * e + i;
                        g = R[w++] * e;
                        m = R[w++] * e + i;
                        T = R[w++] * e;
                        s.bezierCurveTo(E, g, m, T, l, d);
                        y = o[o.length - 1];
                        if (y) {
                            v = y.x;
                            p = y.y;
                            for (var H = 1; H <= n; H++) {
                                var A = H / n;
                                u(A, v, E, m, l);
                                u(A, p, g, T, d);
                            }
                        }
                        break;
                    }
                }
            }
            return {
                offset: r.nM * e,
                path: s
            };
        }
        if (e === undefined) e = 100;
        if (n === undefined) n = 4;
        var a = this.data;
        var s = i(t);
        var o = [];
        for (var f = 0, u = s.length; f < u; f++) {
            Array.prototype.push.apply(o, s[f].oM());
        }
        return o;
    }
});

THREE.pM = function(t) {
    THREE.XL.call(this);
    this.qM = new THREE.fa();
    if (t) {
        this.rM(t);
    }
};

THREE.pM.prototype = Object.assign(Object.create(THREE.XL.prototype), {
    constructor: THREE.pM,
    rM: function(t) {
        this.moveTo(t[0].x, t[0].y);
        for (var e = 1, n = t.length; e < n; e++) {
            this.lineTo(t[e].x, t[e].y);
        }
    },
    moveTo: function(t, e) {
        this.qM.set(t, e);
    },
    lineTo: function(t, e) {
        var n = new THREE.$L(this.qM.clone(), new THREE.fa(t, e));
        this.YL.push(n);
        this.qM.set(t, e);
    },
    quadraticCurveTo: function(t, e, n, i) {
        var r = new THREE.sM(this.qM.clone(), new THREE.fa(t, e), new THREE.fa(n, i));
        this.YL.push(r);
        this.qM.set(n, i);
    },
    bezierCurveTo: function(t, e, n, i, r, a) {
        var s = new THREE.tM(this.qM.clone(), new THREE.fa(t, e), new THREE.fa(n, i), new THREE.fa(r, a));
        this.YL.push(s);
        this.qM.set(r, a);
    },
    uM: function(t) {
        var e = [ this.qM.clone() ].concat(t);
        var n = new THREE.cM(e);
        this.YL.push(n);
        this.qM.xi(t[t.length - 1]);
    },
    arc: function(t, e, n, i, r, a) {
        var s = this.qM.x;
        var o = this.qM.y;
        this.vM(t + s, e + o, n, i, r, a);
    },
    vM: function(t, e, n, i, r, a) {
        this.wM(t, e, n, n, i, r, a);
    },
    ellipse: function(t, e, n, i, r, a, s, o) {
        var f = this.qM.x;
        var u = this.qM.y;
        this.wM(t + f, e + u, n, i, r, a, s, o);
    },
    wM: function(t, e, n, i, r, a, s, o) {
        var f = new THREE.bM(t, e, n, i, r, a, s, o);
        if (this.YL.length > 0) {
            var u = f.ip(0);
            if (!u.Ti(this.qM)) {
                this.lineTo(u.x, u.y);
            }
        }
        this.YL.push(f);
        var h = f.ip(1);
        this.qM.xi(h);
    }
});

THREE.kM = function() {
    this.xM = [];
    this.yM = null;
};

THREE.kM.prototype = {
    moveTo: function(t, e) {
        this.yM = new THREE.pM();
        this.xM.push(this.yM);
        this.yM.moveTo(t, e);
    },
    lineTo: function(t, e) {
        this.yM.lineTo(t, e);
    },
    quadraticCurveTo: function(t, e, n, i) {
        this.yM.quadraticCurveTo(t, e, n, i);
    },
    bezierCurveTo: function(t, e, n, i, r, a) {
        this.yM.bezierCurveTo(t, e, n, i, r, a);
    },
    uM: function(t) {
        this.yM.uM(t);
    },
    oM: function(t, e) {
        function n(t) {
            var e = [];
            for (var n = 0, i = t.length; n < i; n++) {
                var r = t[n];
                var a = new THREE.zM();
                a.YL = r.YL;
                e.push(a);
            }
            return e;
        }
        function i(t, e) {
            var n = e.length;
            var i = false;
            for (var r = n - 1, a = 0; a < n; r = a++) {
                var s = e[r];
                var o = e[a];
                var f = o.x - s.x;
                var u = o.y - s.y;
                if (Math.abs(u) > Number.EPSILON) {
                    if (u < 0) {
                        s = e[a];
                        f = -f;
                        o = e[r];
                        u = -u;
                    }
                    if (t.y < s.y || t.y > o.y) continue;
                    if (t.y === s.y) {
                        if (t.x === s.x) return true;
                    } else {
                        var h = u * (t.x - s.x) - f * (t.y - s.y);
                        if (h === 0) return true;
                        if (h < 0) continue;
                        i = !i;
                    }
                } else {
                    if (t.y !== s.y) continue;
                    if (o.x <= t.x && t.x <= s.x || s.x <= t.x && t.x <= o.x) return true;
                }
            }
            return i;
        }
        var r = THREE.GL.JL;
        var a = this.xM;
        if (a.length === 0) return [];
        if (e === true) return n(a);
        var s, o, f, u = [];
        if (a.length === 1) {
            o = a[0];
            f = new THREE.zM();
            f.YL = o.YL;
            u.push(f);
            return u;
        }
        var h = !r(a[0].PL());
        h = t ? !h : h;
        var c = [];
        var l = [];
        var d = [];
        var v = 0;
        var p;
        l[v] = undefined;
        d[v] = [];
        for (var E = 0, g = a.length; E < g; E++) {
            o = a[E];
            p = o.PL();
            s = r(p);
            s = t ? !s : s;
            if (s) {
                if (!h && l[v]) v++;
                l[v] = {
                    Li: new THREE.zM(),
                    m: p
                };
                l[v].Li.YL = o.YL;
                if (h) v++;
                d[v] = [];
            } else {
                d[v].push({
                    Ki: o,
                    m: p[0]
                });
            }
        }
        if (!l[0]) return n(a);
        if (l.length > 1) {
            var m = false;
            var T = [];
            for (var y = 0, R = l.length; y < R; y++) {
                c[y] = [];
            }
            for (var y = 0, R = l.length; y < R; y++) {
                var w = d[y];
                for (var x = 0; x < w.length; x++) {
                    var b = w[x];
                    var H = true;
                    for (var A = 0; A < l.length; A++) {
                        if (i(b.m, l[A].m)) {
                            if (y !== A) T.push({
                                AM: y,
                                BM: A,
                                CM: x
                            });
                            if (H) {
                                H = false;
                                c[A].push(b);
                            } else {
                                m = true;
                            }
                        }
                    }
                    if (H) {
                        c[y].push(b);
                    }
                }
            }
            if (T.length > 0) {
                if (!m) d = c;
            }
        }
        var M;
        for (var E = 0, O = l.length; E < O; E++) {
            f = l[E].Li;
            u.push(f);
            M = d[E];
            for (var S = 0, U = M.length; S < U; S++) {
                f.DM.push(M[S].Ki);
            }
        }
        return u;
    }
};

THREE.zM = function() {
    THREE.pM.apply(this, arguments);
    this.DM = [];
};

THREE.zM.prototype = Object.assign(Object.create(THREE.pM.prototype), {
    constructor: THREE.zM,
    EM: function(t) {
        return new THREE.FM(this, t);
    },
    GM: function(t) {
        return new THREE.HM(this, t);
    },
    IM: function(t) {
        var e = [];
        for (var n = 0, i = this.DM.length; n < i; n++) {
            e[n] = this.DM[n].PL(t);
        }
        return e;
    },
    JM: function(t) {
        return {
            shape: this.PL(t),
            DM: this.IM(t)
        };
    },
    KM: function(t) {
        return this.JM(t);
    }
});

THREE.$L = function(t, e) {
    this.LM = t;
    this.MM = e;
};

THREE.$L.prototype = Object.create(THREE.ML.prototype);

THREE.$L.prototype.constructor = THREE.$L;

THREE.$L.prototype.ip = function(t) {
    if (t === 1) {
        return this.MM.clone();
    }
    var e = this.MM.clone().sub(this.LM);
    e.Ri(t).add(this.LM);
    return e;
};

THREE.$L.prototype.NL = function(t) {
    return this.ip(t);
};

THREE.$L.prototype.VL = function(t) {
    var e = this.MM.clone().sub(this.LM);
    return e.normalize();
};

THREE.sM = function(t, e, n) {
    this.NM = t;
    this.LM = e;
    this.MM = n;
};

THREE.sM.prototype = Object.create(THREE.ML.prototype);

THREE.sM.prototype.constructor = THREE.sM;

THREE.sM.prototype.ip = function(t) {
    var e = THREE.GL.KL;
    return new THREE.fa(e(t, this.NM.x, this.LM.x, this.MM.x), e(t, this.NM.y, this.LM.y, this.MM.y));
};

THREE.sM.prototype.VL = function(t) {
    var e = THREE.zL.AL;
    return new THREE.fa(e(t, this.NM.x, this.LM.x, this.MM.x), e(t, this.NM.y, this.LM.y, this.MM.y)).normalize();
};

THREE.tM = function(t, e, n, i) {
    this.NM = t;
    this.LM = e;
    this.MM = n;
    this.OM = i;
};

THREE.tM.prototype = Object.create(THREE.ML.prototype);

THREE.tM.prototype.constructor = THREE.tM;

THREE.tM.prototype.ip = function(t) {
    var e = THREE.GL.LL;
    return new THREE.fa(e(t, this.NM.x, this.LM.x, this.MM.x, this.OM.x), e(t, this.NM.y, this.LM.y, this.MM.y, this.OM.y));
};

THREE.tM.prototype.VL = function(t) {
    var e = THREE.zL.BL;
    return new THREE.fa(e(t, this.NM.x, this.LM.x, this.MM.x, this.OM.x), e(t, this.NM.y, this.LM.y, this.MM.y, this.OM.y)).normalize();
};

THREE.cM = function(t) {
    this.points = t == undefined ? [] : t;
};

THREE.cM.prototype = Object.create(THREE.ML.prototype);

THREE.cM.prototype.constructor = THREE.cM;

THREE.cM.prototype.ip = function(t) {
    var e = this.points;
    var n = (e.length - 1) * t;
    var i = Math.floor(n);
    var r = n - i;
    var a = e[i === 0 ? i : i - 1];
    var s = e[i];
    var o = e[i > e.length - 2 ? e.length - 1 : i + 1];
    var f = e[i > e.length - 3 ? e.length - 1 : i + 2];
    var u = THREE.zL.Wb;
    return new THREE.fa(u(a.x, s.x, o.x, f.x, r), u(a.y, s.y, o.y, f.y, r));
};

THREE.bM = function(t, e, n, i, r, a, s, o) {
    this.PM = t;
    this.QM = e;
    this.RM = n;
    this.SM = i;
    this.TM = r;
    this.UM = a;
    this.VM = s;
    this.WM = o || 0;
};

THREE.bM.prototype = Object.create(THREE.ML.prototype);

THREE.bM.prototype.constructor = THREE.bM;

THREE.bM.prototype.ip = function(t) {
    var e = Math.PI * 2;
    var n = this.UM - this.TM;
    var i = Math.abs(n) < Number.EPSILON;
    while (n < 0) n += e;
    while (n > e) n -= e;
    if (n < Number.EPSILON) {
        if (i) {
            n = 0;
        } else {
            n = e;
        }
    }
    if (this.VM === true && !i) {
        if (n === e) {
            n = -e;
        } else {
            n = n - e;
        }
    }
    var r = this.TM + t * n;
    var a = this.PM + this.RM * Math.cos(r);
    var s = this.QM + this.SM * Math.sin(r);
    if (this.WM !== 0) {
        var o = Math.cos(this.WM);
        var f = Math.sin(this.WM);
        var u = a - this.PM;
        var h = s - this.QM;
        a = u * o - h * f + this.PM;
        s = u * f + h * o + this.QM;
    }
    return new THREE.fa(a, s);
};

THREE.XM = function(t, e, n, i, r, a) {
    THREE.bM.call(this, t, e, n, n, i, r, a);
};

THREE.XM.prototype = Object.create(THREE.bM.prototype);

THREE.XM.prototype.constructor = THREE.XM;

THREE.YM = THREE.ML.create(function(t, e) {
    this.LM = t;
    this.MM = e;
}, function(t) {
    if (t === 1) {
        return this.MM.clone();
    }
    var e = new THREE.K();
    e.bm(this.MM, this.LM);
    e.Ri(t);
    e.add(this.LM);
    return e;
});

THREE.ZM = THREE.ML.create(function(t, e, n) {
    this.NM = t;
    this.LM = e;
    this.MM = n;
}, function(t) {
    var e = THREE.GL.KL;
    return new THREE.K(e(t, this.NM.x, this.LM.x, this.MM.x), e(t, this.NM.y, this.LM.y, this.MM.y), e(t, this.NM.z, this.LM.z, this.MM.z));
});

THREE.$M = THREE.ML.create(function(t, e, n, i) {
    this.NM = t;
    this.LM = e;
    this.MM = n;
    this.OM = i;
}, function(t) {
    var e = THREE.GL.LL;
    return new THREE.K(e(t, this.NM.x, this.LM.x, this.MM.x, this.OM.x), e(t, this.NM.y, this.LM.y, this.MM.y, this.OM.y), e(t, this.NM.z, this.LM.z, this.MM.z, this.OM.z));
});

THREE._M = THREE.ML.create(function(t) {
    console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3");
    this.points = t == undefined ? [] : t;
}, function(t) {
    var e = this.points;
    var n = (e.length - 1) * t;
    var i = Math.floor(n);
    var r = n - i;
    var a = e[i == 0 ? i : i - 1];
    var s = e[i];
    var o = e[i > e.length - 2 ? e.length - 1 : i + 1];
    var f = e[i > e.length - 3 ? e.length - 1 : i + 2];
    var u = THREE.zL.Wb;
    return new THREE.K(u(a.x, s.x, o.x, f.x, r), u(a.y, s.y, o.y, f.y, r), u(a.z, s.z, o.z, f.z, r));
});

THREE.aN = function() {
    var t = new THREE.K(), e = new r(), n = new r(), i = new r();
    function r() {}
    r.prototype.init = function(t, e, n, i) {
        this.bN = t;
        this.cN = n;
        this.dN = -3 * t + 3 * e - 2 * n - i;
        this.eN = 2 * t - 2 * e + n + i;
    };
    r.prototype.fN = function(t, e, n, i, r, a, s) {
        var o = (e - t) / r - (n - t) / (r + a) + (n - e) / a;
        var f = (n - e) / a - (i - e) / (a + s) + (i - n) / s;
        o *= a;
        f *= a;
        this.init(e, n, o, f);
    };
    r.prototype.gN = function(t, e, n, i, r) {
        this.init(e, n, r * (n - t), r * (i - e));
    };
    r.prototype.hN = function(t) {
        var e = t * t;
        var n = e * t;
        return this.bN + this.cN * t + this.dN * e + this.eN * n;
    };
    return THREE.ML.create(function(t) {
        this.points = t || [];
        this.closed = false;
    }, function(r) {
        var a = this.points, s, o, f, u;
        u = a.length;
        if (u < 2) console.log("duh, you need at least 2 points");
        s = (u - (this.closed ? 0 : 1)) * r;
        o = Math.floor(s);
        f = s - o;
        if (this.closed) {
            o += o > 0 ? 0 : (Math.floor(Math.abs(o) / a.length) + 1) * a.length;
        } else if (f === 0 && o === u - 1) {
            o = u - 2;
            f = 1;
        }
        var h, c, l, d;
        if (this.closed || o > 0) {
            h = a[(o - 1) % u];
        } else {
            t.bm(a[0], a[1]).add(a[0]);
            h = t;
        }
        c = a[o % u];
        l = a[(o + 1) % u];
        if (this.closed || o + 2 < u) {
            d = a[(o + 2) % u];
        } else {
            t.bm(a[u - 1], a[u - 2]).add(a[u - 1]);
            d = t;
        }
        if (this.type === undefined || this.type === "centripetal" || this.type === "chordal") {
            var v = this.type === "chordal" ? .5 : .25;
            var p = Math.pow(h.km(c), v);
            var E = Math.pow(c.km(l), v);
            var g = Math.pow(l.km(d), v);
            if (E < 1e-4) E = 1;
            if (p < 1e-4) p = E;
            if (g < 1e-4) g = E;
            e.fN(h.x, c.x, l.x, d.x, p, E, g);
            n.fN(h.y, c.y, l.y, d.y, p, E, g);
            i.fN(h.z, c.z, l.z, d.z, p, E, g);
        } else if (this.type === "catmullrom") {
            var m = this.iN !== undefined ? this.iN : .5;
            e.gN(h.x, c.x, l.x, d.x, m);
            n.gN(h.y, c.y, l.y, d.y, m);
            i.gN(h.z, c.z, l.z, d.z, m);
        }
        var T = new THREE.K(e.hN(f), n.hN(f), i.hN(f));
        return T;
    });
}();

THREE.jN = function(t) {
    console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.");
    THREE.aN.call(this, t);
    this.type = "catmullrom";
    this.closed = true;
};

THREE.jN.prototype = Object.create(THREE.aN.prototype);

THREE.kN = function(t, e, n, i, r, a) {
    THREE.An.call(this);
    this.type = "BoxGeometry";
    this.Bs = {
        width: t,
        height: e,
        AA: n,
        yA: i,
        zA: r,
        BA: a
    };
    this.ls(new THREE.OG(t, e, n, i, r, a));
    this.ys();
};

THREE.kN.prototype = Object.create(THREE.An.prototype);

THREE.kN.prototype.constructor = THREE.kN;

THREE.lN = THREE.kN;

THREE.OG = function(t, e, n, i, r, a) {
    THREE.Cn.call(this);
    this.type = "BoxBufferGeometry";
    this.Bs = {
        width: t,
        height: e,
        AA: n,
        yA: i,
        zA: r,
        BA: a
    };
    var s = this;
    i = Math.floor(i) || 1;
    r = Math.floor(r) || 1;
    a = Math.floor(a) || 1;
    var o = m(i, r, a);
    var f = T(i, r, a);
    var u = new (f > 65535 ? Uint32Array : Uint16Array)(f);
    var h = new Float32Array(o * 3);
    var c = new Float32Array(o * 3);
    var l = new Float32Array(o * 2);
    var d = 0;
    var v = 0;
    var p = 0;
    var E = 0;
    var g = 0;
    y("z", "y", "x", -1, -1, n, e, t, a, r, 0);
    y("z", "y", "x", 1, -1, n, e, -t, a, r, 1);
    y("x", "z", "y", 1, 1, t, n, e, i, a, 2);
    y("x", "z", "y", 1, -1, t, n, -e, i, a, 3);
    y("x", "y", "z", 1, -1, t, e, n, i, r, 4);
    y("x", "y", "z", -1, -1, t, e, -n, i, r, 5);
    this.Ns(new THREE.qr(u, 1));
    this.Os("position", new THREE.qr(h, 3));
    this.Os("normal", new THREE.qr(c, 3));
    this.Os("uv", new THREE.qr(l, 2));
    function m(t, e, n) {
        var i = 0;
        i += (t + 1) * (e + 1) * 2;
        i += (t + 1) * (n + 1) * 2;
        i += (n + 1) * (e + 1) * 2;
        return i;
    }
    function T(t, e, n) {
        var i = 0;
        i += t * e * 2;
        i += t * n * 2;
        i += n * e * 2;
        return i * 6;
    }
    function y(t, e, n, i, r, a, o, f, m, T, y) {
        var R = a / m;
        var w = o / T;
        var x = a / 2;
        var b = o / 2;
        var H = f / 2;
        var A = m + 1;
        var M = T + 1;
        var O = 0;
        var S = 0;
        var U = new THREE.K();
        for (var C = 0; C < M; C++) {
            var L = C * w - b;
            for (var P = 0; P < A; P++) {
                var N = P * R - x;
                U[t] = N * i;
                U[e] = L * r;
                U[n] = H;
                h[d] = U.x;
                h[d + 1] = U.y;
                h[d + 2] = U.z;
                U[t] = 0;
                U[e] = 0;
                U[n] = f > 0 ? 1 : -1;
                c[d] = U.x;
                c[d + 1] = U.y;
                c[d + 2] = U.z;
                l[v] = P / m;
                l[v + 1] = 1 - C / T;
                d += 3;
                v += 2;
                O += 1;
            }
        }
        for (C = 0; C < T; C++) {
            for (P = 0; P < m; P++) {
                var I = E + P + A * C;
                var q = E + P + A * (C + 1);
                var z = E + (P + 1) + A * (C + 1);
                var B = E + (P + 1) + A * C;
                u[p] = I;
                u[p + 1] = q;
                u[p + 2] = B;
                u[p + 3] = q;
                u[p + 4] = z;
                u[p + 5] = B;
                p += 6;
                S += 6;
            }
        }
        s.Ps(g, S, y);
        g += S;
        E += O;
    }
};

THREE.OG.prototype = Object.create(THREE.Cn.prototype);

THREE.OG.prototype.constructor = THREE.OG;

THREE.mN = function(t, e, n, i) {
    THREE.An.call(this);
    this.type = "CircleGeometry";
    this.Bs = {
        N: t,
        CA: e,
        DA: n,
        EA: i
    };
    this.ls(new THREE.nN(t, e, n, i));
};

THREE.mN.prototype = Object.create(THREE.An.prototype);

THREE.mN.prototype.constructor = THREE.mN;

THREE.nN = function(t, e, n, i) {
    THREE.Cn.call(this);
    this.type = "CircleBufferGeometry";
    this.Bs = {
        N: t,
        CA: e,
        DA: n,
        EA: i
    };
    t = t || 50;
    e = e !== undefined ? Math.max(3, e) : 8;
    n = n !== undefined ? n : 0;
    i = i !== undefined ? i : Math.PI * 2;
    var r = e + 2;
    var a = new Float32Array(r * 3);
    var s = new Float32Array(r * 3);
    var o = new Float32Array(r * 2);
    s[2] = 1;
    o[0] = .5;
    o[1] = .5;
    for (var f = 0, u = 3, h = 2; f <= e; f++, u += 3, h += 2) {
        var c = n + f / e * i;
        a[u] = t * Math.cos(c);
        a[u + 1] = t * Math.sin(c);
        s[u + 2] = 1;
        o[h] = (a[u] / t + 1) / 2;
        o[h + 1] = (a[u + 1] / t + 1) / 2;
    }
    var l = [];
    for (var u = 1; u <= e; u++) {
        l.push(u, u + 1, 0);
    }
    this.Ns(new THREE.qr(new Uint16Array(l), 1));
    this.Os("position", new THREE.qr(a, 3));
    this.Os("normal", new THREE.qr(s, 3));
    this.Os("uv", new THREE.qr(o, 2));
    this.Ho = new THREE.Jn(new THREE.K(), t);
};

THREE.nN.prototype = Object.create(THREE.Cn.prototype);

THREE.nN.prototype.constructor = THREE.nN;

THREE.oN = function(t, e, n, i, r, a, s, o) {
    THREE.Cn.call(this);
    this.type = "CylinderBufferGeometry";
    this.Bs = {
        FA: t,
        GA: e,
        height: n,
        HA: i,
        zA: r,
        IA: a,
        DA: s,
        EA: o
    };
    var f = this;
    t = t !== undefined ? t : 20;
    e = e !== undefined ? e : 20;
    n = n !== undefined ? n : 100;
    i = Math.floor(i) || 8;
    r = Math.floor(r) || 1;
    a = a !== undefined ? a : false;
    s = s !== undefined ? s : 0;
    o = o !== undefined ? o : 2 * Math.PI;
    var u = 0;
    if (a === false) {
        if (t > 0) u++;
        if (e > 0) u++;
    }
    var h = R();
    var c = w();
    var l = new THREE.qr(new (c > 65535 ? Uint32Array : Uint16Array)(c), 1);
    var d = new THREE.qr(new Float32Array(h * 3), 3);
    var v = new THREE.qr(new Float32Array(h * 3), 3);
    var p = new THREE.qr(new Float32Array(h * 2), 2);
    var E = 0, g = 0, m = [], T = n / 2;
    var y = 0;
    x();
    if (a === false) {
        if (t > 0) b(true);
        if (e > 0) b(false);
    }
    this.Ns(l);
    this.Os("position", d);
    this.Os("normal", v);
    this.Os("uv", p);
    function R() {
        var t = (i + 1) * (r + 1);
        if (a === false) {
            t += (i + 1) * u + i * u;
        }
        return t;
    }
    function w() {
        var t = i * r * 2 * 3;
        if (a === false) {
            t += i * u * 3;
        }
        return t;
    }
    function x() {
        var a, u;
        var h = new THREE.K();
        var c = new THREE.K();
        var R = 0;
        var w = (e - t) / n;
        for (u = 0; u <= r; u++) {
            var x = [];
            var b = u / r;
            var H = b * (e - t) + t;
            for (a = 0; a <= i; a++) {
                var A = a / i;
                c.x = H * Math.sin(A * o + s);
                c.y = -b * n + T;
                c.z = H * Math.cos(A * o + s);
                d.Rn(E, c.x, c.y, c.z);
                h.xi(c);
                if (t === 0 && u === 0 || e === 0 && u === r) {
                    h.x = Math.sin(A * o + s);
                    h.z = Math.cos(A * o + s);
                }
                h.Yl(Math.sqrt(h.x * h.x + h.z * h.z) * w).normalize();
                v.Rn(E, h.x, h.y, h.z);
                p.Er(E, A, 1 - b);
                x.push(E);
                E++;
            }
            m.push(x);
        }
        for (a = 0; a < i; a++) {
            for (u = 0; u < r; u++) {
                var M = m[u][a];
                var O = m[u + 1][a];
                var S = m[u + 1][a + 1];
                var U = m[u][a + 1];
                l.Xl(g, M);
                g++;
                l.Xl(g, O);
                g++;
                l.Xl(g, U);
                g++;
                l.Xl(g, O);
                g++;
                l.Xl(g, S);
                g++;
                l.Xl(g, U);
                g++;
                R += 6;
            }
        }
        f.Ps(y, R, 0);
        y += R;
    }
    function b(n) {
        var r, a, u;
        var h = new THREE.fa();
        var c = new THREE.K();
        var m = 0;
        var R = n === true ? t : e;
        var w = n === true ? 1 : -1;
        a = E;
        for (r = 1; r <= i; r++) {
            d.Rn(E, 0, T * w, 0);
            v.Rn(E, 0, w, 0);
            h.x = .5;
            h.y = .5;
            p.Er(E, h.x, h.y);
            E++;
        }
        u = E;
        for (r = 0; r <= i; r++) {
            var x = r / i;
            var b = x * o + s;
            var H = Math.cos(b);
            var A = Math.sin(b);
            c.x = R * A;
            c.y = T * w;
            c.z = R * H;
            d.Rn(E, c.x, c.y, c.z);
            v.Rn(E, 0, w, 0);
            h.x = H * .5 + .5;
            h.y = A * .5 * w + .5;
            p.Er(E, h.x, h.y);
            E++;
        }
        for (r = 0; r < i; r++) {
            var M = a + r;
            var O = u + r;
            if (n === true) {
                l.Xl(g, O);
                g++;
                l.Xl(g, O + 1);
                g++;
                l.Xl(g, M);
                g++;
            } else {
                l.Xl(g, O + 1);
                g++;
                l.Xl(g, O);
                g++;
                l.Xl(g, M);
                g++;
            }
            m += 3;
        }
        f.Ps(y, m, n === true ? 1 : 2);
        y += m;
    }
};

THREE.oN.prototype = Object.create(THREE.Cn.prototype);

THREE.oN.prototype.constructor = THREE.oN;

THREE.pN = function(t, e, n, i, r, a, s, o) {
    THREE.An.call(this);
    this.type = "CylinderGeometry";
    this.Bs = {
        FA: t,
        GA: e,
        height: n,
        HA: i,
        zA: r,
        IA: a,
        DA: s,
        EA: o
    };
    this.ls(new THREE.oN(t, e, n, i, r, a, s, o));
    this.ys();
};

THREE.pN.prototype = Object.create(THREE.An.prototype);

THREE.pN.prototype.constructor = THREE.pN;

THREE.qN = function(t, e, n, i, r, a, s) {
    THREE.oN.call(this, 0, t, e, n, i, r, a, s);
    this.type = "ConeBufferGeometry";
    this.Bs = {
        N: t,
        height: e,
        HA: n,
        zA: i,
        DA: a,
        EA: s
    };
};

THREE.qN.prototype = Object.create(THREE.Cn.prototype);

THREE.qN.prototype.constructor = THREE.qN;

THREE.rN = function(t, e, n, i, r, a, s) {
    THREE.pN.call(this, 0, t, e, n, i, r, a, s);
    this.type = "ConeGeometry";
    this.Bs = {
        N: t,
        height: e,
        HA: n,
        zA: i,
        IA: r,
        DA: a,
        EA: s
    };
};

THREE.rN.prototype = Object.create(THREE.pN.prototype);

THREE.rN.prototype.constructor = THREE.rN;

THREE.sN = function(t, e) {
    THREE.Cn.call(this);
    e = e !== undefined ? e : 1;
    var n = Math.cos(THREE.Math.po * e);
    var i = [ 0, 0 ], r = {};
    function a(t, e) {
        return t - e;
    }
    var s = [ "a", "b", "c" ];
    var o;
    if (t instanceof THREE.Cn) {
        o = new THREE.An();
        o.ls(t);
    } else {
        o = t.clone();
    }
    o.ys();
    o.ps();
    var f = o.Bn;
    var u = o.Wr;
    for (var h = 0, c = u.length; h < c; h++) {
        var l = u[h];
        for (var d = 0; d < 3; d++) {
            i[0] = l[s[d]];
            i[1] = l[s[(d + 1) % 3]];
            i.sort(a);
            var v = i.toString();
            if (r[v] === undefined) {
                r[v] = {
                    tN: i[0],
                    uN: i[1],
                    vN: h,
                    wN: undefined
                };
            } else {
                r[v].wN = h;
            }
        }
    }
    var p = [];
    for (var v in r) {
        var E = r[v];
        if (E.wN === undefined || u[E.vN].Hn.Ol(u[E.wN].Hn) <= n) {
            var g = f[E.tN];
            p.push(g.x);
            p.push(g.y);
            p.push(g.z);
            g = f[E.uN];
            p.push(g.x);
            p.push(g.y);
            p.push(g.z);
        }
    }
    this.Os("position", new THREE.qr(new Float32Array(p), 3));
};

THREE.sN.prototype = Object.create(THREE.Cn.prototype);

THREE.sN.prototype.constructor = THREE.sN;

THREE.FM = function(t, e) {
    if (typeof t === "undefined") {
        t = [];
        return;
    }
    THREE.An.call(this);
    this.type = "ExtrudeGeometry";
    t = Array.isArray(t) ? t : [ t ];
    this.xN(t, e);
    this.ps();
};

THREE.FM.prototype = Object.create(THREE.An.prototype);

THREE.FM.prototype.constructor = THREE.FM;

THREE.FM.prototype.xN = function(t, e) {
    var n = t.length;
    for (var i = 0; i < n; i++) {
        var r = t[i];
        this.yN(r, e);
    }
};

THREE.FM.prototype.yN = function(t, e) {
    var n = e.zN !== undefined ? e.zN : 100;
    var i = e.AN !== undefined ? e.AN : 6;
    var r = e.BN !== undefined ? e.BN : i - 2;
    var a = e.CN !== undefined ? e.CN : 3;
    var s = e.DN !== undefined ? e.DN : true;
    var o = e.EN !== undefined ? e.EN : 12;
    var f = e.FN !== undefined ? e.FN : 1;
    var u = e.GN;
    var h, c = false;
    var l = e.HN !== undefined ? e.HN : THREE.FM.IN;
    var d, v, p, E;
    if (u) {
        h = u.QL(f);
        c = true;
        s = false;
        d = e.frames !== undefined ? e.frames : new THREE.KN.JN(u, f, false);
        v = new THREE.K();
        p = new THREE.K();
        E = new THREE.K();
    }
    if (!s) {
        a = 0;
        i = 0;
        r = 0;
    }
    var g, m, T;
    var y = this;
    var R = this.Bn.length;
    var w = t.KM(o);
    var x = w.shape;
    var b = w.DM;
    var H = !THREE.GL.JL(x);
    if (H) {
        x = x.reverse();
        for (m = 0, T = b.length; m < T; m++) {
            g = b[m];
            if (THREE.GL.JL(g)) {
                b[m] = g.reverse();
            }
        }
        H = false;
    }
    var A = THREE.GL.IL(x, b);
    var M = x;
    for (m = 0, T = b.length; m < T; m++) {
        g = b[m];
        x = x.concat(g);
    }
    function O(t, e, n) {
        if (!e) console.error("THREE.ExtrudeGeometry: vec does not exist");
        return e.clone().Ri(n).add(t);
    }
    var S, U, C, L, P, N = x.length, I, q = A.length;
    function z(t, e, n) {
        var i, r, a = 1;
        var s = t.x - e.x, o = t.y - e.y;
        var f = n.x - t.x, u = n.y - t.y;
        var h = s * s + o * o;
        var c = s * u - o * f;
        if (Math.abs(c) > Number.EPSILON) {
            var l = Math.sqrt(h);
            var d = Math.sqrt(f * f + u * u);
            var v = e.x - o / l;
            var p = e.y + s / l;
            var E = n.x - u / d;
            var g = n.y + f / d;
            var m = ((E - v) * u - (g - p) * f) / (s * u - o * f);
            i = v + s * m - t.x;
            r = p + o * m - t.y;
            var T = i * i + r * r;
            if (T <= 2) {
                return new THREE.fa(i, r);
            } else {
                a = Math.sqrt(T / 2);
            }
        } else {
            var y = false;
            if (s > Number.EPSILON) {
                if (f > Number.EPSILON) {
                    y = true;
                }
            } else {
                if (s < -Number.EPSILON) {
                    if (f < -Number.EPSILON) {
                        y = true;
                    }
                } else {
                    if (Math.sign(o) === Math.sign(u)) {
                        y = true;
                    }
                }
            }
            if (y) {
                i = -o;
                r = s;
                a = Math.sqrt(h);
            } else {
                i = s;
                r = o;
                a = Math.sqrt(h / 2);
            }
        }
        return new THREE.fa(i / a, r / a);
    }
    var B = [];
    for (var k = 0, j = M.length, D = j - 1, G = k + 1; k < j; k++, D++, G++) {
        if (D === j) D = 0;
        if (G === j) G = 0;
        B[k] = z(M[k], M[D], M[G]);
    }
    var F = [], V, W = B.concat();
    for (m = 0, T = b.length; m < T; m++) {
        g = b[m];
        V = [];
        for (k = 0, j = g.length, D = j - 1, G = k + 1; k < j; k++, D++, G++) {
            if (D === j) D = 0;
            if (G === j) G = 0;
            V[k] = z(g[k], g[D], g[G]);
        }
        F.push(V);
        W = W.concat(V);
    }
    for (S = 0; S < a; S++) {
        C = S / a;
        L = i * (1 - C);
        U = r * Math.sin(C * Math.PI / 2);
        for (k = 0, j = M.length; k < j; k++) {
            P = O(M[k], B[k], U);
            $(P.x, P.y, -L);
        }
        for (m = 0, T = b.length; m < T; m++) {
            g = b[m];
            V = F[m];
            for (k = 0, j = g.length; k < j; k++) {
                P = O(g[k], V[k], U);
                $(P.x, P.y, -L);
            }
        }
    }
    U = r;
    for (k = 0; k < N; k++) {
        P = s ? O(x[k], W[k], U) : x[k];
        if (!c) {
            $(P.x, P.y, 0);
        } else {
            p.xi(d.Cs[0]).Ri(P.x);
            v.xi(d.LN[0]).Ri(P.y);
            E.xi(h[0]).add(p).add(v);
            $(E.x, E.y, E.z);
        }
    }
    var Y;
    for (Y = 1; Y <= f; Y++) {
        for (k = 0; k < N; k++) {
            P = s ? O(x[k], W[k], U) : x[k];
            if (!c) {
                $(P.x, P.y, n / f * Y);
            } else {
                p.xi(d.Cs[Y]).Ri(P.x);
                v.xi(d.LN[Y]).Ri(P.y);
                E.xi(h[Y]).add(p).add(v);
                $(E.x, E.y, E.z);
            }
        }
    }
    for (S = a - 1; S >= 0; S--) {
        C = S / a;
        L = i * (1 - C);
        U = r * Math.sin(C * Math.PI / 2);
        for (k = 0, j = M.length; k < j; k++) {
            P = O(M[k], B[k], U);
            $(P.x, P.y, n + L);
        }
        for (m = 0, T = b.length; m < T; m++) {
            g = b[m];
            V = F[m];
            for (k = 0, j = g.length; k < j; k++) {
                P = O(g[k], V[k], U);
                if (!c) {
                    $(P.x, P.y, n + L);
                } else {
                    $(P.x, P.y + h[f - 1].y, h[f - 1].x + L);
                }
            }
        }
    }
    X();
    K();
    function X() {
        if (s) {
            var t = 0;
            var e = N * t;
            for (k = 0; k < q; k++) {
                I = A[k];
                J(I[2] + e, I[1] + e, I[0] + e);
            }
            t = f + a * 2;
            e = N * t;
            for (k = 0; k < q; k++) {
                I = A[k];
                J(I[0] + e, I[1] + e, I[2] + e);
            }
        } else {
            for (k = 0; k < q; k++) {
                I = A[k];
                J(I[2], I[1], I[0]);
            }
            for (k = 0; k < q; k++) {
                I = A[k];
                J(I[0] + N * f, I[1] + N * f, I[2] + N * f);
            }
        }
    }
    function K() {
        var t = 0;
        Z(M, t);
        t += M.length;
        for (m = 0, T = b.length; m < T; m++) {
            g = b[m];
            Z(g, t);
            t += g.length;
        }
    }
    function Z(t, e) {
        var n, i;
        k = t.length;
        while (--k >= 0) {
            n = k;
            i = k - 1;
            if (i < 0) i = t.length - 1;
            var r = 0, s = f + a * 2;
            for (r = 0; r < s; r++) {
                var o = N * r;
                var u = N * (r + 1);
                var h = e + n + o, c = e + i + o, l = e + i + u, d = e + n + u;
                Q(h, c, l, d, t, r, s, n, i);
            }
        }
    }
    function $(t, e, n) {
        y.Bn.push(new THREE.K(t, e, n));
    }
    function J(t, e, n) {
        t += R;
        e += R;
        n += R;
        y.Wr.push(new THREE.mr(t, e, n, null, null, 0));
        var i = l.MN(y, t, e, n);
        y.Xr[0].push(i);
    }
    function Q(t, e, n, i, r, a, s, o, f) {
        t += R;
        e += R;
        n += R;
        i += R;
        y.Wr.push(new THREE.mr(t, e, i, null, null, 1));
        y.Wr.push(new THREE.mr(e, n, i, null, null, 1));
        var u = l.NN(y, t, e, n, i);
        y.Xr[0].push([ u[0], u[1], u[3] ]);
        y.Xr[0].push([ u[1], u[2], u[3] ]);
    }
};

THREE.FM.IN = {
    MN: function(t, e, n, i) {
        var r = t.Bn;
        var a = r[e];
        var s = r[n];
        var o = r[i];
        return [ new THREE.fa(a.x, a.y), new THREE.fa(s.x, s.y), new THREE.fa(o.x, o.y) ];
    },
    NN: function(t, e, n, i, r) {
        var a = t.Bn;
        var s = a[e];
        var o = a[n];
        var f = a[i];
        var u = a[r];
        if (Math.abs(s.y - o.y) < .01) {
            return [ new THREE.fa(s.x, 1 - s.z), new THREE.fa(o.x, 1 - o.z), new THREE.fa(f.x, 1 - f.z), new THREE.fa(u.x, 1 - u.z) ];
        } else {
            return [ new THREE.fa(s.y, 1 - s.z), new THREE.fa(o.y, 1 - o.z), new THREE.fa(f.y, 1 - f.z), new THREE.fa(u.y, 1 - u.z) ];
        }
    }
};

THREE.HM = function(t, e) {
    THREE.An.call(this);
    this.type = "ShapeGeometry";
    if (Array.isArray(t) === false) t = [ t ];
    this.xN(t, e);
    this.ps();
};

THREE.HM.prototype = Object.create(THREE.An.prototype);

THREE.HM.prototype.constructor = THREE.HM;

THREE.HM.prototype.xN = function(t, e) {
    for (var n = 0, i = t.length; n < i; n++) {
        this.yN(t[n], e);
    }
    return this;
};

THREE.HM.prototype.yN = function(t, e) {
    if (e === undefined) e = {};
    var n = e.EN !== undefined ? e.EN : 12;
    var i = e.k;
    var r = e.HN === undefined ? THREE.FM.IN : e.HN;
    var a, s, o;
    var f = this.Bn.length;
    var u = t.KM(n);
    var h = u.shape;
    var c = u.DM;
    var l = !THREE.GL.JL(h);
    if (l) {
        h = h.reverse();
        for (a = 0, s = c.length; a < s; a++) {
            o = c[a];
            if (THREE.GL.JL(o)) {
                c[a] = o.reverse();
            }
        }
        l = false;
    }
    var d = THREE.GL.IL(h, c);
    for (a = 0, s = c.length; a < s; a++) {
        o = c[a];
        h = h.concat(o);
    }
    var v, p = h.length;
    var E, g = d.length;
    for (a = 0; a < p; a++) {
        v = h[a];
        this.Bn.push(new THREE.K(v.x, v.y, 0));
    }
    for (a = 0; a < g; a++) {
        E = d[a];
        var m = E[0] + f;
        var T = E[1] + f;
        var y = E[2] + f;
        this.Wr.push(new THREE.mr(m, T, y, null, null, i));
        this.Xr[0].push(r.MN(this, m, T, y));
    }
};

THREE.ON = function(t, e, n, i) {
    THREE.Cn.call(this);
    this.type = "LatheBufferGeometry";
    this.Bs = {
        points: t,
        CA: e,
        JA: n,
        KA: i
    };
    e = Math.floor(e) || 12;
    n = n || 0;
    i = i || Math.PI * 2;
    i = THREE.Math.ue(i, 0, Math.PI * 2);
    var r = (e + 1) * t.length;
    var a = e * t.length * 2 * 3;
    var s = new THREE.qr(new (a > 65535 ? Uint32Array : Uint16Array)(a), 1);
    var o = new THREE.qr(new Float32Array(r * 3), 3);
    var f = new THREE.qr(new Float32Array(r * 2), 2);
    var u = 0, h = 0, c;
    var l = 1 / (t.length - 1);
    var d = 1 / e;
    var v = new THREE.K();
    var p = new THREE.fa();
    var E, g;
    for (E = 0; E <= e; E++) {
        var m = n + E * d * i;
        var T = Math.sin(m);
        var y = Math.cos(m);
        for (g = 0; g <= t.length - 1; g++) {
            v.x = t[g].x * T;
            v.y = t[g].y;
            v.z = t[g].x * y;
            o.Rn(u, v.x, v.y, v.z);
            p.x = E / e;
            p.y = g / (t.length - 1);
            f.Er(u, p.x, p.y);
            u++;
        }
    }
    for (E = 0; E < e; E++) {
        for (g = 0; g < t.length - 1; g++) {
            c = g + E * t.length;
            var R = c;
            var w = c + t.length;
            var x = c + t.length + 1;
            var b = c + 1;
            s.Xl(h, R);
            h++;
            s.Xl(h, w);
            h++;
            s.Xl(h, b);
            h++;
            s.Xl(h, w);
            h++;
            s.Xl(h, x);
            h++;
            s.Xl(h, b);
            h++;
        }
    }
    this.Ns(s);
    this.Os("position", o);
    this.Os("uv", f);
    this.qs();
    if (i === Math.PI * 2) {
        var H = this.attributes.Hn.dc;
        var A = new THREE.K();
        var M = new THREE.K();
        var O = new THREE.K();
        c = e * t.length * 3;
        for (E = 0, g = 0; E < t.length; E++, g += 3) {
            A.x = H[g + 0];
            A.y = H[g + 1];
            A.z = H[g + 2];
            M.x = H[c + g + 0];
            M.y = H[c + g + 1];
            M.z = H[c + g + 2];
            O._l(A, M).normalize();
            H[g + 0] = H[c + g + 0] = O.x;
            H[g + 1] = H[c + g + 1] = O.y;
            H[g + 2] = H[c + g + 2] = O.z;
        }
    }
};

THREE.ON.prototype = Object.create(THREE.Cn.prototype);

THREE.ON.prototype.constructor = THREE.ON;

THREE.PN = function(t, e, n, i) {
    THREE.An.call(this);
    this.type = "LatheGeometry";
    this.Bs = {
        points: t,
        CA: e,
        JA: n,
        KA: i
    };
    this.ls(new THREE.ON(t, e, n, i));
    this.ys();
};

THREE.PN.prototype = Object.create(THREE.An.prototype);

THREE.PN.prototype.constructor = THREE.PN;

THREE.QN = function(t, e, n, i) {
    THREE.An.call(this);
    this.type = "PlaneGeometry";
    this.Bs = {
        width: t,
        height: e,
        yA: n,
        zA: i
    };
    this.ls(new THREE.NG(t, e, n, i));
};

THREE.QN.prototype = Object.create(THREE.An.prototype);

THREE.QN.prototype.constructor = THREE.QN;

THREE.NG = function(t, e, n, i) {
    THREE.Cn.call(this);
    this.type = "PlaneBufferGeometry";
    this.Bs = {
        width: t,
        height: e,
        yA: n,
        zA: i
    };
    var r = t / 2;
    var a = e / 2;
    var s = Math.floor(n) || 1;
    var o = Math.floor(i) || 1;
    var f = s + 1;
    var u = o + 1;
    var h = t / s;
    var c = e / o;
    var l = new Float32Array(f * u * 3);
    var d = new Float32Array(f * u * 3);
    var v = new Float32Array(f * u * 2);
    var p = 0;
    var E = 0;
    for (var g = 0; g < u; g++) {
        var m = g * c - a;
        for (var T = 0; T < f; T++) {
            var y = T * h - r;
            l[p] = y;
            l[p + 1] = -m;
            d[p + 2] = 1;
            v[E] = T / s;
            v[E + 1] = 1 - g / o;
            p += 3;
            E += 2;
        }
    }
    p = 0;
    var R = new (l.length / 3 > 65535 ? Uint32Array : Uint16Array)(s * o * 6);
    for (var g = 0; g < o; g++) {
        for (var T = 0; T < s; T++) {
            var w = T + f * g;
            var x = T + f * (g + 1);
            var b = T + 1 + f * (g + 1);
            var H = T + 1 + f * g;
            R[p] = w;
            R[p + 1] = x;
            R[p + 2] = H;
            R[p + 3] = x;
            R[p + 4] = b;
            R[p + 5] = H;
            p += 6;
        }
    }
    this.Ns(new THREE.qr(R, 1));
    this.Os("position", new THREE.qr(l, 3));
    this.Os("normal", new THREE.qr(d, 3));
    this.Os("uv", new THREE.qr(v, 2));
};

THREE.NG.prototype = Object.create(THREE.Cn.prototype);

THREE.NG.prototype.constructor = THREE.NG;

THREE.RN = function(t, e, n, i, r, a) {
    THREE.Cn.call(this);
    this.type = "RingBufferGeometry";
    this.Bs = {
        LA: t,
        MA: e,
        NA: n,
        OA: i,
        DA: r,
        EA: a
    };
    t = t || 20;
    e = e || 50;
    r = r !== undefined ? r : 0;
    a = a !== undefined ? a : Math.PI * 2;
    n = n !== undefined ? Math.max(3, n) : 8;
    i = i !== undefined ? Math.max(1, i) : 1;
    var s = (n + 1) * (i + 1);
    var o = n * i * 2 * 3;
    var f = new THREE.qr(new (o > 65535 ? Uint32Array : Uint16Array)(o), 1);
    var u = new THREE.qr(new Float32Array(s * 3), 3);
    var h = new THREE.qr(new Float32Array(s * 3), 3);
    var c = new THREE.qr(new Float32Array(s * 2), 2);
    var l = 0, d = 0, v;
    var p = t;
    var E = (e - t) / i;
    var g = new THREE.K();
    var m = new THREE.fa();
    var T, y;
    for (T = 0; T <= i; T++) {
        for (y = 0; y <= n; y++) {
            v = r + y / n * a;
            g.x = p * Math.cos(v);
            g.y = p * Math.sin(v);
            u.Rn(l, g.x, g.y, g.z);
            h.Rn(l, 0, 0, 1);
            m.x = (g.x / e + 1) / 2;
            m.y = (g.y / e + 1) / 2;
            c.Er(l, m.x, m.y);
            l++;
        }
        p += E;
    }
    for (T = 0; T < i; T++) {
        var R = T * (n + 1);
        for (y = 0; y < n; y++) {
            v = y + R;
            var w = v;
            var x = v + n + 1;
            var b = v + n + 2;
            var H = v + 1;
            f.Xl(d, w);
            d++;
            f.Xl(d, x);
            d++;
            f.Xl(d, b);
            d++;
            f.Xl(d, w);
            d++;
            f.Xl(d, b);
            d++;
            f.Xl(d, H);
            d++;
        }
    }
    this.Ns(f);
    this.Os("position", u);
    this.Os("normal", h);
    this.Os("uv", c);
};

THREE.RN.prototype = Object.create(THREE.Cn.prototype);

THREE.RN.prototype.constructor = THREE.RN;

THREE.SN = function(t, e, n, i, r, a) {
    THREE.An.call(this);
    this.type = "RingGeometry";
    this.Bs = {
        LA: t,
        MA: e,
        NA: n,
        OA: i,
        DA: r,
        EA: a
    };
    this.ls(new THREE.RN(t, e, n, i, r, a));
};

THREE.SN.prototype = Object.create(THREE.An.prototype);

THREE.SN.prototype.constructor = THREE.SN;

THREE.TN = function(t, e, n, i, r, a, s) {
    THREE.An.call(this);
    this.type = "SphereGeometry";
    this.Bs = {
        N: t,
        yA: e,
        zA: n,
        JA: i,
        KA: r,
        DA: a,
        EA: s
    };
    this.ls(new THREE.UN(t, e, n, i, r, a, s));
};

THREE.TN.prototype = Object.create(THREE.An.prototype);

THREE.TN.prototype.constructor = THREE.TN;

THREE.UN = function(t, e, n, i, r, a, s) {
    THREE.Cn.call(this);
    this.type = "SphereBufferGeometry";
    this.Bs = {
        N: t,
        yA: e,
        zA: n,
        JA: i,
        KA: r,
        DA: a,
        EA: s
    };
    t = t || 50;
    e = Math.max(3, Math.floor(e) || 8);
    n = Math.max(2, Math.floor(n) || 6);
    i = i !== undefined ? i : 0;
    r = r !== undefined ? r : Math.PI * 2;
    a = a !== undefined ? a : 0;
    s = s !== undefined ? s : Math.PI;
    var o = a + s;
    var f = (e + 1) * (n + 1);
    var u = new THREE.qr(new Float32Array(f * 3), 3);
    var h = new THREE.qr(new Float32Array(f * 3), 3);
    var c = new THREE.qr(new Float32Array(f * 2), 2);
    var l = 0, d = [], v = new THREE.K();
    for (var p = 0; p <= n; p++) {
        var E = [];
        var g = p / n;
        for (var m = 0; m <= e; m++) {
            var T = m / e;
            var y = -t * Math.cos(i + T * r) * Math.sin(a + g * s);
            var R = t * Math.cos(a + g * s);
            var w = t * Math.sin(i + T * r) * Math.sin(a + g * s);
            v.set(y, R, w).normalize();
            u.Rn(l, y, R, w);
            h.Rn(l, v.x, v.y, v.z);
            c.Er(l, T, 1 - g);
            E.push(l);
            l++;
        }
        d.push(E);
    }
    var x = [];
    for (var p = 0; p < n; p++) {
        for (var m = 0; m < e; m++) {
            var b = d[p][m + 1];
            var H = d[p][m];
            var A = d[p + 1][m];
            var M = d[p + 1][m + 1];
            if (p !== 0 || a > 0) x.push(b, H, M);
            if (p !== n - 1 || o < Math.PI) x.push(H, A, M);
        }
    }
    this.Ns(new (u.count > 65535 ? THREE.Mr : THREE.Kr)(x, 1));
    this.Os("position", u);
    this.Os("normal", h);
    this.Os("uv", c);
    this.Ho = new THREE.Jn(new THREE.K(), t);
};

THREE.UN.prototype = Object.create(THREE.Cn.prototype);

THREE.UN.prototype.constructor = THREE.UN;

THREE.VN = function(t, e) {
    e = e || {};
    var n = e.font;
    if (n instanceof THREE.Kz === false) {
        console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font.");
        return new THREE.An();
    }
    var i = n.gM(t, e.size, e.EN);
    e.zN = e.height !== undefined ? e.height : 50;
    if (e.AN === undefined) e.AN = 10;
    if (e.BN === undefined) e.BN = 8;
    if (e.DN === undefined) e.DN = false;
    THREE.FM.call(this, i, e);
    this.type = "TextGeometry";
};

THREE.VN.prototype = Object.create(THREE.FM.prototype);

THREE.VN.prototype.constructor = THREE.VN;

THREE.WN = function(t, e, n, i, r) {
    THREE.Cn.call(this);
    this.type = "TorusBufferGeometry";
    this.Bs = {
        N: t,
        PA: e,
        HA: n,
        QA: i,
        arc: r
    };
    t = t || 100;
    e = e || 40;
    n = Math.floor(n) || 8;
    i = Math.floor(i) || 6;
    r = r || Math.PI * 2;
    var a = (n + 1) * (i + 1);
    var s = n * i * 2 * 3;
    var o = new (s > 65535 ? Uint32Array : Uint16Array)(s);
    var f = new Float32Array(a * 3);
    var u = new Float32Array(a * 3);
    var h = new Float32Array(a * 2);
    var c = 0;
    var l = 0;
    var d = 0;
    var v = new THREE.K();
    var p = new THREE.K();
    var E = new THREE.K();
    var g, m;
    for (g = 0; g <= n; g++) {
        for (m = 0; m <= i; m++) {
            var T = m / i * r;
            var y = g / n * Math.PI * 2;
            p.x = (t + e * Math.cos(y)) * Math.cos(T);
            p.y = (t + e * Math.cos(y)) * Math.sin(T);
            p.z = e * Math.sin(y);
            f[c] = p.x;
            f[c + 1] = p.y;
            f[c + 2] = p.z;
            v.x = t * Math.cos(T);
            v.y = t * Math.sin(T);
            E.bm(p, v).normalize();
            u[c] = E.x;
            u[c + 1] = E.y;
            u[c + 2] = E.z;
            h[l] = m / i;
            h[l + 1] = g / n;
            c += 3;
            l += 2;
        }
    }
    for (g = 1; g <= n; g++) {
        for (m = 1; m <= i; m++) {
            var R = (i + 1) * g + m - 1;
            var w = (i + 1) * (g - 1) + m - 1;
            var x = (i + 1) * (g - 1) + m;
            var b = (i + 1) * g + m;
            o[d] = R;
            o[d + 1] = w;
            o[d + 2] = b;
            o[d + 3] = w;
            o[d + 4] = x;
            o[d + 5] = b;
            d += 6;
        }
    }
    this.Ns(new THREE.qr(o, 1));
    this.Os("position", new THREE.qr(f, 3));
    this.Os("normal", new THREE.qr(u, 3));
    this.Os("uv", new THREE.qr(h, 2));
};

THREE.WN.prototype = Object.create(THREE.Cn.prototype);

THREE.WN.prototype.constructor = THREE.WN;

THREE.XN = function(t, e, n, i, r) {
    THREE.An.call(this);
    this.type = "TorusGeometry";
    this.Bs = {
        N: t,
        PA: e,
        HA: n,
        QA: i,
        arc: r
    };
    this.ls(new THREE.WN(t, e, n, i, r));
};

THREE.XN.prototype = Object.create(THREE.An.prototype);

THREE.XN.prototype.constructor = THREE.XN;

THREE.YN = function(t, e, n, i, r, a) {
    THREE.Cn.call(this);
    this.type = "TorusKnotBufferGeometry";
    this.Bs = {
        N: t,
        PA: e,
        QA: n,
        HA: i,
        m: r,
        RA: a
    };
    t = t || 100;
    e = e || 40;
    n = Math.floor(n) || 64;
    i = Math.floor(i) || 8;
    r = r || 2;
    a = a || 3;
    var s = (i + 1) * (n + 1);
    var o = i * n * 2 * 3;
    var f = new THREE.qr(new (o > 65535 ? Uint32Array : Uint16Array)(o), 1);
    var u = new THREE.qr(new Float32Array(s * 3), 3);
    var h = new THREE.qr(new Float32Array(s * 3), 3);
    var c = new THREE.qr(new Float32Array(s * 2), 2);
    var l, d, v = 0, p = 0;
    var E = new THREE.K();
    var g = new THREE.K();
    var m = new THREE.fa();
    var T = new THREE.K();
    var y = new THREE.K();
    var R = new THREE.K();
    var w = new THREE.K();
    var x = new THREE.K();
    for (l = 0; l <= n; ++l) {
        var b = l / n * r * Math.PI * 2;
        L(b, r, a, t, T);
        L(b + .01, r, a, t, y);
        w.bm(y, T);
        x._l(y, T);
        R.Pl(w, x);
        x.Pl(R, w);
        R.normalize();
        x.normalize();
        for (d = 0; d <= i; ++d) {
            var H = d / i * Math.PI * 2;
            var A = -e * Math.cos(H);
            var M = e * Math.sin(H);
            E.x = T.x + (A * x.x + M * R.x);
            E.y = T.y + (A * x.y + M * R.y);
            E.z = T.z + (A * x.z + M * R.z);
            u.Rn(v, E.x, E.y, E.z);
            g.bm(E, T).normalize();
            h.Rn(v, g.x, g.y, g.z);
            m.x = l / n;
            m.y = d / i;
            c.Er(v, m.x, m.y);
            v++;
        }
    }
    for (d = 1; d <= n; d++) {
        for (l = 1; l <= i; l++) {
            var O = (i + 1) * (d - 1) + (l - 1);
            var S = (i + 1) * d + (l - 1);
            var U = (i + 1) * d + l;
            var C = (i + 1) * (d - 1) + l;
            f.Xl(p, O);
            p++;
            f.Xl(p, S);
            p++;
            f.Xl(p, C);
            p++;
            f.Xl(p, S);
            p++;
            f.Xl(p, U);
            p++;
            f.Xl(p, C);
            p++;
        }
    }
    this.Ns(f);
    this.Os("position", u);
    this.Os("normal", h);
    this.Os("uv", c);
    function L(t, e, n, i, r) {
        var a = Math.cos(t);
        var s = Math.sin(t);
        var o = n / e * t;
        var f = Math.cos(o);
        r.x = i * (2 + f) * .5 * a;
        r.y = i * (2 + f) * s * .5;
        r.z = i * Math.sin(o) * .5;
    }
};

THREE.YN.prototype = Object.create(THREE.Cn.prototype);

THREE.YN.prototype.constructor = THREE.YN;

THREE.ZN = function(t, e, n, i, r, a, s) {
    THREE.An.call(this);
    this.type = "TorusKnotGeometry";
    this.Bs = {
        N: t,
        PA: e,
        QA: n,
        HA: i,
        m: r,
        RA: a
    };
    if (s !== undefined) console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");
    this.ls(new THREE.YN(t, e, n, i, r, a));
    this.ys();
};

THREE.ZN.prototype = Object.create(THREE.An.prototype);

THREE.ZN.prototype.constructor = THREE.ZN;

THREE.KN = function(t, e, n, i, r, a) {
    THREE.An.call(this);
    this.type = "TubeGeometry";
    this.Bs = {
        path: t,
        CA: e,
        N: n,
        HA: i,
        closed: r,
        $N: a
    };
    e = e || 64;
    n = n || 1;
    i = i || 8;
    r = r || false;
    a = a || THREE.KN._N;
    var s = [];
    var o = this, f, u, h, c = e + 1, l, d, v, p, E, g, m = new THREE.K(), T, y, R, w, x, b, H, A, M, O, S, U;
    var C = new THREE.KN.JN(t, e, r), L = C.aO, P = C.Cs, N = C.LN;
    this.aO = L;
    this.Cs = P;
    this.LN = N;
    function I(t, e, n) {
        return o.Bn.push(new THREE.K(t, e, n)) - 1;
    }
    for (T = 0; T < c; T++) {
        s[T] = [];
        l = T / (c - 1);
        g = t.NL(l);
        f = L[T];
        u = P[T];
        h = N[T];
        v = n * a(l);
        for (y = 0; y < i; y++) {
            d = y / i * 2 * Math.PI;
            p = -v * Math.cos(d);
            E = v * Math.sin(d);
            m.xi(g);
            m.x += p * u.x + E * h.x;
            m.y += p * u.y + E * h.y;
            m.z += p * u.z + E * h.z;
            s[T][y] = I(m.x, m.y, m.z);
        }
    }
    for (T = 0; T < e; T++) {
        for (y = 0; y < i; y++) {
            R = r ? (T + 1) % e : T + 1;
            w = (y + 1) % i;
            x = s[T][y];
            b = s[R][y];
            H = s[R][w];
            A = s[T][w];
            M = new THREE.fa(T / e, y / i);
            O = new THREE.fa((T + 1) / e, y / i);
            S = new THREE.fa((T + 1) / e, (y + 1) / i);
            U = new THREE.fa(T / e, (y + 1) / i);
            this.Wr.push(new THREE.mr(x, b, A));
            this.Xr[0].push([ M, O, U ]);
            this.Wr.push(new THREE.mr(b, H, A));
            this.Xr[0].push([ O.clone(), S, U.clone() ]);
        }
    }
    this.ps();
    this.qs();
};

THREE.KN.prototype = Object.create(THREE.An.prototype);

THREE.KN.prototype.constructor = THREE.KN;

THREE.KN._N = function(t) {
    return 1;
};

THREE.KN.bO = function(t) {
    return Math.sin(Math.PI * t);
};

THREE.KN.JN = function(t, e, n) {
    var i = new THREE.K(), r = [], a = [], s = [], o = new THREE.K(), f = new THREE.Am(), u = e + 1, h, c, l, d, v, p, E;
    this.aO = r;
    this.Cs = a;
    this.LN = s;
    for (p = 0; p < u; p++) {
        E = p / (u - 1);
        r[p] = t.WL(E);
        r[p].normalize();
    }
    g();
    function g() {
        a[0] = new THREE.K();
        s[0] = new THREE.K();
        c = Number.MAX_VALUE;
        l = Math.abs(r[0].x);
        d = Math.abs(r[0].y);
        v = Math.abs(r[0].z);
        if (l <= c) {
            c = l;
            i.set(1, 0, 0);
        }
        if (d <= c) {
            c = d;
            i.set(0, 1, 0);
        }
        if (v <= c) {
            i.set(0, 0, 1);
        }
        o.Pl(r[0], i).normalize();
        a[0].Pl(r[0], o);
        s[0].Pl(r[0], a[0]);
    }
    for (p = 1; p < u; p++) {
        a[p] = a[p - 1].clone();
        s[p] = s[p - 1].clone();
        o.Pl(r[p - 1], r[p]);
        if (o.length() > Number.EPSILON) {
            o.normalize();
            h = Math.acos(THREE.Math.ue(r[p - 1].Ol(r[p]), -1, 1));
            a[p].xm(f.jo(o, h));
        }
        s[p].Pl(r[p], a[p]);
    }
    if (n) {
        h = Math.acos(THREE.Math.ue(a[0].Ol(a[u - 1]), -1, 1));
        h /= u - 1;
        if (r[0].Ol(o.Pl(a[0], a[u - 1])) > 0) {
            h = -h;
        }
        for (p = 1; p < u; p++) {
            a[p].xm(f.jo(r[p], h * p));
            s[p].Pl(r[p], a[p]);
        }
    }
};

THREE.cO = function(t, e, n, i) {
    THREE.An.call(this);
    this.type = "PolyhedronGeometry";
    this.Bs = {
        Bn: t,
        Gs: e,
        N: n,
        detail: i
    };
    n = n || 1;
    i = i || 0;
    var r = this;
    for (var a = 0, s = t.length; a < s; a += 3) {
        y(new THREE.K(t[a], t[a + 1], t[a + 2]));
    }
    var o = this.Bn;
    var f = [];
    for (var a = 0, u = 0, s = e.length; a < s; a += 3, u++) {
        var h = o[e[a]];
        var c = o[e[a + 1]];
        var l = o[e[a + 2]];
        f[u] = new THREE.mr(h.index, c.index, l.index, [ h.clone(), c.clone(), l.clone() ]);
    }
    var d = new THREE.K();
    for (var a = 0, s = f.length; a < s; a++) {
        w(f[a], i);
    }
    for (var a = 0, s = this.Xr[0].length; a < s; a++) {
        var v = this.Xr[0][a];
        var p = v[0].x;
        var E = v[1].x;
        var g = v[2].x;
        var m = Math.max(p, E, g);
        var T = Math.min(p, E, g);
        if (m > .9 && T < .1) {
            if (p < .2) v[0].x += 1;
            if (E < .2) v[1].x += 1;
            if (g < .2) v[2].x += 1;
        }
    }
    for (var a = 0, s = this.Bn.length; a < s; a++) {
        this.Bn[a].Ri(n);
    }
    this.ys();
    this.ps();
    this.Ho = new THREE.Jn(new THREE.K(), n);
    function y(t) {
        var e = t.normalize().clone();
        e.index = r.Bn.push(e) - 1;
        var n = x(t) / 2 / Math.PI + .5;
        var i = b(t) / Math.PI + .5;
        e.ms = new THREE.fa(n, 1 - i);
        return e;
    }
    function R(t, e, n) {
        var i = new THREE.mr(t.index, e.index, n.index, [ t.clone(), e.clone(), n.clone() ]);
        r.Wr.push(i);
        d.xi(t).add(e).add(n).em(3);
        var a = x(d);
        r.Xr[0].push([ H(t.ms, t, a), H(e.ms, e, a), H(n.ms, n, a) ]);
    }
    function w(t, e) {
        var n = Math.pow(2, e);
        var i = y(r.Bn[t.a]);
        var a = y(r.Bn[t.b]);
        var s = y(r.Bn[t.c]);
        var o = [];
        for (var f = 0; f <= n; f++) {
            o[f] = [];
            var u = y(i.clone().Si(s, f / n));
            var h = y(a.clone().Si(s, f / n));
            var c = n - f;
            for (var l = 0; l <= c; l++) {
                if (l === 0 && f === n) {
                    o[f][l] = u;
                } else {
                    o[f][l] = y(u.clone().Si(h, l / c));
                }
            }
        }
        for (var f = 0; f < n; f++) {
            for (var l = 0; l < 2 * (n - f) - 1; l++) {
                var d = Math.floor(l / 2);
                if (l % 2 === 0) {
                    R(o[f][d + 1], o[f + 1][d], o[f][d]);
                } else {
                    R(o[f][d + 1], o[f + 1][d + 1], o[f + 1][d]);
                }
            }
        }
    }
    function x(t) {
        return Math.atan2(t.z, -t.x);
    }
    function b(t) {
        return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z));
    }
    function H(t, e, n) {
        if (n < 0 && t.x === 1) t = new THREE.fa(t.x - 1, t.y);
        if (e.x === 0 && e.z === 0) t = new THREE.fa(n / 2 / Math.PI + .5, t.y);
        return t.clone();
    }
};

THREE.cO.prototype = Object.create(THREE.An.prototype);

THREE.cO.prototype.constructor = THREE.cO;

THREE.dO = function(t, e) {
    var n = (1 + Math.sqrt(5)) / 2;
    var i = 1 / n;
    var r = [ -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i ];
    var a = [ 3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9 ];
    THREE.cO.call(this, r, a, t, e);
    this.type = "DodecahedronGeometry";
    this.Bs = {
        N: t,
        detail: e
    };
};

THREE.dO.prototype = Object.create(THREE.cO.prototype);

THREE.dO.prototype.constructor = THREE.dO;

THREE.eO = function(t, e) {
    var n = (1 + Math.sqrt(5)) / 2;
    var i = [ -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1 ];
    var r = [ 0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1 ];
    THREE.cO.call(this, i, r, t, e);
    this.type = "IcosahedronGeometry";
    this.Bs = {
        N: t,
        detail: e
    };
};

THREE.eO.prototype = Object.create(THREE.cO.prototype);

THREE.eO.prototype.constructor = THREE.eO;

THREE.fO = function(t, e) {
    var n = [ 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1 ];
    var i = [ 0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2 ];
    THREE.cO.call(this, n, i, t, e);
    this.type = "OctahedronGeometry";
    this.Bs = {
        N: t,
        detail: e
    };
};

THREE.fO.prototype = Object.create(THREE.cO.prototype);

THREE.fO.prototype.constructor = THREE.fO;

THREE.gO = function(t, e) {
    var n = [ 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1 ];
    var i = [ 2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1 ];
    THREE.cO.call(this, n, i, t, e);
    this.type = "TetrahedronGeometry";
    this.Bs = {
        N: t,
        detail: e
    };
};

THREE.gO.prototype = Object.create(THREE.cO.prototype);

THREE.gO.prototype.constructor = THREE.gO;

THREE.hO = function(t, e, n) {
    THREE.An.call(this);
    this.type = "ParametricGeometry";
    this.Bs = {
        ec: t,
        iO: e,
        jO: n
    };
    var i = this.Bn;
    var r = this.Wr;
    var a = this.Xr[0];
    var s, o, f;
    var u, h;
    var c = e + 1;
    for (s = 0; s <= n; s++) {
        h = s / n;
        for (o = 0; o <= e; o++) {
            u = o / e;
            f = t(u, h);
            i.push(f);
        }
    }
    var l, d, v, p;
    var E, g, m, T;
    for (s = 0; s < n; s++) {
        for (o = 0; o < e; o++) {
            l = s * c + o;
            d = s * c + o + 1;
            v = (s + 1) * c + o + 1;
            p = (s + 1) * c + o;
            E = new THREE.fa(o / e, s / n);
            g = new THREE.fa((o + 1) / e, s / n);
            m = new THREE.fa((o + 1) / e, (s + 1) / n);
            T = new THREE.fa(o / e, (s + 1) / n);
            r.push(new THREE.mr(l, d, p));
            a.push([ E, g, T ]);
            r.push(new THREE.mr(d, v, p));
            a.push([ g.clone(), m, T.clone() ]);
        }
    }
    this.ps();
    this.qs();
};

THREE.hO.prototype = Object.create(THREE.An.prototype);

THREE.hO.prototype.constructor = THREE.hO;

THREE.kO = function(t) {
    THREE.Cn.call(this);
    var e = [ 0, 0 ], n = {};
    function i(t, e) {
        return t - e;
    }
    var r = [ "a", "b", "c" ];
    if (t instanceof THREE.An) {
        var a = t.Bn;
        var s = t.Wr;
        var o = 0;
        var f = new Uint32Array(6 * s.length);
        for (var u = 0, h = s.length; u < h; u++) {
            var c = s[u];
            for (var l = 0; l < 3; l++) {
                e[0] = c[r[l]];
                e[1] = c[r[(l + 1) % 3]];
                e.sort(i);
                var d = e.toString();
                if (n[d] === undefined) {
                    f[2 * o] = e[0];
                    f[2 * o + 1] = e[1];
                    n[d] = true;
                    o++;
                }
            }
        }
        var v = new Float32Array(o * 2 * 3);
        for (var u = 0, h = o; u < h; u++) {
            for (var l = 0; l < 2; l++) {
                var p = a[f[2 * u + l]];
                var E = 6 * u + 3 * l;
                v[E + 0] = p.x;
                v[E + 1] = p.y;
                v[E + 2] = p.z;
            }
        }
        this.Os("position", new THREE.qr(v, 3));
    } else if (t instanceof THREE.Cn) {
        if (t.index !== null) {
            var g = t.index.dc;
            var a = t.attributes.position;
            var m = t.os;
            var o = 0;
            if (m.length === 0) {
                t.Ps(0, g.length);
            }
            var f = new Uint32Array(2 * g.length);
            for (var T = 0, y = m.length; T < y; ++T) {
                var R = m[T];
                var w = R.start;
                var x = R.count;
                for (var u = w, b = w + x; u < b; u += 3) {
                    for (var l = 0; l < 3; l++) {
                        e[0] = g[u + l];
                        e[1] = g[u + (l + 1) % 3];
                        e.sort(i);
                        var d = e.toString();
                        if (n[d] === undefined) {
                            f[2 * o] = e[0];
                            f[2 * o + 1] = e[1];
                            n[d] = true;
                            o++;
                        }
                    }
                }
            }
            var v = new Float32Array(o * 2 * 3);
            for (var u = 0, h = o; u < h; u++) {
                for (var l = 0; l < 2; l++) {
                    var E = 6 * u + 3 * l;
                    var H = f[2 * u + l];
                    v[E + 0] = a.On(H);
                    v[E + 1] = a.Pn(H);
                    v[E + 2] = a.Qn(H);
                }
            }
            this.Os("position", new THREE.qr(v, 3));
        } else {
            var a = t.attributes.position.dc;
            var o = a.length / 3;
            var A = o / 3;
            var v = new Float32Array(o * 2 * 3);
            for (var u = 0, h = A; u < h; u++) {
                for (var l = 0; l < 3; l++) {
                    var E = 18 * u + 6 * l;
                    var M = 9 * u + 3 * l;
                    v[E + 0] = a[M];
                    v[E + 1] = a[M + 1];
                    v[E + 2] = a[M + 2];
                    var H = 9 * u + 3 * ((l + 1) % 3);
                    v[E + 3] = a[H];
                    v[E + 4] = a[H + 1];
                    v[E + 5] = a[H + 2];
                }
            }
            this.Os("position", new THREE.qr(v, 3));
        }
    }
};

THREE.kO.prototype = Object.create(THREE.Cn.prototype);

THREE.kO.prototype.constructor = THREE.kO;

THREE.lO = function(t) {
    t = t || 1;
    var e = new Float32Array([ 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t ]);
    var n = new Float32Array([ 1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1 ]);
    var i = new THREE.Cn();
    i.Os("position", new THREE.qr(e, 3));
    i.Os("color", new THREE.qr(n, 3));
    var r = new THREE.zB({
        or: THREE.xg
    });
    THREE.AC.call(this, i, r);
};

THREE.lO.prototype = Object.create(THREE.AC.prototype);

THREE.lO.prototype.constructor = THREE.lO;

THREE.mO = function() {
    var t = new THREE.Cn();
    t.Os("position", new THREE.Nr([ 0, 0, 0, 0, 1, 0 ], 3));
    var e = new THREE.oN(0, .5, 1, 5, 1);
    e.translate(0, -.5, 0);
    return function n(i, r, a, s, o, f) {
        THREE.qq.call(this);
        if (s === undefined) s = 16776960;
        if (a === undefined) a = 1;
        if (o === undefined) o = .2 * a;
        if (f === undefined) f = .2 * o;
        this.position.xi(r);
        this.line = new THREE.eq(t, new THREE.zB({
            color: s
        }));
        this.line.zq = false;
        this.add(this.line);
        this.nO = new THREE.dq(e, new THREE.GB({
            color: s
        }));
        this.nO.zq = false;
        this.add(this.nO);
        this.oO(i);
        this.mm(a, o, f);
    };
}();

THREE.mO.prototype = Object.create(THREE.qq.prototype);

THREE.mO.prototype.constructor = THREE.mO;

THREE.mO.prototype.oO = function() {
    var t = new THREE.K();
    var e;
    return function n(i) {
        if (i.y > .99999) {
            this.wq.set(0, 0, 0, 1);
        } else if (i.y < -.99999) {
            this.wq.set(1, 0, 0, 0);
        } else {
            t.set(i.z, 0, -i.x).normalize();
            e = Math.acos(i.y);
            this.wq.Ll(t, e);
        }
    };
}();

THREE.mO.prototype.mm = function(t, e, n) {
    if (e === undefined) e = .2 * t;
    if (n === undefined) n = .2 * e;
    this.line.scale.set(1, Math.max(0, t - e), 1);
    this.line.gr();
    this.nO.scale.set(n, e, n);
    this.nO.position.y = t;
    this.nO.gr();
};

THREE.mO.prototype.setColor = function(t) {
    this.line.k.color.xi(t);
    this.nO.k.color.xi(t);
};

THREE.pO = function(t, e) {
    if (e === undefined) e = 16776960;
    var n = new Uint16Array([ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ]);
    var i = new Float32Array(8 * 3);
    var r = new THREE.Cn();
    r.Ns(new THREE.qr(n, 1));
    r.Os("position", new THREE.qr(i, 3));
    THREE.AC.call(this, r, new THREE.zB({
        color: e
    }));
    if (t !== undefined) {
        this.update(t);
    }
};

THREE.pO.prototype = Object.create(THREE.AC.prototype);

THREE.pO.prototype.constructor = THREE.pO;

THREE.pO.prototype.update = function() {
    var t = new THREE.vn();
    return function e(n) {
        if (n instanceof THREE.vn) {
            t.xi(n);
        } else {
            t.xn(n);
        }
        if (t.Ue()) return;
        var i = t.min;
        var r = t.max;
        var a = this.j.attributes.position;
        var s = a.dc;
        s[0] = r.x;
        s[1] = r.y;
        s[2] = r.z;
        s[3] = i.x;
        s[4] = r.y;
        s[5] = r.z;
        s[6] = i.x;
        s[7] = i.y;
        s[8] = r.z;
        s[9] = r.x;
        s[10] = i.y;
        s[11] = r.z;
        s[12] = r.x;
        s[13] = r.y;
        s[14] = i.z;
        s[15] = i.x;
        s[16] = r.y;
        s[17] = i.z;
        s[18] = i.x;
        s[19] = i.y;
        s[20] = i.z;
        s[21] = r.x;
        s[22] = i.y;
        s[23] = i.z;
        a.ur = true;
        this.j.Io();
    };
}();

THREE.qO = function(t, e) {
    var n = e !== undefined ? e : 8947848;
    this.object = t;
    this.rO = new THREE.vn();
    THREE.dq.call(this, new THREE.kN(1, 1, 1), new THREE.GB({
        color: n,
        fA: true
    }));
};

THREE.qO.prototype = Object.create(THREE.dq.prototype);

THREE.qO.prototype.constructor = THREE.qO;

THREE.qO.prototype.update = function() {
    this.rO.xn(this.object);
    this.rO.size(this.scale);
    this.rO.dn(this.position);
};

THREE.sO = function(t) {
    var e = new THREE.An();
    var n = new THREE.zB({
        color: 16777215,
        or: THREE.wg
    });
    var i = {};
    var r = 16755200;
    var a = 16711680;
    var s = 43775;
    var o = 16777215;
    var f = 3355443;
    u("n1", "n2", r);
    u("n2", "n4", r);
    u("n4", "n3", r);
    u("n3", "n1", r);
    u("f1", "f2", r);
    u("f2", "f4", r);
    u("f4", "f3", r);
    u("f3", "f1", r);
    u("n1", "f1", r);
    u("n2", "f2", r);
    u("n3", "f3", r);
    u("n4", "f4", r);
    u("p", "n1", a);
    u("p", "n2", a);
    u("p", "n3", a);
    u("p", "n4", a);
    u("u1", "u2", s);
    u("u2", "u3", s);
    u("u3", "u1", s);
    u("c", "t", o);
    u("p", "c", f);
    u("cn1", "cn2", f);
    u("cn3", "cn4", f);
    u("cf1", "cf2", f);
    u("cf3", "cf4", f);
    function u(t, e, n) {
        h(t, n);
        h(e, n);
    }
    function h(t, n) {
        e.Bn.push(new THREE.K());
        e.Vr.push(new THREE.T(n));
        if (i[t] === undefined) {
            i[t] = [];
        }
        i[t].push(e.Bn.length - 1);
    }
    THREE.AC.call(this, e, n);
    this.Wx = t;
    if (this.Wx.zx) this.Wx.zx();
    this.matrix = t.Em;
    this.zq = false;
    this.tO = i;
    this.update();
};

THREE.sO.prototype = Object.create(THREE.AC.prototype);

THREE.sO.prototype.constructor = THREE.sO;

THREE.sO.prototype.update = function() {
    var t, e;
    var n = new THREE.K();
    var i = new THREE.mx();
    function r(r, a, s, o) {
        n.set(a, s, o).Fm(i);
        var f = e[r];
        if (f !== undefined) {
            for (var u = 0, h = f.length; u < h; u++) {
                t.Bn[f[u]].xi(n);
            }
        }
    }
    return function n() {
        t = this.j;
        e = this.tO;
        var a = 1, s = 1;
        i.Cm.xi(this.Wx.Cm);
        r("c", 0, 0, -1);
        r("t", 0, 0, 1);
        r("n1", -a, -s, -1);
        r("n2", a, -s, -1);
        r("n3", -a, s, -1);
        r("n4", a, s, -1);
        r("f1", -a, -s, 1);
        r("f2", a, -s, 1);
        r("f3", -a, s, 1);
        r("f4", a, s, 1);
        r("u1", a * .7, s * 1.1, -1);
        r("u2", -a * .7, s * 1.1, -1);
        r("u3", 0, s * 2, -1);
        r("cf1", -a, 0, 1);
        r("cf2", a, 0, 1);
        r("cf3", 0, -s, 1);
        r("cf4", 0, s, 1);
        r("cn1", -a, 0, -1);
        r("cn2", a, 0, -1);
        r("cn3", 0, -s, -1);
        r("cn4", 0, s, -1);
        t.ds = true;
    };
}();

THREE.uO = function(t, e) {
    THREE.qq.call(this);
    this.vO = t;
    this.vO.yn();
    this.matrix = t.Em;
    this.zq = false;
    if (e === undefined) e = 1;
    var n = new THREE.Cn();
    n.Os("position", new THREE.Nr([ -e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0 ], 3));
    var i = new THREE.zB({
        kB: false
    });
    this.add(new THREE.eq(n, i));
    n = new THREE.Cn();
    n.Os("position", new THREE.Nr([ 0, 0, 0, 0, 0, 1 ], 3));
    this.add(new THREE.eq(n, i));
    this.update();
};

THREE.uO.prototype = Object.create(THREE.qq.prototype);

THREE.uO.prototype.constructor = THREE.uO;

THREE.uO.prototype.Es = function() {
    var t = this.children[0];
    var e = this.children[1];
    t.j.Es();
    t.k.Es();
    e.j.Es();
    e.k.Es();
};

THREE.uO.prototype.update = function() {
    var t = new THREE.K();
    var e = new THREE.K();
    var n = new THREE.K();
    return function i() {
        t.Pm(this.vO.Em);
        e.Pm(this.vO.target.Em);
        n.bm(e, t);
        var r = this.children[0];
        var a = this.children[1];
        r.ao(n);
        r.k.color.xi(this.vO.color).Ri(this.vO.Rx);
        a.ao(n);
        a.scale.z = n.length();
    };
}();

THREE.wO = function(t, e, n) {
    var i = e !== undefined ? e : 16777215;
    THREE.AC.call(this, new THREE.sN(t.j, n), new THREE.zB({
        color: i
    }));
    this.matrix = t.Em;
    this.zq = false;
};

THREE.wO.prototype = Object.create(THREE.AC.prototype);

THREE.wO.prototype.constructor = THREE.wO;

THREE.xO = function(t, e, n, i) {
    this.object = t;
    this.size = e !== undefined ? e : 1;
    var r = n !== undefined ? n : 16776960;
    var a = i !== undefined ? i : 1;
    var s = 0;
    var o = this.object.j;
    if (o instanceof THREE.An) {
        s = o.Wr.length;
    } else {
        console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
    }
    var f = new THREE.Cn();
    var u = new THREE.Nr(s * 2 * 3, 3);
    f.Os("position", u);
    THREE.AC.call(this, f, new THREE.zB({
        color: r,
        AB: a
    }));
    this.zq = false;
    this.update();
};

THREE.xO.prototype = Object.create(THREE.AC.prototype);

THREE.xO.prototype.constructor = THREE.xO;

THREE.xO.prototype.update = function() {
    var t = new THREE.K();
    var e = new THREE.K();
    var n = new THREE.Kn();
    return function i() {
        this.object.yn(true);
        n.Vn(this.object.Em);
        var r = this.object.Em;
        var a = this.j.attributes.position;
        var s = this.object.j;
        var o = s.Bn;
        var f = s.Wr;
        var u = 0;
        for (var h = 0, c = f.length; h < c; h++) {
            var l = f[h];
            var d = l.Hn;
            t.xi(o[l.a]).add(o[l.b]).add(o[l.c]).em(3).xm(r);
            e.xi(d).wm(n).normalize().Ri(this.size).add(t);
            a.Rn(u, t.x, t.y, t.z);
            u = u + 1;
            a.Rn(u, e.x, e.y, e.z);
            u = u + 1;
        }
        a.ur = true;
        return this;
    };
}();

THREE.yO = function(t, e, n, i) {
    e = e || 1;
    n = new THREE.T(n !== undefined ? n : 4473924);
    i = new THREE.T(i !== undefined ? i : 8947848);
    var r = e / 2;
    var a = t * 2 / e;
    var s = [], o = [];
    for (var f = 0, u = 0, h = -t; f <= e; f++, h += a) {
        s.push(-t, 0, h, t, 0, h);
        s.push(h, 0, -t, h, 0, t);
        var c = f === r ? n : i;
        c.toArray(o, u);
        u += 3;
        c.toArray(o, u);
        u += 3;
        c.toArray(o, u);
        u += 3;
        c.toArray(o, u);
        u += 3;
    }
    var l = new THREE.Cn();
    l.Os("position", new THREE.Nr(s, 3));
    l.Os("color", new THREE.Nr(o, 3));
    var d = new THREE.zB({
        or: THREE.xg
    });
    THREE.AC.call(this, l, d);
};

THREE.yO.prototype = Object.create(THREE.AC.prototype);

THREE.yO.prototype.constructor = THREE.yO;

THREE.yO.prototype.zO = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};

THREE.AO = function(t, e) {
    THREE.qq.call(this);
    this.vO = t;
    this.vO.yn();
    this.matrix = t.Em;
    this.zq = false;
    this.Vr = [ new THREE.T(), new THREE.T() ];
    var n = new THREE.TN(e, 4, 2);
    n.Oq(-Math.PI / 2);
    for (var i = 0, r = 8; i < r; i++) {
        n.Wr[i].color = this.Vr[i < 4 ? 0 : 1];
    }
    var a = new THREE.GB({
        or: THREE.wg,
        fA: true
    });
    this.BO = new THREE.dq(n, a);
    this.add(this.BO);
    this.update();
};

THREE.AO.prototype = Object.create(THREE.qq.prototype);

THREE.AO.prototype.constructor = THREE.AO;

THREE.AO.prototype.Es = function() {
    this.BO.j.Es();
    this.BO.k.Es();
};

THREE.AO.prototype.update = function() {
    var t = new THREE.K();
    return function e() {
        this.Vr[0].xi(this.vO.color).Ri(this.vO.Rx);
        this.Vr[1].xi(this.vO.Sx).Ri(this.vO.Rx);
        this.BO.ao(t.Pm(this.vO.Em).nd());
        this.BO.j.gs = true;
    };
}();

THREE.CO = function(t, e) {
    this.vO = t;
    this.vO.yn();
    var n = new THREE.UN(e, 4, 2);
    var i = new THREE.GB({
        fA: true,
        kB: false
    });
    i.color.xi(this.vO.color).Ri(this.vO.Rx);
    THREE.dq.call(this, n, i);
    this.matrix = this.vO.Em;
    this.zq = false;
};

THREE.CO.prototype = Object.create(THREE.dq.prototype);

THREE.CO.prototype.constructor = THREE.CO;

THREE.CO.prototype.Es = function() {
    this.j.Es();
    this.k.Es();
};

THREE.CO.prototype.update = function() {
    this.k.color.xi(this.vO.color).Ri(this.vO.Rx);
};

THREE.DO = function(t) {
    this.gw = this.EO(t);
    var e = new THREE.An();
    for (var n = 0; n < this.gw.length; n++) {
        var i = this.gw[n];
        if (i.parent instanceof THREE.JC) {
            e.Bn.push(new THREE.K());
            e.Bn.push(new THREE.K());
            e.Vr.push(new THREE.T(0, 0, 1));
            e.Vr.push(new THREE.T(0, 1, 0));
        }
    }
    e.rr = true;
    var r = new THREE.zB({
        or: THREE.xg,
        cA: false,
        dA: false,
        D: true
    });
    THREE.AC.call(this, e, r);
    this.root = t;
    this.matrix = t.Em;
    this.zq = false;
    this.update();
};

THREE.DO.prototype = Object.create(THREE.AC.prototype);

THREE.DO.prototype.constructor = THREE.DO;

THREE.DO.prototype.EO = function(t) {
    var e = [];
    if (t instanceof THREE.JC) {
        e.push(t);
    }
    for (var n = 0; n < t.children.length; n++) {
        e.push.apply(e, this.EO(t.children[n]));
    }
    return e;
};

THREE.DO.prototype.update = function() {
    var t = this.j;
    var e = new THREE.Am().Dm(this.root.Em);
    var n = new THREE.Am();
    var i = 0;
    for (var r = 0; r < this.gw.length; r++) {
        var a = this.gw[r];
        if (a.parent instanceof THREE.JC) {
            n.Bm(e, a.Em);
            t.Bn[i].Pm(n);
            n.Bm(e, a.parent.Em);
            t.Bn[i + 1].Pm(n);
            i += 2;
        }
    }
    t.ds = true;
    t.Io();
};

THREE.FO = function(t) {
    THREE.qq.call(this);
    this.vO = t;
    this.vO.yn();
    this.matrix = t.Em;
    this.zq = false;
    var e = new THREE.Cn();
    var n = [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1 ];
    for (var i = 0, r = 1, a = 32; i < a; i++, r++) {
        var s = i / a * Math.PI * 2;
        var o = r / a * Math.PI * 2;
        n.push(Math.cos(s), Math.sin(s), 1, Math.cos(o), Math.sin(o), 1);
    }
    e.Os("position", new THREE.Nr(n, 3));
    var f = new THREE.zB({
        kB: false
    });
    this.nO = new THREE.AC(e, f);
    this.add(this.nO);
    this.update();
};

THREE.FO.prototype = Object.create(THREE.qq.prototype);

THREE.FO.prototype.constructor = THREE.FO;

THREE.FO.prototype.Es = function() {
    this.nO.j.Es();
    this.nO.k.Es();
};

THREE.FO.prototype.update = function() {
    var t = new THREE.K();
    var e = new THREE.K();
    return function n() {
        var i = this.vO.fn ? this.vO.fn : 1e3;
        var r = i * Math.tan(this.vO.angle);
        this.nO.scale.set(r, r, i);
        t.Pm(this.vO.Em);
        e.Pm(this.vO.target.Em);
        this.nO.ao(e.sub(t));
        this.nO.k.color.xi(this.vO.color).Ri(this.vO.Rx);
    };
}();

THREE.GO = function(t, e, n, i) {
    this.object = t;
    this.size = e !== undefined ? e : 1;
    var r = n !== undefined ? n : 16711680;
    var a = i !== undefined ? i : 1;
    var s = 0;
    var o = this.object.j;
    if (o instanceof THREE.An) {
        s = o.Wr.length * 3;
    } else if (o instanceof THREE.Cn) {
        s = o.attributes.Hn.count;
    }
    var f = new THREE.Cn();
    var u = new THREE.Nr(s * 2 * 3, 3);
    f.Os("position", u);
    THREE.AC.call(this, f, new THREE.zB({
        color: r,
        AB: a
    }));
    this.zq = false;
    this.update();
};

THREE.GO.prototype = Object.create(THREE.AC.prototype);

THREE.GO.prototype.constructor = THREE.GO;

THREE.GO.prototype.update = function() {
    var t = new THREE.K();
    var e = new THREE.K();
    var n = new THREE.Kn();
    return function i() {
        var r = [ "a", "b", "c" ];
        this.object.yn(true);
        n.Vn(this.object.Em);
        var a = this.object.Em;
        var s = this.j.attributes.position;
        var o = this.object.j;
        if (o instanceof THREE.An) {
            var f = o.Bn;
            var u = o.Wr;
            var h = 0;
            for (var c = 0, l = u.length; c < l; c++) {
                var d = u[c];
                for (var v = 0, p = d.nr.length; v < p; v++) {
                    var E = f[d[r[v]]];
                    var g = d.nr[v];
                    t.xi(E).xm(a);
                    e.xi(g).wm(n).normalize().Ri(this.size).add(t);
                    s.Rn(h, t.x, t.y, t.z);
                    h = h + 1;
                    s.Rn(h, e.x, e.y, e.z);
                    h = h + 1;
                }
            }
        } else if (o instanceof THREE.Cn) {
            var m = o.attributes.position;
            var T = o.attributes.Hn;
            var h = 0;
            for (var v = 0, p = m.count; v < p; v++) {
                t.set(m.On(v), m.Pn(v), m.Qn(v)).xm(a);
                e.set(T.On(v), T.Pn(v), T.Qn(v));
                e.wm(n).normalize().Ri(this.size).add(t);
                s.Rn(h, t.x, t.y, t.z);
                h = h + 1;
                s.Rn(h, e.x, e.y, e.z);
                h = h + 1;
            }
        }
        s.ur = true;
        return this;
    };
}();

THREE.HO = function(t, e) {
    var n = e !== undefined ? e : 16777215;
    THREE.AC.call(this, new THREE.kO(t.j), new THREE.zB({
        color: n
    }));
    this.matrix = t.Em;
    this.zq = false;
};

THREE.HO.prototype = Object.create(THREE.AC.prototype);

THREE.HO.prototype.constructor = THREE.HO;

THREE.NH = function(t) {
    THREE.qq.call(this);
    this.k = t;
    this.xx = function(t) {};
};

THREE.NH.prototype = Object.create(THREE.qq.prototype);

THREE.NH.prototype.constructor = THREE.NH;

THREE.IO = function(t, e) {
    THREE.dq.call(this, t, e);
    this.JO = {};
    this.KO = [];
    var n = this.j.Yr.length;
    var i = "__default";
    var r = 0;
    var a = n - 1;
    var s = n / 1;
    this.LO(i, r, a, s);
    this.MO(i, 1);
};

THREE.IO.prototype = Object.create(THREE.dq.prototype);

THREE.IO.prototype.constructor = THREE.IO;

THREE.IO.prototype.LO = function(t, e, n, i) {
    var r = {
        start: e,
        end: n,
        length: n - e + 1,
        lu: i,
        duration: (n - e) / i,
        NO: 0,
        OO: 0,
        active: false,
        time: 0,
        direction: 1,
        weight: 1,
        PO: false,
        QO: false
    };
    this.JO[t] = r;
    this.KO.push(r);
};

THREE.IO.prototype.RO = function(t) {
    var e = /([a-z]+)_?(\d+)/i;
    var n, i = {};
    var r = this.j;
    for (var a = 0, s = r.Yr.length; a < s; a++) {
        var o = r.Yr[a];
        var f = o.name.match(e);
        if (f && f.length > 1) {
            var u = f[1];
            if (!i[u]) i[u] = {
                start: Infinity,
                end: -Infinity
            };
            var h = i[u];
            if (a < h.start) h.start = a;
            if (a > h.end) h.end = a;
            if (!n) n = u;
        }
    }
    for (var u in i) {
        var h = i[u];
        this.LO(u, h.start, h.end, t);
    }
    this.SO = n;
};

THREE.IO.prototype.TO = function(t) {
    var e = this.JO[t];
    if (e) {
        e.direction = 1;
        e.PO = false;
    }
};

THREE.IO.prototype.UO = function(t) {
    var e = this.JO[t];
    if (e) {
        e.direction = -1;
        e.PO = true;
    }
};

THREE.IO.prototype.VO = function(t, e) {
    var n = this.JO[t];
    if (n) {
        n.lu = e;
        n.duration = (n.end - n.start) / n.lu;
    }
};

THREE.IO.prototype.WO = function(t, e) {
    var n = this.JO[t];
    if (n) {
        n.duration = e;
        n.lu = (n.end - n.start) / n.duration;
    }
};

THREE.IO.prototype.MO = function(t, e) {
    var n = this.JO[t];
    if (n) {
        n.weight = e;
    }
};

THREE.IO.prototype.XO = function(t, e) {
    var n = this.JO[t];
    if (n) {
        n.time = e;
    }
};

THREE.IO.prototype.YO = function(t) {
    var e = 0;
    var n = this.JO[t];
    if (n) {
        e = n.time;
    }
    return e;
};

THREE.IO.prototype.ZO = function(t) {
    var e = -1;
    var n = this.JO[t];
    if (n) {
        e = n.duration;
    }
    return e;
};

THREE.IO.prototype.$O = function(t) {
    var e = this.JO[t];
    if (e) {
        e.time = 0;
        e.active = true;
    } else {
        console.warn("THREE.MorphBlendMesh: animation[" + t + "] undefined in .playAnimation()");
    }
};

THREE.IO.prototype._O = function(t) {
    var e = this.JO[t];
    if (e) {
        e.active = false;
    }
};

THREE.IO.prototype.update = function(t) {
    for (var e = 0, n = this.KO.length; e < n; e++) {
        var i = this.KO[e];
        if (!i.active) continue;
        var r = i.duration / i.length;
        i.time += i.direction * t;
        if (i.QO) {
            if (i.time > i.duration || i.time < 0) {
                i.direction *= -1;
                if (i.time > i.duration) {
                    i.time = i.duration;
                    i.PO = true;
                }
                if (i.time < 0) {
                    i.time = 0;
                    i.PO = false;
                }
            }
        } else {
            i.time = i.time % i.duration;
            if (i.time < 0) i.time += i.duration;
        }
        var a = i.start + THREE.Math.ue(Math.floor(i.time / r), 0, i.length - 1);
        var s = i.weight;
        if (a !== i.OO) {
            this.GC[i.NO] = 0;
            this.GC[i.OO] = 1 * s;
            this.GC[a] = 0;
            i.NO = i.OO;
            i.OO = a;
        }
        var o = i.time % r / r;
        if (i.PO) o = 1 - o;
        if (i.OO !== i.NO) {
            this.GC[i.OO] = o * s;
            this.GC[i.NO] = (1 - o) * s;
        } else {
            this.GC[i.OO] = s;
        }
    }
};

(function(t, e) {
    if (typeof define === "function" && define.bg) {
        define([], e);
    } else if (typeof module === "object" && module.Lb) {
        module.Lb = e();
    } else {
        t.aP = e();
    }
})(this, function() {
    function t(t) {
        var e = new Date(t.getFullYear(), 0, 1);
        var n = new Date(t.getFullYear(), 6, 1);
        return Math.max(e.getTimezoneOffset(), n.getTimezoneOffset());
    }
    function e(e) {
        return e.getTimezoneOffset() < t(e);
    }
    return function t() {
        var n = new Date();
        var i = n.getTimezoneOffset() / 60;
        var r;
        if (e(n)) {
            i++;
        }
        i = Math.round(0 - i);
        switch (i) {
          case -12:
          case -11:
          case -10:
          case -9:
          case -8:
            r = "fremont";
            break;

          case -7:
          case -6:
            r = "dallas";
            break;

          case -5:
          case -4:
          case -3:
            r = "newark";
            break;

          case -2:
          case -1:
          case 0:
            r = "london";
            break;

          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            r = "frankfurt";
            break;

          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
            r = "singapore";
            break;

          default:
            r = "newark";
        }
        return r;
    };
});

(function(t) {
    if (typeof exports === "object" && typeof module !== "undefined") {
        module.Lb = t();
    } else if (typeof define === "function" && define.bg) {
        define([], t);
    } else {
        var e;
        if (typeof window !== "undefined") {
            e = window;
        } else if (typeof global !== "undefined") {
            e = global;
        } else if (typeof self !== "undefined") {
            e = self;
        } else {
            e = this;
        }
        e.bP = t();
    }
})(function() {
    var t, e, n;
    return function t(e, n, i) {
        function r(s, o) {
            if (!n[s]) {
                if (!e[s]) {
                    var f = typeof require == "function" && require;
                    if (!o && f) return f(s, !0);
                    if (a) return a(s, !0);
                    var u = new Error("Cannot find module '" + s + "'");
                    throw u.code = "MODULE_NOT_FOUND", u;
                }
                var h = n[s] = {
                    Lb: {}
                };
                e[s][0].call(h.Lb, function(t) {
                    var n = e[s][1][t];
                    return r(n ? n : t);
                }, h, h.Lb, t, e, n, i);
            }
            return n[s].Lb;
        }
        var a = typeof require == "function" && require;
        for (var s = 0; s < i.length; s++) r(i[s]);
        return r;
    }({
        1: [ function(t, e, n) {
            n = e.Lb = i;
            n.cP = r;
            function i(t, e, n, i) {
                return JSON.stringify(t, r(e, i), n);
            }
            function r(t, e) {
                var n = [], i = [];
                if (e == null) e = function(t, e) {
                    if (n[0] === e) return "[Circular ~]";
                    return "[Circular ~." + i.slice(0, n.indexOf(e)).join(".") + "]";
                };
                return function(r, a) {
                    if (n.length > 0) {
                        var s = n.indexOf(this);
                        ~s ? n.splice(s + 1) : n.push(this);
                        ~s ? i.splice(s, Infinity, r) : i.push(r);
                        if (~n.indexOf(a)) a = e.call(this, r, a);
                    } else n.push(a);
                    return t == null ? a : t.call(this, r, a);
                };
            }
        }, {} ],
        2: [ function(t, e, n) {
            "use strict";
            function i(t) {
                this.name = "RavenConfigError";
                this.message = t;
            }
            i.prototype = new Error();
            i.prototype.constructor = i;
            e.Lb = i;
        }, {} ],
        3: [ function(t, e, n) {
            "use strict";
            var i = function(t, e, n) {
                var i = t[e];
                var r = t;
                if (!(e in t)) {
                    return;
                }
                var a = e === "warn" ? "warning" : e;
                t[e] = function() {
                    var t = [].slice.call(arguments);
                    var e = "" + t.join(" ");
                    var s = {
                        level: a,
                        dP: "console",
                        eP: {
                            arguments: t
                        }
                    };
                    n && n(e, s);
                    if (i) {
                        Function.prototype.apply.call(i, r, t);
                    }
                };
            };
            e.Lb = {
                fP: i
            };
        }, {} ],
        4: [ function(t, e, n) {
            "use strict";
            var i = t(7);
            var r = t(2);
            var a = t(6);
            var s = t(1);
            var o = a.Xe;
            var f = a.kf;
            var u = a.We;
            var h = a.gP;
            var c = a.hP;
            var l = a.iP;
            var d = a.Zf;
            var v = a.jP;
            var p = a.truncate;
            var E = a.kP;
            var g = a.lP;
            var m = a.mP;
            var T = a.nP;
            var y = a.hf;
            var R = a.fill;
            var w = t(3).fP;
            var x = "source protocol user pass host port path".split(" "), b = /^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/;
            function H() {
                return +new Date();
            }
            function A() {
                this.oP = !!(typeof JSON === "object" && JSON.stringify);
                this.pP = typeof document !== "undefined";
                this.qP = null;
                this.rP = null;
                this.sP = null;
                this.tP = null;
                this.uP = null;
                this.vP = {};
                this.wP = {
                    dP: "javascript",
                    xP: [],
                    yP: [],
                    zP: [],
                    AP: [],
                    crossOrigin: "anonymous",
                    BP: true,
                    CP: 0,
                    stackTraceLimit: 50,
                    DP: true
                };
                this.EP = 0;
                this.FP = false;
                this.GP = Error.stackTraceLimit;
                this.HP = window.console || {};
                this.IP = {};
                this.JP = [];
                this.tt = H();
                this.KP = [];
                this.LP = [];
                this.MP = null;
                this.NP;
                this.OP = window.location;
                this.PP = this.OP && this.OP.href;
                for (var t in this.HP) {
                    this.IP[t] = this.HP[t];
                }
            }
            A.prototype = {
                VERSION: "3.5.1",
                debug: false,
                QP: i,
                RP: function(t, e) {
                    var n = this;
                    if (this.sP) {
                        this.SP("error", "Error: Raven has already been configured");
                        return this;
                    }
                    if (!t) return this;
                    if (e) {
                        d(e, function(t, e) {
                            if (t === "tags" || t === "extra") {
                                n.vP[t] = e;
                            } else {
                                n.wP[t] = e;
                            }
                        });
                    }
                    var r = this.TP(t), a = r.path.lastIndexOf("/"), s = r.path.substr(1, a);
                    this.UP = t;
                    this.wP.xP.push(/^Script error\.?$/);
                    this.wP.xP.push(/^Javascript error: Script error\.? on line 0$/);
                    this.wP.xP = l(this.wP.xP);
                    this.wP.yP = this.wP.yP.length ? l(this.wP.yP) : false;
                    this.wP.zP = this.wP.zP.length ? l(this.wP.zP) : false;
                    this.wP.AP = l(this.wP.AP);
                    this.wP.VP = Math.max(0, Math.min(this.wP.VP || 100, 100));
                    var o = {
                        WP: true,
                        console: true,
                        XP: true,
                        location: true
                    };
                    var f = this.wP.DP;
                    if ({}.toString.call(f) === "[object Object]") {
                        f = v(o, f);
                    } else if (f !== false) {
                        f = o;
                    }
                    this.wP.DP = f;
                    this.tP = r.YP;
                    this.ZP = r.$P && r.$P.substr(1);
                    this.uP = r.path.substr(a + 1);
                    this.sP = this._P(r);
                    this.aQ = this.sP + "/" + s + "api/" + this.uP + "/store/";
                    i.BP = !!this.wP.BP;
                    return this;
                },
                bQ: function() {
                    var t = this;
                    if (this.cQ() && !this.FP) {
                        i.dQ.subscribe(function() {
                            t.eQ.apply(t, arguments);
                        });
                        this.fQ();
                        if (t.wP.DP) this.gQ();
                        this.hQ();
                        this.FP = true;
                    }
                    Error.stackTraceLimit = this.wP.stackTraceLimit;
                    return this;
                },
                context: function(t, e, n) {
                    if (o(t)) {
                        n = e || [];
                        e = t;
                        t = undefined;
                    }
                    return this.wrap(t, e).apply(this, n);
                },
                wrap: function(t, e, n) {
                    var i = this;
                    if (f(e) && !o(t)) {
                        return t;
                    }
                    if (o(t)) {
                        e = t;
                        t = undefined;
                    }
                    if (!o(e)) {
                        return e;
                    }
                    try {
                        if (e.iQ) {
                            return e;
                        }
                    } catch (t) {
                        return e;
                    }
                    if (e.jQ) {
                        return e.jQ;
                    }
                    function r() {
                        var r = [], a = arguments.length, s = !t || t && t.kQ !== false;
                        if (n && o(n)) {
                            n.apply(this, arguments);
                        }
                        while (a--) r[a] = s ? i.wrap(t, arguments[a]) : arguments[a];
                        try {
                            return e.apply(this, r);
                        } catch (e) {
                            i.lQ();
                            i.mQ(e, t);
                            throw e;
                        }
                    }
                    for (var a in e) {
                        if (c(e, a)) {
                            r[a] = e[a];
                        }
                    }
                    r.prototype = e.prototype;
                    e.jQ = r;
                    r.iQ = true;
                    r.nQ = e;
                    return r;
                },
                oQ: function() {
                    i.dQ.oQ();
                    this.pQ();
                    Error.stackTraceLimit = this.GP;
                    this.FP = false;
                    return this;
                },
                mQ: function(t, e) {
                    if (!u(t)) return this.qQ(t, e);
                    this.qP = t;
                    try {
                        var n = i.rQ(t);
                        this.sQ(n, e);
                    } catch (e) {
                        if (t !== e) {
                            throw e;
                        }
                    }
                    return this;
                },
                qQ: function(t, e) {
                    if (!!this.wP.xP.test && this.wP.xP.test(t)) {
                        return;
                    }
                    this.tQ(v({
                        message: t + ""
                    }, e));
                    return this;
                },
                uQ: function(t) {
                    var e = v({
                        timestamp: H() / 1e3
                    }, t);
                    this.LP.push(e);
                    if (this.LP.length > this.wP.VP) {
                        this.LP.shift();
                    }
                },
                vQ: function(t) {
                    var e = Array.prototype.slice.call(arguments, 1);
                    this.JP.push([ t, e ]);
                    if (this.FP) {
                        this.hQ();
                    }
                    return this;
                },
                wQ: function(t) {
                    this.vP.YP = t;
                    return this;
                },
                xQ: function(t) {
                    this.yQ("extra", t);
                    return this;
                },
                zQ: function(t) {
                    this.yQ("tags", t);
                    return this;
                },
                AQ: function() {
                    this.vP = {};
                    return this;
                },
                getContext: function() {
                    return JSON.parse(s(this.vP));
                },
                BQ: function(t) {
                    this.wP.CQ = t;
                    return this;
                },
                DQ: function(t) {
                    this.wP.release = t;
                    return this;
                },
                EQ: function(t) {
                    var e = this.wP.FQ;
                    this.wP.FQ = o(t) ? function(n) {
                        return t(n, e);
                    } : t;
                    return this;
                },
                GQ: function(t) {
                    var e = this.wP.HQ;
                    this.wP.HQ = o(t) ? function(n) {
                        return t(n, e);
                    } : t;
                    return this;
                },
                IQ: function(t) {
                    this.wP.JQ = t;
                    return this;
                },
                KQ: function() {
                    return this.qP;
                },
                lastEventId: function() {
                    return this.rP;
                },
                cQ: function() {
                    if (!this.oP) return false;
                    if (!this.sP) {
                        if (!this.LQ) {
                            this.LQ = true;
                            this.SP("error", "Error: Raven has not been configured.");
                        }
                        return false;
                    }
                    return true;
                },
                MQ: function() {
                    var t = window.NQ;
                    if (t) {
                        this.RP(t.OQ, t.RP).bQ();
                    }
                },
                PQ: function(t) {
                    if (!window.document) return;
                    t = t || {};
                    var e = t.QQ || this.lastEventId();
                    if (!e) {
                        throw new r("Missing eventId");
                    }
                    var n = t.OQ || this.UP;
                    if (!n) {
                        throw new r("Missing DSN");
                    }
                    var i = encodeURIComponent;
                    var a = "";
                    a += "?eventId=" + i(e);
                    a += "&dsn=" + i(n);
                    var s = t.YP || this.vP.YP;
                    if (s) {
                        if (s.name) a += "&name=" + i(s.name);
                        if (s.email) a += "&email=" + i(s.email);
                    }
                    var o = this._P(this.TP(n));
                    var f = document.createElement("script");
                    f.async = true;
                    f.src = o + "/api/embed/error-page/" + a;
                    (document.head || document.body).appendChild(f);
                },
                lQ: function() {
                    var t = this;
                    this.EP += 1;
                    setTimeout(function() {
                        t.EP -= 1;
                    });
                },
                RQ: function(t, e) {
                    var n, i;
                    if (!this.pP) return;
                    e = e || {};
                    t = "raven" + t.substr(0, 1).toUpperCase() + t.substr(1);
                    if (document.createEvent) {
                        n = document.createEvent("HTMLEvents");
                        n.initEvent(t, true, true);
                    } else {
                        n = document.createEventObject();
                        n.SQ = t;
                    }
                    for (i in e) if (c(e, i)) {
                        n[i] = e[i];
                    }
                    if (document.createEvent) {
                        document.dispatchEvent(n);
                    } else {
                        try {
                            document.fireEvent("on" + n.SQ.toLowerCase(), n);
                        } catch (t) {}
                    }
                },
                TQ: function(t) {
                    var e = this;
                    return function(n) {
                        e.NP = null;
                        if (e.MP === n) return;
                        e.MP = n;
                        var i = n.target;
                        var r;
                        try {
                            r = m(i);
                        } catch (t) {
                            r = "<unknown>";
                        }
                        e.uQ({
                            category: "ui." + t,
                            message: r
                        });
                    };
                },
                UQ: function() {
                    var t = this, e = 1e3;
                    return function(n) {
                        var i = n.target, r = i && i.tagName;
                        if (!r || r !== "INPUT" && r !== "TEXTAREA") return;
                        var a = t.NP;
                        if (!a) {
                            t.TQ("input")(n);
                        }
                        clearTimeout(a);
                        t.NP = setTimeout(function() {
                            t.NP = null;
                        }, e);
                    };
                },
                VQ: function(t, e) {
                    var n = T(this.OP.href);
                    var i = T(e);
                    var r = T(t);
                    this.PP = e;
                    if (n.protocol === i.protocol && n.host === i.host) e = i.WQ;
                    if (n.protocol === r.protocol && n.host === r.host) t = r.WQ;
                    this.uQ({
                        category: "navigation",
                        data: {
                            XQ: e,
                            from: t
                        }
                    });
                },
                fQ: function() {
                    var t = this;
                    var e = t.KP;
                    function n(e) {
                        return function(n, i) {
                            var r = new Array(arguments.length);
                            for (var a = 0; a < r.length; ++a) {
                                r[a] = arguments[a];
                            }
                            var s = r[0];
                            if (o(s)) {
                                r[0] = t.wrap(s);
                            }
                            if (e.apply) {
                                return e.apply(this, r);
                            } else {
                                return e(r[0], r[1]);
                            }
                        };
                    }
                    var i = this.wP.DP;
                    function r(n) {
                        var r = window[n] && window[n].prototype;
                        if (r && r.hasOwnProperty && r.hasOwnProperty("addEventListener")) {
                            R(r, "addEventListener", function(e) {
                                return function(r, a, s, o) {
                                    try {
                                        if (a && a.YQ) {
                                            a.YQ = t.wrap(a.YQ);
                                        }
                                    } catch (t) {}
                                    var f;
                                    if (i && i.XP && (n === "EventTarget" || n === "Node")) {
                                        if (r === "click") {
                                            f = t.TQ(r);
                                        } else if (r === "keypress") {
                                            f = t.UQ();
                                        }
                                    }
                                    return e.call(this, r, t.wrap(a, undefined, f), s, o);
                                };
                            }, e);
                            R(r, "removeEventListener", function(t) {
                                return function(e, n, i, r) {
                                    n = n && (n.jQ ? n.jQ : n);
                                    return t.call(this, e, n, i, r);
                                };
                            }, e);
                        }
                    }
                    R(window, "setTimeout", n, e);
                    R(window, "setInterval", n, e);
                    if (window.requestAnimationFrame) {
                        R(window, "requestAnimationFrame", function(e) {
                            return function(n) {
                                return e(t.wrap(n));
                            };
                        }, e);
                    }
                    var a = [ "EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload" ];
                    for (var s = 0; s < a.length; s++) {
                        r(a[s]);
                    }
                    var f = window.ZQ || window.$Q;
                    if (f && f._Q && f._Q.aR) {
                        R(f._Q, "ready", function(e) {
                            return function(n) {
                                return e.call(this, t.wrap(n));
                            };
                        }, e);
                    }
                },
                gQ: function() {
                    var t = this;
                    var e = this.wP.DP;
                    var n = t.KP;
                    function i(e, n) {
                        if (e in n && o(n[e])) {
                            R(n, e, function(e) {
                                return t.wrap(e);
                            });
                        }
                    }
                    if (e.WP && "XMLHttpRequest" in window) {
                        var r = XMLHttpRequest.prototype;
                        R(r, "open", function(e) {
                            return function(n, i) {
                                if (y(i) && i.indexOf(t.tP) === -1) {
                                    this.bR = {
                                        method: n,
                                        url: i,
                                        cR: null
                                    };
                                }
                                return e.apply(this, arguments);
                            };
                        }, n);
                        R(r, "send", function(e) {
                            return function(n) {
                                var r = this;
                                function a() {
                                    if (r.bR && (r.readyState === 1 || r.readyState === 4)) {
                                        try {
                                            r.bR.cR = r.status;
                                        } catch (t) {}
                                        t.uQ({
                                            type: "http",
                                            category: "xhr",
                                            data: r.bR
                                        });
                                    }
                                }
                                var s = [ "onload", "onerror", "onprogress" ];
                                for (var f = 0; f < s.length; f++) {
                                    i(s[f], r);
                                }
                                if ("onreadystatechange" in r && o(r.onreadystatechange)) {
                                    R(r, "onreadystatechange", function(e) {
                                        return t.wrap(e, undefined, a);
                                    });
                                } else {
                                    r.onreadystatechange = a;
                                }
                                return e.apply(this, arguments);
                            };
                        }, n);
                    }
                    if (e.XP && this.pP) {
                        if (document.addEventListener) {
                            document.addEventListener("click", t.TQ("click"), false);
                            document.addEventListener("keypress", t.UQ(), false);
                        } else {
                            document.attachEvent("onclick", t.TQ("click"));
                            document.attachEvent("onkeypress", t.UQ());
                        }
                    }
                    var a = window.chrome;
                    var s = a && a.app && a.app.runtime;
                    var f = !s && window.history && history.pushState;
                    if (e.location && f) {
                        var u = window.onpopstate;
                        window.onpopstate = function() {
                            var e = t.OP.href;
                            t.VQ(t.PP, e);
                            if (u) {
                                return u.apply(this, arguments);
                            }
                        };
                        R(history, "pushState", function(e) {
                            return function() {
                                var n = arguments.length > 2 ? arguments[2] : undefined;
                                if (n) {
                                    t.VQ(t.PP, n + "");
                                }
                                return e.apply(this, arguments);
                            };
                        }, n);
                    }
                    if (e.console && "console" in window && console.log) {
                        var h = function(e, n) {
                            t.uQ({
                                message: e,
                                level: n.level,
                                category: "console"
                            });
                        };
                        d([ "debug", "info", "warn", "error", "log" ], function(_, t) {
                            w(console, t, h);
                        });
                    }
                },
                pQ: function() {
                    var t;
                    while (this.KP.length) {
                        t = this.KP.shift();
                        var e = t[0], n = t[1], i = t[2];
                        e[n] = i;
                    }
                },
                hQ: function() {
                    var t = this;
                    d(this.JP, function(_, e) {
                        var n = e[0];
                        var i = e[1];
                        n.apply(t, [ t ].concat(i));
                    });
                },
                TP: function(t) {
                    var e = b.exec(t), n = {}, i = 7;
                    try {
                        while (i--) n[x[i]] = e[i] || "";
                    } catch (e) {
                        throw new r("Invalid DSN: " + t);
                    }
                    if (n.$P && !this.wP.dR) {
                        throw new r("Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key");
                    }
                    return n;
                },
                _P: function(t) {
                    var e = "//" + t.host + (t.port ? ":" + t.port : "");
                    if (t.protocol) {
                        e = t.protocol + ":" + e;
                    }
                    return e;
                },
                eQ: function() {
                    if (!this.EP) {
                        this.sQ.apply(this, arguments);
                    }
                },
                sQ: function(t, e) {
                    var n = this;
                    var i = [];
                    if (t.stack && t.stack.length) {
                        d(t.stack, function(t, e) {
                            var r = n.eR(e);
                            if (r) {
                                i.push(r);
                            }
                        });
                    }
                    this.RQ("handle", {
                        fR: t,
                        options: e
                    });
                    this.gR(t.name, t.message, t.url, t.lineno, i.slice(0, this.wP.stackTraceLimit), e);
                },
                eR: function(t) {
                    if (!t.url) return;
                    var e = {
                        filename: t.url,
                        lineno: t.line,
                        colno: t.hR,
                        Fb: t.ec || "?"
                    };
                    e.iR = !(!!this.wP.AP.test && !this.wP.AP.test(e.filename) || /(Raven|TraceKit)\./.test(e["Fb"]) || /raven\.(min\.)?js$/.test(e.filename));
                    return e;
                },
                gR: function(t, e, n, i, r, a) {
                    var s;
                    if (!!this.wP.xP.test && this.wP.xP.test(e)) return;
                    e += "";
                    if (r && r.length) {
                        n = r[0].filename || n;
                        r.reverse();
                        s = {
                            frames: r
                        };
                    } else if (n) {
                        s = {
                            frames: [ {
                                filename: n,
                                lineno: i,
                                iR: true
                            } ]
                        };
                    }
                    if (!!this.wP.yP.test && this.wP.yP.test(n)) return;
                    if (!!this.wP.zP.test && !this.wP.zP.test(n)) return;
                    var o = v({
                        exception: {
                            values: [ {
                                type: t,
                                value: e,
                                stacktrace: s
                            } ]
                        },
                        jR: n
                    }, a);
                    this.tQ(o);
                },
                kR: function(t) {
                    var e = this.wP.CP;
                    if (t.message) {
                        t.message = p(t.message, e);
                    }
                    if (t.exception) {
                        var n = t.exception.values[0];
                        n.value = p(n.value, e);
                    }
                    return t;
                },
                lR: function() {
                    if (!this.pP || !document.location || !document.location.href) {
                        return;
                    }
                    var t = {
                        headers: {
                            mR: navigator.userAgent
                        }
                    };
                    t.url = document.location.href;
                    if (document.referrer) {
                        t.headers.nR = document.referrer;
                    }
                    return t;
                },
                tQ: function(t) {
                    var e = this.wP;
                    var n = {
                        zm: this.uP,
                        dP: e.dP,
                        platform: "javascript"
                    }, i = this.lR();
                    if (i) {
                        n.oR = i;
                    }
                    t = v(n, t);
                    t.tags = v(v({}, this.vP.tags), t.tags);
                    t.eP = v(v({}, this.vP.eP), t.eP);
                    t.eP["pR"] = H() - this.tt;
                    if (this.LP && this.LP.length > 0) {
                        t.qR = {
                            values: [].slice.call(this.LP, 0)
                        };
                    }
                    if (h(t.tags)) delete t.tags;
                    if (this.vP.YP) {
                        t.YP = this.vP.YP;
                    }
                    if (e.CQ) t.CQ = e.CQ;
                    if (e.release) t.release = e.release;
                    if (e.rR) t.sR = e.rR;
                    if (o(e.FQ)) {
                        t = e.FQ(t) || t;
                    }
                    if (!t || h(t)) {
                        return;
                    }
                    if (o(e.HQ) && !e.HQ(t)) {
                        return;
                    }
                    this.tR(t);
                },
                tR: function(t, e) {
                    var n = this;
                    var i = this.wP;
                    this.rP = t.uR || (t.uR = g());
                    t = this.kR(t);
                    this.SP("debug", "Raven about to send:", t);
                    if (!this.cQ()) return;
                    var r = {
                        vR: "7",
                        wR: "raven-js/" + this.VERSION,
                        xR: this.tP
                    };
                    if (this.ZP) {
                        r.yR = this.ZP;
                    }
                    var a = t.exception && t.exception.values[0];
                    this.uQ({
                        category: "sentry",
                        message: a ? (a.type ? a.type + ": " : "") + a.value : t.message,
                        uR: t.uR,
                        level: t.level || "error"
                    });
                    var s = this.aQ;
                    (i.JQ || this.zR).call(this, {
                        url: s,
                        AR: r,
                        data: t,
                        options: i,
                        BR: function i() {
                            n.RQ("success", {
                                data: t,
                                src: s
                            });
                            e && e();
                        },
                        Vz: function i(r) {
                            n.RQ("failure", {
                                data: t,
                                src: s
                            });
                            r = r || new Error("Raven send failed (no additional details provided)");
                            e && e(r);
                        }
                    });
                },
                zR: function(t) {
                    var e = new XMLHttpRequest();
                    var n = "withCredentials" in e || typeof XDomainRequest !== "undefined";
                    if (!n) return;
                    var i = t.url;
                    function r() {
                        if (e.status === 200) {
                            if (t.BR) {
                                t.BR();
                            }
                        } else if (t.Vz) {
                            t.Vz(new Error("Sentry error code: " + e.status));
                        }
                    }
                    if ("withCredentials" in e) {
                        e.onreadystatechange = function() {
                            if (e.readyState !== 4) {
                                return;
                            }
                            r();
                        };
                    } else {
                        e = new XDomainRequest();
                        i = i.replace(/^https?:/, "");
                        e.onload = r;
                    }
                    e.open("POST", i + "?" + E(t.AR));
                    e.send(s(t.data));
                },
                SP: function(t) {
                    if (this.IP[t] && this.debug) {
                        Function.prototype.apply.call(this.IP[t], this.HP, [].slice.call(arguments, 1));
                    }
                },
                yQ: function(t, e) {
                    if (f(e)) {
                        delete this.vP[t];
                    } else {
                        this.vP[t] = v(this.vP[t] || {}, e);
                    }
                }
            };
            A.prototype.CR = A.prototype.wQ;
            A.prototype.DR = A.prototype.DQ;
            e.Lb = A;
        }, {
            "1": 1,
            "2": 2,
            "3": 3,
            "6": 6,
            "7": 7
        } ],
        5: [ function(t, e, n) {
            "use strict";
            var i = t(4);
            var r = window.bP;
            var a = new i();
            a.vf = function() {
                window.bP = r;
                return a;
            };
            a.MQ();
            e.Lb = a;
        }, {
            "4": 4
        } ],
        6: [ function(t, e, n) {
            "use strict";
            var i = Object.prototype;
            function r(t) {
                return t === void 0;
            }
            function a(t) {
                return typeof t === "function";
            }
            function s(t) {
                return i.toString.call(t) === "[object String]";
            }
            function o(t) {
                return typeof t === "object" && t !== null;
            }
            function f(t) {
                for (var _ in t) return false;
                return true;
            }
            function u(t) {
                var e = i.toString.call(t);
                return o(t) && e === "[object Error]" || e === "[object Exception]" || t instanceof Error;
            }
            function h(t, e) {
                var n, i;
                if (r(t.length)) {
                    for (n in t) {
                        if (d(t, n)) {
                            e.call(null, n, t[n]);
                        }
                    }
                } else {
                    i = t.length;
                    if (i) {
                        for (n = 0; n < i; n++) {
                            e.call(null, n, t[n]);
                        }
                    }
                }
            }
            function c(t, e) {
                if (!e) {
                    return t;
                }
                h(e, function(e, n) {
                    t[e] = n;
                });
                return t;
            }
            function l(t, e) {
                return !e || t.length <= e ? t : t.substr(0, e) + "…";
            }
            function d(t, e) {
                return i.hasOwnProperty.call(t, e);
            }
            function v(t) {
                var e = [], n = 0, i = t.length, r;
                for (;n < i; n++) {
                    r = t[n];
                    if (s(r)) {
                        e.push(r.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"));
                    } else if (r && r.source) {
                        e.push(r.source);
                    }
                }
                return new RegExp(e.join("|"), "i");
            }
            function p(t) {
                var e = [];
                h(t, function(t, n) {
                    e.push(encodeURIComponent(t) + "=" + encodeURIComponent(n));
                });
                return e.join("&");
            }
            function E(t) {
                var e = t.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
                if (!e) return {};
                var n = e[6] || "";
                var i = e[8] || "";
                return {
                    protocol: e[2],
                    host: e[4],
                    path: e[5],
                    WQ: e[5] + n + i
                };
            }
            function g() {
                var t = window.crypto || window.msCrypto;
                if (!r(t) && t.getRandomValues) {
                    var e = new Uint16Array(8);
                    t.getRandomValues(e);
                    e[3] = e[3] & 4095 | 16384;
                    e[4] = e[4] & 16383 | 32768;
                    var n = function(t) {
                        var e = t.toString(16);
                        while (e.length < 4) {
                            e = "0" + e;
                        }
                        return e;
                    };
                    return n(e[0]) + n(e[1]) + n(e[2]) + n(e[3]) + n(e[4]) + n(e[5]) + n(e[6]) + n(e[7]);
                } else {
                    return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(t) {
                        var e = Math.random() * 16 | 0, n = t === "x" ? e : e & 3 | 8;
                        return n.toString(16);
                    });
                }
            }
            function m(t) {
                var e = 5, n = 80, i = [], r = 0, a = 0, s = " > ", o = s.length, f;
                while (t && r++ < e) {
                    f = T(t);
                    if (f === "html" || r > 1 && a + i.length * o + f.length >= n) {
                        break;
                    }
                    i.push(f);
                    a += f.length;
                    t = t.parentNode;
                }
                return i.reverse().join(s);
            }
            function T(t) {
                var e = [], n, i, r, a, o;
                if (!t || !t.tagName) {
                    return "";
                }
                e.push(t.tagName.toLowerCase());
                if (t.id) {
                    e.push("#" + t.id);
                }
                n = t.className;
                if (n && s(n)) {
                    i = n.split(" ");
                    for (o = 0; o < i.length; o++) {
                        e.push("." + i[o]);
                    }
                }
                var f = [ "type", "name", "title", "alt" ];
                for (o = 0; o < f.length; o++) {
                    r = f[o];
                    a = t.getAttribute(r);
                    if (a) {
                        e.push("[" + r + '="' + a + '"]');
                    }
                }
                return e.join("");
            }
            function y(t, e, n, i) {
                var r = t[e];
                t[e] = n(r);
                if (i) {
                    i.push([ t, e, r ]);
                }
            }
            e.Lb = {
                kf: r,
                Xe: a,
                hf: s,
                df: o,
                gP: f,
                We: u,
                Zf: h,
                jP: c,
                truncate: l,
                hP: d,
                iP: v,
                kP: p,
                lP: g,
                mP: m,
                ER: T,
                nP: E,
                fill: y
            };
        }, {} ],
        7: [ function(t, e, n) {
            "use strict";
            var i = t(6);
            var r = i.hP;
            var a = i.hf;
            var s = i.kf;
            var o = {
                BP: true,
                debug: false
            };
            var f = [].slice;
            var u = "?";
            var h = /^(?:Uncaught (?:exception: )?)?((?:Eval|Internal|Range|Reference|Syntax|Type|URI)Error): ?(.*)$/;
            function c() {
                if (typeof document === "undefined") return "";
                return document.location.href;
            }
            o.dQ = function t() {
                var e = [], n = null, i = null, s = null;
                function l(t) {
                    T();
                    e.push(t);
                }
                function d(t) {
                    for (var n = e.length - 1; n >= 0; --n) {
                        if (e[n] === t) {
                            e.splice(n, 1);
                        }
                    }
                }
                function v() {
                    y();
                    e = [];
                }
                function p(t, n) {
                    var i = null;
                    if (n && !o.BP) {
                        return;
                    }
                    for (var a in e) {
                        if (r(e, a)) {
                            try {
                                e[a].apply(null, [ t ].concat(f.call(arguments, 2)));
                            } catch (t) {
                                i = t;
                            }
                        }
                    }
                    if (i) {
                        throw i;
                    }
                }
                var E, g;
                function m(t, e, n, i, r) {
                    var f = null;
                    if (s) {
                        o.rQ.FR(s, e, n, t);
                        R();
                    } else if (r) {
                        f = o.rQ(r);
                        p(f, true);
                    } else {
                        var l = {
                            url: e,
                            line: n,
                            hR: i
                        };
                        var d = undefined;
                        var v = t;
                        var g;
                        if (a(t)) {
                            var g = t.match(h);
                            if (g) {
                                d = g[1];
                                v = g[2];
                            }
                        }
                        l.ec = u;
                        f = {
                            name: d,
                            message: v,
                            url: c(),
                            stack: [ l ]
                        };
                        p(f, true);
                    }
                    if (E) {
                        return E.apply(this, arguments);
                    }
                    return false;
                }
                function T() {
                    if (g) {
                        return;
                    }
                    E = window.onerror;
                    window.onerror = m;
                    g = true;
                }
                function y() {
                    if (!g) {
                        return;
                    }
                    window.onerror = E;
                    g = false;
                    E = undefined;
                }
                function R() {
                    var t = s, e = n;
                    n = null;
                    s = null;
                    i = null;
                    p.apply(null, [ t, false ].concat(e));
                }
                function w(t, e) {
                    var r = f.call(arguments, 1);
                    if (s) {
                        if (i === t) {
                            return;
                        } else {
                            R();
                        }
                    }
                    var a = o.rQ(t);
                    s = a;
                    i = t;
                    n = r;
                    window.setTimeout(function() {
                        if (i === t) {
                            R();
                        }
                    }, a.GR ? 2e3 : 0);
                    if (e !== false) {
                        throw t;
                    }
                }
                w.subscribe = l;
                w.unsubscribe = d;
                w.oQ = v;
                return w;
            }();
            o.rQ = function t() {
                function e(t) {
                    return t.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g, "\\$&");
                }
                function n(t) {
                    return e(t).replace("<", "(?:<|&lt;)").replace(">", "(?:>|&gt;)").replace("&", "(?:&|&amp;)").replace('"', '(?:"|&quot;)').replace(/\s+/g, "\\s+");
                }
                function i(t) {
                    if (s(t.stack) || !t.stack) return;
                    var e = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|<anonymous>).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, n = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|\[native).*?)(?::(\d+))?(?::(\d+))?\s*$/i, i = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, r = t.stack.split("\n"), a = [], o, f, h = /^(.*) is undefined$/.exec(t.message);
                    for (var l = 0, d = r.length; l < d; ++l) {
                        if (o = e.exec(r[l])) {
                            var v = o[2] && o[2].indexOf("native") !== -1;
                            f = {
                                url: !v ? o[2] : null,
                                ec: o[1] || u,
                                gc: v ? [ o[2] ] : [],
                                line: o[3] ? +o[3] : null,
                                hR: o[4] ? +o[4] : null
                            };
                        } else if (o = i.exec(r[l])) {
                            f = {
                                url: o[2],
                                ec: o[1] || u,
                                gc: [],
                                line: +o[3],
                                hR: o[4] ? +o[4] : null
                            };
                        } else if (o = n.exec(r[l])) {
                            f = {
                                url: o[3],
                                ec: o[1] || u,
                                gc: o[2] ? o[2].split(",") : [],
                                line: o[4] ? +o[4] : null,
                                hR: o[5] ? +o[5] : null
                            };
                        } else {
                            continue;
                        }
                        if (!f.ec && f.line) {
                            f.ec = u;
                        }
                        a.push(f);
                    }
                    if (!a.length) {
                        return null;
                    }
                    if (!a[0].hR && !s(t.columnNumber)) {
                        a[0].hR = t.columnNumber + 1;
                    }
                    return {
                        name: t.name,
                        message: t.message,
                        url: c(),
                        stack: a
                    };
                }
                function r(t) {
                    var e = t.stacktrace;
                    if (s(t.stacktrace) || !t.stacktrace) return;
                    var n = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, i = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, r = e.split("\n"), a = [], o;
                    for (var f = 0; f < r.length; f += 2) {
                        var h = null;
                        if (o = n.exec(r[f])) {
                            h = {
                                url: o[2],
                                line: +o[1],
                                hR: null,
                                ec: o[3],
                                gc: []
                            };
                        } else if (o = i.exec(r[f])) {
                            h = {
                                url: o[6],
                                line: +o[1],
                                hR: +o[2],
                                ec: o[3] || o[4],
                                gc: o[5] ? o[5].split(",") : []
                            };
                        }
                        if (h) {
                            if (!h.ec && h.line) {
                                h.ec = u;
                            }
                            a.push(h);
                        }
                    }
                    if (!a.length) {
                        return null;
                    }
                    return {
                        name: t.name,
                        message: t.message,
                        url: c(),
                        stack: a
                    };
                }
                function a(t) {
                    var e = t.message.split("\n");
                    if (e.length < 4) {
                        return null;
                    }
                    var n = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, i = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, r = /^\s*Line (\d+) of function script\s*$/i, a = [], s = document.getElementsByTagName("script"), o;
                    for (var f = 2; f < e.length; f += 2) {
                        var h = null;
                        if (o = n.exec(e[f])) {
                            h = {
                                url: o[2],
                                ec: o[3],
                                gc: [],
                                line: +o[1],
                                hR: null
                            };
                        } else if (o = i.exec(e[f])) {
                            h = {
                                url: o[3],
                                ec: o[4],
                                gc: [],
                                line: +o[1],
                                hR: null
                            };
                            var l = +o[1];
                        } else if (o = r.exec(e[f])) {
                            var d = window.location.href.replace(/#.*$/, "");
                            h = {
                                url: d,
                                ec: "",
                                gc: [],
                                line: o[1],
                                hR: null
                            };
                        }
                        if (h) {
                            if (!h.ec) {
                                h.ec = u;
                            }
                            a.push(h);
                        }
                    }
                    if (!a.length) {
                        return null;
                    }
                    return {
                        name: t.name,
                        message: e[0],
                        url: c(),
                        stack: a
                    };
                }
                function f(t, e, n, i) {
                    var r = {
                        url: e,
                        line: n
                    };
                    if (r.url && r.line) {
                        t.GR = false;
                        if (!r.ec) {
                            r.ec = u;
                        }
                        if (t.stack.length > 0) {
                            if (t.stack[0].url === r.url) {
                                if (t.stack[0].line === r.line) {
                                    return false;
                                } else if (!t.stack[0].line && t.stack[0].ec === r.ec) {
                                    t.stack[0].line = r.line;
                                    return false;
                                }
                            }
                        }
                        t.stack.unshift(r);
                        t.partial = true;
                        return true;
                    } else {
                        t.GR = true;
                    }
                    return false;
                }
                function h(t, e) {
                    var n = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, i = [], r = {}, a = false, s, d, v;
                    for (var p = h.caller; p && !a; p = p.caller) {
                        if (p === l || p === o.dQ) {
                            continue;
                        }
                        d = {
                            url: null,
                            ec: u,
                            line: null,
                            hR: null
                        };
                        if (p.name) {
                            d.ec = p.name;
                        } else if (s = n.exec(p.toString())) {
                            d.ec = s[1];
                        }
                        if (typeof d.ec === "undefined") {
                            try {
                                d.ec = s.input.substring(0, s.input.indexOf("{"));
                            } catch (t) {}
                        }
                        if (r["" + p]) {
                            a = true;
                        } else {
                            r["" + p] = true;
                        }
                        i.push(d);
                    }
                    if (e) {
                        i.splice(0, e);
                    }
                    var E = {
                        name: t.name,
                        message: t.message,
                        url: c(),
                        stack: i
                    };
                    f(E, t.pc || t.fileName, t.line || t.lineNumber, t.message || t.description);
                    return E;
                }
                function l(t, e) {
                    var n = null;
                    e = e == null ? 0 : +e;
                    try {
                        n = r(t);
                        if (n) {
                            return n;
                        }
                    } catch (t) {
                        if (o.debug) {
                            throw t;
                        }
                    }
                    try {
                        n = i(t);
                        if (n) {
                            return n;
                        }
                    } catch (t) {
                        if (o.debug) {
                            throw t;
                        }
                    }
                    try {
                        n = a(t);
                        if (n) {
                            return n;
                        }
                    } catch (t) {
                        if (o.debug) {
                            throw t;
                        }
                    }
                    try {
                        n = h(t, e + 1);
                        if (n) {
                            return n;
                        }
                    } catch (t) {
                        if (o.debug) {
                            throw t;
                        }
                    }
                    return {
                        name: t.name,
                        message: t.message,
                        url: c()
                    };
                }
                l.FR = f;
                l.HR = i;
                return l;
            }();
            e.Lb = o;
        }, {
            "6": 6
        } ]
    }, {}, [ 5 ])(5);
});

(function t(e, n, i) {
    function r(s, o) {
        if (!n[s]) {
            if (!e[s]) {
                var f = typeof require == "function" && require;
                if (!o && f) return f(s, !0);
                if (a) return a(s, !0);
                var u = new Error("Cannot find module '" + s + "'");
                throw u.code = "MODULE_NOT_FOUND", u;
            }
            var h = n[s] = {
                Lb: {}
            };
            e[s][0].call(h.Lb, function(t) {
                var n = e[s][1][t];
                return r(n ? n : t);
            }, h, h.Lb, t, e, n, i);
        }
        return n[s].Lb;
    }
    var a = typeof require == "function" && require;
    for (var s = 0; s < i.length; s++) r(i[s]);
    return r;
})({
    1: [ function(t, e, n) {
        "use strict";
        n.IR = o;
        n.JR = h;
        var i = [];
        var r = [];
        var a = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
        function s() {
            var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            for (var e = 0, n = t.length; e < n; ++e) {
                i[e] = t[e];
                r[t.charCodeAt(e)] = e;
            }
            r["-".charCodeAt(0)] = 62;
            r["_".charCodeAt(0)] = 63;
        }
        s();
        function o(t) {
            var e, n, i, s, o, f;
            var u = t.length;
            if (u % 4 > 0) {
                throw new Error("Invalid string. Length must be a multiple of 4");
            }
            o = t[u - 2] === "=" ? 2 : t[u - 1] === "=" ? 1 : 0;
            f = new a(u * 3 / 4 - o);
            i = o > 0 ? u - 4 : u;
            var h = 0;
            for (e = 0, n = 0; e < i; e += 4, n += 3) {
                s = r[t.charCodeAt(e)] << 18 | r[t.charCodeAt(e + 1)] << 12 | r[t.charCodeAt(e + 2)] << 6 | r[t.charCodeAt(e + 3)];
                f[h++] = s >> 16 & 255;
                f[h++] = s >> 8 & 255;
                f[h++] = s & 255;
            }
            if (o === 2) {
                s = r[t.charCodeAt(e)] << 2 | r[t.charCodeAt(e + 1)] >> 4;
                f[h++] = s & 255;
            } else if (o === 1) {
                s = r[t.charCodeAt(e)] << 10 | r[t.charCodeAt(e + 1)] << 4 | r[t.charCodeAt(e + 2)] >> 2;
                f[h++] = s >> 8 & 255;
                f[h++] = s & 255;
            }
            return f;
        }
        function f(t) {
            return i[t >> 18 & 63] + i[t >> 12 & 63] + i[t >> 6 & 63] + i[t & 63];
        }
        function u(t, e, n) {
            var i;
            var r = [];
            for (var a = e; a < n; a += 3) {
                i = (t[a] << 16) + (t[a + 1] << 8) + t[a + 2];
                r.push(f(i));
            }
            return r.join("");
        }
        function h(t) {
            var e;
            var n = t.length;
            var r = n % 3;
            var a = "";
            var s = [];
            var o = 16383;
            for (var f = 0, h = n - r; f < h; f += o) {
                s.push(u(t, f, f + o > h ? h : f + o));
            }
            if (r === 1) {
                e = t[n - 1];
                a += i[e >> 2];
                a += i[e << 4 & 63];
                a += "==";
            } else if (r === 2) {
                e = (t[n - 2] << 8) + t[n - 1];
                a += i[e >> 10];
                a += i[e >> 4 & 63];
                a += i[e << 2 & 63];
                a += "=";
            }
            s.push(a);
            return s.join("");
        }
    }, {} ],
    2: [ function(t, e, n) {
        (function(e) {
            "use strict";
            var i = t("base64-js");
            var ieee754 = t("ieee754");
            var r = t("isarray");
            n.KR = f;
            n.LR = m;
            n.MR = 50;
            f.NR = e.NR !== undefined ? e.NR : a();
            n.OR = s();
            function a() {
                try {
                    var t = new Uint8Array(1);
                    t.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        PR: function() {
                            return 42;
                        }
                    };
                    return t.PR() === 42 && typeof t.subarray === "function" && t.subarray(1, 1).byteLength === 0;
                } catch (t) {
                    return false;
                }
            }
            function s() {
                return f.NR ? 2147483647 : 1073741823;
            }
            function o(t, e) {
                if (s() < e) {
                    throw new RangeError("Invalid typed array length");
                }
                if (f.NR) {
                    t = new Uint8Array(e);
                    t.__proto__ = f.prototype;
                } else {
                    if (t === null) {
                        t = new f(e);
                    }
                    t.length = e;
                }
                return t;
            }
            function f(t, e, n) {
                if (!f.NR && !(this instanceof f)) {
                    return new f(t, e, n);
                }
                if (typeof t === "number") {
                    if (typeof e === "string") {
                        throw new Error("If encoding is specified then the first argument must be a string");
                    }
                    return l(this, t);
                }
                return u(this, t, e, n);
            }
            f.QR = 8192;
            f.RR = function(t) {
                t.__proto__ = f.prototype;
                return t;
            };
            function u(t, e, n, i) {
                if (typeof e === "number") {
                    throw new TypeError('"value" argument must not be a number');
                }
                if (typeof ArrayBuffer !== "undefined" && e instanceof ArrayBuffer) {
                    return p(t, e, n, i);
                }
                if (typeof e === "string") {
                    return d(t, e, n);
                }
                return E(t, e);
            }
            f.from = function(t, e, n) {
                return u(null, t, e, n);
            };
            if (f.NR) {
                f.prototype.__proto__ = Uint8Array.prototype;
                f.__proto__ = Uint8Array;
                if (typeof Symbol !== "undefined" && Symbol.SR && f[Symbol.SR] === f) {
                    Object.defineProperty(f, Symbol.SR, {
                        value: null,
                        TR: true
                    });
                }
            }
            function h(t) {
                if (typeof t !== "number") {
                    throw new TypeError('"size" argument must be a number');
                }
            }
            function c(t, e, n, i) {
                h(e);
                if (e <= 0) {
                    return o(t, e);
                }
                if (n !== undefined) {
                    return typeof i === "string" ? o(t, e).fill(n, i) : o(t, e).fill(n);
                }
                return o(t, e);
            }
            f.UR = function(t, e, n) {
                return c(null, t, e, n);
            };
            function l(t, e) {
                h(e);
                t = o(t, e < 0 ? 0 : g(e) | 0);
                if (!f.NR) {
                    for (var n = 0; n < e; ++n) {
                        t[n] = 0;
                    }
                }
                return t;
            }
            f.VR = function(t) {
                return l(null, t);
            };
            f.WR = function(t) {
                return l(null, t);
            };
            function d(t, e, n) {
                if (typeof n !== "string" || n === "") {
                    n = "utf8";
                }
                if (!f.XR(n)) {
                    throw new TypeError('"encoding" must be a valid string encoding');
                }
                var i = T(e, n) | 0;
                t = o(t, i);
                t.write(e, n);
                return t;
            }
            function v(t, e) {
                var n = g(e.length) | 0;
                t = o(t, n);
                for (var i = 0; i < n; i += 1) {
                    t[i] = e[i] & 255;
                }
                return t;
            }
            function p(t, e, n, i) {
                e.byteLength;
                if (n < 0 || e.byteLength < n) {
                    throw new RangeError("'offset' is out of bounds");
                }
                if (e.byteLength < n + (i || 0)) {
                    throw new RangeError("'length' is out of bounds");
                }
                if (n === undefined && i === undefined) {
                    e = new Uint8Array(e);
                } else if (i === undefined) {
                    e = new Uint8Array(e, n);
                } else {
                    e = new Uint8Array(e, n, i);
                }
                if (f.NR) {
                    t = e;
                    t.__proto__ = f.prototype;
                } else {
                    t = v(t, e);
                }
                return t;
            }
            function E(t, e) {
                if (f.isBuffer(e)) {
                    var n = g(e.length) | 0;
                    t = o(t, n);
                    if (t.length === 0) {
                        return t;
                    }
                    e.xi(t, 0, 0, n);
                    return t;
                }
                if (e) {
                    if (typeof ArrayBuffer !== "undefined" && e.buffer instanceof ArrayBuffer || "length" in e) {
                        if (typeof e.length !== "number" || tt(e.length)) {
                            return o(t, 0);
                        }
                        return v(t, e);
                    }
                    if (e.type === "Buffer" && r(e.data)) {
                        return v(t, e.data);
                    }
                }
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
            }
            function g(t) {
                if (t >= s()) {
                    throw new RangeError("Attempt to allocate Buffer larger than maximum " + "size: 0x" + s().toString(16) + " bytes");
                }
                return t | 0;
            }
            function m(t) {
                if (+t != t) {
                    t = 0;
                }
                return f.UR(+t);
            }
            f.isBuffer = function t(e) {
                return !!(e != null && e.YR);
            };
            f.ZR = function t(e, n) {
                if (!f.isBuffer(e) || !f.isBuffer(n)) {
                    throw new TypeError("Arguments must be Buffers");
                }
                if (e === n) return 0;
                var i = e.length;
                var r = n.length;
                for (var a = 0, s = Math.min(i, r); a < s; ++a) {
                    if (e[a] !== n[a]) {
                        i = e[a];
                        r = n[a];
                        break;
                    }
                }
                if (i < r) return -1;
                if (r < i) return 1;
                return 0;
            };
            f.XR = function t(e) {
                switch (String(e).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "binary":
                  case "base64":
                  case "raw":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return true;

                  default:
                    return false;
                }
            };
            f.concat = function t(e, n) {
                if (!r(e)) {
                    throw new TypeError('"list" argument must be an Array of Buffers');
                }
                if (e.length === 0) {
                    return f.UR(0);
                }
                var i;
                if (n === undefined) {
                    n = 0;
                    for (i = 0; i < e.length; ++i) {
                        n += e[i].length;
                    }
                }
                var a = f.VR(n);
                var s = 0;
                for (i = 0; i < e.length; ++i) {
                    var o = e[i];
                    if (!f.isBuffer(o)) {
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    }
                    o.xi(a, s);
                    s += o.length;
                }
                return a;
            };
            function T(t, e) {
                if (f.isBuffer(t)) {
                    return t.length;
                }
                if (typeof ArrayBuffer !== "undefined" && typeof ArrayBuffer.isView === "function" && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) {
                    return t.byteLength;
                }
                if (typeof t !== "string") {
                    t = "" + t;
                }
                var n = t.length;
                if (n === 0) return 0;
                var i = false;
                for (;;) {
                    switch (e) {
                      case "ascii":
                      case "binary":
                      case "raw":
                      case "raws":
                        return n;

                      case "utf8":
                      case "utf-8":
                      case undefined:
                        return K(t).length;

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return n * 2;

                      case "hex":
                        return n >>> 1;

                      case "base64":
                        return J(t).length;

                      default:
                        if (i) return K(t).length;
                        e = ("" + e).toLowerCase();
                        i = true;
                    }
                }
            }
            f.byteLength = T;
            function y(t, e, n) {
                var i = false;
                if (e === undefined || e < 0) {
                    e = 0;
                }
                if (e > this.length) {
                    return "";
                }
                if (n === undefined || n > this.length) {
                    n = this.length;
                }
                if (n <= 0) {
                    return "";
                }
                n >>>= 0;
                e >>>= 0;
                if (n <= e) {
                    return "";
                }
                if (!t) t = "utf8";
                while (true) {
                    switch (t) {
                      case "hex":
                        return I(this, e, n);

                      case "utf8":
                      case "utf-8":
                        return U(this, e, n);

                      case "ascii":
                        return P(this, e, n);

                      case "binary":
                        return N(this, e, n);

                      case "base64":
                        return S(this, e, n);

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return q(this, e, n);

                      default:
                        if (i) throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase();
                        i = true;
                    }
                }
            }
            f.prototype.YR = true;
            function R(t, e, n) {
                var i = t[e];
                t[e] = t[n];
                t[n] = i;
            }
            f.prototype.$R = function t() {
                var e = this.length;
                if (e % 2 !== 0) {
                    throw new RangeError("Buffer size must be a multiple of 16-bits");
                }
                for (var n = 0; n < e; n += 2) {
                    R(this, n, n + 1);
                }
                return this;
            };
            f.prototype._R = function t() {
                var e = this.length;
                if (e % 4 !== 0) {
                    throw new RangeError("Buffer size must be a multiple of 32-bits");
                }
                for (var n = 0; n < e; n += 4) {
                    R(this, n, n + 3);
                    R(this, n + 1, n + 2);
                }
                return this;
            };
            f.prototype.toString = function t() {
                var e = this.length | 0;
                if (e === 0) return "";
                if (arguments.length === 0) return U(this, 0, e);
                return y.apply(this, arguments);
            };
            f.prototype.Ti = function t(e) {
                if (!f.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                if (this === e) return true;
                return f.ZR(this, e) === 0;
            };
            f.prototype.aS = function t() {
                var e = "";
                var i = n.MR;
                if (this.length > 0) {
                    e = this.toString("hex", 0, i).match(/.{2}/g).join(" ");
                    if (this.length > i) e += " ... ";
                }
                return "<Buffer " + e + ">";
            };
            f.prototype.ZR = function t(e, n, i, r, a) {
                if (!f.isBuffer(e)) {
                    throw new TypeError("Argument must be a Buffer");
                }
                if (n === undefined) {
                    n = 0;
                }
                if (i === undefined) {
                    i = e ? e.length : 0;
                }
                if (r === undefined) {
                    r = 0;
                }
                if (a === undefined) {
                    a = this.length;
                }
                if (n < 0 || i > e.length || r < 0 || a > this.length) {
                    throw new RangeError("out of range index");
                }
                if (r >= a && n >= i) {
                    return 0;
                }
                if (r >= a) {
                    return -1;
                }
                if (n >= i) {
                    return 1;
                }
                n >>>= 0;
                i >>>= 0;
                r >>>= 0;
                a >>>= 0;
                if (this === e) return 0;
                var s = a - r;
                var o = i - n;
                var u = Math.min(s, o);
                var h = this.slice(r, a);
                var c = e.slice(n, i);
                for (var l = 0; l < u; ++l) {
                    if (h[l] !== c[l]) {
                        s = h[l];
                        o = c[l];
                        break;
                    }
                }
                if (s < o) return -1;
                if (o < s) return 1;
                return 0;
            };
            function w(t, e, n, i) {
                var r = 1;
                var a = t.length;
                var s = e.length;
                if (i !== undefined) {
                    i = String(i).toLowerCase();
                    if (i === "ucs2" || i === "ucs-2" || i === "utf16le" || i === "utf-16le") {
                        if (t.length < 2 || e.length < 2) {
                            return -1;
                        }
                        r = 2;
                        a /= 2;
                        s /= 2;
                        n /= 2;
                    }
                }
                function o(t, e) {
                    if (r === 1) {
                        return t[e];
                    } else {
                        return t.bS(e * r);
                    }
                }
                var f = -1;
                for (var u = n; u < a; ++u) {
                    if (o(t, u) === o(e, f === -1 ? 0 : u - f)) {
                        if (f === -1) f = u;
                        if (u - f + 1 === s) return f * r;
                    } else {
                        if (f !== -1) u -= u - f;
                        f = -1;
                    }
                }
                return -1;
            }
            f.prototype.indexOf = function t(e, n, i) {
                if (typeof n === "string") {
                    i = n;
                    n = 0;
                } else if (n > 2147483647) {
                    n = 2147483647;
                } else if (n < -2147483648) {
                    n = -2147483648;
                }
                n >>= 0;
                if (this.length === 0) return -1;
                if (n >= this.length) return -1;
                if (n < 0) n = Math.max(this.length + n, 0);
                if (typeof e === "string") {
                    e = f.from(e, i);
                }
                if (f.isBuffer(e)) {
                    if (e.length === 0) {
                        return -1;
                    }
                    return w(this, e, n, i);
                }
                if (typeof e === "number") {
                    if (f.NR && Uint8Array.prototype.indexOf === "function") {
                        return Uint8Array.prototype.indexOf.call(this, e, n);
                    }
                    return w(this, [ e ], n, i);
                }
                throw new TypeError("val must be string, number or Buffer");
            };
            f.prototype.includes = function t(e, n, i) {
                return this.indexOf(e, n, i) !== -1;
            };
            function x(t, e, n, i) {
                n = Number(n) || 0;
                var r = t.length - n;
                if (!i) {
                    i = r;
                } else {
                    i = Number(i);
                    if (i > r) {
                        i = r;
                    }
                }
                var a = e.length;
                if (a % 2 !== 0) throw new Error("Invalid hex string");
                if (i > a / 2) {
                    i = a / 2;
                }
                for (var s = 0; s < i; ++s) {
                    var o = parseInt(e.substr(s * 2, 2), 16);
                    if (isNaN(o)) return s;
                    t[n + s] = o;
                }
                return s;
            }
            function b(t, e, n, i) {
                return Q(K(e, t.length - n), t, n, i);
            }
            function H(t, e, n, i) {
                return Q(Z(e), t, n, i);
            }
            function A(t, e, n, i) {
                return H(t, e, n, i);
            }
            function M(t, e, n, i) {
                return Q(J(e), t, n, i);
            }
            function O(t, e, n, i) {
                return Q($(e, t.length - n), t, n, i);
            }
            f.prototype.write = function t(e, n, i, r) {
                if (n === undefined) {
                    r = "utf8";
                    i = this.length;
                    n = 0;
                } else if (i === undefined && typeof n === "string") {
                    r = n;
                    i = this.length;
                    n = 0;
                } else if (isFinite(n)) {
                    n = n | 0;
                    if (isFinite(i)) {
                        i = i | 0;
                        if (r === undefined) r = "utf8";
                    } else {
                        r = i;
                        i = undefined;
                    }
                } else {
                    throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                }
                var a = this.length - n;
                if (i === undefined || i > a) i = a;
                if (e.length > 0 && (i < 0 || n < 0) || n > this.length) {
                    throw new RangeError("Attempt to write outside buffer bounds");
                }
                if (!r) r = "utf8";
                var s = false;
                for (;;) {
                    switch (r) {
                      case "hex":
                        return x(this, e, n, i);

                      case "utf8":
                      case "utf-8":
                        return b(this, e, n, i);

                      case "ascii":
                        return H(this, e, n, i);

                      case "binary":
                        return A(this, e, n, i);

                      case "base64":
                        return M(this, e, n, i);

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return O(this, e, n, i);

                      default:
                        if (s) throw new TypeError("Unknown encoding: " + r);
                        r = ("" + r).toLowerCase();
                        s = true;
                    }
                }
            };
            f.prototype.toJSON = function t() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this.cS || this, 0)
                };
            };
            function S(t, e, n) {
                if (e === 0 && n === t.length) {
                    return i.JR(t);
                } else {
                    return i.JR(t.slice(e, n));
                }
            }
            function U(t, e, n) {
                n = Math.min(t.length, n);
                var i = [];
                var r = e;
                while (r < n) {
                    var a = t[r];
                    var s = null;
                    var o = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1;
                    if (r + o <= n) {
                        var f, u, h, c;
                        switch (o) {
                          case 1:
                            if (a < 128) {
                                s = a;
                            }
                            break;

                          case 2:
                            f = t[r + 1];
                            if ((f & 192) === 128) {
                                c = (a & 31) << 6 | f & 63;
                                if (c > 127) {
                                    s = c;
                                }
                            }
                            break;

                          case 3:
                            f = t[r + 1];
                            u = t[r + 2];
                            if ((f & 192) === 128 && (u & 192) === 128) {
                                c = (a & 15) << 12 | (f & 63) << 6 | u & 63;
                                if (c > 2047 && (c < 55296 || c > 57343)) {
                                    s = c;
                                }
                            }
                            break;

                          case 4:
                            f = t[r + 1];
                            u = t[r + 2];
                            h = t[r + 3];
                            if ((f & 192) === 128 && (u & 192) === 128 && (h & 192) === 128) {
                                c = (a & 15) << 18 | (f & 63) << 12 | (u & 63) << 6 | h & 63;
                                if (c > 65535 && c < 1114112) {
                                    s = c;
                                }
                            }
                        }
                    }
                    if (s === null) {
                        s = 65533;
                        o = 1;
                    } else if (s > 65535) {
                        s -= 65536;
                        i.push(s >>> 10 & 1023 | 55296);
                        s = 56320 | s & 1023;
                    }
                    i.push(s);
                    r += o;
                }
                return L(i);
            }
            var C = 4096;
            function L(t) {
                var e = t.length;
                if (e <= C) {
                    return String.fromCharCode.apply(String, t);
                }
                var n = "";
                var i = 0;
                while (i < e) {
                    n += String.fromCharCode.apply(String, t.slice(i, i += C));
                }
                return n;
            }
            function P(t, e, n) {
                var i = "";
                n = Math.min(t.length, n);
                for (var r = e; r < n; ++r) {
                    i += String.fromCharCode(t[r] & 127);
                }
                return i;
            }
            function N(t, e, n) {
                var i = "";
                n = Math.min(t.length, n);
                for (var r = e; r < n; ++r) {
                    i += String.fromCharCode(t[r]);
                }
                return i;
            }
            function I(t, e, n) {
                var i = t.length;
                if (!e || e < 0) e = 0;
                if (!n || n < 0 || n > i) n = i;
                var r = "";
                for (var a = e; a < n; ++a) {
                    r += X(t[a]);
                }
                return r;
            }
            function q(t, e, n) {
                var i = t.slice(e, n);
                var r = "";
                for (var a = 0; a < i.length; a += 2) {
                    r += String.fromCharCode(i[a] + i[a + 1] * 256);
                }
                return r;
            }
            f.prototype.slice = function t(e, n) {
                var i = this.length;
                e = ~~e;
                n = n === undefined ? i : ~~n;
                if (e < 0) {
                    e += i;
                    if (e < 0) e = 0;
                } else if (e > i) {
                    e = i;
                }
                if (n < 0) {
                    n += i;
                    if (n < 0) n = 0;
                } else if (n > i) {
                    n = i;
                }
                if (n < e) n = e;
                var r;
                if (f.NR) {
                    r = this.subarray(e, n);
                    r.__proto__ = f.prototype;
                } else {
                    var a = n - e;
                    r = new f(a, undefined);
                    for (var s = 0; s < a; ++s) {
                        r[s] = this[s + e];
                    }
                }
                return r;
            };
            function z(t, e, n) {
                if (t % 1 !== 0 || t < 0) throw new RangeError("offset is not uint");
                if (t + e > n) throw new RangeError("Trying to access beyond buffer length");
            }
            f.prototype.dS = function t(e, n, i) {
                e = e | 0;
                n = n | 0;
                if (!i) z(e, n, this.length);
                var r = this[e];
                var a = 1;
                var s = 0;
                while (++s < n && (a *= 256)) {
                    r += this[e + s] * a;
                }
                return r;
            };
            f.prototype.eS = function t(e, n, i) {
                e = e | 0;
                n = n | 0;
                if (!i) {
                    z(e, n, this.length);
                }
                var r = this[e + --n];
                var a = 1;
                while (n > 0 && (a *= 256)) {
                    r += this[e + --n] * a;
                }
                return r;
            };
            f.prototype.fS = function t(e, n) {
                if (!n) z(e, 1, this.length);
                return this[e];
            };
            f.prototype.gS = function t(e, n) {
                if (!n) z(e, 2, this.length);
                return this[e] | this[e + 1] << 8;
            };
            f.prototype.bS = function t(e, n) {
                if (!n) z(e, 2, this.length);
                return this[e] << 8 | this[e + 1];
            };
            f.prototype.hS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;
            };
            f.prototype.iS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
            };
            f.prototype.jS = function t(e, n, i) {
                e = e | 0;
                n = n | 0;
                if (!i) z(e, n, this.length);
                var r = this[e];
                var a = 1;
                var s = 0;
                while (++s < n && (a *= 256)) {
                    r += this[e + s] * a;
                }
                a *= 128;
                if (r >= a) r -= Math.pow(2, 8 * n);
                return r;
            };
            f.prototype.kS = function t(e, n, i) {
                e = e | 0;
                n = n | 0;
                if (!i) z(e, n, this.length);
                var r = n;
                var a = 1;
                var s = this[e + --r];
                while (r > 0 && (a *= 256)) {
                    s += this[e + --r] * a;
                }
                a *= 128;
                if (s >= a) s -= Math.pow(2, 8 * n);
                return s;
            };
            f.prototype.lS = function t(e, n) {
                if (!n) z(e, 1, this.length);
                if (!(this[e] & 128)) return this[e];
                return (255 - this[e] + 1) * -1;
            };
            f.prototype.mS = function t(e, n) {
                if (!n) z(e, 2, this.length);
                var i = this[e] | this[e + 1] << 8;
                return i & 32768 ? i | 4294901760 : i;
            };
            f.prototype.nS = function t(e, n) {
                if (!n) z(e, 2, this.length);
                var i = this[e + 1] | this[e] << 8;
                return i & 32768 ? i | 4294901760 : i;
            };
            f.prototype.oS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
            };
            f.prototype.pS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
            };
            f.prototype.qS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return ieee754.read(this, e, true, 23, 4);
            };
            f.prototype.rS = function t(e, n) {
                if (!n) z(e, 4, this.length);
                return ieee754.read(this, e, false, 23, 4);
            };
            f.prototype.sS = function t(e, n) {
                if (!n) z(e, 8, this.length);
                return ieee754.read(this, e, true, 52, 8);
            };
            f.prototype.tS = function t(e, n) {
                if (!n) z(e, 8, this.length);
                return ieee754.read(this, e, false, 52, 8);
            };
            function B(t, e, n, i, r, a) {
                if (!f.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (e > r || e < a) throw new RangeError('"value" argument is out of bounds');
                if (n + i > t.length) throw new RangeError("Index out of range");
            }
            f.prototype.uS = function t(e, n, i, r) {
                e = +e;
                n = n | 0;
                i = i | 0;
                if (!r) {
                    var a = Math.pow(2, 8 * i) - 1;
                    B(this, e, n, i, a, 0);
                }
                var s = 1;
                var o = 0;
                this[n] = e & 255;
                while (++o < i && (s *= 256)) {
                    this[n + o] = e / s & 255;
                }
                return n + i;
            };
            f.prototype.vS = function t(e, n, i, r) {
                e = +e;
                n = n | 0;
                i = i | 0;
                if (!r) {
                    var a = Math.pow(2, 8 * i) - 1;
                    B(this, e, n, i, a, 0);
                }
                var s = i - 1;
                var o = 1;
                this[n + s] = e & 255;
                while (--s >= 0 && (o *= 256)) {
                    this[n + s] = e / o & 255;
                }
                return n + i;
            };
            f.prototype.wS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 1, 255, 0);
                if (!f.NR) e = Math.floor(e);
                this[n] = e & 255;
                return n + 1;
            };
            function k(t, e, n, i) {
                if (e < 0) e = 65535 + e + 1;
                for (var r = 0, a = Math.min(t.length - n, 2); r < a; ++r) {
                    t[n + r] = (e & 255 << 8 * (i ? r : 1 - r)) >>> (i ? r : 1 - r) * 8;
                }
            }
            f.prototype.xS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 2, 65535, 0);
                if (f.NR) {
                    this[n] = e & 255;
                    this[n + 1] = e >>> 8;
                } else {
                    k(this, e, n, true);
                }
                return n + 2;
            };
            f.prototype.yS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 2, 65535, 0);
                if (f.NR) {
                    this[n] = e >>> 8;
                    this[n + 1] = e & 255;
                } else {
                    k(this, e, n, false);
                }
                return n + 2;
            };
            function j(t, e, n, i) {
                if (e < 0) e = 4294967295 + e + 1;
                for (var r = 0, a = Math.min(t.length - n, 4); r < a; ++r) {
                    t[n + r] = e >>> (i ? r : 3 - r) * 8 & 255;
                }
            }
            f.prototype.zS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 4, 4294967295, 0);
                if (f.NR) {
                    this[n + 3] = e >>> 24;
                    this[n + 2] = e >>> 16;
                    this[n + 1] = e >>> 8;
                    this[n] = e & 255;
                } else {
                    j(this, e, n, true);
                }
                return n + 4;
            };
            f.prototype.AS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 4, 4294967295, 0);
                if (f.NR) {
                    this[n] = e >>> 24;
                    this[n + 1] = e >>> 16;
                    this[n + 2] = e >>> 8;
                    this[n + 3] = e & 255;
                } else {
                    j(this, e, n, false);
                }
                return n + 4;
            };
            f.prototype.BS = function t(e, n, i, r) {
                e = +e;
                n = n | 0;
                if (!r) {
                    var a = Math.pow(2, 8 * i - 1);
                    B(this, e, n, i, a - 1, -a);
                }
                var s = 0;
                var o = 1;
                var f = 0;
                this[n] = e & 255;
                while (++s < i && (o *= 256)) {
                    if (e < 0 && f === 0 && this[n + s - 1] !== 0) {
                        f = 1;
                    }
                    this[n + s] = (e / o >> 0) - f & 255;
                }
                return n + i;
            };
            f.prototype.CS = function t(e, n, i, r) {
                e = +e;
                n = n | 0;
                if (!r) {
                    var a = Math.pow(2, 8 * i - 1);
                    B(this, e, n, i, a - 1, -a);
                }
                var s = i - 1;
                var o = 1;
                var f = 0;
                this[n + s] = e & 255;
                while (--s >= 0 && (o *= 256)) {
                    if (e < 0 && f === 0 && this[n + s + 1] !== 0) {
                        f = 1;
                    }
                    this[n + s] = (e / o >> 0) - f & 255;
                }
                return n + i;
            };
            f.prototype.DS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 1, 127, -128);
                if (!f.NR) e = Math.floor(e);
                if (e < 0) e = 255 + e + 1;
                this[n] = e & 255;
                return n + 1;
            };
            f.prototype.ES = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 2, 32767, -32768);
                if (f.NR) {
                    this[n] = e & 255;
                    this[n + 1] = e >>> 8;
                } else {
                    k(this, e, n, true);
                }
                return n + 2;
            };
            f.prototype.FS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 2, 32767, -32768);
                if (f.NR) {
                    this[n] = e >>> 8;
                    this[n + 1] = e & 255;
                } else {
                    k(this, e, n, false);
                }
                return n + 2;
            };
            f.prototype.GS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 4, 2147483647, -2147483648);
                if (f.NR) {
                    this[n] = e & 255;
                    this[n + 1] = e >>> 8;
                    this[n + 2] = e >>> 16;
                    this[n + 3] = e >>> 24;
                } else {
                    j(this, e, n, true);
                }
                return n + 4;
            };
            f.prototype.HS = function t(e, n, i) {
                e = +e;
                n = n | 0;
                if (!i) B(this, e, n, 4, 2147483647, -2147483648);
                if (e < 0) e = 4294967295 + e + 1;
                if (f.NR) {
                    this[n] = e >>> 24;
                    this[n + 1] = e >>> 16;
                    this[n + 2] = e >>> 8;
                    this[n + 3] = e & 255;
                } else {
                    j(this, e, n, false);
                }
                return n + 4;
            };
            function D(t, e, n, i, r, a) {
                if (n + i > t.length) throw new RangeError("Index out of range");
                if (n < 0) throw new RangeError("Index out of range");
            }
            function G(t, e, n, i, r) {
                if (!r) {
                    D(t, e, n, 4, 3.4028234663852886e38, -3.4028234663852886e38);
                }
                ieee754.write(t, e, n, i, 23, 4);
                return n + 4;
            }
            f.prototype.IS = function t(e, n, i) {
                return G(this, e, n, true, i);
            };
            f.prototype.JS = function t(e, n, i) {
                return G(this, e, n, false, i);
            };
            function F(t, e, n, i, r) {
                if (!r) {
                    D(t, e, n, 8, 1.7976931348623157e308, -1.7976931348623157e308);
                }
                ieee754.write(t, e, n, i, 52, 8);
                return n + 8;
            }
            f.prototype.KS = function t(e, n, i) {
                return F(this, e, n, true, i);
            };
            f.prototype.LS = function t(e, n, i) {
                return F(this, e, n, false, i);
            };
            f.prototype.xi = function t(e, n, i, r) {
                if (!i) i = 0;
                if (!r && r !== 0) r = this.length;
                if (n >= e.length) n = e.length;
                if (!n) n = 0;
                if (r > 0 && r < i) r = i;
                if (r === i) return 0;
                if (e.length === 0 || this.length === 0) return 0;
                if (n < 0) {
                    throw new RangeError("targetStart out of bounds");
                }
                if (i < 0 || i >= this.length) throw new RangeError("sourceStart out of bounds");
                if (r < 0) throw new RangeError("sourceEnd out of bounds");
                if (r > this.length) r = this.length;
                if (e.length - n < r - i) {
                    r = e.length - n + i;
                }
                var a = r - i;
                var s;
                if (this === e && i < n && n < r) {
                    for (s = a - 1; s >= 0; --s) {
                        e[s + n] = this[s + i];
                    }
                } else if (a < 1e3 || !f.NR) {
                    for (s = 0; s < a; ++s) {
                        e[s + n] = this[s + i];
                    }
                } else {
                    Uint8Array.prototype.set.call(e, this.subarray(i, i + a), n);
                }
                return a;
            };
            f.prototype.fill = function t(e, n, i, r) {
                if (typeof e === "string") {
                    if (typeof n === "string") {
                        r = n;
                        n = 0;
                        i = this.length;
                    } else if (typeof i === "string") {
                        r = i;
                        i = this.length;
                    }
                    if (e.length === 1) {
                        var a = e.charCodeAt(0);
                        if (a < 256) {
                            e = a;
                        }
                    }
                    if (r !== undefined && typeof r !== "string") {
                        throw new TypeError("encoding must be a string");
                    }
                    if (typeof r === "string" && !f.XR(r)) {
                        throw new TypeError("Unknown encoding: " + r);
                    }
                } else if (typeof e === "number") {
                    e = e & 255;
                }
                if (n < 0 || this.length < n || this.length < i) {
                    throw new RangeError("Out of range index");
                }
                if (i <= n) {
                    return this;
                }
                n = n >>> 0;
                i = i === undefined ? this.length : i >>> 0;
                if (!e) e = 0;
                var s;
                if (typeof e === "number") {
                    for (s = n; s < i; ++s) {
                        this[s] = e;
                    }
                } else {
                    var o = f.isBuffer(e) ? e : K(new f(e, r).toString());
                    var u = o.length;
                    for (s = 0; s < i - n; ++s) {
                        this[s + n] = o[s % u];
                    }
                }
                return this;
            };
            var V = /[^+\/0-9A-Za-z-_]/g;
            function W(t) {
                t = Y(t).replace(V, "");
                if (t.length < 2) return "";
                while (t.length % 4 !== 0) {
                    t = t + "=";
                }
                return t;
            }
            function Y(t) {
                if (t.trim) return t.trim();
                return t.replace(/^\s+|\s+$/g, "");
            }
            function X(t) {
                if (t < 16) return "0" + t.toString(16);
                return t.toString(16);
            }
            function K(t, e) {
                e = e || Infinity;
                var n;
                var i = t.length;
                var r = null;
                var a = [];
                for (var s = 0; s < i; ++s) {
                    n = t.charCodeAt(s);
                    if (n > 55295 && n < 57344) {
                        if (!r) {
                            if (n > 56319) {
                                if ((e -= 3) > -1) a.push(239, 191, 189);
                                continue;
                            } else if (s + 1 === i) {
                                if ((e -= 3) > -1) a.push(239, 191, 189);
                                continue;
                            }
                            r = n;
                            continue;
                        }
                        if (n < 56320) {
                            if ((e -= 3) > -1) a.push(239, 191, 189);
                            r = n;
                            continue;
                        }
                        n = (r - 55296 << 10 | n - 56320) + 65536;
                    } else if (r) {
                        if ((e -= 3) > -1) a.push(239, 191, 189);
                    }
                    r = null;
                    if (n < 128) {
                        if ((e -= 1) < 0) break;
                        a.push(n);
                    } else if (n < 2048) {
                        if ((e -= 2) < 0) break;
                        a.push(n >> 6 | 192, n & 63 | 128);
                    } else if (n < 65536) {
                        if ((e -= 3) < 0) break;
                        a.push(n >> 12 | 224, n >> 6 & 63 | 128, n & 63 | 128);
                    } else if (n < 1114112) {
                        if ((e -= 4) < 0) break;
                        a.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, n & 63 | 128);
                    } else {
                        throw new Error("Invalid code point");
                    }
                }
                return a;
            }
            function Z(t) {
                var e = [];
                for (var n = 0; n < t.length; ++n) {
                    e.push(t.charCodeAt(n) & 255);
                }
                return e;
            }
            function $(t, e) {
                var n, i, r;
                var a = [];
                for (var s = 0; s < t.length; ++s) {
                    if ((e -= 2) < 0) break;
                    n = t.charCodeAt(s);
                    i = n >> 8;
                    r = n % 256;
                    a.push(r);
                    a.push(i);
                }
                return a;
            }
            function J(t) {
                return i.IR(W(t));
            }
            function Q(t, e, n, i) {
                for (var r = 0; r < i; ++r) {
                    if (r + n >= e.length || r >= t.length) break;
                    e[r + n] = t[r];
                }
                return r;
            }
            function tt(t) {
                return t !== t;
            }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
        "base64-js": 1,
        ieee754: 3,
        isarray: 4
    } ],
    3: [ function(t, e, n) {
        n.read = function(t, e, n, i, r) {
            var a, s;
            var o = r * 8 - i - 1;
            var f = (1 << o) - 1;
            var u = f >> 1;
            var h = -7;
            var c = n ? r - 1 : 0;
            var l = n ? -1 : 1;
            var d = t[e + c];
            c += l;
            a = d & (1 << -h) - 1;
            d >>= -h;
            h += o;
            for (;h > 0; a = a * 256 + t[e + c], c += l, h -= 8) {}
            s = a & (1 << -h) - 1;
            a >>= -h;
            h += i;
            for (;h > 0; s = s * 256 + t[e + c], c += l, h -= 8) {}
            if (a === 0) {
                a = 1 - u;
            } else if (a === f) {
                return s ? NaN : (d ? -1 : 1) * Infinity;
            } else {
                s = s + Math.pow(2, i);
                a = a - u;
            }
            return (d ? -1 : 1) * s * Math.pow(2, a - i);
        };
        n.write = function(t, e, n, i, r, a) {
            var s, o, f;
            var u = a * 8 - r - 1;
            var h = (1 << u) - 1;
            var c = h >> 1;
            var l = r === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
            var d = i ? 0 : a - 1;
            var v = i ? 1 : -1;
            var p = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
            e = Math.abs(e);
            if (isNaN(e) || e === Infinity) {
                o = isNaN(e) ? 1 : 0;
                s = h;
            } else {
                s = Math.floor(Math.log(e) / Math.LN2);
                if (e * (f = Math.pow(2, -s)) < 1) {
                    s--;
                    f *= 2;
                }
                if (s + c >= 1) {
                    e += l / f;
                } else {
                    e += l * Math.pow(2, 1 - c);
                }
                if (e * f >= 2) {
                    s++;
                    f /= 2;
                }
                if (s + c >= h) {
                    o = 0;
                    s = h;
                } else if (s + c >= 1) {
                    o = (e * f - 1) * Math.pow(2, r);
                    s = s + c;
                } else {
                    o = e * Math.pow(2, c - 1) * Math.pow(2, r);
                    s = 0;
                }
            }
            for (;r >= 8; t[n + d] = o & 255, d += v, o /= 256, r -= 8) {}
            s = s << r | o;
            u += r;
            for (;u > 0; t[n + d] = s & 255, d += v, s /= 256, u -= 8) {}
            t[n + d - v] |= p * 128;
        };
    }, {} ],
    4: [ function(t, e, n) {
        var i = {}.toString;
        e.Lb = Array.isArray || function(t) {
            return i.call(t) == "[object Array]";
        };
    }, {} ],
    5: [ function(t, e, n) {
        "use strict";
        var i = t("buffer").KR;
        var r = "utf8";
        var a = true;
        var s = {};
        function o(t, e) {
            var n = Object.keys(T);
            if (n.indexOf(e) < 0) {
                throw new TypeError("Underlying type does not exist. Typo?");
            } else {
                s[t] = e;
            }
        }
        function f(t) {
            var e = Object.keys(T);
            var n = t.trim().toLowerCase();
            if (s.hasOwnProperty(n)) {
                n = s[n];
            }
            if (e.indexOf(n) === -1) {
                throw new TypeError("Invalid data type for schema: " + t + " -> " + n);
            }
            return n;
        }
        function u(t) {
            a = t;
        }
        function h(t) {
            var e = t.trim().toLowerCase();
            var n = [ "ascii", "utf8", "utf16le", "ucs2", "base64", "binary", "hex" ];
            if (n.indexOf(e) > -1) {
                r = e;
            } else {
                throw new TypeError("String encoding not available");
            }
        }
        function c(t, e) {
            while (t > 127) {
                e[M.byteOffset++] = t & 127 | 128;
                t >>= 7;
            }
            e[M.byteOffset++] = t & 127;
        }
        function l(t, e) {
            c(t << 1 ^ t >> 31, e);
        }
        function d(t) {
            var e = 0, n = 0, i;
            do {
                i = t[M.byteOffset++];
                e |= (i & 127) << 7 * n;
                n++;
            } while (i & 128);
            return e;
        }
        function v(t) {
            var e = d(t);
            return e >>> 1 ^ -(e & 1);
        }
        function p(t, e) {
            var n = i.byteLength(t || "", r);
            c(n, e);
            M.byteOffset += e.write(t || "", M.byteOffset, n, r);
        }
        function E(t) {
            var e = d(t);
            var n = t.toString(r, M.byteOffset, M.byteOffset + e);
            M.byteOffset += e;
            return n;
        }
        function g(t, e) {
            var n = t.length;
            c(n, e);
            t.xi(e, M.byteOffset);
            M.byteOffset += n;
        }
        function m(t) {
            var e = d(t);
            var n = H(e);
            t.xi(n, 0, M.byteOffset, M.byteOffset + e);
            M.byteOffset += e;
            return n;
        }
        var T = {
            boolean: "!!buffer.readUInt8(bag.byteOffset, true); bag.byteOffset += 1;",
            int8: "buffer.readInt8(bag.byteOffset, true); bag.byteOffset += 1;",
            uint8: "buffer.readUInt8(bag.byteOffset, true); bag.byteOffset += 1;",
            int16: "buffer.readInt16BE(bag.byteOffset, true); bag.byteOffset += 2;",
            uint16: "buffer.readUInt16BE(bag.byteOffset, true); bag.byteOffset += 2;",
            int32: "buffer.readInt32BE(bag.byteOffset, true); bag.byteOffset += 4;",
            uint32: "buffer.readUInt32BE(bag.byteOffset, true); bag.byteOffset += 4;",
            float32: "buffer.readFloatBE(bag.byteOffset, true); bag.byteOffset += 4;",
            float64: "buffer.readDoubleBE(bag.byteOffset, true); bag.byteOffset += 8;",
            string: "bag.readString(buffer);",
            varuint: "bag.readVarUInt(buffer);",
            varint: "bag.readVarInt(buffer);",
            buffer: "bag.readBuffer(buffer);"
        };
        function y(t, e) {
            switch (t) {
              case "boolean":
                return "bag.byteOffset = wBuffer.writeUInt8(" + e + " ? 1 : 0, bag.byteOffset, true);";

              case "int8":
                return "bag.byteOffset = wBuffer.writeInt8(" + e + ", bag.byteOffset, true);";

              case "uint8":
                return "bag.byteOffset = wBuffer.writeUInt8(" + e + ", bag.byteOffset, true);";

              case "int16":
                return "bag.byteOffset = wBuffer.writeInt16BE(" + e + ", bag.byteOffset, true);";

              case "uint16":
                return "bag.byteOffset = wBuffer.writeUInt16BE(" + e + ", bag.byteOffset, true);";

              case "int32":
                return "bag.byteOffset = wBuffer.writeInt32BE(" + e + ", bag.byteOffset, true);";

              case "uint32":
                return "bag.byteOffset = wBuffer.writeUInt32BE(" + e + ", bag.byteOffset, true);";

              case "float32":
                return "bag.byteOffset = wBuffer.writeFloatBE(" + e + ", bag.byteOffset, true);";

              case "float64":
                return "bag.byteOffset = wBuffer.writeDoubleBE(" + e + ", bag.byteOffset, true);";

              case "string":
                return "bag.writeString(" + e + ", wBuffer);";

              case "varuint":
                return "bag.writeVarUInt(" + e + ", wBuffer);";

              case "varint":
                return "bag.writeVarInt(" + e + ", wBuffer);";

              case "buffer":
                return "bag.writeBuffer(" + e + ", wBuffer);";
            }
        }
        var R = {
            boolean: 1,
            int8: 1,
            uint8: 1,
            int16: 2,
            uint16: 2,
            int32: 4,
            uint32: 4,
            float32: 4,
            float64: 8
        };
        var w = {
            string: function(t) {
                var e = i.byteLength(t, r);
                return x(e) + e;
            },
            varuint: function(t) {
                return x(t);
            },
            varint: function(t) {
                return b(t);
            },
            buffer: function(t) {
                var e = t.length;
                return x(e) + e;
            }
        };
        function x(t) {
            if (t <= 0) {
                return 1;
            }
            return Math.floor(Math.log(t) / Math.log(128)) + 1;
        }
        function b(t) {
            return x(t << 1 ^ t >> 31);
        }
        var H = i.VR ? function(t) {
            return i.VR(t);
        } : function(t) {
            return new i(t);
        };
        var A = i.from ? function(t) {
            return i.from(t);
        } : function(t) {
            return new i(t);
        };
        var M = {};
        M.VR = H;
        M.MS = x;
        M.NS = w;
        M.OS = d;
        M.PS = v;
        M.QS = c;
        M.RS = l;
        M.SS = E;
        M.TS = p;
        M.US = m;
        M.VS = g;
        M.WS = I;
        M.byteOffset = 0;
        function O(t, e, n, i, r) {
            var a = i <= 1 ? e : e + "xn";
            var s = r === undefined ? "ref" + a + ".length" : r;
            var o = "j" + e;
            return "for (var " + o + "=" + (t.length - 1) + ";" + o + "<" + s + ";" + o + "++) { " + n + "}";
        }
        function S(t) {
            return "byteC+=bag.getVarUIntByteLength(ref" + t + ".length);";
        }
        function U(t) {
            return "bag.writeVarUInt(ref" + t + ".length,wBuffer);";
        }
        function C(t) {
            return "var " + t + "=bag.readVarUInt(buffer);";
        }
        function L(t, e, n, i) {
            return "var ref" + t + "=" + i + "; ref" + e + "[" + n + "]=ref" + t + ";";
        }
        function P(t, e, n) {
            return "var ref" + t + "=ref" + e + "[" + n + "];";
        }
        function N(t, e, n, i, r, a, s, o) {
            var f = F(a, e);
            var u = F(a, n);
            var h = t ? "j" + n : i;
            a[a.length - 1] += P(e + "xn", u, h);
            s[s.length - 1] += L(e + "xn", u, h, r);
            o[o.length - 1] += P(e + "xn", u, h);
        }
        function I(t, e, n, i, r) {
            if (typeof t !== e) {
                throw new TypeError(t + " does not match the type of " + e);
            } else if (n !== undefined && t < n) {
                throw new TypeError(t + " is less than minimum allowed value of " + n + " for schema type " + r);
            } else if (i !== undefined && t > i) {
                throw new TypeError(t + " is greater than maximum allowed value of " + i + " for schema type " + r);
            }
        }
        function q(t) {
            var e = "bag.throwTypeError(" + t + ",'Buffer or Uint8Array');";
            return "if (" + t + " instanceof Uint8Array === false && " + t + " instanceof Buffer === false){" + e + "}";
        }
        function z(t, e) {
            var n = "bag.throwTypeError(" + t + ",'" + e + "');";
            return "if (typeof(" + t + ") !== '" + e + "'){" + n + "}";
        }
        function B(t, e, n, i) {
            var r = "bag.throwTypeError(" + t + ",'number'," + e + "," + n + ",'" + i + "');";
            return "if (typeof(" + t + ") !== 'number'||" + t + "<" + e + "||" + t + ">" + n + "){" + r + "}";
        }
        function k(t, e) {
            var n = 3.4028234663852886e38;
            switch (t) {
              case "boolean":
                return z(e, "boolean");

              case "int8":
                return B(e, -128, 127, "int8");

              case "uint8":
                return B(e, 0, 255, "uint8");

              case "int16":
                return B(e, -32768, 32767, "int16");

              case "uint16":
                return B(e, 0, 65535, "uint16");

              case "int32":
                return B(e, -2147483648, 2147483647, "int32");

              case "uint32":
                return B(e, 0, 4294967295, "uint32");

              case "float32":
                return B(e, -n, n, "float32");

              case "float64":
                return B(e, -Number.MAX_VALUE, Number.MAX_VALUE, "float64");

              case "string":
                return z(e, "string");

              case "varuint":
                return B(e, 0, 2147483647, "varuint");

              case "varint":
                return B(e, -1073741824, 1073741823, "varint");

              case "buffer":
                return q(e);
            }
        }
        function j(t, e, n, i) {
            var r = "ref" + e + n;
            return (i ? k(t, r) : "") + y(t, r);
        }
        function D(t, e, n) {
            return "ref" + e + n + "=" + T[t];
        }
        function G(t, e, n) {
            var i = R.hasOwnProperty(t);
            if (i) {
                return "byteC+=" + R[t] + ";";
            } else {
                return "byteC+=bag.dynamicByteCounts['" + t + "'](ref" + e + n + ");";
            }
        }
        function F(t, e) {
            return t.length <= 2 && t[t.length - 1].length <= 0 ? e : e + "xn";
        }
        function V(t, e) {
            var n = "bag.byteOffset=0;";
            var i = "var ref1={}; bag.byteOffset=0;";
            var r = "";
            var a = "var ref1=json;";
            var s = 0;
            var o = [ "" ];
            var u = [ "" ];
            var h = [ "" ];
            var c = "";
            var l = "";
            var d = "";
            t = {
                a: t
            };
            function v(t, p) {
                s++;
                var E = Object.keys(t);
                E.sort(function(t, e) {
                    return t < e ? -1 : t > e ? 1 : 0;
                });
                var g = s;
                for (var m = 0; m < E.length; m++) {
                    var T = E[m];
                    var y = t[T];
                    if (p) {
                        T = +T;
                    }
                    var R = typeof T === "number" ? T : "'" + T + "'";
                    var w = y.constructor === Array ? "[]" : "{}";
                    var x = p && m >= E.length - 1;
                    if (x) {
                        o.push("");
                        u.push("");
                        h.push("");
                    }
                    if (y.constructor === Array) {
                        var b = s + 1;
                        var H = o.length <= 1 ? b : b + "xn";
                        var A = "arrLen" + s;
                        if (o.length === 1) {
                            a += P(b, g, R);
                            i += L(b, g, R, "[]");
                        }
                        var M = U(H);
                        var I = C(A);
                        var q = S(H);
                        N(x, b, g, R, w, o, u, h);
                        v(y, true);
                        c = M + O(y, b, o.pop() + c, o.length);
                        l = I + O(y, b, u.pop() + l, o.length, A);
                        d = q + O(y, b, h.pop() + d, o.length);
                        if (o.length === 1) {
                            n += c;
                            c = "";
                            i += l;
                            l = "";
                            r += d;
                            d = "";
                        }
                    } else if (typeof y === "object") {
                        var b = s + 1;
                        if (o.length === 1) {
                            a += P(b, g, R);
                            i += L(b, g, R, "{}");
                        }
                        N(x, b, g, R, w, o, u, h);
                        v(y, false);
                    } else {
                        var z = p ? "" : "[" + R + "]";
                        var B = f(y);
                        t[T] = B;
                        var H = F(o, g);
                        if (p) {
                            H += x ? "[j" + g + "]" : "[" + m + "]";
                        }
                        o[o.length - 1] += j(B, H, z, e);
                        u[u.length - 1] += D(B, H, z);
                        h[h.length - 1] += G(B, H, z);
                        if (o.length > 1) {
                            continue;
                        }
                        var k = p ? g + "[" + m + "]" : g;
                        n += j(B, k, z, e);
                        i += D(B, k, z);
                        r += G(B, k, z);
                    }
                }
            }
            v(t, false);
            r = "var byteC=0;".concat(r, "var wBuffer=bag.allocUnsafe(byteC);");
            n = a.concat(r, n, "return wBuffer;");
            i = i.concat("return ref1['a'];");
            var p = new Function("json", "bag", n);
            var E = new Function("buffer", "bag", i);
            return [ p, E ];
        }
        function W(t, e) {
            var n = V(t, e === undefined ? a : e);
            var r = n[0];
            var s = n[1];
            return {
                encode: function(t) {
                    var e = {
                        a: t
                    };
                    return r(e, M);
                },
                decode: function(t) {
                    var e = i.isBuffer(t) ? t : A(t);
                    return s(e, M);
                }
            };
        }
        o("bool", "boolean");
        e.Lb = n = {
            XS: W,
            YS: o,
            ZS: h,
            $S: u
        };
        window.schemapack = e.Lb;
    }, {
        buffer: 2
    } ]
}, {}, [ 5 ]);

!function(t, e, n) {
    function i(t, e) {
        return typeof t === e;
    }
    function r() {
        var t, e, n, r, a, s, o;
        for (var f in T) if (T.hasOwnProperty(f)) {
            if (t = [], e = T[f], e.name && (t.push(e.name.toLowerCase()), e.options && e.options._S && e.options._S.length)) for (n = 0; n < e.options._S.length; n++) t.push(e.options._S[n].toLowerCase());
            for (r = i(e._Q, "function") ? e._Q() : e._Q, a = 0; a < t.length; a++) s = t[a], 
            o = s.split("."), 1 === o.length ? R[o[0]] = r : (!R[o[0]] || R[o[0]] instanceof Boolean || (R[o[0]] = new Boolean(R[o[0]])), 
            R[o[0]][o[1]] = r), m.push((r ? "" : "no-") + o.join("-"));
        }
    }
    function a(t) {
        var e = w.className, n = R.bT.aT || "";
        if (x && (e = e.baseVal), R.bT.cT) {
            var i = new RegExp("(^|\\s)" + n + "no-js(\\s|$)");
            e = e.replace(i, "$1" + n + "js$2");
        }
        R.bT.dT && (e += " " + n + t.join(" " + n), x ? w.className.baseVal = e : w.className = e);
    }
    function s() {
        return "function" != typeof e.createElement ? e.createElement(arguments[0]) : x ? e.createElementNS.call(e, "http://www.w3.org/2000/svg", arguments[0]) : e.createElement.apply(e, arguments);
    }
    function o(t) {
        return t.replace(/([a-z])-([a-z])/g, function(t, e, n) {
            return e + n.toUpperCase();
        }).replace(/^-/, "");
    }
    function f(t, e) {
        return !!~("" + t).indexOf(e);
    }
    function u(t, e) {
        return function() {
            return t.apply(e, arguments);
        };
    }
    function h(t, e, n) {
        var r;
        for (var a in t) if (t[a] in e) return n === !1 ? t[a] : (r = e[t[a]], i(r, "function") ? u(r, n || e) : r);
        return !1;
    }
    function c(t) {
        return t.replace(/([A-Z])/g, function(t, e) {
            return "-" + e.toLowerCase();
        }).replace(/^ms-/, "-ms-");
    }
    function l() {
        var t = e.body;
        return t || (t = s(x ? "svg" : "body"), t.eT = !0), t;
    }
    function d(t, n, i, r) {
        var a, o, f, u, h = "modernizr", c = s("div"), d = l();
        if (parseInt(i, 10)) for (;i--; ) f = s("div"), f.id = r ? r[i] : h + (i + 1), c.appendChild(f);
        return a = s("style"), a.type = "text/css", a.id = "s" + h, (d.eT ? d : c).appendChild(a), 
        d.appendChild(c), a.styleSheet ? a.styleSheet.cssText = t : a.appendChild(e.createTextNode(t)), 
        c.id = h, d.eT && (d.style.background = "", d.style.overflow = "hidden", u = w.style.overflow, 
        w.style.overflow = "hidden", w.appendChild(d)), o = n(c, t), d.eT ? (d.parentNode.removeChild(d), 
        w.style.overflow = u, w.offsetHeight) : c.parentNode.removeChild(c), !!o;
    }
    function v(e, i) {
        var r = e.length;
        if ("CSS" in t && "supports" in t.CSS) {
            for (;r--; ) if (t.CSS.supports(c(e[r]), i)) return !0;
            return !1;
        }
        if ("CSSSupportsRule" in t) {
            for (var a = []; r--; ) a.push("(" + c(e[r]) + ":" + i + ")");
            return a = a.join(" or "), d("@supports (" + a + ") { #modernizr { position: absolute; } }", function(t) {
                return "absolute" == getComputedStyle(t, null).position;
            });
        }
        return n;
    }
    function p(t, e, r, a) {
        function u() {
            c && (delete O.style, delete O.fT);
        }
        if (a = i(a, "undefined") ? !1 : a, !i(r, "undefined")) {
            var h = v(t, r);
            if (!i(h, "undefined")) return h;
        }
        for (var c, l, d, p, E, g = [ "modernizr", "tspan" ]; !O.style; ) c = !0, O.fT = s(g.shift()), 
        O.style = O.fT.style;
        for (d = t.length, l = 0; d > l; l++) if (p = t[l], E = O.style[p], f(p, "-") && (p = o(p)), 
        O.style[p] !== n) {
            if (a || i(r, "undefined")) return u(), "pfx" == e ? p : !0;
            try {
                O.style[p] = r;
            } catch (t) {}
            if (O.style[p] != E) return u(), "pfx" == e ? p : !0;
        }
        return u(), !1;
    }
    function E(t, e, n, r, a) {
        var s = t.charAt(0).toUpperCase() + t.slice(1), o = (t + " " + _.join(s + " ") + s).split(" ");
        return i(e, "string") || i(e, "undefined") ? p(o, e, r, a) : (o = (t + " " + A.join(s + " ") + s).split(" "), 
        h(o, e, n));
    }
    function g(t, e, i) {
        return E(t, n, n, e, i);
    }
    var m = [], T = [], y = {
        gT: "3.3.1",
        bT: {
            aT: "",
            dT: !0,
            cT: !0,
            hT: !0
        },
        iT: [],
        jT: function(t, e) {
            var n = this;
            setTimeout(function() {
                e(n[t]);
            }, 0);
        },
        kT: function(t, e, n) {
            T.push({
                name: t,
                _Q: e,
                options: n
            });
        },
        lT: function(t) {
            T.push({
                name: null,
                _Q: t
            });
        }
    }, R = function() {};
    R.prototype = y, R = new R(), R.kT("json", "JSON" in t && "parse" in JSON && "stringify" in JSON), 
    R.kT("websockets", "WebSocket" in t && 2 === t.WebSocket.CLOSING);
    var w = e.documentElement, x = "svg" === w.nodeName.toLowerCase();
    R.kT("webgl", function() {
        var e = s("canvas"), n = "probablySupportsContext" in e ? "probablySupportsContext" : "supportsContext";
        return n in e ? e[n]("webgl") || e[n]("experimental-webgl") : "WebGLRenderingContext" in t;
    });
    var b = "Moz O ms Webkit", _ = y.bT.hT ? b.split(" ") : [];
    y.mT = _;
    var H = function(e) {
        var i, r = prefixes.length, a = t.CSSRule;
        if ("undefined" == typeof a) return n;
        if (!e) return !1;
        if (e = e.replace(/^@/, ""), i = e.replace(/-/g, "_").toUpperCase() + "_RULE", i in a) return "@" + e;
        for (var s = 0; r > s; s++) {
            var o = prefixes[s], f = o.toUpperCase() + "_" + i;
            if (f in a) return "@-" + o.toLowerCase() + "-" + e;
        }
        return !1;
    };
    y.nT = H;
    var A = y.bT.hT ? b.toLowerCase().split(" ") : [];
    y.oT = A;
    var M = {
        pT: s("modernizr")
    };
    R.iT.push(function() {
        delete M.pT;
    });
    var O = {
        style: M.pT.style
    };
    R.iT.unshift(function() {
        delete O.style;
    }), y.qT = E;
    var S = y.rT = function(t, e, n) {
        return 0 === t.indexOf("@") ? H(t) : (-1 != t.indexOf("-") && (t = o(t)), e ? E(t, e, n) : E(t, "pfx"));
    };
    R.kT("fullscreen", !(!S("exitFullscreen", e, !1) && !S("cancelFullScreen", e, !1))), 
    R.kT("pointerlock", !!S("exitPointerLock", e)), y.qT = g, R.kT("flexbox", g("flexBasis", "1px", !0)), 
    r(), a(m), delete y.kT, delete y.lT;
    for (var U = 0; U < R.iT.length; U++) R.iT[U]();
    t.Modernizr = R;
}(window, document);

(function(t, e) {
    typeof exports === "object" && typeof module !== "undefined" ? module.Lb = e() : typeof define === "function" && define.bg ? define(e) : t.Ractive = e();
})(this, function() {
    "use strict";
    var t = 3;
    var e = {
        sT: void 0,
        append: false,
        Mf: {
            tT: t,
            uT: []
        },
        vT: false,
        wT: false,
        xT: true,
        yT: [ "{{", "}}" ],
        zT: [ "{{{", "}}}" ],
        Wb: false,
        data: {},
        AT: {},
        BT: false,
        CT: true,
        DT: [],
        ET: false,
        FT: true,
        GT: false,
        HT: false,
        IT: true,
        complete: void 0,
        JT: null,
        KT: false
    };
    var n = e;
    var i = {
        LT: function(t) {
            return t;
        },
        MT: function(t) {
            return Math.pow(t, 3);
        },
        NT: function(t) {
            return Math.pow(t - 1, 3) + 1;
        },
        OT: function(t) {
            if ((t /= .5) < 1) {
                return .5 * Math.pow(t, 3);
            }
            return .5 * (Math.pow(t - 2, 3) + 2);
        }
    };
    var r, a, s, o, f, u, h;
    r = typeof document === "object";
    a = typeof navigator !== "undefined" && /jsDom/.test(navigator.appName);
    s = typeof console !== "undefined" && typeof console.warn === "function" && typeof console.warn.apply === "function";
    try {
        Object.defineProperty({}, "test", {
            value: 0
        });
        o = true;
    } catch (t) {
        o = false;
    }
    f = {
        PT: "http://www.w3.org/1999/xhtml",
        QT: "http://www.w3.org/1998/Math/MathML",
        RT: "http://www.w3.org/2000/svg",
        ST: "http://www.w3.org/1999/xlink",
        TT: "http://www.w3.org/XML/1998/namespace",
        UT: "http://www.w3.org/2000/xmlns/"
    };
    if (typeof document === "undefined") {
        u = false;
    } else {
        u = document && document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1");
    }
    h = [ "o", "ms", "moz", "webkit" ];
    var c, l, d, v, p, E, g, m, T;
    if (!u) {
        c = function(t, e) {
            if (e && e !== f.PT) {
                throw "This browser does not support namespaces other than http://www.w3.org/1999/xhtml. The most likely cause of this error is that you're trying to render SVG in an older browser. See http://docs.ractivejs.org/latest/svg-and-older-browsers for more information";
            }
            return document.createElement(t);
        };
    } else {
        c = function(t, e) {
            if (!e || e === f.PT) {
                return document.createElement(t);
            }
            return document.createElementNS(e, t);
        };
    }
    function y(t) {
        var e;
        if (!t || typeof t === "boolean") {
            return;
        }
        if (typeof window === "undefined" || !document || !t) {
            return null;
        }
        if (t.nodeType) {
            return t;
        }
        if (typeof t === "string") {
            e = document.getElementById(t);
            if (!e && document.querySelector) {
                e = document.querySelector(t);
            }
            if (e && e.nodeType) {
                return e;
            }
        }
        if (t[0] && t[0].nodeType) {
            return t[0];
        }
        return null;
    }
    if (!r) {
        l = null;
    } else {
        d = c("div");
        v = [ "matches", "matchesSelector" ];
        T = function(t) {
            return function(e, n) {
                return e[t](n);
            };
        };
        g = v.length;
        while (g-- && !l) {
            p = v[g];
            if (d[p]) {
                l = T(p);
            } else {
                m = h.length;
                while (m--) {
                    E = h[g] + p.substr(0, 1).toUpperCase() + p.substring(1);
                    if (d[E]) {
                        l = T(E);
                        break;
                    }
                }
            }
        }
        if (!l) {
            l = function(t, e) {
                var n, i, r;
                i = t.parentNode;
                if (!i) {
                    d.innerHTML = "";
                    i = d;
                    t = t.cloneNode();
                    d.appendChild(t);
                }
                n = i.querySelectorAll(e);
                r = n.length;
                while (r--) {
                    if (n[r] === t) {
                        return true;
                    }
                }
                return false;
            };
        }
    }
    function R(t) {
        if (t && typeof t.parentNode !== "unknown" && t.parentNode) {
            t.parentNode.removeChild(t);
        }
        return t;
    }
    function w(t) {
        return t == null || !t.toString ? "" : t;
    }
    var x = null;
    var b, H, A;
    try {
        Object.defineProperty({}, "test", {
            value: 0
        });
        if (r) {
            Object.defineProperty(document.createElement("div"), "test", {
                value: 0
            });
        }
        H = Object.defineProperty;
    } catch (t) {
        H = function(t, e, n) {
            t[e] = n.value;
        };
    }
    try {
        try {
            Object.defineProperties({}, {
                test: {
                    value: 0
                }
            });
        } catch (t) {
            throw t;
        }
        if (r) {
            Object.defineProperties(c("div"), {
                test: {
                    value: 0
                }
            });
        }
        A = Object.defineProperties;
    } catch (t) {
        A = function(t, e) {
            var n;
            for (n in e) {
                if (e.hasOwnProperty(n)) {
                    H(t, n, e[n]);
                }
            }
        };
    }
    try {
        Object.create(null);
        b = Object.create;
    } catch (t) {
        b = function() {
            var t = function() {};
            return function(e, n) {
                var i;
                if (e === null) {
                    return {};
                }
                t.prototype = e;
                i = new t();
                if (n) {
                    Object.defineProperties(i, n);
                }
                return i;
            };
        }();
    }
    function M(t) {
        for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) {
            n[i - 1] = arguments[i];
        }
        var r, a;
        while (a = n.shift()) {
            for (r in a) {
                if (S.call(a, r)) {
                    t[r] = a[r];
                }
            }
        }
        return t;
    }
    function O(t) {
        for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) {
            n[i - 1] = arguments[i];
        }
        n.forEach(function(e) {
            for (var n in e) {
                if (e.hasOwnProperty(n) && !(n in t)) {
                    t[n] = e[n];
                }
            }
        });
        return t;
    }
    var S = Object.prototype.hasOwnProperty;
    var U = Object.prototype.toString, C = /^\[object (?:Array|FileList)\]$/;
    function L(t) {
        return U.call(t) === "[object Array]";
    }
    function P(t) {
        return C.test(U.call(t));
    }
    function N(t, e) {
        if (t === null && e === null) {
            return true;
        }
        if (typeof t === "object" || typeof e === "object") {
            return false;
        }
        return t === e;
    }
    function I(t) {
        return !isNaN(parseFloat(t)) && isFinite(t);
    }
    function q(t) {
        return t && U.call(t) === "[object Object]";
    }
    var z = function() {};
    var B = {}, k, j, D;
    if (s) {
        (function() {
            var t = [ "%cRactive.js %c0.7.3 %cin debug mode, %cmore...", "color: rgb(114, 157, 52); font-weight: normal;", "color: rgb(85, 85, 85); font-weight: normal;", "color: rgb(85, 85, 85); font-weight: normal;", "color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;" ];
            var e = "You're running Ractive 0.7.3 in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\n\nTo disable debug mode, add this line at the start of your app:\n  Ractive.DEBUG = false;\n\nTo disable debug mode when your app is minified, add this snippet:\n  Ractive.DEBUG = /unminified/.test(function(){/*unminified*/});\n\nGet help and support:\n  http://docs.ractivejs.org\n  http://stackoverflow.com/questions/tagged/ractivejs\n  http://groups.google.com/forum/#!forum/ractive-js\n  http://twitter.com/ractivejs\n\nFound a bug? Raise an issue:\n  https://github.com/ractivejs/ractive/issues\n\n";
            D = function() {
                var n = !!console.groupCollapsed;
                console[n ? "groupCollapsed" : "log"].apply(console, t);
                console.log(e);
                if (n) {
                    console.groupEnd(t);
                }
                D = z;
            };
            j = function(t, e) {
                D();
                if (typeof e[e.length - 1] === "object") {
                    var n = e.pop();
                    var i = n ? n.VT : null;
                    if (i) {
                        var r = undefined;
                        if (i.WT && (r = i.WT.name)) {
                            t = "<" + r + "> " + t;
                        }
                        var a = undefined;
                        if (a = n.Yv || i.XT && i.XT.YT && i.find("*")) {
                            e.push(a);
                        }
                    }
                }
                console.warn.apply(console, [ "%cRactive.js: %c" + t, "color: rgb(114, 157, 52);", "color: rgb(85, 85, 85);" ].concat(e));
            };
            k = function() {
                console.log.apply(console, arguments);
            };
        })();
    } else {
        j = k = D = z;
    }
    function G(t, e) {
        return t.replace(/%s/g, function() {
            return e.shift();
        });
    }
    function F(t) {
        for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) {
            n[i - 1] = arguments[i];
        }
        t = G(t, n);
        throw new Error(t);
    }
    function V() {
        if (VT.ZT) {
            k.apply(null, arguments);
        }
    }
    function W(t) {
        for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) {
            n[i - 1] = arguments[i];
        }
        t = G(t, n);
        j(t, n);
    }
    function Y(t) {
        for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) {
            n[i - 1] = arguments[i];
        }
        t = G(t, n);
        if (B[t]) {
            return;
        }
        B[t] = true;
        j(t, n);
    }
    function X() {
        if (VT.ZT) {
            W.apply(null, arguments);
        }
    }
    function K() {
        if (VT.ZT) {
            Y.apply(null, arguments);
        }
    }
    var Z = "Bad arguments";
    var $ = 'A function was specified for "%s" %s, but no %s was returned';
    var J = function(t, e) {
        return 'Missing "' + t + '" ' + e + " plugin. You may need to download a plugin via http://docs.ractivejs.org/latest/plugins#" + e + "s";
    };
    function Q(t, e, n) {
        var i = tt(t, e, n);
        return i ? i[t][n] : null;
    }
    function tt(t, e, n) {
        while (e) {
            if (n in e[t]) {
                return e;
            }
            if (e.ET) {
                return null;
            }
            e = e.parent;
        }
    }
    var et = function(t, e, n, i) {
        if (t === e) {
            return it(e);
        }
        if (i) {
            var r = Q("interpolators", n, i);
            if (r) {
                return r(t, e) || it(e);
            }
            F(J(i, "interpolator"));
        }
        return at.number(t, e) || at.dc(t, e) || at.object(t, e) || it(e);
    };
    var nt = et;
    function it(t) {
        return function() {
            return t;
        };
    }
    var rt = {
        number: function(t, e) {
            var n;
            if (!I(t) || !I(e)) {
                return null;
            }
            t = +t;
            e = +e;
            n = e - t;
            if (!n) {
                return function() {
                    return t;
                };
            }
            return function(e) {
                return t + e * n;
            };
        },
        dc: function(t, e) {
            var n, i, r, a;
            if (!L(t) || !L(e)) {
                return null;
            }
            n = [];
            i = [];
            a = r = Math.min(t.length, e.length);
            while (a--) {
                i[a] = nt(t[a], e[a]);
            }
            for (a = r; a < t.length; a += 1) {
                n[a] = t[a];
            }
            for (a = r; a < e.length; a += 1) {
                n[a] = e[a];
            }
            return function(t) {
                var e = r;
                while (e--) {
                    n[e] = i[e](t);
                }
                return n;
            };
        },
        object: function(t, e) {
            var n, i, r, a, s;
            if (!q(t) || !q(e)) {
                return null;
            }
            n = [];
            a = {};
            r = {};
            for (s in t) {
                if (S.call(t, s)) {
                    if (S.call(e, s)) {
                        n.push(s);
                        r[s] = nt(t[s], e[s]);
                    } else {
                        a[s] = t[s];
                    }
                }
            }
            for (s in e) {
                if (S.call(e, s) && !S.call(t, s)) {
                    a[s] = e[s];
                }
            }
            i = n.length;
            return function(t) {
                var e = i, s;
                while (e--) {
                    s = n[e];
                    a[s] = r[s](t);
                }
                return a;
            };
        }
    };
    var at = rt;
    var st = ft;
    var ot = {};
    function ft(t) {
        var e, n, i, r, a, s;
        e = t.split(".");
        if (!(n = ot[e.length])) {
            n = ut(e.length);
        }
        a = [];
        i = function(t, n) {
            return t ? "*" : e[n];
        };
        r = n.length;
        while (r--) {
            s = n[r].map(i).join(".");
            if (!a.hasOwnProperty(s)) {
                a.push(s);
                a[s] = true;
            }
        }
        return a;
    }
    function ut(t) {
        var e = "", n, i, r, a, s, o, f, u;
        if (!ot[t]) {
            r = [];
            while (e.length < t) {
                e += 1;
            }
            n = parseInt(e, 2);
            a = function(t) {
                return t === "1";
            };
            for (s = 0; s <= n; s += 1) {
                i = s.toString(2);
                while (i.length < t) {
                    i = "0" + i;
                }
                u = [];
                f = i.length;
                for (o = 0; o < f; o++) {
                    u.push(a(i[o]));
                }
                r[s] = u;
            }
            ot[t] = r;
        }
        return ot[t];
    }
    var ht = /\[\s*(\*|[0-9]|[1-9][0-9]+)\s*\]/g;
    var ct = /\*/;
    var lt = {};
    var dt = function(t) {
        var e = t.split(".");
        this.$T = t;
        if (t[0] === "@") {
            this._T = true;
            this.value = pt(t);
        }
        this.aU = e[0];
        this.bU = e.pop();
        this.cU = ct.test(t);
        this.parent = t === "" ? null : Et(e.join("."));
        this.dU = !t;
    };
    dt.prototype = {
        eU: function(t) {
            return t === this || this.startsWith(t);
        },
        join: function(t) {
            return Et(this.dU ? String(t) : this.$T + "." + t);
        },
        replace: function(t, e) {
            if (this === t) {
                return e;
            }
            if (this.startsWith(t)) {
                return e === null ? e : Et(this.$T.replace(t.$T + ".", e.$T + "."));
            }
        },
        startsWith: function(t) {
            if (!t) {
                return false;
            }
            return t && this.$T.substr(0, t.$T.length + 1) === t.$T + ".";
        },
        toString: function() {
            throw new Error("Bad coercion");
        },
        valueOf: function() {
            throw new Error("Bad coercion");
        },
        fU: function() {
            return this.gU || (this.gU = st(this.$T));
        }
    };
    function vt(t, e, n, i) {
        var r = t[e];
        if (r && (r.eU(i) || !r.eU(n))) {
            return;
        }
        t[e] = r ? r.replace(n, i) : i;
        return true;
    }
    function pt(t) {
        var e = t.slice(2);
        if (t[1] === "i") {
            return I(e) ? +e : e;
        } else {
            return e;
        }
    }
    function Et(t) {
        if (t == null) {
            return t;
        }
        if (!lt.hasOwnProperty(t)) {
            lt[t] = new dt(t);
        }
        return lt[t];
    }
    function gt(t, e) {
        var n, i, r;
        n = e.$T.split(".");
        r = [ yt ];
        while (i = n.shift()) {
            if (i === "*") {
                r = r.reduce(a, []);
            } else {
                if (r[0] === yt) {
                    r[0] = Et(i);
                } else {
                    r = r.map(mt(i));
                }
            }
        }
        return r;
        function a(e, n) {
            var i, r, a;
            if (n.dU) {
                a = [].concat(Object.keys(t.hU.data), Object.keys(t.hU.iU), Object.keys(t.hU.jU));
            } else {
                i = t.hU.kU[n.$T];
                r = i ? i.get() : t.hU.get(n);
                a = r ? Object.keys(r) : null;
            }
            if (a) {
                a.forEach(function(t) {
                    if (t !== "_ractive" || !L(r)) {
                        e.push(n.join(t));
                    }
                });
            }
            return e;
        }
    }
    function mt(t) {
        return function(e) {
            return e.join(t);
        };
    }
    function Tt(t) {
        return t ? t.replace(ht, ".$1") : "";
    }
    var yt = Et("");
    var Rt = xt;
    var wt = "Cannot add to a non-numeric value";
    function xt(t, e, n) {
        if (typeof e !== "string" || !I(n)) {
            throw new Error("Bad arguments");
        }
        var i = undefined, r = undefined;
        if (/\*/.test(e)) {
            r = {};
            gt(t, Et(Tt(e))).forEach(function(e) {
                var i = t.hU.get(e);
                if (!I(i)) {
                    throw new Error(wt);
                }
                r[e.$T] = i + n;
            });
            return t.set(r);
        }
        i = t.get(e);
        if (!I(i)) {
            throw new Error(wt);
        }
        return t.set(e, +i + n);
    }
    var bt = Ht;
    function Ht(t, e) {
        return Rt(this, t, e === undefined ? 1 : +e);
    }
    var _t;
    if (typeof window === "undefined") {
        _t = null;
    } else {
        (function(t, e, n) {
            var i, r;
            if (n.requestAnimationFrame) {
                return;
            }
            for (i = 0; i < t.length && !n.requestAnimationFrame; ++i) {
                n.requestAnimationFrame = n[t[i] + "RequestAnimationFrame"];
            }
            if (!n.requestAnimationFrame) {
                r = n.setTimeout;
                n.requestAnimationFrame = function(t) {
                    var n, i, a;
                    n = Date.now();
                    i = Math.max(0, 16 - (n - e));
                    a = r(function() {
                        t(n + i);
                    }, i);
                    e = n + i;
                    return a;
                };
            }
        })(h, 0, window);
        _t = window.requestAnimationFrame;
    }
    var At = _t;
    var Mt;
    if (typeof window !== "undefined" && window.performance && typeof window.performance.now === "function") {
        Mt = function() {
            return window.performance.now();
        };
    } else {
        Mt = function() {
            return Date.now();
        };
    }
    var Ot = Mt;
    var St = {
        lU: {
            mU: "beforeInit",
            nU: "onconstruct"
        },
        xx: {
            mU: "init",
            message: 'The "init" method has been deprecated ' + "and will likely be removed in a future release. " + 'You can either use the "oninit" method which will fire ' + "only once prior to, and regardless of, any eventual ractive " + "instance being rendered, or if you need to access the " + 'rendered DOM, use "onrender" instead. ' + "See http://docs.ractivejs.org/latest/migrating for more information."
        },
        complete: {
            mU: "complete",
            nU: "oncomplete"
        }
    };
    function Ut(t) {
        this.event = t;
        this.method = "on" + t;
        this.oU = St[t];
    }
    Ut.prototype.pU = function(t, e) {
        function n(n) {
            if (t[n]) {
                e ? t[n](e) : t[n]();
                return true;
            }
        }
        n(this.method);
        if (!t[this.method] && this.oU && n(this.oU.mU)) {
            if (this.oU.message) {
                X(this.oU.message);
            } else {
                X('The method "%s" has been deprecated in favor of "%s" and will likely be removed in a future release. See http://docs.ractivejs.org/latest/migrating for more information.', this.oU.mU, this.oU.nU);
            }
        }
        e ? t.pU(this.event, e) : t.pU(this.event);
    };
    var Ct = Ut;
    function Lt(t, e) {
        var n = t.indexOf(e);
        if (n === -1) {
            t.push(e);
        }
    }
    function Pt(t, e) {
        for (var n = 0, i = t.length; n < i; n++) {
            if (t[n] == e) {
                return true;
            }
        }
        return false;
    }
    function Nt(t, e) {
        var n;
        if (!L(t) || !L(e)) {
            return false;
        }
        if (t.length !== e.length) {
            return false;
        }
        n = t.length;
        while (n--) {
            if (t[n] !== e[n]) {
                return false;
            }
        }
        return true;
    }
    function It(t) {
        if (typeof t === "string") {
            return [ t ];
        }
        if (t === undefined) {
            return [];
        }
        return t;
    }
    function qt(t) {
        return t[t.length - 1];
    }
    function zt(t, e) {
        var n = t.indexOf(e);
        if (n !== -1) {
            t.splice(n, 1);
        }
    }
    function Bt(t) {
        var e = [], n = t.length;
        while (n--) {
            e[n] = t[n];
        }
        return e;
    }
    var kt, jt = {}, Dt = {}, Gt = {};
    if (typeof Promise === "function") {
        kt = Promise;
    } else {
        kt = function(t) {
            var e = [], n = [], i = jt, r, a, s, o, f, u;
            s = function(t) {
                return function(s) {
                    if (i !== jt) {
                        return;
                    }
                    r = s;
                    i = t;
                    a = Wt(i === Dt ? e : n, r);
                    Vt(a);
                };
            };
            o = s(Dt);
            f = s(Gt);
            try {
                t(o, f);
            } catch (t) {
                f(t);
            }
            u = {
                then: function(t, r) {
                    var s = new kt(function(o, f) {
                        var u = function(t, e, n) {
                            if (typeof t === "function") {
                                e.push(function(e) {
                                    var n;
                                    try {
                                        n = t(e);
                                        Yt(s, n, o, f);
                                    } catch (t) {
                                        f(t);
                                    }
                                });
                            } else {
                                e.push(n);
                            }
                        };
                        u(t, e, o);
                        u(r, n, f);
                        if (i !== jt) {
                            Vt(a);
                        }
                    });
                    return s;
                }
            };
            u["catch"] = function(t) {
                return this.then(null, t);
            };
            return u;
        };
        kt.all = function(t) {
            return new kt(function(e, n) {
                var i = [], r, a, s;
                if (!t.length) {
                    e(i);
                    return;
                }
                s = function(t, a) {
                    if (t && typeof t.then === "function") {
                        t.then(function(t) {
                            i[a] = t;
                            --r || e(i);
                        }, n);
                    } else {
                        i[a] = t;
                        --r || e(i);
                    }
                };
                r = a = t.length;
                while (a--) {
                    s(t[a], a);
                }
            });
        };
        kt.resolve = function(t) {
            return new kt(function(e) {
                e(t);
            });
        };
        kt.reject = function(t) {
            return new kt(function(e, n) {
                n(t);
            });
        };
    }
    var Ft = kt;
    function Vt(t) {
        setTimeout(t, 0);
    }
    function Wt(t, e) {
        return function() {
            var n;
            while (n = t.shift()) {
                n(e);
            }
        };
    }
    function Yt(t, e, n, i) {
        var r;
        if (e === t) {
            throw new TypeError("A promise's fulfillment handler cannot return the same promise");
        }
        if (e instanceof kt) {
            e.then(n, i);
        } else if (e && (typeof e === "object" || typeof e === "function")) {
            try {
                r = e.then;
            } catch (t) {
                i(t);
                return;
            }
            if (typeof r === "function") {
                var a, s, o;
                s = function(e) {
                    if (a) {
                        return;
                    }
                    a = true;
                    Yt(t, e, n, i);
                };
                o = function(t) {
                    if (a) {
                        return;
                    }
                    a = true;
                    i(t);
                };
                try {
                    r.call(e, s, o);
                } catch (t) {
                    if (!a) {
                        i(t);
                        a = true;
                        return;
                    }
                }
            } else {
                n(e);
            }
        } else {
            n(e);
        }
    }
    var Xt = function(t) {
        do {
            if (t.context !== undefined) {
                return t.context;
            }
        } while (t = t.parent);
        return yt;
    };
    var Kt = Zt;
    function Zt(t, e, n) {
        var i;
        e = Tt(e);
        if (e.substr(0, 2) === "~/") {
            i = Et(e.substring(2));
            Qt(t, i.aU, n);
        } else if (e[0] === ".") {
            i = $t(Xt(n), e);
            if (i) {
                Qt(t, i.aU, n);
            }
        } else {
            i = Jt(t, Et(e), n);
        }
        return i;
    }
    function $t(t, e) {
        var n;
        if (t != undefined && typeof t !== "string") {
            t = t.$T;
        }
        if (e === ".") return Et(t);
        n = t ? t.split(".") : [];
        if (e.substr(0, 3) === "../") {
            while (e.substr(0, 3) === "../") {
                if (!n.length) {
                    throw new Error('Could not resolve reference - too many "../" prefixes');
                }
                n.pop();
                e = e.substring(3);
            }
            n.push(e);
            return Et(n.join("."));
        }
        if (!t) {
            return Et(e.replace(/^\.\/?/, ""));
        }
        return Et(t + e.replace(/^\.\//, "."));
    }
    function Jt(t, e, n, i) {
        var r, a, s, o, f;
        if (e.dU) {
            return e;
        }
        a = e.aU;
        while (n) {
            r = n.context;
            n = n.parent;
            if (!r) {
                continue;
            }
            o = true;
            s = t.hU.get(r);
            if (s && (typeof s === "object" || typeof s === "function") && a in s) {
                return r.join(e.$T);
            }
        }
        if (te(t.hU, a)) {
            return e;
        }
        if (t.parent && !t.ET) {
            o = true;
            n = t.WT.qU;
            a = Et(a);
            if (f = Jt(t.parent, a, n, true)) {
                t.hU.map(a, {
                    origin: t.parent.hU,
                    rU: f
                });
                return e;
            }
        }
        if (!i && !o) {
            t.hU.set(e, undefined);
            return e;
        }
    }
    function Qt(t, e) {
        var n;
        if (!t.parent || t.ET || te(t.hU, e)) {
            return;
        }
        e = Et(e);
        if (n = Jt(t.parent, e, t.WT.qU, true)) {
            t.hU.map(e, {
                origin: t.parent.hU,
                rU: n
            });
        }
    }
    function te(t, e) {
        return e === "" || e in t.data || e in t.jU || e in t.iU;
    }
    function ee(t) {
        t.sU();
    }
    function ne(t) {
        t.uw();
    }
    function ie(t) {
        t.tU();
    }
    function re(t) {
        t.cancel();
    }
    var ae = function(t, e) {
        this.uU = t;
        this.parent = e;
        this.vU = [];
        this.wU = [];
        this.children = [];
        this.xU = this.yU = 0;
        this.zU = [];
        this.AU = [];
        this.BU = false;
        if (e) {
            e.CU(this);
        }
    };
    ae.prototype = {
        CU: function(t) {
            this.children.push(t);
            this.xU += 1;
            this.yU += 1;
        },
        DU: function() {
            this.yU -= 1;
            fe(this);
        },
        EU: function() {
            this.xU -= 1;
            fe(this);
        },
        add: function(t) {
            var e = t.FU ? this.vU : this.wU;
            e.push(t);
        },
        GU: function(t) {
            this.AU.push(t);
        },
        remove: function(t) {
            var e = t.FU ? this.vU : this.wU;
            zt(e, t);
            fe(this);
        },
        init: function() {
            this.aR = true;
            fe(this);
        },
        HU: function() {
            this.AU.forEach(ee);
            this.zU.forEach(se);
            this.children.forEach(oe);
        }
    };
    function se(t) {
        t.detach();
    }
    function oe(t) {
        t.HU();
    }
    function fe(t) {
        if (!t.aR || t.wU.length || t.yU) return;
        if (!t.BU) {
            if (t.parent) {
                t.parent.DU(t);
            } else {
                t.HU();
            }
            t.BU = true;
        }
        if (!t.vU.length && !t.xU) {
            if (typeof t.uU === "function") {
                t.uU();
            }
            if (t.parent) {
                t.parent.EU();
            }
        }
    }
    var ue = ae;
    var he, ce, le = [], de = new Ct("change");
    ce = {
        start: function(t, e) {
            var n, i;
            if (e) {
                n = new Ft(function(t) {
                    return i = t;
                });
            }
            he = {
                IU: he,
                JU: new ue(i, he && he.JU),
                KU: [],
                LU: [],
                MU: [],
                NU: t
            };
            if (t) {
                he.MU.push(t);
            }
            return n;
        },
        end: function() {
            pe();
            he.JU.init();
            if (!he.IU && !!he.NU) he.NU.hU.OU = [];
            he = he.IU;
        },
        PU: function(t) {
            if (he) {
                Lt(he.MU, t);
            }
        },
        QU: function(t) {
            t.RU = he.JU;
            he.JU.add(t);
        },
        SU: function(t) {
            he.JU.GU(t);
        },
        TU: function(t) {
            he.KU.push(t);
        },
        UU: function(t) {
            le.push(t);
        },
        VU: function(t) {
            zt(le, t);
        },
        WU: function(t) {
            he.JU.zU.push(t);
        },
        XU: function(t, e) {
            var n;
            if (!he) {
                t();
            } else {
                n = he;
                while (e && n.IU) {
                    n = n.IU;
                }
                n.LU.push(t);
            }
        }
    };
    var ve = ce;
    function pe() {
        var t, e, n;
        while (he.MU.length) {
            e = he.MU.pop();
            n = e.hU.YU();
            if (n) {
                de.pU(e, n);
            }
        }
        Ee();
        for (t = 0; t < he.KU.length; t += 1) {
            he.KU[t].update();
        }
        he.KU.length = 0;
        for (t = 0; t < he.LU.length; t += 1) {
            he.LU[t]();
        }
        he.LU.length = 0;
        if (he.MU.length) return pe();
    }
    function Ee() {
        var t, e, n, i;
        t = le.length;
        while (t--) {
            e = le[t];
            if (e.rU) {
                le.splice(t, 1);
                continue;
            }
            if (n = Kt(e.root, e.ZU, e.qU)) {
                (i || (i = [])).push({
                    item: e,
                    rU: n
                });
                le.splice(t, 1);
            }
        }
        if (i) {
            i.forEach(ge);
        }
    }
    function ge(t) {
        t.item.resolve(t.rU);
    }
    var me = [];
    var Te = {
        $U: function() {
            var t, e, n;
            n = Ot();
            ve.start();
            for (t = 0; t < me.length; t += 1) {
                e = me[t];
                if (!e.$U(n)) {
                    me.splice(t--, 1);
                }
            }
            ve.end();
            if (me.length) {
                At(Te.$U);
            } else {
                Te.Up = false;
            }
        },
        add: function(t) {
            me.push(t);
            if (!Te.Up) {
                Te.Up = true;
                At(Te.$U);
            }
        },
        abort: function(t, e) {
            var n = me.length, i;
            while (n--) {
                i = me[n];
                if (i.root === e && i.rU === t) {
                    i.stop();
                }
            }
        }
    };
    var ye = Te;
    var Re = function(t) {
        var e;
        this.startTime = Date.now();
        for (e in t) {
            if (t.hasOwnProperty(e)) {
                this[e] = t[e];
            }
        }
        this._U = nt(this.from, this.XQ, this.root, this._U);
        this.Up = true;
        this.$U();
    };
    Re.prototype = {
        $U: function() {
            var t, e, n, i, r, a;
            a = this.rU;
            if (this.Up) {
                i = Date.now();
                t = i - this.startTime;
                if (t >= this.duration) {
                    if (a !== null) {
                        ve.start(this.root);
                        this.root.hU.set(a, this.XQ);
                        ve.end();
                    }
                    if (this.step) {
                        this.step(1, this.XQ);
                    }
                    this.complete(this.XQ);
                    r = this.root.aV.indexOf(this);
                    if (r === -1) {
                        X("Animation was not found");
                    }
                    this.root.aV.splice(r, 1);
                    this.Up = false;
                    return false;
                }
                e = this.bV ? this.bV(t / this.duration) : t / this.duration;
                if (a !== null) {
                    n = this._U(e);
                    ve.start(this.root);
                    this.root.hU.set(a, n);
                    ve.end();
                }
                if (this.step) {
                    this.step(e, n);
                }
                return true;
            }
            return false;
        },
        stop: function() {
            var t;
            this.Up = false;
            t = this.root.aV.indexOf(this);
            if (t === -1) {
                X("Animation was not found");
            }
            this.root.aV.splice(t, 1);
        }
    };
    var we = Re;
    var xe = He;
    var be = {
        stop: z
    };
    function He(t, e, n) {
        var i, r, a, s, o, f, u, h, c, l, d, v, p, E;
        i = new Ft(function(t) {
            return r = t;
        });
        if (typeof t === "object") {
            n = e || {};
            f = n.bV;
            u = n.duration;
            o = [];
            h = n.step;
            c = n.complete;
            if (h || c) {
                d = {};
                n.step = null;
                n.complete = null;
                l = function(t) {
                    return function(e, n) {
                        d[t] = n;
                    };
                };
            }
            for (a in t) {
                if (t.hasOwnProperty(a)) {
                    if (h || c) {
                        v = l(a);
                        n = {
                            bV: f,
                            duration: u
                        };
                        if (h) {
                            n.step = v;
                        }
                    }
                    n.complete = c ? v : z;
                    o.push(_e(this, a, t[a], n));
                }
            }
            E = {
                bV: f,
                duration: u
            };
            if (h) {
                E.step = function(t) {
                    return h(t, d);
                };
            }
            if (c) {
                i.then(function(t) {
                    return c(t, d);
                });
            }
            E.complete = r;
            p = _e(this, null, null, E);
            o.push(p);
            i.stop = function() {
                var t;
                while (t = o.pop()) {
                    t.stop();
                }
                if (p) {
                    p.stop();
                }
            };
            return i;
        }
        n = n || {};
        if (n.complete) {
            i.then(n.complete);
        }
        n.complete = r;
        s = _e(this, t, e, n);
        i.stop = function() {
            return s.stop();
        };
        return i;
    }
    function _e(t, e, n, i) {
        var r, a, s, o;
        if (e) {
            e = Et(Tt(e));
        }
        if (e !== null) {
            o = t.hU.get(e);
        }
        ye.abort(e, t);
        if (N(o, n)) {
            if (i.complete) {
                i.complete(i.XQ);
            }
            return be;
        }
        if (i.bV) {
            if (typeof i.bV === "function") {
                r = i.bV;
            } else {
                r = t.bV[i.bV];
            }
            if (typeof r !== "function") {
                r = null;
            }
        }
        a = i.duration === undefined ? 400 : i.duration;
        s = new we({
            rU: e,
            from: o,
            XQ: n,
            root: t,
            duration: a,
            bV: r,
            _U: i._U,
            step: i.step,
            complete: i.complete
        });
        ye.add(s);
        t.aV.push(s);
        return s;
    }
    var Ae = Oe;
    var Me = new Ct("detach");
    function Oe() {
        if (this.cV) {
            return this.cV;
        }
        if (this.sT) {
            zt(this.sT.dV, this);
        }
        this.cV = this.XT.detach();
        Me.pU(this);
        return this.cV;
    }
    var Se = Ue;
    function Ue(t) {
        if (!this.sT) {
            return null;
        }
        return this.XT.find(t);
    }
    var Ce = Le;
    function Le(t, e) {
        var n;
        if (this.eV) {
            n = !this.selector || t.name === this.selector;
        } else {
            n = t.Yv ? l(t.Yv, this.selector) : null;
        }
        if (n) {
            this.push(t.Yv || t.NU);
            if (!e) {
                this.fV();
            }
            return true;
        }
    }
    var Pe = function() {
        var t, e, n;
        t = this._t[this.eV ? "gV" : "hV"];
        e = this.selector;
        n = t.indexOf(e);
        if (n !== -1) {
            t.splice(n, 1);
            t[e] = null;
        }
    };
    var Ne = function(t, e) {
        var n, i, r, a, s, o, f, u, h, c;
        n = qe(t.WT || t.jV.iV);
        i = qe(e.WT || e.jV.iV);
        r = qt(n);
        a = qt(i);
        while (r && r === a) {
            n.pop();
            i.pop();
            s = r;
            r = qt(n);
            a = qt(i);
        }
        r = r.WT || r;
        a = a.WT || a;
        h = r.qU;
        c = a.qU;
        if (h === c) {
            o = h.kV.indexOf(r);
            f = c.kV.indexOf(a);
            return o - f || n.length - i.length;
        }
        if (u = s.lV) {
            o = u.indexOf(h);
            f = u.indexOf(c);
            return o - f || n.length - i.length;
        }
        throw new Error("An unexpected condition was met while comparing the position of two components. Please file an issue at https://github.com/RactiveJS/Ractive/issues - thanks!");
    };
    function Ie(t) {
        var e;
        if (e = t.qU) {
            return e.mV;
        }
        if (t.WT && (e = t.WT.qU)) {
            return e.mV;
        }
    }
    function qe(t) {
        var e, n;
        e = [ t ];
        n = Ie(t);
        while (n) {
            e.push(n);
            n = Ie(n);
        }
        return e;
    }
    var ze = function(t, e) {
        var n;
        if (t.compareDocumentPosition) {
            n = t.compareDocumentPosition(e);
            return n & 2 ? 1 : -1;
        }
        return Ne(t, e);
    };
    var Be = function() {
        this.sort(this.eV ? Ne : ze);
        this.nV = false;
    };
    var ke = function() {
        var t = this;
        if (!this.nV) {
            this.nV = true;
            ve.XU(function() {
                t.oV();
            });
        }
    };
    var je = function(t) {
        var e = this.indexOf(this.eV ? t.NU : t);
        if (e !== -1) {
            this.splice(e, 1);
        }
    };
    var De = Ge;
    function Ge(t, e, n, i) {
        var r = [];
        A(r, {
            selector: {
                value: e
            },
            pV: {
                value: n
            },
            eV: {
                value: i
            },
            qV: {
                value: Ce
            }
        });
        if (!n) {
            return r;
        }
        A(r, {
            cancel: {
                value: Pe
            },
            _t: {
                value: t
            },
            oV: {
                value: Be
            },
            fV: {
                value: ke
            },
            rV: {
                value: je
            },
            nV: {
                value: false,
                sV: true
            }
        });
        return r;
    }
    var Fe = Ve;
    function Ve(t, e) {
        var n, i;
        if (!this.sT) {
            return [];
        }
        e = e || {};
        n = this.tV;
        if (i = n[t]) {
            return e && e.pV ? i : i.slice();
        }
        i = De(this, t, !!e.pV, false);
        if (i.pV) {
            n.push(t);
            n["_" + t] = i;
        }
        this.XT.uV(t, i);
        return i;
    }
    var We = Ye;
    function Ye(t, e) {
        var n, i;
        e = e || {};
        n = this.vV;
        if (i = n[t]) {
            return e && e.pV ? i : i.slice();
        }
        i = De(this, t, !!e.pV, true);
        if (i.pV) {
            n.push(t);
            n["_" + t] = i;
        }
        this.XT.wV(t, i);
        return i;
    }
    var Xe = Ke;
    function Ke(t) {
        return this.XT.xV(t);
    }
    var Ze = $e;
    function $e(t) {
        if (this.yV) {
            if (this.yV.WT && this.yV.WT.name === t) {
                return this.yV;
            } else {
                return this.yV.zV(t);
            }
        }
        return null;
    }
    var Je = Qe;
    function Qe(t) {
        if (this.parent) {
            if (this.parent.WT && this.parent.WT.name === t) {
                return this.parent;
            } else {
                return this.parent.AV(t);
            }
        }
        return null;
    }
    var tn = {
        BV: function(t, e) {
            if (t.event) {
                t.CV = t.CV || [];
                t.CV.push(t.event);
            }
            t.event = e;
        },
        DV: function(t) {
            if (t.CV && t.CV.length) {
                t.event = t.CV.pop();
            } else {
                delete t.event;
            }
        }
    };
    var en = tn;
    var nn = rn;
    function rn(t, e) {
        var n = arguments[2] === undefined ? {} : arguments[2];
        if (!e) {
            return;
        }
        if (!n.event) {
            n.event = {
                name: e,
                EV: true
            };
        } else {
            n.event.name = e;
        }
        var i = Et(e).fU();
        an(t, i, n.event, n.gc, true);
    }
    function an(t, e, n, i) {
        var r = arguments[4] === undefined ? false : arguments[4];
        var a, s, o = true;
        en.BV(t, n);
        for (s = e.length; s >= 0; s--) {
            a = t.FV[e[s]];
            if (a) {
                o = sn(t, a, n, i) && o;
            }
        }
        en.DV(t);
        if (t.parent && o) {
            if (r && t.WT) {
                var f = t.WT.name + "." + e[e.length - 1];
                e = Et(f).fU();
                if (n) {
                    n.WT = t;
                }
            }
            an(t.parent, e, n, i);
        }
    }
    function sn(t, e, n, i) {
        var r = null, a = false;
        if (n && !n.EV) {
            i = [ n ].concat(i);
        }
        e = e.slice();
        for (var s = 0, o = e.length; s < o; s += 1) {
            if (e[s].apply(t, i) === false) {
                a = true;
            }
        }
        if (n && !n.EV && a && (r = n.GV)) {
            r.preventDefault && r.preventDefault();
            r.stopPropagation && r.stopPropagation();
        }
        return !a;
    }
    var on = fn;
    function fn(t) {
        var e = {
            gc: Array.prototype.slice.call(arguments, 1)
        };
        nn(this, t, e);
    }
    var un = cn;
    var hn = {
        HV: true,
        IV: true,
        JV: true
    };
    function cn(t) {
        var e;
        t = Et(Tt(t));
        e = this.hU.get(t, hn);
        if (e === undefined && this.parent && !this.ET) {
            if (Kt(this, t.$T, this.WT.qU)) {
                e = this.hU.get(t);
            }
        }
        return e;
    }
    var ln = vn;
    var dn = new Ct("insert");
    function vn(t, e) {
        if (!this.XT.YT) {
            throw new Error("The API has changed - you must call `ractive.render(target[, anchor])` to render your Ractive instance. Once rendered you can use `ractive.insert()`.");
        }
        t = y(t);
        e = y(e) || null;
        if (!t) {
            throw new Error("You must specify a valid target to insert into");
        }
        t.insertBefore(this.detach(), e);
        this.sT = t;
        (t.dV || (t.dV = [])).push(this);
        this.cV = null;
        pn(this);
    }
    function pn(t) {
        dn.pU(t);
        t.wV("*").forEach(function(t) {
            pn(t.NU);
        });
    }
    var En = gn;
    function gn(t, e, n) {
        var i, r;
        t = Et(Tt(t));
        i = this.hU.get(t);
        if (!L(i) || !L(e)) {
            return this.set(t, e, n && n.complete);
        }
        r = ve.start(this, true);
        this.hU.jd(t, i, e, n);
        ve.end();
        return r;
    }
    var mn = function(t, e, n, i) {
        this.root = t;
        this.rU = e;
        this.uU = n;
        this.defer = i.defer;
        this.context = i && i.context ? i.context : t;
    };
    mn.prototype = {
        init: function(t) {
            this.value = this.root.get(this.rU.$T);
            if (t !== false) {
                this.update();
            } else {
                this.oldValue = this.value;
            }
        },
        _v: function(t) {
            var e = this;
            if (!N(t, this.value)) {
                this.value = t;
                if (this.defer && this.aR) {
                    ve.XU(function() {
                        return e.update();
                    });
                } else {
                    this.update();
                }
            }
        },
        update: function() {
            if (this.updating) {
                return;
            }
            this.updating = true;
            this.uU.call(this.context, this.value, this.oldValue, this.rU.$T);
            this.oldValue = this.value;
            this.updating = false;
        }
    };
    var Tn = mn;
    var yn = Rn;
    function Rn(t, e) {
        var n, i;
        n = gt(t, e);
        i = {};
        n.forEach(function(e) {
            i[e.$T] = t.get(e.$T);
        });
        return i;
    }
    var wn, xn = Array.prototype.slice;
    wn = function(t, e, n, i) {
        this.root = t;
        this.uU = n;
        this.defer = i.defer;
        this.rU = e;
        this.KV = new RegExp("^" + e.$T.replace(/\./g, "\\.").replace(/\*/g, "([^\\.]+)") + "$");
        this.values = {};
        if (this.defer) {
            this.LV = [];
        }
        this.context = i && i.context ? i.context : t;
    };
    wn.prototype = {
        init: function(t) {
            var e, n;
            e = yn(this.root, this.rU);
            if (t !== false) {
                for (n in e) {
                    if (e.hasOwnProperty(n)) {
                        this.update(Et(n));
                    }
                }
            } else {
                this.values = e;
            }
        },
        update: function(t) {
            var e = this;
            var n;
            if (t.cU) {
                n = yn(this.root, t);
                for (t in n) {
                    if (n.hasOwnProperty(t)) {
                        this.update(Et(t));
                    }
                }
                return;
            }
            if (this.root.hU.MV[t.$T]) {
                return;
            }
            if (this.defer && this.aR) {
                ve.XU(function() {
                    return e.NV(t).update();
                });
                return;
            }
            this.OV(t);
        },
        OV: function(t) {
            var e, n, i, r;
            e = t.$T;
            n = this.root.hU.get(t);
            if (this.updating) {
                this.values[e] = n;
                return;
            }
            this.updating = true;
            if (!N(n, this.values[e]) || !this.aR) {
                i = xn.call(this.KV.exec(e), 1);
                r = [ n, this.values[e], e ].concat(i);
                this.values[e] = n;
                this.uU.apply(this.context, r);
            }
            this.updating = false;
        },
        NV: function(t) {
            var e = this;
            if (!this.LV[t.$T]) {
                this.LV[t.$T] = {
                    update: function() {
                        return e.OV(t);
                    }
                };
            }
            return this.LV[t.$T];
        }
    };
    var bn = wn;
    var Hn = An;
    var _n = {};
    function An(t, e, n, i) {
        var r, a, s;
        e = Et(Tt(e));
        i = i || _n;
        if (e.cU) {
            r = new bn(t, e, n, i);
            t.hU.PV.push(r);
            a = true;
        } else {
            r = new Tn(t, e, n, i);
        }
        r.init(i.init);
        t.hU.register(e, r, a ? "patternObservers" : "observers");
        r.aR = true;
        var o = {
            cancel: function() {
                var n;
                if (s) {
                    return;
                }
                if (a) {
                    n = t.hU.PV.indexOf(r);
                    t.hU.PV.splice(n, 1);
                    t.hU.unregister(e, r, "patternObservers");
                } else {
                    t.hU.unregister(e, r, "observers");
                }
                s = true;
            }
        };
        t.QV.push(o);
        return o;
    }
    var Mn = On;
    function On(t, e, n) {
        var i, r, a, s;
        if (q(t)) {
            n = e;
            r = t;
            i = [];
            for (t in r) {
                if (r.hasOwnProperty(t)) {
                    e = r[t];
                    i.push(this.observe(t, e, n));
                }
            }
            return {
                cancel: function() {
                    while (i.length) {
                        i.pop().cancel();
                    }
                }
            };
        }
        if (typeof t === "function") {
            n = e;
            e = t;
            t = "";
            return Hn(this, t, e, n);
        }
        a = t.split(" ");
        if (a.length === 1) {
            return Hn(this, t, e, n);
        }
        i = [];
        s = a.length;
        while (s--) {
            t = a[s];
            if (t) {
                i.push(Hn(this, t, e, n));
            }
        }
        return {
            cancel: function() {
                while (i.length) {
                    i.pop().cancel();
                }
            }
        };
    }
    var Sn = Un;
    function Un(t, e, n) {
        var i = this.observe(t, function() {
            e.apply(this, arguments);
            i.cancel();
        }, {
            init: false,
            defer: n && n.defer
        });
        return i;
    }
    var Cn = function(t) {
        return t.trim();
    };
    var Ln = function(t) {
        return t !== "";
    };
    var Pn = Nn;
    function Nn(t, e) {
        var n = this;
        var i;
        if (!t) {
            for (t in this.FV) {
                delete this.FV[t];
            }
        } else {
            i = t.split(" ").map(Cn).filter(Ln);
            i.forEach(function(t) {
                var i, r;
                if (i = n.FV[t]) {
                    if (e) {
                        r = i.indexOf(e);
                        if (r !== -1) {
                            i.splice(r, 1);
                        }
                    } else {
                        n.FV[t] = [];
                    }
                }
            });
        }
        return this;
    }
    var In = qn;
    function qn(t, e) {
        var n = this;
        var i, r, a;
        if (typeof t === "object") {
            i = [];
            for (r in t) {
                if (t.hasOwnProperty(r)) {
                    i.push(this.jT(r, t[r]));
                }
            }
            return {
                cancel: function() {
                    var t;
                    while (t = i.pop()) {
                        t.cancel();
                    }
                }
            };
        }
        a = t.split(" ").map(Cn).filter(Ln);
        a.forEach(function(t) {
            (n.FV[t] || (n.FV[t] = [])).push(e);
        });
        return {
            cancel: function() {
                return n.RV(t, e);
            }
        };
    }
    var zn = Bn;
    function Bn(t, e) {
        var n = this.jT(t, function() {
            e.apply(this, arguments);
            n.cancel();
        });
        return n;
    }
    var kn = jn;
    function jn(t, e, n) {
        var i, r, a = [], s, o, f, u;
        i = Dn(t, e, n);
        if (!i) {
            return null;
        }
        r = t.length;
        f = i.length - 2 - i[1];
        s = Math.min(r, i[0]);
        o = s + i[1];
        for (u = 0; u < s; u += 1) {
            a.push(u);
        }
        for (;u < o; u += 1) {
            a.push(-1);
        }
        for (;u < r; u += 1) {
            a.push(u + f);
        }
        if (f !== 0) {
            a.SV = i[0];
        } else {
            a.SV = t.length;
        }
        return a;
    }
    function Dn(t, e, n) {
        switch (e) {
          case "splice":
            if (n[0] !== undefined && n[0] < 0) {
                n[0] = t.length + Math.max(n[0], -t.length);
            }
            while (n.length < 2) {
                n.push(0);
            }
            n[1] = Math.min(n[1], t.length - n[0]);
            return n;

          case "sort":
          case "reverse":
            return null;

          case "pop":
            if (t.length) {
                return [ t.length - 1, 1 ];
            }
            return [ 0, 0 ];

          case "push":
            return [ t.length, 0 ].concat(n);

          case "shift":
            return [ 0, t.length ? 1 : 0 ];

          case "unshift":
            return [ 0, 0 ].concat(n);
        }
    }
    var Gn = Array.prototype;
    var Fn = function(t) {
        return function(e) {
            for (var n = arguments.length, i = Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) {
                i[r - 1] = arguments[r];
            }
            var a, s = [], o, f, u;
            e = Et(Tt(e));
            a = this.hU.get(e);
            o = a.length;
            if (!L(a)) {
                throw new Error("Called ractive." + t + "('" + e.$T + "'), but '" + e.$T + "' does not refer to an array");
            }
            s = kn(a, t, i);
            u = Gn[t].apply(a, i);
            f = ve.start(this, true).then(function() {
                return u;
            });
            if (!!s) {
                this.hU.TV(e, a, s);
            } else {
                this.hU.mark(e);
            }
            ve.end();
            return f;
        };
    };
    var Vn = Fn("pop");
    var Wn = Fn("push");
    var Yn, Xn, Kn, Zn, $n, Jn, Qn = "/* Ractive.js component styles */\n", ti = [], ei = false;
    if (!r) {
        Yn = {
            add: z,
            apply: z
        };
    } else {
        Kn = document.createElement("style");
        Kn.type = "text/css";
        Zn = document.getElementsByTagName("head")[0];
        Jn = false;
        $n = Kn.styleSheet;
        Xn = function() {
            var t = Qn + ti.map(function(t) {
                return "\n/* {" + t.id + "} */\n" + t.UV;
            }).join("\n");
            if ($n) {
                $n.cssText = t;
            } else {
                Kn.innerHTML = t;
            }
            if (!Jn) {
                Zn.appendChild(Kn);
                Jn = true;
            }
        };
        Yn = {
            add: function(t) {
                ti.push(t);
                ei = true;
            },
            apply: function() {
                if (ei) {
                    Xn();
                    ei = false;
                }
            }
        };
    }
    var ni = Yn;
    var ii = si;
    var ri = new Ct("render"), ai = new Ct("complete");
    function si(t, e) {
        var n = this;
        var i, r, a;
        a = this.IT;
        if (this.HT) {
            this.IT = false;
        }
        i = ve.start(this, true);
        ve.XU(function() {
            return ri.pU(n);
        }, true);
        if (this.XT.YT) {
            throw new Error("You cannot call ractive.render() on an already rendered instance! Call ractive.unrender() first");
        }
        t = y(t) || this.sT;
        e = y(e) || this.anchor;
        this.sT = t;
        this.anchor = e;
        if (!this.append && t) {
            var s = t.dV;
            if (s && s.length) {
                oi(s);
            }
            t.innerHTML = "";
        }
        if (this.VV) {
            ni.apply();
        }
        if (t) {
            if (!(r = t.dV)) {
                t.dV = [ this ];
            } else {
                r.push(this);
            }
            if (e) {
                t.insertBefore(this.XT.xx(), e);
            } else {
                t.appendChild(this.XT.xx());
            }
        }
        ve.end();
        this.IT = a;
        return i.then(function() {
            return ai.pU(n);
        });
    }
    function oi(t) {
        t.splice(0, t.length).forEach(ee);
    }
    var fi = {
        extend: function(t, e, n) {
            e.DT = hi(e.DT, It(n.DT));
        },
        init: function() {}
    };
    var ui = fi;
    function hi(t, e) {
        var n = t.slice(), i = e.length;
        while (i--) {
            if (!~n.indexOf(e[i])) {
                n.push(e[i]);
            }
        }
        return n;
    }
    var ci = gi;
    var li = /(?:^|\})?\s*([^\{\}]+)\s*\{/g, di = /\/\*.*?\*\//g, vi = /((?:(?:\[[^\]+]\])|(?:[^\s\+\>\~:]))+)((?::[^\s\+\>\~\(]+(?:\([^\)]+\))?)?\s*[\s\+\>\~]?)\s*/g, pi = /^@media/, Ei = /\[data-ractive-css~="\{[a-z0-9-]+\}"]/g;
    function gi(t, e) {
        var n, i, r;
        i = '[data-ractive-css~="{' + e + '}"]';
        r = function(t) {
            var e, n, r, a, s, o, f, u = [];
            e = [];
            while (n = vi.exec(t)) {
                e.push({
                    $T: n[0],
                    WV: n[1],
                    XV: n[2]
                });
            }
            a = e.map(Ti);
            f = e.length;
            while (f--) {
                o = a.slice();
                r = e[f];
                o[f] = r.WV + i + r.XV || "";
                s = a.slice();
                s[f] = i + " " + s[f];
                u.push(o.join(" "), s.join(" "));
            }
            return u.join(", ");
        };
        if (Ei.test(t)) {
            n = t.replace(Ei, i);
        } else {
            n = t.replace(di, "").replace(li, function(t, e) {
                var n, i;
                if (pi.test(e)) return t;
                n = e.split(",").map(mi);
                i = n.map(r).join(", ") + " ";
                return t.replace(e, i);
            });
        }
        return n;
    }
    function mi(t) {
        if (t.trim) {
            return t.trim();
        }
        return t.replace(/^\s+/, "").replace(/\s+$/, "");
    }
    function Ti(t) {
        return t.$T;
    }
    var yi = 1;
    var Ri = {
        name: "css",
        extend: function(t, e, n) {
            if (n.JT) {
                var i = yi++;
                var r = n.KT ? n.JT : ci(n.JT, i);
                e.VV = i;
                ni.add({
                    id: i,
                    UV: r
                });
            }
        },
        init: function() {}
    };
    var wi = Ri;
    function xi(t) {
        if (t && t.constructor !== Object) {
            if (typeof t === "function") {} else if (typeof t !== "object") {
                F("data option must be an object or a function, `" + t + "` is not valid");
            } else {
                X("If supplied, options.data should be a plain JavaScript object - using a non-POJO as the root object may work, but is discouraged");
            }
        }
    }
    var bi = {
        name: "data",
        extend: function(t, e, n) {
            var i = undefined, r = undefined;
            if (n.data && q(n.data)) {
                for (i in n.data) {
                    r = n.data[i];
                    if (r && typeof r === "object") {
                        if (q(r) || L(r)) {
                            X("Passing a `data` option with object and array properties to Ractive.extend() is discouraged, as mutating them is likely to cause bugs. Consider using a data function instead:\n\n  // this...\n  data: function () {\n    return {\n      myObject: {}\n    };\n  })\n\n  // instead of this:\n  data: {\n    myObject: {}\n  }");
                        }
                    }
                }
            }
            e.data = _i(e.data, n.data);
        },
        init: function(t, e, n) {
            var i = _i(t.prototype.data, n.data);
            if (typeof i === "function") {
                i = i.call(e);
            }
            return i || {};
        },
        reset: function(t) {
            var e = this.init(t.constructor, t, t.hU);
            t.hU.reset(e);
            return true;
        }
    };
    var Hi = bi;
    function _i(t, e) {
        xi(e);
        var n = typeof t === "function";
        var i = typeof e === "function";
        if (!e && !n) {
            e = {};
        }
        if (!n && !i) {
            return Mi(e, t);
        }
        return function() {
            var r = i ? Ai(e, this) : e;
            var a = n ? Ai(t, this) : t;
            return Mi(r, a);
        };
    }
    function Ai(t, e) {
        var n = t.call(e);
        if (!n) return;
        if (typeof n !== "object") {
            F("Data function must return an object");
        }
        if (n.constructor !== Object) {
            K("Data function returned something other than a plain JavaScript object. This might work, but is strongly discouraged");
        }
        return n;
    }
    function Mi(t, e) {
        if (t && e) {
            for (var n in e) {
                if (!(n in t)) {
                    t[n] = e[n];
                }
            }
            return t;
        }
        return t || e;
    }
    var Oi, Si, Ui = /^\s+/;
    Si = function(t) {
        this.name = "ParseError";
        this.message = t;
        try {
            throw new Error(t);
        } catch (t) {
            this.stack = t.stack;
        }
    };
    Si.prototype = Error.prototype;
    Oi = function(t, e) {
        var n, i, r = 0;
        this.$T = t;
        this.options = e || {};
        this.YC = 0;
        this.YV = this.$T.split("\n");
        this.ZV = this.YV.map(function(t) {
            var e = r + t.length + 1;
            r = e;
            return e;
        }, 0);
        if (this.init) this.init(t, e);
        n = [];
        while (this.YC < this.$T.length && (i = this.read())) {
            n.push(i);
        }
        this.$V = this._V();
        this.result = this.aW ? this.aW(n, e) : n;
    };
    Oi.prototype = {
        read: function(t) {
            var e, n, i, r;
            if (!t) t = this.bW;
            e = this.YC;
            i = t.length;
            for (n = 0; n < i; n += 1) {
                this.YC = e;
                if (r = t[n](this)) {
                    return r;
                }
            }
            return null;
        },
        cW: function(t) {
            var e = 0, n = 0, i;
            while (t >= this.ZV[e]) {
                n = this.ZV[e];
                e += 1;
            }
            i = t - n;
            return [ e + 1, i + 1, t ];
        },
        error: function(t) {
            var e = this.cW(this.YC);
            var n = e[0];
            var i = e[1];
            var r = this.YV[e[0] - 1];
            var a = 0;
            var s = r.replace(/\t/g, function(t, n) {
                if (n < e[1]) {
                    a += 1;
                }
                return "  ";
            }) + "\n" + new Array(e[1] + a).join(" ") + "^----";
            var o = new Si("" + t + " at line " + n + " character " + i + ":\n" + s);
            o.line = e[0];
            o.dW = e[1];
            o.eW = t;
            throw o;
        },
        fW: function(t) {
            if (this.$T.substr(this.YC, t.length) === t) {
                this.YC += t.length;
                return t;
            }
        },
        gW: function(t) {
            var e;
            if (e = t.exec(this._V())) {
                this.YC += e[0].length;
                return e[1] || e[0];
            }
        },
        hW: function() {
            this.gW(Ui);
        },
        _V: function() {
            return this.$T.substring(this.YC);
        },
        iW: function() {
            return this.$T.charAt(this.YC);
        }
    };
    Oi.extend = function(t) {
        var e = this, n, i;
        n = function(t, e) {
            Oi.call(this, t, e);
        };
        n.prototype = b(e.prototype);
        for (i in t) {
            if (S.call(t, i)) {
                n.prototype[i] = t[i];
            }
        }
        n.extend = Oi.extend;
        return n;
    };
    var Ci = Oi;
    var Li = 1;
    var Pi = 2;
    var Ni = 3;
    var Ii = 4;
    var qi = 5;
    var zi = 6;
    var Bi = 7;
    var ki = 8;
    var ji = 9;
    var Di = 10;
    var Gi = 13;
    var Fi = 14;
    var Vi = 15;
    var Wi = 16;
    var Yi = 17;
    var Xi = 18;
    var Ki = 20;
    var Zi = 21;
    var $i = 22;
    var Ji = 23;
    var Qi = 24;
    var tr = 25;
    var er = 26;
    var nr = 27;
    var ir = 30;
    var rr = 31;
    var ar = 32;
    var sr = 33;
    var or = 34;
    var fr = 35;
    var ur = 36;
    var hr = 40;
    var cr = 50;
    var lr = 51;
    var dr = 52;
    var vr = 53;
    var pr = 54;
    var Er = 60;
    var gr = 61;
    var mr = Rr;
    var Tr = /^[^\s=]+/, yr = /^\s+/;
    function Rr(t) {
        var e, n, i;
        if (!t.fW("=")) {
            return null;
        }
        e = t.YC;
        t.hW();
        n = t.gW(Tr);
        if (!n) {
            t.YC = e;
            return null;
        }
        if (!t.gW(yr)) {
            return null;
        }
        i = t.gW(Tr);
        if (!i) {
            t.YC = e;
            return null;
        }
        t.hW();
        if (!t.fW("=")) {
            t.YC = e;
            return null;
        }
        return [ n, i ];
    }
    var wr = br;
    var xr = /^(\/(?:[^\n\r\u2028\u2029\/\\[]|\\.|\[(?:[^\n\r\u2028\u2029\]\\]|\\.)*])+\/(?:([gimuy])(?![a-z]*\2))*(?![a-zA-Z_$0-9]))/;
    function br(t) {
        var e;
        if (e = t.gW(xr)) {
            return {
                uT: tr,
                tT: e
            };
        }
        return null;
    }
    var Hr = Ar;
    var _r = {
        uT: Di,
        jW: true
    };
    function Ar(t) {
        var e, n;
        if (t.Wb[t.kW] === false) {
            return null;
        }
        for (n = 0; n < t.tags.length; n += 1) {
            if (e = Mr(t, t.tags[n])) {
                return e;
            }
        }
    }
    function Mr(t, e) {
        var n, i, r, a;
        n = t.YC;
        if (t.fW("\\" + e.open)) {
            if (n === 0 || t.$T[n - 1] !== "\\") {
                return e.open;
            }
        } else if (!t.fW(e.open)) {
            return null;
        }
        if (i = mr(t)) {
            if (!t.fW(e.close)) {
                return null;
            }
            e.open = i[0];
            e.close = i[1];
            t.lW();
            return _r;
        }
        t.hW();
        if (t.fW("/")) {
            t.YC -= 1;
            var s = t.YC;
            if (!wr(t)) {
                t.YC = s - e.close.length;
                t.error("Attempted to close a section that wasn't open");
            } else {
                t.YC = s;
            }
        }
        for (a = 0; a < e.mW.length; a += 1) {
            r = e.mW[a];
            if (i = r(t, e)) {
                if (e.nW) {
                    i.Li = true;
                }
                if (t.oW) {
                    i.m = t.cW(n);
                }
                return i;
            }
        }
        t.YC = n;
        return null;
    }
    var Or = "Expected a JavaScript expression";
    var Sr = "Expected closing paren";
    var Ur = Lr;
    var Cr = /^(?:[+-]?)0*(?:(?:(?:[1-9]\d*)?\.\d+)|(?:(?:0|[1-9]\d*)\.)|(?:0|[1-9]\d*))(?:[eE][+-]?\d+)?/;
    function Lr(t) {
        var e;
        if (e = t.gW(Cr)) {
            return {
                uT: Ki,
                tT: e
            };
        }
        return null;
    }
    var Pr = Nr;
    function Nr(t) {
        var e = t._V();
        if (e.substr(0, 4) === "true") {
            t.YC += 4;
            return {
                uT: Qi,
                tT: "true"
            };
        }
        if (e.substr(0, 5) === "false") {
            t.YC += 5;
            return {
                uT: Qi,
                tT: "false"
            };
        }
        return null;
    }
    var Ir, qr, zr;
    Ir = /^(?=.)[^"'\\]+?(?:(?!.)|(?=["'\\]))/;
    qr = /^\\(?:['"\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])/;
    zr = /^\\(?:\r\n|[\u000A\u000D\u2028\u2029])/;
    var Br = function(t) {
        return function(e) {
            var n, i, r, a;
            n = e.YC;
            i = '"';
            r = false;
            while (!r) {
                a = e.gW(Ir) || e.gW(qr) || e.fW(t);
                if (a) {
                    if (a === '"') {
                        i += '\\"';
                    } else if (a === "\\'") {
                        i += "'";
                    } else {
                        i += a;
                    }
                } else {
                    a = e.gW(zr);
                    if (a) {
                        i += "\\u" + ("000" + a.charCodeAt(1).toString(16)).slice(-4);
                    } else {
                        r = true;
                    }
                }
            }
            i += '"';
            return JSON.parse(i);
        };
    };
    var kr = Br('"');
    var jr = Br("'");
    var Dr = function(t) {
        var e, n;
        e = t.YC;
        if (t.fW('"')) {
            n = jr(t);
            if (!t.fW('"')) {
                t.YC = e;
                return null;
            }
            return {
                uT: Zi,
                tT: n
            };
        }
        if (t.fW("'")) {
            n = kr(t);
            if (!t.fW("'")) {
                t.YC = e;
                return null;
            }
            return {
                uT: Zi,
                tT: n
            };
        }
        return null;
    };
    var Gr = /^[a-zA-Z_$][a-zA-Z_$0-9]*/;
    var Fr = Wr;
    var Vr = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;
    function Wr(t) {
        var e;
        if (e = Dr(t)) {
            return Vr.test(e.tT) ? e.tT : '"' + e.tT.replace(/"/g, '\\"') + '"';
        }
        if (e = Ur(t)) {
            return e.tT;
        }
        if (e = t.gW(Gr)) {
            return e;
        }
    }
    var Yr = Xr;
    function Xr(t) {
        var e, n, i;
        e = t.YC;
        t.hW();
        n = Fr(t);
        if (n === null) {
            t.YC = e;
            return null;
        }
        t.hW();
        if (!t.fW(":")) {
            t.YC = e;
            return null;
        }
        t.hW();
        i = ba(t);
        if (i === null) {
            t.YC = e;
            return null;
        }
        return {
            uT: nr,
            pW: n,
            tT: i
        };
    }
    var Kr = Zr;
    function Zr(t) {
        var e, n, i, r;
        e = t.YC;
        i = Yr(t);
        if (i === null) {
            return null;
        }
        n = [ i ];
        if (t.fW(",")) {
            r = Zr(t);
            if (!r) {
                t.YC = e;
                return null;
            }
            return n.concat(r);
        }
        return n;
    }
    var $r = function(t) {
        var e, n;
        e = t.YC;
        t.hW();
        if (!t.fW("{")) {
            t.YC = e;
            return null;
        }
        n = Kr(t);
        t.hW();
        if (!t.fW("}")) {
            t.YC = e;
            return null;
        }
        return {
            uT: Ji,
            qW: n
        };
    };
    var Jr = Qr;
    function Qr(t) {
        var e, n, i, r;
        e = t.YC;
        t.hW();
        i = ba(t);
        if (i === null) {
            return null;
        }
        n = [ i ];
        t.hW();
        if (t.fW(",")) {
            r = Qr(t);
            if (r === null) {
                t.error(Or);
            }
            r.forEach(a);
        }
        function a(t) {
            n.push(t);
        }
        return n;
    }
    var ta = function(t) {
        var e, n;
        e = t.YC;
        t.hW();
        if (!t.fW("[")) {
            t.YC = e;
            return null;
        }
        n = Jr(t);
        if (!t.fW("]")) {
            t.YC = e;
            return null;
        }
        return {
            uT: $i,
            qW: n
        };
    };
    var ea = na;
    function na(t) {
        return Ur(t) || Pr(t) || Dr(t) || $r(t) || ta(t) || wr(t);
    }
    var ia = ua;
    var ra = /^(?:~\/|(?:\.\.\/)+|\.\/(?:\.\.\/)*|\.)/, aa, sa;
    aa = /^(?:Array|console|Date|RegExp|decodeURIComponent|decodeURI|encodeURIComponent|encodeURI|isFinite|isNaN|parseFloat|parseInt|JSON|Math|NaN|undefined|null)\b/;
    sa = /^(?:break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|throw|try|typeof|var|void|while|with)$/;
    var oa = /^[a-zA-Z$_0-9]+(?:(?:\.[a-zA-Z$_0-9]+)|(?:\[[0-9]+\]))*/;
    var fa = /^[a-zA-Z_$][-a-zA-Z_$0-9]*/;
    function ua(t) {
        var e, n, i, r, a, s;
        e = t.YC;
        i = t.gW(/^@(?:keypath|index|key)/);
        if (!i) {
            n = t.gW(ra) || "";
            i = !n && t.rW && t.gW(fa) || t.gW(oa);
            if (!i && n === ".") {
                n = "";
                i = ".";
            }
        }
        if (!i) {
            return null;
        }
        if (!n && !t.rW && sa.test(i)) {
            t.YC = e;
            return null;
        }
        if (!n && aa.test(i)) {
            r = aa.exec(i)[0];
            t.YC = e + r.length;
            return {
                uT: er,
                tT: r
            };
        }
        a = (n || "") + Tt(i);
        if (t.fW("(")) {
            s = a.lastIndexOf(".");
            if (s !== -1) {
                a = a.substr(0, s);
                t.YC = e + a.length;
            } else {
                t.YC -= 1;
            }
        }
        return {
            uT: ir,
            n: a.replace(/^this\./, "./").replace(/^this$/, ".")
        };
    }
    var ha = ca;
    function ca(t) {
        var e, n;
        e = t.YC;
        if (!t.fW("(")) {
            return null;
        }
        t.hW();
        n = ba(t);
        if (!n) {
            t.error(Or);
        }
        t.hW();
        if (!t.fW(")")) {
            t.error(Sr);
        }
        return {
            uT: or,
            x: n
        };
    }
    var la = function(t) {
        return ea(t) || ia(t) || ha(t);
    };
    var da = va;
    function va(t) {
        var e, n, i;
        e = t.YC;
        t.hW();
        if (t.fW(".")) {
            t.hW();
            if (n = t.gW(Gr)) {
                return {
                    uT: rr,
                    n: n
                };
            }
            t.error("Expected a property name");
        }
        if (t.fW("[")) {
            t.hW();
            i = ba(t);
            if (!i) {
                t.error(Or);
            }
            t.hW();
            if (!t.fW("]")) {
                t.error("Expected ']'");
            }
            return {
                uT: rr,
                x: i
            };
        }
        return null;
    }
    var pa = function(t) {
        var e, n, i, r;
        n = la(t);
        if (!n) {
            return null;
        }
        while (n) {
            e = t.YC;
            if (i = da(t)) {
                n = {
                    uT: ar,
                    x: n,
                    r: i
                };
            } else if (t.fW("(")) {
                t.hW();
                r = Jr(t);
                t.hW();
                if (!t.fW(")")) {
                    t.error(Sr);
                }
                n = {
                    uT: hr,
                    x: n
                };
                if (r) {
                    n.lM = r;
                }
            } else {
                break;
            }
        }
        return n;
    };
    var Ea, ga;
    ga = function(t, e) {
        return function(n) {
            var i;
            if (i = e(n)) {
                return i;
            }
            if (!n.fW(t)) {
                return null;
            }
            n.hW();
            i = ba(n);
            if (!i) {
                n.error(Or);
            }
            return {
                Li: t,
                lM: i,
                uT: sr
            };
        };
    };
    (function() {
        var t, e, n, i, r;
        i = "! ~ + - typeof".split(" ");
        r = pa;
        for (t = 0, e = i.length; t < e; t += 1) {
            n = ga(i[t], r);
            r = n;
        }
        Ea = r;
    })();
    var ma = Ea;
    var Ta, ya;
    ya = function(t, e) {
        return function(n) {
            var i, r, a;
            r = e(n);
            if (!r) {
                return null;
            }
            while (true) {
                i = n.YC;
                n.hW();
                if (!n.fW(t)) {
                    n.YC = i;
                    return r;
                }
                if (t === "in" && /[a-zA-Z_$0-9]/.test(n._V().charAt(0))) {
                    n.YC = i;
                    return r;
                }
                n.hW();
                a = e(n);
                if (!a) {
                    n.YC = i;
                    return r;
                }
                r = {
                    uT: ur,
                    Li: t,
                    lM: [ r, a ]
                };
            }
        };
    };
    (function() {
        var t, e, n, i, r;
        i = "* / % + - << >> >>> < <= > >= in instanceof == != === !== & ^ | && ||".split(" ");
        r = ma;
        for (t = 0, e = i.length; t < e; t += 1) {
            n = ya(i[t], r);
            r = n;
        }
        Ta = r;
    })();
    var Ra = Ta;
    var wa = xa;
    function xa(t) {
        var e, n, i, r;
        n = Ra(t);
        if (!n) {
            return null;
        }
        e = t.YC;
        t.hW();
        if (!t.fW("?")) {
            t.YC = e;
            return n;
        }
        t.hW();
        i = ba(t);
        if (!i) {
            t.error(Or);
        }
        t.hW();
        if (!t.fW(":")) {
            t.error('Expected ":"');
        }
        t.hW();
        r = ba(t);
        if (!r) {
            t.error(Or);
        }
        return {
            uT: fr,
            lM: [ n, i, r ]
        };
    }
    var ba = Ha;
    function Ha(t) {
        return wa(t);
    }
    var _a = Aa;
    function Aa(t) {
        var e;
        Ma(t, e = []);
        return {
            r: e,
            Li: n(t)
        };
        function n(t) {
            switch (t.uT) {
              case Qi:
              case er:
              case Ki:
              case tr:
                return t.tT;

              case Zi:
                return JSON.stringify(String(t.tT));

              case $i:
                return "[" + (t.qW ? t.qW.map(n).join(",") : "") + "]";

              case Ji:
                return "{" + (t.qW ? t.qW.map(n).join(",") : "") + "}";

              case nr:
                return t.pW + ":" + n(t.tT);

              case sr:
                return (t.Li === "typeof" ? "typeof " : t.Li) + n(t.lM);

              case ur:
                return n(t.lM[0]) + (t.Li.substr(0, 2) === "in" ? " " + t.Li + " " : t.Li) + n(t.lM[1]);

              case hr:
                return n(t.x) + "(" + (t.lM ? t.lM.map(n).join(",") : "") + ")";

              case or:
                return "(" + n(t.x) + ")";

              case ar:
                return n(t.x) + n(t.r);

              case rr:
                return t.n ? "." + t.n : "[" + n(t.x) + "]";

              case fr:
                return n(t.lM[0]) + "?" + n(t.lM[1]) + ":" + n(t.lM[2]);

              case ir:
                return "_" + e.indexOf(t.n);

              default:
                throw new Error("Expected legal JavaScript");
            }
        }
    }
    function Ma(t, e) {
        var n, i;
        if (t.uT === ir) {
            if (e.indexOf(t.n) === -1) {
                e.unshift(t.n);
            }
        }
        i = t.lM || t.qW;
        if (i) {
            if (q(i)) {
                Ma(i, e);
            } else {
                n = i.length;
                while (n--) {
                    Ma(i[n], e);
                }
            }
        }
        if (t.x) {
            Ma(t.x, e);
        }
        if (t.r) {
            Ma(t.r, e);
        }
        if (t.tT) {
            Ma(t.tT, e);
        }
    }
    var Oa = Ua;
    var Sa = /^[0-9][1-9]*$/;
    function Ua(t, e) {
        var n;
        if (t) {
            while (t.uT === or && t.x) {
                t = t.x;
            }
            if (t.uT === ir) {
                e.r = t.n;
            } else {
                if (t.uT === Ki && Sa.test(t.tT)) {
                    e.r = t.tT;
                } else if (n = Ca(t)) {
                    e.rx = n;
                } else {
                    e.x = _a(t);
                }
            }
            return e;
        }
    }
    function Ca(t) {
        var e = [], n;
        while (t.uT === ar && t.r.uT === rr) {
            n = t.r;
            if (n.x) {
                if (n.x.uT === ir) {
                    e.unshift(n.x);
                } else {
                    e.unshift(_a(n.x));
                }
            } else {
                e.unshift(n.n);
            }
            t = t.x;
        }
        if (t.uT !== ir) {
            return null;
        }
        return {
            r: t.n,
            qW: e
        };
    }
    var La = Pa;
    function Pa(t, e) {
        var n = ba(t), i;
        if (!n) {
            return null;
        }
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        i = {
            uT: Ni
        };
        Oa(n, i);
        return i;
    }
    var Na = Ia;
    function Ia(t, e) {
        var n, i;
        if (!t.fW("&")) {
            return null;
        }
        t.hW();
        n = ba(t);
        if (!n) {
            return null;
        }
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        i = {
            uT: Ni
        };
        Oa(n, i);
        return i;
    }
    var qa = za;
    function za(t, e) {
        var n, i, r, a, s;
        n = t.YC;
        if (!t.fW(">")) {
            return null;
        }
        t.hW();
        i = t.YC;
        t.rW = true;
        r = ba(t);
        t.rW = false;
        t.hW();
        a = ba(t);
        t.hW();
        if (!r) {
            return null;
        }
        s = {
            uT: ki
        };
        Oa(r, s);
        t.hW();
        if (a) {
            s = {
                uT: Ii,
                n: vr,
                f: [ s ]
            };
            Oa(a, s);
        }
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        return s;
    }
    var Ba = ka;
    function ka(t, e) {
        var n;
        if (!t.fW("!")) {
            return null;
        }
        n = t._V().indexOf(e.close);
        if (n !== -1) {
            t.YC += n + e.close.length;
            return {
                uT: ji
            };
        }
    }
    var ja = Da;
    function Da(t, e) {
        var n, i, r;
        n = t.YC;
        i = ba(t);
        if (!i) {
            return null;
        }
        for (r = 0; r < e.length; r += 1) {
            if (t._V().substr(0, e[r].length) === e[r]) {
                return i;
            }
        }
        t.YC = n;
        return ia(t);
    }
    var Ga = Fa;
    function Fa(t, e) {
        var n, i, r, a;
        n = t.YC;
        try {
            i = ja(t, [ e.close ]);
        } catch (t) {
            a = t;
        }
        if (!i) {
            if (t.$T.charAt(n) === "!") {
                t.YC = n;
                return null;
            }
            if (a) {
                throw a;
            }
        }
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "' after reference");
            if (!i) {
                if (t.iW() === "!") {
                    return null;
                }
                t.error("Expected expression or legal reference");
            }
        }
        r = {
            uT: Pi
        };
        Oa(i, r);
        return r;
    }
    var Va = Ya;
    var Wa = /^yield\s*/;
    function Ya(t, e) {
        var n, i, r;
        if (!t.gW(Wa)) {
            return null;
        }
        n = t.YC;
        i = t.gW(/^[a-zA-Z_$][a-zA-Z_$0-9\-]*/);
        t.hW();
        if (!t.fW(e.close)) {
            t.error("expected legal partial name");
        }
        r = {
            uT: Wi
        };
        if (i) {
            r.n = i;
        }
        return r;
    }
    var Xa = Ka;
    function Ka(t, e) {
        var n, i, r, a;
        n = t.YC;
        if (!t.fW(e.open)) {
            return null;
        }
        t.hW();
        if (!t.fW("/")) {
            t.YC = n;
            return null;
        }
        t.hW();
        i = t._V();
        r = i.indexOf(e.close);
        if (r !== -1) {
            a = {
                uT: zi,
                r: i.substr(0, r).split(" ")[0]
            };
            t.YC += r;
            if (!t.fW(e.close)) {
                t.error("Expected closing delimiter '" + e.close + "'");
            }
            return a;
        }
        t.YC = n;
        return null;
    }
    var Za = Ja;
    var $a = /^\s*else\s*/;
    function Ja(t, e) {
        var n = t.YC;
        if (!t.fW(e.open)) {
            return null;
        }
        if (!t.gW($a)) {
            t.YC = n;
            return null;
        }
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        return {
            uT: Er
        };
    }
    var Qa = es;
    var ts = /^\s*elseif\s+/;
    function es(t, e) {
        var n = t.YC, i;
        if (!t.fW(e.open)) {
            return null;
        }
        if (!t.gW(ts)) {
            t.YC = n;
            return null;
        }
        i = ba(t);
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        return {
            uT: gr,
            x: i
        };
    }
    var ns = {
        Zf: dr,
        sW: cr,
        tW: pr,
        uW: vr,
        vW: lr
    };
    var is = os;
    var rs = /^\s*:\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/, as = /^\s*,\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/, ss = new RegExp("^(" + Object.keys(ns).join("|") + ")\\b");
    function os(t, e) {
        var n, i, r, a, s, o, f, u, h, c, l, d;
        n = t.YC;
        if (t.fW("^")) {
            r = {
                uT: Ii,
                f: [],
                n: lr
            };
        } else if (t.fW("#")) {
            r = {
                uT: Ii,
                f: []
            };
            if (t.fW("partial")) {
                t.YC = n - t.wW[0].length;
                t.error("Partial definitions can only be at the top level of the template, or immediately inside components");
            }
            if (f = t.gW(ss)) {
                d = f;
                r.n = ns[f];
            }
        } else {
            return null;
        }
        t.hW();
        i = ba(t);
        if (!i) {
            t.error("Expected expression");
        }
        if (l = t.gW(rs)) {
            var v = undefined;
            if (v = t.gW(as)) {
                r.xW = l + "," + v;
            } else {
                r.xW = l;
            }
        }
        t.hW();
        if (!t.fW(e.close)) {
            t.error("Expected closing delimiter '" + e.close + "'");
        }
        t.yW += 1;
        s = r.f;
        h = [];
        do {
            if (a = Xa(t, e)) {
                if (d && a.r !== d) {
                    t.error("Expected " + e.open + "/" + d + "" + e.close);
                }
                t.yW -= 1;
                c = true;
            } else if (a = Qa(t, e)) {
                if (r.n === lr) {
                    t.error("{{else}} not allowed in {{#unless}}");
                }
                if (o) {
                    t.error("illegal {{elseif...}} after {{else}}");
                }
                if (!u) {
                    u = fs(i, r.n);
                }
                u.f.push({
                    uT: Ii,
                    n: cr,
                    x: _a(hs(h.concat(a.x))),
                    f: s = []
                });
                h.push(us(a.x));
            } else if (a = Za(t, e)) {
                if (r.n === lr) {
                    t.error("{{else}} not allowed in {{#unless}}");
                }
                if (o) {
                    t.error("there can only be one {{else}} block, at the end of a section");
                }
                o = true;
                if (!u) {
                    u = fs(i, r.n);
                    s = u.f;
                } else {
                    u.f.push({
                        uT: Ii,
                        n: cr,
                        x: _a(hs(h)),
                        f: s = []
                    });
                }
            } else {
                a = t.read(Ko);
                if (!a) {
                    break;
                }
                s.push(a);
            }
        } while (!c);
        if (u) {
            if (r.n === vr) {
                r.n = pr;
            }
            r.Mi = u;
        }
        Oa(i, r);
        if (!r.f.length) {
            delete r.f;
        }
        return r;
    }
    function fs(t, e) {
        var n;
        if (e === vr) {
            n = {
                uT: Ii,
                n: cr,
                f: []
            };
            Oa(us(t), n);
        } else {
            n = {
                uT: Ii,
                n: lr,
                f: []
            };
            Oa(t, n);
        }
        return n;
    }
    function us(t) {
        if (t.uT === sr && t.Li === "!") {
            return t.lM;
        }
        return {
            uT: sr,
            Li: "!",
            lM: cs(t)
        };
    }
    function hs(t) {
        if (t.length === 1) {
            return t[0];
        }
        return {
            uT: ur,
            Li: "&&",
            lM: [ cs(t[0]), cs(hs(t.slice(1))) ]
        };
    }
    function cs(t) {
        return {
            uT: or,
            x: t
        };
    }
    var ls = ps;
    var ds = "<!--", vs = "-->";
    function ps(t) {
        var e, n, i, r, a;
        e = t.YC;
        if (!t.fW(ds)) {
            return null;
        }
        i = t._V();
        r = i.indexOf(vs);
        if (r === -1) {
            t.error("Illegal HTML - expected closing comment sequence ('-->')");
        }
        n = i.substr(0, r);
        t.YC += r + 3;
        a = {
            uT: ji,
            c: n
        };
        if (t.oW) {
            a.m = t.cW(e);
        }
        return a;
    }
    var Es, gs, ms, Ts, ys, Rs, ws, xs;
    Es = /^(allowFullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultChecked|defaultMuted|defaultSelected|defer|disabled|enabled|formNoValidate|hidden|indeterminate|inert|isMap|itemScope|loop|multiple|muted|noHref|noResize|noShade|noValidate|noWrap|open|pauseOnExit|readOnly|required|reversed|scoped|seamless|selected|sortable|translate|trueSpeed|typeMustMatch|visible)$/i;
    gs = /^(?:area|base|br|col|command|doctype|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    ms = {
        zW: 34,
        AW: 38,
        BW: 39,
        qf: 60,
        Ke: 62,
        DW: 160,
        EW: 161,
        FW: 162,
        GW: 163,
        HW: 164,
        IW: 165,
        JW: 166,
        KW: 167,
        LW: 168,
        xi: 169,
        MW: 170,
        NW: 171,
        OW: 172,
        PW: 173,
        QW: 174,
        RW: 175,
        SW: 176,
        TW: 177,
        UW: 178,
        VW: 179,
        WW: 180,
        XW: 181,
        YW: 182,
        ZW: 183,
        $W: 184,
        _W: 185,
        aX: 186,
        bX: 187,
        cX: 188,
        dX: 189,
        eX: 190,
        fX: 191,
        gX: 192,
        hX: 193,
        iX: 194,
        jX: 195,
        kX: 196,
        lX: 197,
        mX: 198,
        nX: 199,
        oX: 200,
        pX: 201,
        qX: 202,
        rX: 203,
        sX: 204,
        tX: 205,
        uX: 206,
        vX: 207,
        wX: 208,
        xX: 209,
        yX: 210,
        zX: 211,
        AX: 212,
        BX: 213,
        CX: 214,
        Nf: 215,
        DX: 216,
        EX: 217,
        FX: 218,
        GX: 219,
        HX: 220,
        IX: 221,
        JX: 222,
        KX: 223,
        LX: 224,
        MX: 225,
        NX: 226,
        OX: 227,
        PX: 228,
        QX: 229,
        RX: 230,
        SX: 231,
        TX: 232,
        UX: 233,
        VX: 234,
        WX: 235,
        XX: 236,
        YX: 237,
        ZX: 238,
        $X: 239,
        _X: 240,
        aY: 241,
        bY: 242,
        cY: 243,
        dY: 244,
        eY: 245,
        fY: 246,
        dm: 247,
        gY: 248,
        hY: 249,
        iY: 250,
        jY: 251,
        kY: 252,
        lY: 253,
        mY: 254,
        nY: 255,
        oY: 338,
        pY: 339,
        qY: 352,
        rY: 353,
        sY: 376,
        tY: 402,
        uY: 710,
        vY: 732,
        wY: 913,
        xY: 914,
        yY: 915,
        zY: 916,
        AY: 917,
        BY: 918,
        CY: 919,
        DY: 920,
        EY: 921,
        FY: 922,
        GY: 923,
        HY: 924,
        IY: 925,
        JY: 926,
        KY: 927,
        LY: 928,
        MY: 929,
        NY: 931,
        OY: 932,
        PY: 933,
        QY: 934,
        RY: 935,
        SY: 936,
        TY: 937,
        alpha: 945,
        beta: 946,
        gamma: 947,
        delta: 948,
        UY: 949,
        VY: 950,
        WY: 951,
        Om: 952,
        XY: 953,
        YY: 954,
        ZY: 955,
        $Y: 956,
        _Y: 957,
        aZ: 958,
        bZ: 959,
        cZ: 960,
        dZ: 961,
        eZ: 962,
        fZ: 963,
        gZ: 964,
        hZ: 965,
        Nm: 966,
        iZ: 967,
        jZ: 968,
        kZ: 969,
        lZ: 977,
        mZ: 978,
        nZ: 982,
        oZ: 8194,
        pZ: 8195,
        qZ: 8201,
        rZ: 8204,
        sZ: 8205,
        tZ: 8206,
        uZ: 8207,
        vZ: 8211,
        wZ: 8212,
        xZ: 8216,
        yZ: 8217,
        zZ: 8218,
        AZ: 8220,
        BZ: 8221,
        CZ: 8222,
        DZ: 8224,
        EZ: 8225,
        FZ: 8226,
        GZ: 8230,
        HZ: 8240,
        IZ: 8242,
        JZ: 8243,
        KZ: 8249,
        LZ: 8250,
        MZ: 8254,
        NZ: 8260,
        OZ: 8364,
        SA: 8465,
        PZ: 8472,
        QZ: 8476,
        RZ: 8482,
        SZ: 8501,
        TZ: 8592,
        UZ: 8593,
        VZ: 8594,
        WZ: 8595,
        XZ: 8596,
        YZ: 8629,
        ZZ: 8656,
        $Z: 8657,
        _Z: 8658,
        a$: 8659,
        b$: 8660,
        c$: 8704,
        d$: 8706,
        e$: 8707,
        empty: 8709,
        f$: 8711,
        g$: 8712,
        h$: 8713,
        i$: 8715,
        j$: 8719,
        Kf: 8721,
        k$: 8722,
        l$: 8727,
        m$: 8730,
        n$: 8733,
        o$: 8734,
        p$: 8736,
        q$: 8743,
        r$: 8744,
        s$: 8745,
        t$: 8746,
        u$: 8747,
        v$: 8756,
        w$: 8764,
        x$: 8773,
        y$: 8776,
        z$: 8800,
        A$: 8801,
        B$: 8804,
        C$: 8805,
        sub: 8834,
        sup: 8835,
        D$: 8836,
        E$: 8838,
        F$: 8839,
        G$: 8853,
        H$: 8855,
        I$: 8869,
        J$: 8901,
        K$: 8968,
        L$: 8969,
        M$: 8970,
        N$: 8971,
        lang: 9001,
        O$: 9002,
        P$: 9674,
        Q$: 9824,
        R$: 9827,
        S$: 9829,
        T$: 9830
    };
    Ts = [ 8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376 ];
    ys = new RegExp("&(#?(?:x[\\w\\d]+|\\d+|" + Object.keys(ms).join("|") + "));?", "g");
    function bs(t) {
        return t.replace(ys, function(t, e) {
            var n;
            if (e[0] !== "#") {
                n = ms[e];
            } else if (e[1] === "x") {
                n = parseInt(e.substring(2), 16);
            } else {
                n = parseInt(e.substring(1), 10);
            }
            if (!n) {
                return t;
            }
            return String.fromCharCode(Hs(n));
        });
    }
    function Hs(t) {
        if (!t) {
            return 65533;
        }
        if (t === 10) {
            return 32;
        }
        if (t < 128) {
            return t;
        }
        if (t <= 159) {
            return Ts[t - 128];
        }
        if (t < 55296) {
            return t;
        }
        if (t <= 57343) {
            return 65533;
        }
        if (t <= 65535) {
            return t;
        }
        return 65533;
    }
    Rs = /</g;
    ws = />/g;
    xs = /&/g;
    function _s(t) {
        return t.replace(xs, "&amp;").replace(Rs, "&lt;").replace(ws, "&gt;");
    }
    var As = /^\s*\r?\n/, Ms = /\r?\n\s*$/;
    var Os = function(t) {
        var e, n, i, r, a;
        for (e = 1; e < t.length; e += 1) {
            n = t[e];
            i = t[e - 1];
            r = t[e - 2];
            if (Ss(n) && Us(i) && Ss(r)) {
                if (Ms.test(r) && As.test(n)) {
                    t[e - 2] = r.replace(Ms, "\n");
                    t[e] = n.replace(As, "");
                }
            }
            if (Cs(n) && Ss(i)) {
                if (Ms.test(i) && Ss(n.f[0]) && As.test(n.f[0])) {
                    t[e - 1] = i.replace(Ms, "\n");
                    n.f[0] = n.f[0].replace(As, "");
                }
            }
            if (Ss(n) && Cs(i)) {
                a = qt(i.f);
                if (Ss(a) && Ms.test(a) && As.test(n)) {
                    i.f[i.f.length - 1] = a.replace(Ms, "\n");
                    t[e] = n.replace(As, "");
                }
            }
        }
        return t;
    };
    function Ss(t) {
        return typeof t === "string";
    }
    function Us(t) {
        return t.uT === ji || t.uT === Di;
    }
    function Cs(t) {
        return (t.uT === Ii || t.uT === qi) && t.f;
    }
    var Ls = function(t, e, n) {
        var i;
        if (e) {
            i = t[0];
            if (typeof i === "string") {
                i = i.replace(e, "");
                if (!i) {
                    t.shift();
                } else {
                    t[0] = i;
                }
            }
        }
        if (n) {
            i = qt(t);
            if (typeof i === "string") {
                i = i.replace(n, "");
                if (!i) {
                    t.pop();
                } else {
                    t[t.length - 1] = i;
                }
            }
        }
    };
    var Ps = js;
    var Ns = /[ \t\f\r\n]+/g;
    var Is = /^(?:pre|script|style|textarea)$/i;
    var qs = /^[ \t\f\r\n]+/;
    var zs = /[ \t\f\r\n]+$/;
    var Bs = /^(?:\r\n|\r|\n)/;
    var ks = /(?:\r\n|\r|\n)$/;
    function js(t, e, n, i, r) {
        var a, s, o, f, u, h, c, l;
        Os(t);
        a = t.length;
        while (a--) {
            s = t[a];
            if (s.jW) {
                t.splice(a, 1);
            } else if (e && s.uT === ji) {
                t.splice(a, 1);
            }
        }
        Ls(t, i ? qs : null, r ? zs : null);
        a = t.length;
        while (a--) {
            s = t[a];
            if (s.f) {
                var d = s.uT === Bi && Is.test(s.e);
                u = n || d;
                if (!n && d) {
                    Ls(s.f, Bs, ks);
                }
                if (!u) {
                    o = t[a - 1];
                    f = t[a + 1];
                    if (!o || typeof o === "string" && zs.test(o)) {
                        h = true;
                    }
                    if (!f || typeof f === "string" && qs.test(f)) {
                        c = true;
                    }
                }
                js(s.f, e, u, h, c);
            }
            if (s.Mi) {
                js(s.Mi.f, e, n, h, c);
                t.splice(a + 1, 0, s.Mi);
                delete s.Mi;
            }
            if (s.a) {
                for (l in s.a) {
                    if (s.a.hasOwnProperty(l) && typeof s.a[l] !== "string") {
                        js(s.a[l], e, n, h, c);
                    }
                }
            }
            if (s.qW) {
                js(s.qW, e, n, h, c);
            }
            if (s.tT) {
                for (l in s.tT) {
                    if (s.tT.hasOwnProperty(l)) {
                        if (L(s.tT[l].n)) {
                            js(s.tT[l].n, e, n, h, c);
                        }
                        if (L(s.tT[l].d)) {
                            js(s.tT[l].d, e, n, h, c);
                        }
                    }
                }
            }
        }
        a = t.length;
        while (a--) {
            if (typeof t[a] === "string") {
                if (typeof t[a + 1] === "string") {
                    t[a] = t[a] + t[a + 1];
                    t.splice(a + 1, 1);
                }
                if (!n) {
                    t[a] = t[a].replace(Ns, " ");
                }
                if (t[a] === "") {
                    t.splice(a, 1);
                }
            }
        }
    }
    var Ds = Fs;
    var Gs = /^([a-zA-Z]{1,}:?[a-zA-Z0-9\-]*)\s*\>/;
    function Fs(t) {
        var e, n;
        e = t.YC;
        if (!t.fW("</")) {
            return null;
        }
        if (n = t.gW(Gs)) {
            if (t.kW && n !== t.kW) {
                t.YC = e;
                return null;
            }
            return {
                uT: Fi,
                e: n
            };
        }
        t.YC -= 2;
        t.error("Illegal closing tag");
    }
    var Vs = function(t, e) {
        var n, i, r;
        n = e.length;
        while (n--) {
            i = t.indexOf(e[n]);
            if (!i) {
                return 0;
            }
            if (i === -1) {
                continue;
            }
            if (!r || i < r) {
                r = i;
            }
        }
        return r || -1;
    };
    var Ws = Ks;
    var Ys = /^[^\s"'>\/=]+/, Xs = /^[^\s"'=<>`]+/;
    function Ks(t) {
        var e, n, i;
        t.hW();
        n = t.gW(Ys);
        if (!n) {
            return null;
        }
        e = {
            name: n
        };
        i = Zs(t);
        if (i != null) {
            e.value = i;
        }
        return e;
    }
    function Zs(t) {
        var e, n, i, r;
        e = t.YC;
        if (!/[=\/>\s]/.test(t.iW())) {
            t.error("Expected `=`, `/`, `>` or whitespace");
        }
        t.hW();
        if (!t.fW("=")) {
            t.YC = e;
            return null;
        }
        t.hW();
        n = t.YC;
        i = t.yW;
        r = Qs(t, "'") || Qs(t, '"') || Js(t);
        if (r === null) {
            t.error("Expected valid attribute value");
        }
        if (t.yW !== i) {
            t.YC = n;
            t.error("An attribute value must contain as many opening section tags as closing section tags");
        }
        if (!r.length) {
            return "";
        }
        if (r.length === 1 && typeof r[0] === "string") {
            return bs(r[0]);
        }
        return r;
    }
    function $s(t) {
        var e, n, i, r, a;
        e = t.YC;
        n = t.gW(Xs);
        if (!n) {
            return null;
        }
        i = n;
        r = t.tags.map(function(t) {
            return t.open;
        });
        if ((a = Vs(i, r)) !== -1) {
            n = n.substr(0, a);
            t.YC = e + n.length;
        }
        return n;
    }
    function Js(t) {
        var e, n;
        t.U$ = true;
        e = [];
        n = Hr(t) || $s(t);
        while (n !== null) {
            e.push(n);
            n = Hr(t) || $s(t);
        }
        if (!e.length) {
            return null;
        }
        t.U$ = false;
        return e;
    }
    function Qs(t, e) {
        var n, i, r;
        n = t.YC;
        if (!t.fW(e)) {
            return null;
        }
        t.U$ = e;
        i = [];
        r = Hr(t) || to(t, e);
        while (r !== null) {
            i.push(r);
            r = Hr(t) || to(t, e);
        }
        if (!t.fW(e)) {
            t.YC = n;
            return null;
        }
        t.U$ = false;
        return i;
    }
    function to(t, e) {
        var n, i, r, a;
        n = t.YC;
        r = t._V();
        a = t.tags.map(function(t) {
            return t.open;
        });
        a.push(e);
        i = Vs(r, a);
        if (i === -1) {
            t.error("Quoted attribute value must have a closing quote");
        }
        if (!i) {
            return null;
        }
        t.YC += i;
        return r.substr(0, i);
    }
    var eo, no, io, ro, ao, so, oo;
    no = {
        V$: true,
        W$: false,
        undefined: undefined,
        X$: null
    };
    io = new RegExp("^(?:" + Object.keys(no).join("|") + ")");
    ro = /^(?:[+-]?)(?:(?:(?:0|[1-9]\d*)?\.\d+)|(?:(?:0|[1-9]\d*)\.)|(?:0|[1-9]\d*))(?:[eE][+-]?\d+)?/;
    ao = /\$\{([^\}]+)\}/g;
    so = /^\$\{([^\}]+)\}/;
    oo = /^\s*$/;
    eo = Ci.extend({
        init: function(t, e) {
            this.values = e.values;
            this.hW();
        },
        aW: function(t) {
            if (t.length !== 1 || !oo.test(this.$V)) {
                return null;
            }
            return {
                value: t[0].tT
            };
        },
        bW: [ function t(e) {
            var n;
            if (!e.values) {
                return null;
            }
            n = e.gW(so);
            if (n && e.values.hasOwnProperty(n)) {
                return {
                    tT: e.values[n]
                };
            }
        }, function t(e) {
            var n;
            if (n = e.gW(io)) {
                return {
                    tT: no[n]
                };
            }
        }, function t(e) {
            var n;
            if (n = e.gW(ro)) {
                return {
                    tT: +n
                };
            }
        }, function t(e) {
            var n = Dr(e), i;
            if (n && (i = e.values)) {
                return {
                    tT: n.tT.replace(ao, function(t, e) {
                        return e in i ? i[e] : e;
                    })
                };
            }
            return n;
        }, function t(e) {
            var n, i;
            if (!e.fW("{")) {
                return null;
            }
            n = {};
            e.hW();
            if (e.fW("}")) {
                return {
                    tT: n
                };
            }
            while (i = fo(e)) {
                n[i.key] = i.value;
                e.hW();
                if (e.fW("}")) {
                    return {
                        tT: n
                    };
                }
                if (!e.fW(",")) {
                    return null;
                }
            }
            return null;
        }, function t(e) {
            var n, i;
            if (!e.fW("[")) {
                return null;
            }
            n = [];
            e.hW();
            if (e.fW("]")) {
                return {
                    tT: n
                };
            }
            while (i = e.read()) {
                n.push(i.tT);
                e.hW();
                if (e.fW("]")) {
                    return {
                        tT: n
                    };
                }
                if (!e.fW(",")) {
                    return null;
                }
                e.hW();
            }
            return null;
        } ]
    });
    function fo(t) {
        var e, n, i;
        t.hW();
        e = Fr(t);
        if (!e) {
            return null;
        }
        i = {
            key: e
        };
        t.hW();
        if (!t.fW(":")) {
            return null;
        }
        t.hW();
        n = t.read();
        if (!n) {
            return null;
        }
        i.value = n.tT;
        return i;
    }
    var uo = function(t, e) {
        var n = new eo(t, {
            values: e
        });
        return n.result;
    };
    var ho = po;
    var co = /^([a-zA-Z_$][a-zA-Z_$0-9]*)\(/, lo = /\)\s*$/, vo;
    vo = Ci.extend({
        bW: [ ba ]
    });
    function po(t, e) {
        var n, i, r, a, s, o, f, u, h;
        if (typeof t === "string") {
            if (i = co.exec(t)) {
                var c = t.lastIndexOf(")");
                if (!lo.test(t)) {
                    e.error("Invalid input after method call expression '" + t.slice(c + 1) + "'");
                }
                n = {
                    qW: i[1]
                };
                a = "[" + t.slice(n.qW.length + 1, c) + "]";
                r = new vo(a);
                n.a = _a(r.result[0]);
                return n;
            }
            if (t.indexOf(":") === -1) {
                return t.trim();
            }
            t = [ t ];
        }
        n = {};
        f = [];
        u = [];
        if (t) {
            while (t.length) {
                s = t.shift();
                if (typeof s === "string") {
                    o = s.indexOf(":");
                    if (o === -1) {
                        f.push(s);
                    } else {
                        if (o) {
                            f.push(s.substr(0, o));
                        }
                        if (s.length > o + 1) {
                            u[0] = s.substring(o + 1);
                        }
                        break;
                    }
                } else {
                    f.push(s);
                }
            }
            u = u.concat(t);
        }
        if (!f.length) {
            n = "";
        } else if (u.length || typeof f !== "string") {
            n = {
                n: f.length === 1 && typeof f[0] === "string" ? f[0] : f
            };
            if (u.length === 1 && typeof u[0] === "string") {
                h = uo("[" + u[0] + "]");
                n.a = h ? h.value : u[0].trim();
            } else {
                n.d = u;
            }
        } else {
            n = f;
        }
        return n;
    }
    var Eo = /^[a-zA-Z]{1,}:?[a-zA-Z0-9\-]*/, go = /^[\s\n\/>]/, mo = /^on/, To = /^on-([a-zA-Z\\*\\.$_][a-zA-Z\\*\\.$_0-9\-]+)$/, yo = /^(?:change|reset|teardown|update|construct|config|init|render|unrender|detach|insert)$/, Ro = {
        Y$: "t0",
        Z$: "t1",
        $$: "t2",
        _$: "o"
    }, wo = {
        jW: true
    }, xo;
    xo = {
        a_: [ "li" ],
        b_: [ "dt", "dd" ],
        c_: [ "dt", "dd" ],
        m: "address article aside blockquote div dl fieldset footer form h1 h2 h3 h4 h5 h6 header hgroup hr main menu nav ol p pre section table ul".split(" "),
        d_: [ "rt", "rp" ],
        e_: [ "rt", "rp" ],
        f_: [ "optgroup" ],
        g_: [ "option", "optgroup" ],
        h_: [ "tbody", "tfoot" ],
        i_: [ "tbody", "tfoot" ],
        j_: [ "tbody" ],
        k_: [ "tr", "tbody" ],
        l_: [ "td", "th", "tr" ],
        m_: [ "td", "th", "tr" ]
    };
    var bo = Ho;
    function Ho(t) {
        var e, n, i, r, a, s, o, f, u, h, c, l, d, v, p, E;
        e = t.YC;
        if (t.kW || t.U$) {
            return null;
        }
        if (!t.fW("<")) {
            return null;
        }
        if (t.iW() === "/") {
            return null;
        }
        n = {};
        if (t.oW) {
            n.m = t.cW(e);
        }
        if (t.fW("!")) {
            n.uT = Xi;
            if (!t.gW(/^doctype/i)) {
                t.error("Expected DOCTYPE declaration");
            }
            n.a = t.gW(/^(.+?)>/);
            return n;
        }
        n.uT = Bi;
        n.e = t.gW(Eo);
        if (!n.e) {
            return null;
        }
        if (!go.test(t.iW())) {
            t.error("Illegal tag name");
        }
        a = function(e, i) {
            var r = i.n || i;
            if (yo.test(r)) {
                t.YC -= r.length;
                t.error("Cannot use reserved event names (change, reset, teardown, update, construct, config, init, render, unrender, detach, insert)");
            }
            n.tT[e] = i;
        };
        t.hW();
        while (s = Hr(t) || Ws(t)) {
            if (s.name) {
                if (i = Ro[s.name]) {
                    n[i] = ho(s.value, t);
                } else if (r = To.exec(s.name)) {
                    if (!n.tT) n.tT = {};
                    o = ho(s.value, t);
                    a(r[1], o);
                } else {
                    if (!t.n_ || !mo.test(s.name)) {
                        if (!n.a) n.a = {};
                        n.a[s.name] = s.value || (s.value === "" ? "" : 0);
                    }
                }
            } else {
                if (!n.qW) n.qW = [];
                n.qW.push(s);
            }
            t.hW();
        }
        t.hW();
        if (t.fW("/")) {
            f = true;
        }
        if (!t.fW(">")) {
            return null;
        }
        var g = n.e.toLowerCase();
        var m = t.vT;
        if (!f && !gs.test(n.e)) {
            t.o_.push(g);
            if (g === "script" || g === "style") {
                t.kW = g;
            }
            u = [];
            h = b(null);
            do {
                v = t.YC;
                p = t._V();
                if (!_o(g, p)) {
                    d = true;
                } else if (E = Ds(t)) {
                    d = true;
                    var T = E.e.toLowerCase();
                    if (T !== g) {
                        t.YC = v;
                        if (!~t.o_.indexOf(T)) {
                            var y = "Unexpected closing tag";
                            if (gs.test(T)) {
                                y += " (<" + T + "> is a void element - it cannot contain children)";
                            }
                            t.error(y);
                        }
                    }
                } else if (l = Xa(t, {
                    open: t.wW[0],
                    close: t.wW[1]
                })) {
                    d = true;
                    t.YC = v;
                } else {
                    if (l = t.read(Zo)) {
                        if (h[l.n]) {
                            t.YC = v;
                            t.error("Duplicate partial definition");
                        }
                        Ps(l.f, t.xT, m, !m, !m);
                        h[l.n] = l.f;
                        c = true;
                    } else {
                        if (l = t.read(Ko)) {
                            u.push(l);
                        } else {
                            d = true;
                        }
                    }
                }
            } while (!d);
            if (u.length) {
                n.f = u;
            }
            if (c) {
                n.m = h;
            }
            t.o_.pop();
        }
        t.kW = null;
        if (t.p_ && t.p_.indexOf(g) !== -1) {
            return wo;
        }
        return n;
    }
    function _o(t, e) {
        var n, i;
        n = /^<([a-zA-Z][a-zA-Z0-9]*)/.exec(e);
        i = xo[t];
        if (!n || !i) {
            return true;
        }
        return !~i.indexOf(n[1].toLowerCase());
    }
    var Ao = Mo;
    function Mo(t) {
        var e, n, i, r;
        n = t._V();
        r = t.kW ? "</" + t.kW : "<";
        if (t.kW && !t.Wb[t.kW]) {
            e = n.indexOf(r);
        } else {
            i = t.tags.map(function(t) {
                return t.open;
            });
            i = i.concat(t.tags.map(function(t) {
                return "\\" + t.open;
            }));
            if (t.U$ === true) {
                i.push('"', "'", "=", "<", ">", "`");
            } else if (t.U$) {
                i.push(t.U$);
            } else {
                i.push(r);
            }
            e = Vs(n, i);
        }
        if (!e) {
            return null;
        }
        if (e === -1) {
            e = n.length;
        }
        t.YC += e;
        return t.kW ? n.substr(0, e) : bs(n.substr(0, e));
    }
    var Oo = Uo;
    var So = /[-\/\\^$*+?.()|[\]{}]/g;
    function Uo(t) {
        return t.replace(So, "\\$&");
    }
    var Co = qo;
    var Lo = /^<!--\s*/, Po = /s*>\s*([a-zA-Z_$][-a-zA-Z_$0-9]*)\s*/, No = /\s*-->/, Io;
    function qo(t) {
        var e = t.YC, n = t.wW[0], i = t.wW[1], r = undefined, a = undefined;
        if (!t.gW(Lo) || !t.fW(n)) {
            t.YC = e;
            return null;
        }
        var s = t.gW(Po);
        K("Inline partial comments are deprecated.\nUse this...\n  {{#partial " + s + "}} ... {{/partial}}\n\n...instead of this:\n  <!-- {{>" + s + "}} --> ... <!-- {{/" + s + "}} -->'");
        if (!t.fW(i) || !t.gW(No)) {
            t.YC = e;
            return null;
        }
        r = [];
        var o = new RegExp("^<!--\\s*" + Oo(n) + "\\s*\\/\\s*" + s + "\\s*" + Oo(i) + "\\s*-->");
        do {
            if (t.gW(o)) {
                a = true;
            } else {
                Io = t.read(Ko);
                if (!Io) {
                    t.error("expected closing comment ('<!-- " + n + "/" + s + "" + i + " -->')");
                }
                r.push(Io);
            }
        } while (!a);
        return {
            uT: Yi,
            f: r,
            n: s
        };
    }
    var zo = ko;
    var Bo = /^#\s*partial\s+/;
    function ko(t) {
        var e, n, i, r, a;
        e = t.YC;
        var s = t.wW;
        if (!t.fW(s[0])) {
            return null;
        }
        if (!t.gW(Bo)) {
            t.YC = e;
            return null;
        }
        n = t.gW(/^[a-zA-Z_$][a-zA-Z_$0-9\-]*/);
        if (!n) {
            t.error("expected legal partial name");
        }
        if (!t.fW(s[1])) {
            t.error("Expected closing delimiter '" + s[1] + "'");
        }
        i = [];
        do {
            if (r = Xa(t, {
                open: t.wW[0],
                close: t.wW[1]
            })) {
                if (!r.r === "partial") {
                    t.error("Expected " + s[0] + "/partial" + s[1]);
                }
                a = true;
            } else {
                r = t.read(Ko);
                if (!r) {
                    t.error("Expected " + s[0] + "/partial" + s[1]);
                }
                i.push(r);
            }
        } while (!a);
        return {
            uT: Yi,
            n: n,
            f: i
        };
    }
    var jo = Do;
    function Do(e) {
        var n = [];
        var i = b(null);
        var r = false;
        var a = e.vT;
        while (e.YC < e.$T.length) {
            var s = e.YC, o = undefined, f = undefined;
            if (f = e.read(Zo)) {
                if (i[f.n]) {
                    e.YC = s;
                    e.error("Duplicated partial definition");
                }
                Ps(f.f, e.xT, a, !a, !a);
                i[f.n] = f.f;
                r = true;
            } else if (o = e.read(Ko)) {
                n.push(o);
            } else {
                e.error("Unexpected template content");
            }
        }
        var u = {
            tT: t,
            uT: n
        };
        if (r) {
            u.m = i;
        }
        return u;
    }
    var Go = Xo;
    var Fo = [ qa, Na, is, Va, Ga, Ba ];
    var Vo = [ La ];
    var Wo = [ Na, is, Ga ];
    var Yo = undefined;
    function Xo(t, e) {
        return new Yo(t, e || {}).result;
    }
    var Ko = [ Hr, ls, bo, Ao ];
    var Zo = [ Co, zo ];
    Yo = Ci.extend({
        init: function(t, e) {
            var n = e.zT || [ "{{{", "}}}" ], i = e.q_ || [ "[[", "]]" ], r = e.r_ || [ "[[[", "]]]" ];
            this.wW = e.yT || [ "{{", "}}" ];
            this.tags = [ {
                nW: false,
                s_: false,
                open: this.wW[0],
                close: this.wW[1],
                mW: Fo
            }, {
                nW: false,
                s_: true,
                open: n[0],
                close: n[1],
                mW: Vo
            }, {
                nW: true,
                s_: false,
                open: i[0],
                close: i[1],
                mW: Wo
            }, {
                nW: true,
                s_: true,
                open: r[0],
                close: r[1],
                mW: Vo
            } ];
            this.lW();
            this.yW = 0;
            this.o_ = [];
            this.Wb = {
                t_: !e.Wb || e.Wb.t_ !== false,
                style: !e.Wb || e.Wb.style !== false
            };
            if (e.wT === true) {
                e.wT = {
                    elements: "applet base basefont body frame frameset head html isindex link meta noframes noscript object param script style title".split(" "),
                    u_: true
                };
            }
            this.xT = e.xT !== false;
            this.vT = e.vT;
            this.p_ = e.wT && e.wT.elements;
            this.n_ = e.wT && e.wT.u_;
            this.oW = e.oW;
        },
        aW: function(e) {
            if (!e.length) {
                return {
                    uT: [],
                    tT: t
                };
            }
            if (this.yW > 0) {
                this.error("A section was left open");
            }
            Ps(e[0].uT, this.xT, this.vT, !this.vT, !this.vT);
            return e[0];
        },
        bW: [ jo ],
        lW: function() {
            this.tags.sort(function(t, e) {
                return e.open.length - t.open.length;
            });
        }
    });
    var $o = [ "preserveWhitespace", "sanitize", "stripComments", "delimiters", "tripleDelimiters", "interpolate" ];
    var Jo = {
        v_: ef,
        w_: nf,
        x_: rf,
        y_: af,
        z_: Qo,
        parse: tf
    };
    function Qo(t) {
        var e = b(Jo);
        e.parse = function(e, n) {
            return tf(e, n || t);
        };
        return e;
    }
    function tf(t, e) {
        if (!Go) {
            throw new Error("Missing Ractive.parse - cannot parse template. Either preparse or use the version that includes the parser");
        }
        return Go(t, e || this.options);
    }
    function ef(t, e) {
        var n;
        if (!r) {
            if (e && e.A_) {
                return;
            }
            throw new Error("Cannot retrieve template #" + t + " as Ractive is not running in a browser.");
        }
        if (nf(t)) {
            t = t.substring(1);
        }
        if (!(n = document.getElementById(t))) {
            if (e && e.A_) {
                return;
            }
            throw new Error("Could not find template element with id #" + t);
        }
        if (n.tagName.toUpperCase() !== "SCRIPT") {
            if (e && e.A_) {
                return;
            }
            throw new Error("Template element with id #" + t + ", must be a <script> element");
        }
        return "textContent" in n ? n.textContent : n.innerHTML;
    }
    function nf(t) {
        return t && t[0] === "#";
    }
    function rf(t) {
        return !(typeof t === "string");
    }
    function af(t) {
        if (t.Nb) {
            t = t.Nb;
        }
        return $o.reduce(function(e, n) {
            e[n] = t[n];
            return e;
        }, {});
    }
    var sf = Jo;
    var of = {
        name: "template",
        extend: function t(e, n, i) {
            var r;
            if ("template" in i) {
                r = i.Mf;
                if (typeof r === "function") {
                    n.Mf = r;
                } else {
                    n.Mf = cf(r, n);
                }
            }
        },
        init: function t(e, n, i) {
            var r, a;
            r = "template" in i ? i.Mf : e.prototype.Mf;
            if (typeof r === "function") {
                a = r;
                r = uf(n, a);
                n.bT.Mf = {
                    _Q: a,
                    result: r
                };
            }
            r = cf(r, n);
            n.Mf = r.uT;
            if (r.m) {
                lf(n.partials, r.m);
            }
        },
        reset: function(t) {
            var e = ff(t), n;
            if (e) {
                n = cf(e, t);
                t.Mf = n.uT;
                lf(t.partials, n.m, true);
                return true;
            }
        }
    };
    function ff(t) {
        var e = t.bT.Mf, n;
        if (!e || !e._Q) {
            return;
        }
        n = uf(t, e._Q);
        if (n !== e.result) {
            e.result = n;
            n = cf(n, t);
            return n;
        }
    }
    function uf(t, e) {
        var n = hf(sf.y_(t));
        return e.call(t, n);
    }
    function hf(t) {
        var e = b(sf);
        e.parse = function(e, n) {
            return sf.parse(e, n || t);
        };
        return e;
    }
    function cf(e, n) {
        if (typeof e === "string") {
            if (e[0] === "#") {
                e = sf.v_(e);
            }
            e = Go(e, sf.y_(n));
        } else if (e == undefined) {
            throw new Error("The template cannot be " + e + ".");
        } else if (typeof e.tT !== "number") {
            throw new Error("The template parser was passed a non-string template, but the template doesn't have a version.  Make sure you're passing in the template you think you are.");
        } else if (e.tT !== t) {
            throw new Error("Mismatched template version (expected " + t + ", got " + e.tT + ") Please ensure you are using the latest version of Ractive.js in your build process as well as in your app");
        }
        return e;
    }
    function lf(t, e, n) {
        if (!e) return;
        for (var i in e) {
            if (n || !t.hasOwnProperty(i)) {
                t[i] = e[i];
            }
        }
    }
    var df = of;
    var vf, pf, Ef;
    vf = [ "adaptors", "components", "computed", "decorators", "easing", "events", "interpolators", "partials", "transitions" ];
    pf = function(t, e) {
        this.name = t;
        this.B_ = e;
    };
    pf.prototype = {
        constructor: pf,
        extend: function(t, e, n) {
            this.C_(this.B_ ? t.Nb : t, this.B_ ? e : e.constructor, n);
        },
        init: function() {},
        C_: function(t, e, n) {
            var i = this.name, r = n[i], a;
            a = b(t[i]);
            for (var s in r) {
                a[s] = r[s];
            }
            e[i] = a;
        },
        reset: function(t) {
            var e = t[this.name];
            var n = false;
            Object.keys(e).forEach(function(t) {
                var i = e[t];
                if (i.D_) {
                    if (i.D_.E_) {
                        e[t] = i.D_;
                    } else {
                        delete e[t];
                    }
                    n = true;
                }
            });
            return n;
        }
    };
    Ef = vf.map(function(t) {
        return new pf(t, t === "computed");
    });
    var gf = Ef;
    var mf = Tf;
    function Tf(t, e, n) {
        if (!/_super/.test(n)) {
            return n;
        }
        var i = function t() {
            var r = yf(i.F_, e), a = "_super" in this, s = this.G_, o;
            this.G_ = r;
            o = n.apply(this, arguments);
            if (a) {
                this.G_ = s;
            } else {
                delete this.G_;
            }
            return o;
        };
        i.F_ = t;
        i.H_ = n;
        return i;
    }
    function yf(t, e) {
        var n, i;
        if (e in t) {
            n = t[e];
            if (typeof n === "function") {
                i = n;
            } else {
                i = function t() {
                    return n;
                };
            }
        } else {
            i = z;
        }
        return i;
    }
    var Rf = bf;
    function wf(t, e, n) {
        return "options." + t + " has been deprecated in favour of options." + e + "." + (n ? " You cannot specify both options, please use options." + e + "." : "");
    }
    function xf(t, e, n) {
        if (e in t) {
            if (!(n in t)) {
                X(wf(e, n));
                t[n] = t[e];
            } else {
                throw new Error(wf(e, n, true));
            }
        }
    }
    function bf(t) {
        xf(t, "beforeInit", "onconstruct");
        xf(t, "init", "onrender");
        xf(t, "complete", "oncomplete");
        xf(t, "eventDefinitions", "events");
        if (L(t.I_)) {
            xf(t, "adaptors", "adapt");
        }
    }
    var Hf, _f, Af, Mf, Of, Sf;
    Mf = {
        DT: ui,
        JT: wi,
        data: Hi,
        Mf: df
    };
    Af = Object.keys(n);
    Sf = Lf(Af.filter(function(t) {
        return !Mf[t];
    }));
    Of = Lf(Af.concat(gf.map(function(t) {
        return t.name;
    })));
    _f = [].concat(Af.filter(function(t) {
        return !gf[t] && !Mf[t];
    }), gf, Mf.data, Mf.Mf, Mf.JT);
    Hf = {
        extend: function(t, e, n) {
            return Uf("extend", t, e, n);
        },
        init: function(t, e, n) {
            return Uf("init", t, e, n);
        },
        reset: function(t) {
            return _f.filter(function(e) {
                return e.reset && e.reset(t);
            }).map(function(t) {
                return t.name;
            });
        },
        order: _f
    };
    function Uf(t, e, n, i) {
        Rf(i);
        for (var r in i) {
            if (Sf.hasOwnProperty(r)) {
                var a = i[r];
                if (r !== "el" && typeof a === "function") {
                    X("" + r + " is a Ractive option that does not expect a function and will be ignored", t === "init" ? n : null);
                } else {
                    n[r] = a;
                }
            }
        }
        gf.forEach(function(r) {
            r[t](e, n, i);
        });
        ui[t](e, n, i);
        df[t](e, n, i);
        wi[t](e, n, i);
        Cf(e.prototype, n, i);
    }
    function Cf(t, e, n) {
        for (var i in n) {
            if (!Of[i] && n.hasOwnProperty(i)) {
                var r = n[i];
                if (typeof r === "function") {
                    r = mf(t, i, r);
                }
                e[i] = r;
            }
        }
    }
    function Lf(t) {
        var e = {};
        t.forEach(function(t) {
            return e[t] = true;
        });
        return e;
    }
    var Pf = Hf;
    var Nf = If;
    function If() {
        this.J_ = this.K_ = true;
        if (this.bound && typeof this.mV.L_ === "function") {
            this.mV.L_();
        }
    }
    var qf = zf;
    function zf() {
        var t;
        if (this.kV.length === 1) {
            return this.kV[0].detach();
        }
        t = document.createDocumentFragment();
        this.kV.forEach(function(e) {
            var n = e.detach();
            if (n) {
                t.appendChild(n);
            }
        });
        return t;
    }
    var Bf = kf;
    function kf(t) {
        var e, n, i, r;
        if (this.kV) {
            n = this.kV.length;
            for (e = 0; e < n; e += 1) {
                i = this.kV[e];
                if (i.find && (r = i.find(t))) {
                    return r;
                }
            }
            return null;
        }
    }
    var jf = Df;
    function Df(t, e) {
        var n, i, r;
        if (this.kV) {
            i = this.kV.length;
            for (n = 0; n < i; n += 1) {
                r = this.kV[n];
                if (r.uV) {
                    r.uV(t, e);
                }
            }
        }
        return e;
    }
    var Gf = Ff;
    function Ff(t, e) {
        var n, i, r;
        if (this.kV) {
            i = this.kV.length;
            for (n = 0; n < i; n += 1) {
                r = this.kV[n];
                if (r.wV) {
                    r.wV(t, e);
                }
            }
        }
        return e;
    }
    var Vf = Wf;
    function Wf(t) {
        var e, n, i, r;
        if (this.kV) {
            e = this.kV.length;
            for (n = 0; n < e; n += 1) {
                i = this.kV[n];
                if (i.xV && (r = i.xV(t))) {
                    return r;
                }
            }
            return null;
        }
    }
    var Yf = Xf;
    function Xf(t) {
        var e = t.index, n;
        if (this.kV[e + 1]) {
            n = this.kV[e + 1].M_();
        } else if (this.mV === this.root) {
            if (!this.mV.WT) {
                n = null;
            } else {
                n = this.mV.WT.N_();
            }
        } else {
            n = this.mV.N_(this);
        }
        return n;
    }
    var Kf = Zf;
    function Zf() {
        if (this.kV && this.kV[0]) {
            return this.kV[0].M_();
        }
        return null;
    }
    var $f = Jf;
    function Jf(t, e, n, i) {
        i = i || 0;
        return t.map(function(t) {
            var r, a, s;
            if (t.text) {
                return t.text;
            }
            if (t.lV) {
                return t.lV.map(function(t) {
                    return Jf(t.kV, e, n, i);
                }).join("");
            }
            r = n + "-" + i++;
            if (t.rU && (a = t.root.hU.kU[t.rU.$T])) {
                s = a.value;
            } else {
                s = t.$v();
            }
            e[r] = s;
            return "${" + r + "}";
        }).join("");
    }
    var Qf = tu;
    function tu() {
        var t, e, n, i;
        if (this.K_) {
            e = $f(this.kV, t = {}, this.root.O_);
            n = uo("[" + e + "]", t);
            if (!n) {
                i = [ this.toString() ];
            } else {
                i = n.value;
            }
            this.P_ = i;
            this.K_ = false;
        }
        return this.P_;
    }
    var eu = nu;
    function nu() {
        var t = this;
        do {
            if (t.Q_) {
                return t.Q_.Yv;
            }
        } while (t = t.parent);
        return this.root.cV || this.root.sT;
    }
    var iu = ru;
    function ru() {
        var t, e, n, i;
        if (this.J_) {
            e = $f(this.kV, t = {}, this.root.O_);
            n = uo(e, t);
            if (!n) {
                i = this.toString();
            } else {
                i = n.value;
            }
            this.value = i;
            this.J_ = false;
        }
        return this.value;
    }
    var au = function() {
        return R(this.Yv);
    };
    var su = function(t) {
        this.type = Li;
        this.text = t.Mf;
    };
    su.prototype = {
        detach: au,
        M_: function() {
            return this.Yv;
        },
        xx: function() {
            if (!this.Yv) {
                this.Yv = document.createTextNode(this.text);
            }
            return this.Yv;
        },
        toString: function(t) {
            return t ? _s(this.text) : this.text;
        },
        tU: function(t) {
            if (t) {
                return this.detach();
            }
        }
    };
    var ou = su;
    var fu = uu;
    function uu() {
        if (this.R_) {
            this.root.hU.unregister(this.rU, this);
        }
        if (this.S_) {
            this.S_.uw();
        }
    }
    var hu = cu;
    function cu() {
        return this.value;
    }
    var lu = function(t, e, n) {
        var i;
        this.ZU = e;
        this.T_ = false;
        this.root = t.root;
        this.qU = t.qU;
        this.uU = n;
        i = Kt(t.root, e, t.qU);
        if (i != undefined) {
            this.resolve(i);
        } else {
            ve.UU(this);
        }
    };
    lu.prototype = {
        resolve: function(t) {
            if (this.rU && !t) {
                ve.UU(this);
            }
            this.T_ = true;
            this.rU = t;
            this.uU(t);
        },
        U_: function() {
            this.resolve(Et(this.ZU));
        },
        V_: function(t, e) {
            var n;
            if (this.rU != undefined) {
                n = this.rU.replace(t, e);
                if (n !== undefined) {
                    this.resolve(n);
                }
            }
        },
        uw: function() {
            if (!this.T_) {
                ve.VU(this);
            }
        }
    };
    var du = lu;
    var vu = function(t, e, n) {
        this.qU = t.qU;
        this.ZU = e;
        this.uU = n;
        this.V_();
    };
    var pu = {
        W_: {
            prefix: "c",
            n$: [ "context" ]
        },
        X_: {
            prefix: "i",
            n$: [ "index" ]
        },
        Y_: {
            prefix: "k",
            n$: [ "key", "index" ]
        }
    };
    function Eu(t, e) {
        var n;
        for (var i = 0; i < e.n$.length; i++) {
            if ((n = t[e.n$[i]]) !== undefined) {
                return n;
            }
        }
    }
    vu.prototype = {
        V_: function() {
            var t = this.ZU, e = this.qU, n = pu[t], i;
            if (!n) {
                throw new Error('Unknown special reference "' + t + '" - valid references are @index, @key and @keypath');
            }
            if (this.Z_) {
                return this.uU(Et("@" + n.prefix + Eu(this.Z_, n)));
            }
            if (n.n$.indexOf("index") !== -1 || n.n$.indexOf("key") !== -1) {
                while (e) {
                    if (e.mV.__ === dr && (i = Eu(e, n)) !== undefined) {
                        this.Z_ = e;
                        e.a0(this);
                        return this.uU(Et("@" + n.prefix + i));
                    }
                    if (!e.parent && e.mV && e.mV.WT && e.mV.WT.qU && !e.mV.WT.NU.ET) {
                        e = e.mV.WT.qU;
                    } else {
                        e = e.parent;
                    }
                }
            } else {
                while (e) {
                    if ((i = Eu(e, n)) !== undefined) {
                        return this.uU(Et("@" + n.prefix + i.$T));
                    }
                    e = e.parent;
                }
            }
        },
        uw: function() {
            if (this.Z_) {
                this.Z_.b0(this);
            }
        }
    };
    var gu = vu;
    var mu = function(t, e, n) {
        this.qU = t.qU;
        this.ZU = e;
        this.uU = n;
        e.ZU.XT.a0(this);
        this.V_();
    };
    mu.prototype = {
        V_: function() {
            var t, e = this.ZU.ZU;
            if (e.ZU.uT === "k") {
                t = "k" + e.XT.key;
            } else {
                t = "i" + e.XT.index;
            }
            if (t !== undefined) {
                this.uU(Et("@" + t));
            }
        },
        uw: function() {
            this.ZU.ZU.XT.b0(this);
        }
    };
    var Tu = mu;
    var yu = Ru;
    function Ru(t, e) {
        var n = {}, i, r, a, s, o, f = false;
        if (!e) {
            n.c0 = i = {};
        }
        while (t) {
            if ((o = t.mV) && (r = o.d0)) {
                if (e && (a = o.e0(e))) {
                    n.ZU = {
                        XT: t,
                        ZU: a
                    };
                    return n;
                } else if (!e) {
                    for (s in r) {
                        a = r[s];
                        if (!i[a.n]) {
                            f = true;
                            i[a.n] = {
                                XT: t,
                                ZU: a
                            };
                        }
                    }
                }
            }
            if (!t.parent && t.mV && t.mV.WT && t.mV.WT.qU && !t.mV.WT.NU.ET) {
                n.f0 = true;
                t = t.mV.WT.qU;
            } else {
                t = t.parent;
            }
        }
        if (!f) {
            return undefined;
        } else {
            return n;
        }
    }
    Ru.resolve = function t(e) {
        var n = {}, i, r;
        for (i in e.c0) {
            r = e.c0[i];
            n[r.ZU.n] = r.ZU.uT === "k" ? r.XT.key : r.XT.index;
        }
        return n;
    };
    var wu = xu;
    function xu(t, e, n) {
        var i;
        if (e.charAt(0) === "@") {
            return new gu(t, e, n);
        }
        if (i = yu(t.qU, e)) {
            return new Tu(t, i, n);
        }
        return new du(t, e, n);
    }
    var bu = _u;
    var Hu = {};
    function _u(t, e) {
        var n, i;
        if (Hu[t]) {
            return Hu[t];
        }
        i = [];
        while (e--) {
            i[e] = "_" + e;
        }
        n = new Function(i.join(","), "return(" + t + ")");
        Hu[t] = n;
        return n;
    }
    var Au, Mu = Function.prototype.bind;
    Au = function(t, e, n, i) {
        var r = this;
        var a;
        a = t.root;
        this.root = a;
        this.qU = e;
        this.uU = i;
        this.mV = t;
        this.$T = n.Li;
        this.g0 = [];
        this.pending = n.r.length;
        this.h0 = n.r.map(function(t, e) {
            return wu(r, t, function(t) {
                r.resolve(e, t);
            });
        });
        this.aR = true;
        this.L_();
    };
    Au.prototype = {
        L_: function() {
            if (!this.aR) {
                return;
            }
            this.i0 = Uu(this.$T, this.g0);
            this.rU = Cu(this.i0);
            this.j0();
            this.uU(this.rU);
        },
        uw: function() {
            var t;
            while (t = this.h0.pop()) {
                t.uw();
            }
        },
        resolve: function(t, e) {
            this.g0[t] = e;
            this.L_();
        },
        j0: function() {
            var t = this;
            var e, n, i, r, a;
            r = this.rU;
            e = this.root.hU.jU[r.$T];
            if (!e) {
                a = bu(this.$T, this.h0.length);
                n = this.g0.map(function(e) {
                    var n;
                    if (e === "undefined") {
                        return function() {
                            return undefined;
                        };
                    }
                    if (e._T) {
                        n = e.value;
                        return function() {
                            return n;
                        };
                    }
                    return function() {
                        var n = t.root.hU.get(e, {
                            IV: true,
                            JV: true
                        });
                        if (typeof n === "function") {
                            n = Pu(n, t.root);
                        }
                        return n;
                    };
                });
                i = {
                    k0: this.g0.filter(Lu),
                    l0: function() {
                        var t = n.map(Su);
                        return a.apply(null, t);
                    }
                };
                e = this.root.hU.m0(r, i);
            } else {
                this.root.hU.mark(r);
            }
        },
        V_: function(t, e) {
            this.h0.forEach(function(n) {
                return n.V_(t, e);
            });
        }
    };
    var Ou = Au;
    function Su(t) {
        return t.call();
    }
    function Uu(t, e) {
        return t.replace(/_([0-9]+)/g, function(t, n) {
            var i, r;
            if (+n >= e.length) {
                return "_" + n;
            }
            i = e[n];
            if (i === undefined) {
                return "undefined";
            }
            if (i._T) {
                r = i.value;
                return typeof r === "number" ? r : '"' + r + '"';
            }
            return i.$T;
        });
    }
    function Cu(t) {
        return Et("${" + t.replace(/[\.\[\]]/g, "-").replace(/\*/, "#MUL#") + "}");
    }
    function Lu(t) {
        return t !== undefined && t[0] !== "@";
    }
    function Pu(t, e) {
        var n, i, r;
        if (t.n0) {
            return t;
        }
        i = "__ractive_" + e.O_;
        n = t[i];
        if (n) {
            return n;
        } else if (/this/.test(t.toString())) {
            H(t, i, {
                value: Mu.call(t, e),
                TR: true
            });
            for (r in t) {
                if (t.hasOwnProperty(r)) {
                    t[i][r] = t[r];
                }
            }
            e.o0.push({
                _Q: t,
                n$: i
            });
            return t[i];
        }
        H(t, "__ractive_nowrap", {
            value: t
        });
        return t.n0;
    }
    var Nu = function(t, e, n) {
        var i = this;
        this.S_ = e;
        this.root = e.root;
        this.qU = n;
        this.hU = e.root.hU;
        if (typeof t === "string") {
            this.value = t;
        } else if (t.uT === ir) {
            this.p0 = wu(this, t.n, function(t) {
                i.resolve(t);
            });
        } else {
            new Ou(e, n, t, function(t) {
                i.resolve(t);
            });
        }
    };
    Nu.prototype = {
        resolve: function(t) {
            if (this.rU) {
                this.hU.unregister(this.rU, this);
            }
            this.rU = t;
            this.value = this.hU.get(t);
            this.bind();
            this.S_.L_();
        },
        bind: function() {
            this.hU.register(this.rU, this);
        },
        V_: function(t, e) {
            if (this.p0) {
                this.p0.V_(t, e);
            }
        },
        _v: function(t) {
            this.value = t;
            this.S_.L_();
        },
        uw: function() {
            if (this.rU) {
                this.hU.unregister(this.rU, this);
            }
            if (this.p0) {
                this.p0.uw();
            }
        },
        U_: function() {
            if (this.p0) {
                this.p0.U_();
            }
        }
    };
    var Iu = Nu;
    var qu = function(t, e, n) {
        var i = this;
        var r, a, s, o;
        this.qU = o = t.qU;
        this.root = r = t.root;
        this.q0 = t;
        this.ZU = a = e.r;
        this.uU = n;
        this.r0 = [];
        if (s = Kt(r, a, o)) {
            this.WV = s;
        } else {
            this.s0 = new du(this, a, function(t) {
                i.WV = t;
                i.s0 = null;
                i.L_();
            });
        }
        this.t0 = e.qW.map(function(t) {
            return new Iu(t, i, o);
        });
        this.aR = true;
        this.L_();
    };
    qu.prototype = {
        u0: function() {
            var t = this.t0.map(zu);
            if (!t.every(Bu) || this.s0) {
                return null;
            }
            return this.WV.join(t.join("."));
        },
        L_: function() {
            if (!this.aR || this.s0) {
                return;
            }
            this.uU(this.u0());
        },
        uw: function() {
            this.t0.forEach(ne);
        },
        V_: function(t, e) {
            var n;
            if (this.WV) {
                var i = this.WV.replace(t, e);
                if (i && i !== this.WV) {
                    this.WV = i;
                    n = true;
                }
            }
            this.t0.forEach(function(i) {
                if (i.V_(t, e)) {
                    n = true;
                }
            });
            if (n) {
                this.L_();
            }
        },
        U_: function() {
            if (this.s0) {
                this.WV = Et(this.ZU);
                this.s0.uw();
                this.s0 = null;
            }
            this.t0.forEach(ku);
            this.L_();
        }
    };
    function zu(t) {
        return t.value;
    }
    function Bu(t) {
        return t != undefined;
    }
    function ku(t) {
        t.U_();
    }
    var ju = qu;
    var Du = Gu;
    function Gu(t, e) {
        var n, i, r;
        i = e.qU;
        r = e.Mf;
        t.root = i.root;
        t.qU = i;
        t.Q_ = i.Q_;
        t.Mf = e.Mf;
        t.index = e.index || 0;
        t.nW = e.Mf.Li;
        t.type = e.Mf.uT;
        t.R_ = false;
        if (n = r.r) {
            t.S_ = wu(t, n, a);
        }
        if (e.Mf.x) {
            t.S_ = new Ou(t, i, e.Mf.x, s);
        }
        if (e.Mf.rx) {
            t.S_ = new ju(t, e.Mf.rx, s);
        }
        if (t.Mf.n === lr && !t.hasOwnProperty("value")) {
            t._v(undefined);
        }
        function a(e) {
            t.resolve(e);
        }
        function s(e) {
            var n = t.rU;
            if (e != n) {
                t.resolve(e);
                if (n !== undefined) {
                    t.lV && t.lV.forEach(function(t) {
                        t.V_(n, e);
                    });
                }
            }
        }
    }
    var Fu = Vu;
    function Vu(t) {
        var e, n, i;
        if (t && t._T) {
            this.rU = t;
            this._v(t.value);
            return;
        }
        if (this.R_) {
            this.root.hU.unregister(this.rU, this);
            this.R_ = false;
            e = true;
        }
        this.rU = t;
        if (t != undefined) {
            n = this.root.hU.get(t);
            this.root.hU.register(t, this);
            this.R_ = true;
        }
        this._v(n);
        if (e && (i = this.v0)) {
            i.w0();
        }
    }
    var Wu = Yu;
    function Yu(t, e) {
        if (this.lV) {
            this.lV.forEach(function(n) {
                return n.V_(t, e);
            });
        }
        if (this.S_) {
            this.S_.V_(t, e);
        }
    }
    var Xu = {
        $v: hu,
        init: Du,
        resolve: Fu,
        V_: Wu
    };
    var Ku = function(t) {
        this.type = Pi;
        Xu.init(this, t);
    };
    Ku.prototype = {
        update: function() {
            this.Yv.data = this.value == undefined ? "" : this.value;
        },
        resolve: Xu.resolve,
        V_: Xu.V_,
        detach: au,
        uw: fu,
        xx: function() {
            if (!this.Yv) {
                this.Yv = document.createTextNode(w(this.value));
            }
            return this.Yv;
        },
        tU: function(t) {
            if (t) {
                R(this.Yv);
            }
        },
        $v: Xu.$v,
        _v: function(t) {
            var e;
            if (this.rU && (e = this.root.hU.kU[this.rU.$T])) {
                t = e.get();
            }
            if (!N(t, this.value)) {
                this.value = t;
                this.qU.L_();
                if (this.Yv) {
                    ve.TU(this);
                }
            }
        },
        M_: function() {
            return this.Yv;
        },
        toString: function(t) {
            var e = "" + w(this.value);
            return t ? _s(e) : e;
        }
    };
    var Zu = Ku;
    var $u = Ju;
    function Ju() {
        this.qU.L_();
    }
    var Qu = th;
    function th() {
        var t;
        if (this.lV.length === 1) {
            return this.lV[0].detach();
        }
        t = document.createDocumentFragment();
        this.lV.forEach(function(e) {
            t.appendChild(e.detach());
        });
        return t;
    }
    var eh = nh;
    function nh(t) {
        var e, n, i;
        n = this.lV.length;
        for (e = 0; e < n; e += 1) {
            if (i = this.lV[e].find(t)) {
                return i;
            }
        }
        return null;
    }
    var ih = rh;
    function rh(t, e) {
        var n, i;
        i = this.lV.length;
        for (n = 0; n < i; n += 1) {
            this.lV[n].uV(t, e);
        }
    }
    var ah = sh;
    function sh(t, e) {
        var n, i;
        i = this.lV.length;
        for (n = 0; n < i; n += 1) {
            this.lV[n].wV(t, e);
        }
    }
    var oh = fh;
    function fh(t) {
        var e, n, i;
        n = this.lV.length;
        for (e = 0; e < n; e += 1) {
            if (i = this.lV[e].xV(t)) {
                return i;
            }
        }
        return null;
    }
    var uh = hh;
    function hh(t) {
        if (this.lV[t.index + 1]) {
            return this.lV[t.index + 1].M_();
        }
        return this.qU.N_(this);
    }
    var ch = lh;
    function lh() {
        var t, e, n;
        if (t = this.lV.length) {
            for (e = 0; e < t; e += 1) {
                if (n = this.lV[e].M_()) {
                    return n;
                }
            }
        }
        return this.qU.N_(this);
    }
    var dh = vh;
    function vh(t) {
        var e = this;
        var n, i, r, a, s, o, f;
        if (this.x0 || this.y0 || this.__ !== dr) {
            return;
        }
        this.x0 = true;
        ve.XU(function() {
            return e.x0 = false;
        });
        n = this.qU;
        s = [];
        t.forEach(function(t, n) {
            var r, a, o, f, u;
            if (t === n) {
                s[t] = e.lV[n];
                return;
            }
            r = e.lV[n];
            if (i === undefined) {
                i = n;
            }
            if (t === -1) {
                e.z0.push(r);
                r.uw();
                return;
            }
            a = t - n;
            o = e.rU.join(n);
            f = e.rU.join(t);
            r.index = t;
            if (u = r.A0) {
                u.forEach(ph);
            }
            r.V_(o, f);
            s[t] = r;
        });
        a = this.root.hU.get(this.rU).length;
        if (i === undefined) {
            if (this.length === a) {
                return;
            }
            i = this.length;
        }
        this.length = this.lV.length = a;
        if (this.YT) {
            ve.TU(this);
        }
        o = {
            Mf: this.Mf.f,
            root: this.root,
            mV: this
        };
        for (r = i; r < a; r += 1) {
            f = s[r];
            if (!f) {
                this.B0.push(r);
            }
            this.lV[r] = f;
        }
    }
    function ph(t) {
        t.V_("", "");
    }
    var Eh = function(t, e) {
        Xu.V_.call(this, t, e);
    };
    var gh = mh;
    function mh() {
        var t = this;
        this.C0 = document.createDocumentFragment();
        this.lV.forEach(function(e) {
            return t.C0.appendChild(e.xx());
        });
        this.D0 = this.lV.slice();
        this.E0 = [];
        this.YT = true;
        return this.C0;
    }
    var Th = yh;
    function yh(t) {
        var e = this;
        var n, i;
        if (this.updating) {
            return;
        }
        this.updating = true;
        if (this.rU && (n = this.root.hU.kU[this.rU.$T])) {
            t = n.get();
        }
        if (this.B0.length) {
            i = {
                Mf: this.Mf.f || [],
                root: this.root,
                Q_: this.Q_,
                mV: this
            };
            this.B0.forEach(function(t) {
                var n;
                i.context = e.rU.join(t);
                i.index = t;
                n = new Km(i);
                e.E0.push(e.lV[t] = n);
            });
            this.B0.length = 0;
        } else if (wh(this, t)) {
            this.L_();
            if (this.YT) {
                ve.TU(this);
            }
        }
        this.value = t;
        this.updating = false;
    }
    function Rh(t, e, n) {
        if (e === dr) {
            if (t.d0 && t.d0[0]) {
                var i = t.d0[0];
                if (n && i.uT === "i" || !n && i.uT === "k") {
                    if (!n) {
                        t.length = 0;
                        t.z0 = t.lV.slice(0);
                        t.z0.forEach(function(t) {
                            return t.uw();
                        });
                    }
                }
                i.uT = n ? "k" : "i";
            }
        }
        t.__ = e;
    }
    function wh(t, e) {
        var n = {
            Mf: t.Mf.f || [],
            root: t.root,
            Q_: t.qU.Q_,
            mV: t
        };
        t.F0 = true;
        if (t.G0) {
            switch (t.G0) {
              case cr:
                t.F0 = false;
                return Ah(t, e, false, n);

              case lr:
                t.F0 = false;
                return Ah(t, e, true, n);

              case vr:
                return _h(t, n);

              case pr:
                return Hh(t, e, n);

              case dr:
                if (q(e)) {
                    Rh(t, t.G0, true);
                    return bh(t, e, n);
                }
            }
        }
        t.ordered = !!P(e);
        if (t.ordered) {
            Rh(t, dr, false);
            return xh(t, e, n);
        }
        if (q(e) || typeof e === "function") {
            if (t.Mf.xW) {
                Rh(t, dr, true);
                return bh(t, e, n);
            }
            Rh(t, vr, false);
            return _h(t, n);
        }
        Rh(t, cr, false);
        t.F0 = false;
        return Ah(t, e, false, n);
    }
    function xh(t, e, n) {
        var i, r, a;
        r = e.length;
        if (r === t.length) {
            return false;
        }
        if (r < t.length) {
            t.z0 = t.lV.splice(r, t.length - r);
            t.z0.forEach(ne);
        } else {
            if (r > t.length) {
                for (i = t.length; i < r; i += 1) {
                    n.context = t.rU.join(i);
                    n.index = i;
                    a = new Km(n);
                    t.E0.push(t.lV[i] = a);
                }
            }
        }
        t.length = r;
        return true;
    }
    function bh(t, e, n) {
        var i, r, a, s, o, f;
        a = t.hP || (t.hP = {});
        r = t.lV.length;
        while (r--) {
            s = t.lV[r];
            if (!(s.key in e)) {
                o = true;
                s.uw();
                t.z0.push(s);
                t.lV.splice(r, 1);
                a[s.key] = false;
            }
        }
        r = t.lV.length;
        while (r--) {
            s = t.lV[r];
            if (s.index !== r) {
                s.index = r;
                if (f = s.A0) {
                    f.forEach(Sh);
                }
            }
        }
        r = t.lV.length;
        for (i in e) {
            if (!a[i]) {
                o = true;
                n.context = t.rU.join(i);
                n.key = i;
                n.index = r++;
                s = new Km(n);
                t.E0.push(s);
                t.lV.push(s);
                a[i] = true;
            }
        }
        t.length = t.lV.length;
        return o;
    }
    function Hh(t, e, n) {
        if (e) {
            return _h(t, n);
        } else {
            return Mh(t);
        }
    }
    function _h(t, e) {
        var n;
        if (!t.length) {
            e.context = t.rU;
            e.index = 0;
            n = new Km(e);
            t.E0.push(t.lV[0] = n);
            t.length = 1;
            return true;
        }
    }
    function Ah(t, e, n, i) {
        var r, a, s, o, f;
        a = P(e) && e.length === 0;
        s = false;
        if (!P(e) && q(e)) {
            s = true;
            for (f in e) {
                s = false;
                break;
            }
        }
        if (n) {
            r = a || s || !e;
        } else {
            r = e && !a && !s;
        }
        if (r) {
            if (!t.length) {
                i.index = 0;
                o = new Km(i);
                t.E0.push(t.lV[0] = o);
                t.length = 1;
                return true;
            }
            if (t.length > 1) {
                t.z0 = t.lV.splice(1);
                t.z0.forEach(ne);
                return true;
            }
        } else {
            return Mh(t);
        }
    }
    function Mh(t) {
        if (t.length) {
            t.z0 = t.lV.splice(0, t.lV.length).filter(Oh);
            t.z0.forEach(ne);
            t.length = t.E0.length = 0;
            return true;
        }
    }
    function Oh(t) {
        return t.YT;
    }
    function Sh(t) {
        t.V_("", "");
    }
    var Uh = Ch;
    function Ch(t) {
        var e, n, i;
        e = "";
        n = 0;
        i = this.length;
        for (n = 0; n < i; n += 1) {
            e += this.lV[n].toString(t);
        }
        return e;
    }
    var Lh = Ph;
    function Ph() {
        var t = this;
        this.lV.forEach(ne);
        this.E0.forEach(function(e) {
            return zt(t.lV, e);
        });
        this.E0 = [];
        fu.call(this);
        this.length = 0;
        this.y0 = true;
    }
    var Nh = Ih;
    function Ih(t) {
        this.lV.forEach(t ? qh : zh);
        this.D0 = [];
        this.YT = false;
    }
    function qh(t) {
        t.tU(true);
    }
    function zh(t) {
        t.tU(false);
    }
    var Bh = kh;
    function kh() {
        var t, e, n, i, r, a, s;
        n = this.D0;
        while (t = this.z0.pop()) {
            t.tU(true);
            n.splice(n.indexOf(t), 1);
        }
        while (t = this.E0.shift()) {
            t.xx();
        }
        if (this.YT) {
            r = this.qU.H0();
        }
        s = this.lV.length;
        for (a = 0; a < s; a += 1) {
            t = this.lV[a];
            e = n.indexOf(t, a);
            if (e === a) {
                if (this.C0.childNodes.length) {
                    i = t.M_();
                    r.insertBefore(this.C0, i);
                }
                continue;
            }
            this.C0.appendChild(t.detach());
            if (e !== -1) {
                n.splice(e, 1);
            }
            n.splice(a, 0, t);
        }
        if (this.YT && this.C0.childNodes.length) {
            i = this.qU.N_(this);
            r.insertBefore(this.C0, i);
        }
        this.D0 = this.lV.slice();
    }
    var jh = function(t) {
        this.type = Ii;
        this.G0 = this.__ = t.Mf.n;
        this.I0 = this.G0 === lr;
        this.Q_ = t.Q_;
        this.lV = [];
        this.B0 = [];
        this.E0 = [];
        this.z0 = [];
        if (t.Mf.xW) {
            this.d0 = t.Mf.xW.split(",").map(function(t, e) {
                return {
                    n: t,
                    uT: e === 0 ? "k" : "i"
                };
            });
        }
        this.D0 = [];
        this.length = 0;
        Xu.init(this, t);
    };
    jh.prototype = {
        L_: $u,
        detach: Qu,
        find: eh,
        uV: ih,
        wV: ah,
        xV: oh,
        N_: uh,
        M_: ch,
        e0: function(t) {
            if (this.d0) {
                var e = this.d0.length;
                while (e--) {
                    var n = this.d0[e];
                    if (n.n === t) {
                        return n;
                    }
                }
            }
        },
        $v: Xu.$v,
        Kd: dh,
        V_: Eh,
        xx: gh,
        resolve: Xu.resolve,
        _v: Th,
        toString: Uh,
        uw: Lh,
        tU: Nh,
        update: Bh
    };
    var Dh = jh;
    var Gh = Fh;
    function Fh() {
        var t, e;
        if (this.C0) {
            t = this.J0.length;
            for (e = 0; e < t; e += 1) {
                this.C0.appendChild(this.J0[e]);
            }
            return this.C0;
        }
    }
    var Vh = Wh;
    function Wh(t) {
        var e, n, i, r;
        n = this.J0.length;
        for (e = 0; e < n; e += 1) {
            i = this.J0[e];
            if (i.nodeType !== 1) {
                continue;
            }
            if (l(i, t)) {
                return i;
            }
            if (r = i.querySelector(t)) {
                return r;
            }
        }
        return null;
    }
    var Yh = Xh;
    function Xh(t, e) {
        var n, i, r, a, s, o;
        i = this.J0.length;
        for (n = 0; n < i; n += 1) {
            r = this.J0[n];
            if (r.nodeType !== 1) {
                continue;
            }
            if (l(r, t)) {
                e.push(r);
            }
            if (a = r.querySelectorAll(t)) {
                s = a.length;
                for (o = 0; o < s; o += 1) {
                    e.push(a[o]);
                }
            }
        }
    }
    var Kh = Zh;
    function Zh() {
        if (this.YT && this.J0[0]) {
            return this.J0[0];
        }
        return this.qU.N_(this);
    }
    var $h = {}, Jh, Qh;
    try {
        c("table").innerHTML = "foo";
    } catch (t) {
        Jh = true;
        Qh = {
            K0: [ '<table class="x">', "</table>" ],
            L0: [ '<table><thead class="x">', "</thead></table>" ],
            M0: [ '<table><tbody class="x">', "</tbody></table>" ],
            N0: [ '<table><tr class="x">', "</tr></table>" ],
            SELECT: [ '<select class="x">', "</select>" ]
        };
    }
    var tc = function(t, e, n) {
        var i, r = [], a, s, o, u;
        if (t != null && t !== "") {
            if (Jh && (a = Qh[e.tagName])) {
                i = ec("DIV");
                i.innerHTML = a[0] + t + a[1];
                i = i.querySelector(".x");
                if (i.tagName === "SELECT") {
                    s = i.options[i.selectedIndex];
                }
            } else if (e.namespaceURI === f.RT) {
                i = ec("DIV");
                i.innerHTML = '<svg class="x">' + t + "</svg>";
                i = i.querySelector(".x");
            } else {
                i = ec(e.tagName);
                i.innerHTML = t;
                if (i.tagName === "SELECT") {
                    s = i.options[i.selectedIndex];
                }
            }
            while (o = i.firstChild) {
                r.push(o);
                n.appendChild(o);
            }
            if (e.tagName === "SELECT") {
                u = r.length;
                while (u--) {
                    if (r[u] !== s) {
                        r[u].selected = false;
                    }
                }
            }
        }
        return r;
    };
    function ec(t) {
        return $h[t] || ($h[t] = c(t));
    }
    var nc = ic;
    function ic(t) {
        var e, n, i;
        if (!t || t.name !== "select" || !t.bv) {
            return;
        }
        e = Bt(t.Yv.options).filter(rc);
        if (t.getAttribute("multiple")) {
            i = e.map(function(t) {
                return t.value;
            });
        } else if (n = e[0]) {
            i = n.value;
        }
        if (i !== undefined) {
            t.bv._v(i);
        }
        t.L_();
    }
    function rc(t) {
        return t.selected;
    }
    var ac = sc;
    function sc() {
        if (this.YT) {
            throw new Error("Attempted to render an item that was already rendered");
        }
        this.C0 = document.createDocumentFragment();
        this.J0 = tc(this.value, this.qU.H0(), this.C0);
        nc(this.Q_);
        this.YT = true;
        return this.C0;
    }
    var oc = fc;
    function fc(t) {
        var e;
        if (e = this.root.hU.kU[this.rU.$T]) {
            t = e.get();
        }
        if (t !== this.value) {
            this.value = t;
            this.qU.L_();
            if (this.YT) {
                ve.TU(this);
            }
        }
    }
    var uc = hc;
    function hc() {
        return this.value != undefined ? bs("" + this.value) : "";
    }
    var cc = lc;
    function lc(t) {
        if (this.YT && t) {
            this.J0.forEach(R);
            this.YT = false;
        }
    }
    var dc = vc;
    function vc() {
        var t, e;
        if (!this.YT) {
            return;
        }
        while (this.J0 && this.J0.length) {
            t = this.J0.pop();
            t.parentNode.removeChild(t);
        }
        e = this.qU.H0();
        this.J0 = tc(this.value, e, this.C0);
        e.insertBefore(this.C0, this.qU.N_(this));
        nc(this.Q_);
    }
    var pc = function(t) {
        this.type = Ni;
        Xu.init(this, t);
    };
    pc.prototype = {
        detach: Gh,
        find: Vh,
        uV: Yh,
        M_: Kh,
        $v: Xu.$v,
        V_: Xu.V_,
        xx: ac,
        resolve: Xu.resolve,
        _v: oc,
        toString: uc,
        uw: fu,
        tU: cc,
        update: dc
    };
    var Ec = pc;
    var gc = function() {
        this.qU.L_();
    };
    var mc = Tc;
    function Tc() {
        var t = this.Yv, e;
        if (t) {
            if (e = t.parentNode) {
                e.removeChild(t);
            }
            return t;
        }
    }
    var yc = function(t) {
        if (!this.Yv) {
            return null;
        }
        if (l(this.Yv, t)) {
            return this.Yv;
        }
        if (this.XT && this.XT.find) {
            return this.XT.find(t);
        }
    };
    var Rc = function(t, e) {
        if (e.qV(this, true) && e.pV) {
            (this.hV || (this.hV = [])).push(e);
        }
        if (this.XT) {
            this.XT.uV(t, e);
        }
    };
    var wc = function(t, e) {
        if (this.XT) {
            this.XT.wV(t, e);
        }
    };
    var xc = function(t) {
        if (this.XT) {
            return this.XT.xV(t);
        }
    };
    var bc = Hc;
    function Hc() {
        return null;
    }
    var _c = Ac;
    function Ac() {
        return this.Yv;
    }
    var Mc = Oc;
    function Oc(t) {
        if (!this.attributes || !this.attributes[t]) {
            return;
        }
        return this.attributes[t].value;
    }
    var Sc = /^true|on|yes|1$/i;
    var Uc = /^[0-9]+$/;
    var Cc = function(t, e) {
        var n, i, r;
        r = e.a || {};
        i = {};
        n = r.FT;
        if (n !== undefined) {
            i.FT = n === 0 || Sc.test(n);
        }
        n = r.GT;
        if (n !== undefined) {
            if (n !== 0 && Uc.test(n)) {
                i.GT = parseInt(n);
            } else {
                i.GT = n === 0 || Sc.test(n);
            }
        }
        return i;
    };
    var Lc = Pc;
    function Pc() {
        var t = this.O0 || !this.YT ? this.XT.$v() : this.XT.toString();
        if (!N(t, this.value)) {
            if (this.name === "id" && this.value) {
                delete this.root.J0[this.value];
            }
            this.value = t;
            if (this.name === "value" && this.Yv) {
                this.Yv.jV.value = t;
            }
            if (this.YT) {
                ve.TU(this);
            }
        }
    }
    var Nc, Ic, qc, zc;
    Nc = "altGlyph altGlyphDef altGlyphItem animateColor animateMotion animateTransform clipPath feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence foreignObject glyphRef linearGradient radialGradient textPath vkern".split(" ");
    Ic = "attributeName attributeType baseFrequency baseProfile calcMode clipPathUnits contentScriptType contentStyleType diffuseConstant edgeMode externalResourcesRequired filterRes filterUnits glyphRef gradientTransform gradientUnits kernelMatrix kernelUnitLength keyPoints keySplines keyTimes lengthAdjust limitingConeAngle markerHeight markerUnits markerWidth maskContentUnits maskUnits numOctaves pathLength patternContentUnits patternTransform patternUnits pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits refX refY repeatCount repeatDur requiredExtensions requiredFeatures specularConstant specularExponent spreadMethod startOffset stdDeviation stitchTiles surfaceScale systemLanguage tableValues targetX targetY textLength viewBox viewTarget xChannelSelector yChannelSelector zoomAndPan".split(" ");
    qc = function(t) {
        var e = {}, n = t.length;
        while (n--) {
            e[t[n].toLowerCase()] = t[n];
        }
        return e;
    };
    zc = qc(Nc.concat(Ic));
    var Bc = function(t) {
        var e = t.toLowerCase();
        return zc[e] || e;
    };
    var kc = function(t, e) {
        var n, i;
        n = e.indexOf(":");
        if (n !== -1) {
            i = e.substr(0, n);
            if (i !== "xmlns") {
                e = e.substring(n + 1);
                t.name = Bc(e);
                t.P0 = f[i.toLowerCase()];
                t.Q0 = i;
                if (!t.P0) {
                    throw 'Unknown namespace ("' + i + '")';
                }
                return;
            }
        }
        t.name = t.R0.P0 !== f.PT ? Bc(e) : e;
    };
    var jc = Dc;
    function Dc(t) {
        var e = t.XT.kV;
        if (e.length !== 1) {
            return;
        }
        if (e[0].type === Pi) {
            return e[0];
        }
    }
    var Gc = Fc;
    function Fc(t) {
        this.type = Gi;
        this.R0 = t.R0;
        this.root = t.root;
        kc(this, t.name);
        this.Re = Es.test(this.name);
        if (!t.value || typeof t.value === "string") {
            this.value = this.Re ? true : t.value || "";
            return;
        }
        this.qU = this.R0.qU;
        this.XT = new Km({
            Mf: t.value,
            root: this.root,
            mV: this
        });
        this.value = this.XT.$v();
        this._U = jc(this);
        this.S0 = !!this._U && !this._U.nW;
        this.aR = true;
    }
    var Vc = Wc;
    function Wc(t, e) {
        if (this.XT) {
            this.XT.V_(t, e);
        }
    }
    var Yc = Kc;
    var Xc = {
        T0: "acceptCharset",
        U0: "accessKey",
        V0: "bgColor",
        W0: "className",
        X0: "codeBase",
        Y0: "colSpan",
        Z0: "contentEditable",
        $0: "dateTime",
        _0: "dirName",
        for: "htmlFor",
        a1: "httpEquiv",
        b1: "isMap",
        c1: "maxLength",
        d1: "noValidate",
        e1: "pubDate",
        f1: "readOnly",
        g1: "rowSpan",
        h1: "tabIndex",
        i1: "useMap"
    };
    function Kc(t) {
        var e;
        this.Yv = t;
        if (!t.namespaceURI || t.namespaceURI === f.PT) {
            e = Xc[this.name] || this.name;
            if (t[e] !== undefined) {
                this.propertyName = e;
            }
            if (this.Re || this.j1) {
                this.O0 = true;
            }
            if (e === "value") {
                t.jV.value = this.value;
            }
        }
        this.YT = true;
        this.update();
    }
    var Zc = $c;
    function $c() {
        var t = this;
        var e = t.name;
        var n = t.Q0;
        var i = t.value;
        var r = t._U;
        var a = t.XT;
        if (e === "value" && (this.R0.name === "select" || this.R0.name === "textarea")) {
            return;
        }
        if (e === "value" && this.R0.getAttribute("contenteditable") !== undefined) {
            return;
        }
        if (e === "name" && this.R0.name === "input" && r) {
            return "name={{" + (r.rU.$T || r.ZU) + "}}";
        }
        if (this.Re) {
            return i ? e : "";
        }
        if (a) {
            if (a.kV.length === 1 && a.kV[0].value == null) {
                return "";
            }
            i = a.toString();
        }
        if (n) {
            e = n + ":" + e;
        }
        return i ? e + '="' + Jc(i) + '"' : e;
    }
    function Jc(t) {
        return t.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;");
    }
    var Qc = tl;
    function tl() {
        if (this.XT) {
            this.XT.uw();
        }
        if (this.name === "id") {
            delete this.root.J0[this.value];
        }
    }
    var el = nl;
    function nl() {
        var t = this.value, e, n, i, r;
        if (!this.l1) {
            this.Yv.jV.value = t;
            e = this.Yv.options;
            r = e.length;
            while (r--) {
                n = e[r];
                i = n.jV ? n.jV.value : n.value;
                if (i == t) {
                    n.selected = true;
                    break;
                }
            }
        }
    }
    var il = rl;
    function rl() {
        var t = this.value, e, n, i, r;
        if (!L(t)) {
            t = [ t ];
        }
        e = this.Yv.options;
        n = e.length;
        while (n--) {
            i = e[n];
            r = i.jV ? i.jV.value : i.value;
            i.selected = Pt(t, r);
        }
    }
    var al = sl;
    function sl() {
        var t = this;
        var e = t.Yv;
        var n = t.value;
        e.checked = n == e.jV.value;
    }
    var ol = fl;
    function fl() {
        var t, e = this.Yv, n, i, r;
        t = e.checked;
        e.value = this.R0.getAttribute("value");
        e.checked = this.R0.getAttribute("value") === this.R0.getAttribute("name");
        if (t && !e.checked && this.R0.bv) {
            i = this.R0.bv.m1;
            if (r = i.length) {
                while (r--) {
                    n = i[r];
                    if (!n.R0.Yv) {
                        return;
                    }
                    if (n.R0.Yv.checked) {
                        ve.PU(n.root);
                        return n.n1();
                    }
                }
                this.root.hU.set(n.rU, undefined);
            }
        }
    }
    var ul = hl;
    function hl() {
        var t = this;
        var e = t.R0;
        var n = t.Yv;
        var i = t.value;
        var r = e.bv;
        var a;
        var s;
        a = e.getAttribute("value");
        if (!L(i)) {
            r.o1 = n.checked = i == a;
        } else {
            s = i.length;
            while (s--) {
                if (a == i[s]) {
                    r.o1 = n.checked = true;
                    return;
                }
            }
            r.o1 = n.checked = false;
        }
    }
    var cl = ll;
    function ll() {
        this.Yv.className = w(this.value);
    }
    var dl = vl;
    function vl() {
        var t = this;
        var e = t.Yv;
        var n = t.value;
        this.root.J0[n] = e;
        e.id = n;
    }
    var pl = El;
    function El() {
        var t, e;
        t = this.Yv;
        e = this.value;
        if (e === undefined) {
            e = "";
        }
        t.style.setAttribute("cssText", e);
    }
    var gl = ml;
    function ml() {
        var t = this.value;
        if (t === undefined) {
            t = "";
        }
        if (!this.l1) {
            this.Yv.innerHTML = t;
        }
    }
    var Tl = yl;
    function yl() {
        var t = this;
        var e = t.Yv;
        var n = t.value;
        e.jV.value = n;
        if (!this.l1) {
            e.value = n == undefined ? "" : n;
        }
    }
    var Rl = wl;
    function wl() {
        if (!this.l1) {
            this.Yv[this.propertyName] = this.value;
        }
    }
    var xl = bl;
    function bl() {
        var t = this;
        var e = t.Yv;
        var n = t.P0;
        var i = t.name;
        var r = t.value;
        var a = t.XT;
        if (n) {
            e.setAttributeNS(n, i, (a || r).toString());
        } else if (!this.Re) {
            if (r == null) {
                e.removeAttribute(i);
            } else {
                e.setAttribute(i, (a || r).toString());
            }
        } else {
            if (r) {
                e.setAttribute(i, "");
            } else {
                e.removeAttribute(i);
            }
        }
    }
    var Hl = _l;
    function _l() {
        var t = this;
        var e = t.name;
        var n = t.R0;
        var i = t.Yv;
        var r;
        var a;
        if (e === "id") {
            a = dl;
        } else if (e === "value") {
            if (n.name === "select" && e === "value") {
                a = n.getAttribute("multiple") ? il : el;
            } else if (n.name === "textarea") {
                a = Tl;
            } else if (n.getAttribute("contenteditable") != null) {
                a = gl;
            } else if (n.name === "input") {
                r = n.getAttribute("type");
                if (r === "file") {
                    a = z;
                } else if (r === "radio" && n.bv && n.bv.name === "name") {
                    a = ol;
                } else {
                    a = Tl;
                }
            }
        } else if (this.j1 && e === "name") {
            if (i.type === "radio") {
                a = al;
            } else if (i.type === "checkbox") {
                a = ul;
            }
        } else if (e === "style" && i.style.setAttribute) {
            a = pl;
        } else if (e === "class" && (!i.namespaceURI || i.namespaceURI === f.PT)) {
            a = cl;
        } else if (this.O0) {
            a = Rl;
        }
        if (!a) {
            a = xl;
        }
        this.update = a;
        this.update();
    }
    var Al = function(t) {
        this.init(t);
    };
    Al.prototype = {
        L_: Lc,
        init: Gc,
        V_: Vc,
        xx: Yc,
        toString: Zc,
        uw: Qc,
        update: Hl
    };
    var Ml = Al;
    var Ol = function(t, e) {
        var n, i, r = [];
        for (n in e) {
            if (n === "twoway" || n === "lazy") {
                continue;
            }
            if (e.hasOwnProperty(n)) {
                i = new Ml({
                    R0: t,
                    name: n,
                    value: e[n],
                    root: t.root
                });
                r[n] = i;
                if (n !== "value") {
                    r.push(i);
                }
            }
        }
        if (i = r.value) {
            r.push(i);
        }
        return r;
    };
    var Sl;
    if (typeof document !== "undefined") {
        Sl = c("div");
    }
    var Ul = function(t, e) {
        this.R0 = t;
        this.root = t.root;
        this.qU = t.qU;
        this.attributes = [];
        this.XT = new Km({
            root: t.root,
            mV: this,
            Mf: [ e ]
        });
    };
    Ul.prototype = {
        L_: function() {
            if (this.Yv) {
                this.update();
            }
            this.R0.L_();
        },
        V_: function(t, e) {
            this.XT.V_(t, e);
        },
        xx: function(t) {
            this.Yv = t;
            this.q1 = t.namespaceURI === f.RT;
            this.update();
        },
        uw: function() {
            this.XT.uw();
        },
        update: function() {
            var t = this;
            var e, n;
            e = this.XT.toString();
            n = Ll(e, this.q1);
            this.attributes.filter(function(t) {
                return Pl(n, t);
            }).forEach(function(e) {
                t.Yv.removeAttribute(e.name);
            });
            n.forEach(function(e) {
                t.Yv.setAttribute(e.name, e.value);
            });
            this.attributes = n;
        },
        toString: function() {
            return this.XT.toString();
        }
    };
    var Cl = Ul;
    function Ll(t, e) {
        var n = e ? "svg" : "div";
        Sl.innerHTML = "<" + n + " " + t + "></" + n + ">";
        return Bt(Sl.childNodes[0].attributes);
    }
    function Pl(t, e) {
        var n = t.length;
        while (n--) {
            if (t[n].name === e.name) {
                return false;
            }
        }
        return true;
    }
    var Nl = function(t, e) {
        if (!e) {
            return [];
        }
        return e.map(function(e) {
            return new Cl(t, e);
        });
    };
    var Il = function(t) {
        var e, n, i, r;
        this.R0 = t;
        this.root = t.root;
        this.s1 = t.attributes[this.name || "value"];
        e = this.s1._U;
        e.v0 = this;
        if (n = e.rU) {
            if (n.$T.slice(-1) === "}") {
                K("Two-way binding does not work with expressions (`%s` on <%s>)", e.S_.i0, t.name, {
                    VT: this.root
                });
                return false;
            }
            if (n._T) {
                K("Two-way binding does not work with %s", e.S_.ZU, {
                    VT: this.root
                });
                return false;
            }
        } else {
            var a = e.Mf.r ? "'" + e.Mf.r + "' reference" : "expression";
            X("The %s being used for two-way binding is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity", a, {
                VT: this.root
            });
            e.S_.U_();
            n = e.rU;
        }
        this.s1.j1 = true;
        this.rU = n;
        i = this.root.hU.get(n);
        if (i === undefined && this.t1) {
            i = this.t1();
            if (i !== undefined) {
                this.root.hU.set(n, i);
            }
        }
        if (r = zl(t)) {
            this.u1 = i;
            r.v1.push(this);
        }
    };
    Il.prototype = {
        n1: function() {
            var t = this;
            ve.start(this.root);
            this.s1.l1 = true;
            this.root.hU.set(this.rU, this.$v());
            ve.XU(function() {
                return t.s1.l1 = false;
            });
            ve.end();
        },
        w0: function() {
            var t, e, n;
            e = this.rU;
            n = this.s1._U.rU;
            if (e === n) {
                return;
            }
            zt(this.root.w1[e.$T], this);
            this.rU = n;
            t = this.root.w1[n.$T] || (this.root.w1[n.$T] = []);
            t.push(this);
        },
        uw: function() {}
    };
    Il.extend = function(t) {
        var e = this, n;
        n = function(t) {
            Il.call(this, t);
            if (this.init) {
                this.init();
            }
        };
        n.prototype = b(e.prototype);
        M(n.prototype, t);
        n.extend = Il.extend;
        return n;
    };
    var ql = Il;
    function zl(t) {
        while (t = t.parent) {
            if (t.name === "form") {
                return t;
            }
        }
    }
    var Bl = kl;
    function kl() {
        this.jV.bv.n1();
    }
    var jl;
    jl = ql.extend({
        t1: function() {
            return "";
        },
        $v: function() {
            return this.R0.Yv.value;
        },
        xx: function() {
            var t = this.R0.Yv, e, n = false;
            this.YT = true;
            e = this.root.GT;
            if (this.R0.GT === true) {
                e = true;
            } else if (this.R0.GT === false) {
                e = false;
            } else if (I(this.R0.GT)) {
                e = false;
                n = +this.R0.GT;
            } else if (I(e || "")) {
                n = +e;
                e = false;
                this.R0.GT = n;
            }
            this.z1 = n ? Fl : Bl;
            t.addEventListener("change", Bl, false);
            if (!e) {
                t.addEventListener("input", this.z1, false);
                if (t.attachEvent) {
                    t.addEventListener("keyup", this.z1, false);
                }
            }
            t.addEventListener("blur", Gl, false);
        },
        tU: function() {
            var t = this.R0.Yv;
            this.YT = false;
            t.removeEventListener("change", Bl, false);
            t.removeEventListener("input", this.z1, false);
            t.removeEventListener("keyup", this.z1, false);
            t.removeEventListener("blur", Gl, false);
        }
    });
    var Dl = jl;
    function Gl() {
        var t;
        Bl.call(this);
        t = this.jV.root.hU.get(this.jV.bv.rU);
        this.value = t == undefined ? "" : t;
    }
    function Fl() {
        var t = this.jV.bv, e = this;
        if (!!t.A1) clearTimeout(t.A1);
        t.A1 = setTimeout(function() {
            if (t.YT) Bl.call(e);
            t.A1 = undefined;
        }, t.R0.GT);
    }
    var Vl = Dl.extend({
        t1: function() {
            return this.R0.XT ? this.R0.XT.toString() : "";
        },
        $v: function() {
            return this.R0.Yv.innerHTML;
        }
    });
    var Wl = Vl;
    var Yl = Kl;
    var Xl = {};
    function Kl(t, e, n) {
        var i = t + e + n;
        return Xl[i] || (Xl[i] = []);
    }
    var Zl = ql.extend({
        name: "checked",
        init: function() {
            this.m1 = Yl(this.root.O_, "radio", this.R0.getAttribute("name"));
            this.m1.push(this);
        },
        xx: function() {
            var t = this.R0.Yv;
            t.addEventListener("change", Bl, false);
            if (t.attachEvent) {
                t.addEventListener("click", Bl, false);
            }
        },
        tU: function() {
            var t = this.R0.Yv;
            t.removeEventListener("change", Bl, false);
            t.removeEventListener("click", Bl, false);
        },
        n1: function() {
            ve.start(this.root);
            this.m1.forEach(function(t) {
                t.root.hU.set(t.rU, t.$v());
            });
            ve.end();
        },
        $v: function() {
            return this.R0.Yv.checked;
        },
        uw: function() {
            zt(this.m1, this);
        }
    });
    var $l = Zl;
    var Jl = ql.extend({
        name: "name",
        init: function() {
            this.m1 = Yl(this.root.O_, "radioname", this.rU.$T);
            this.m1.push(this);
            this.B1 = true;
        },
        t1: function() {
            if (this.R0.getAttribute("checked")) {
                return this.R0.getAttribute("value");
            }
        },
        xx: function() {
            var t = this.R0.Yv;
            t.name = "{{" + this.rU.$T + "}}";
            t.checked = this.root.hU.get(this.rU) == this.R0.getAttribute("value");
            t.addEventListener("change", Bl, false);
            if (t.attachEvent) {
                t.addEventListener("click", Bl, false);
            }
        },
        tU: function() {
            var t = this.R0.Yv;
            t.removeEventListener("change", Bl, false);
            t.removeEventListener("click", Bl, false);
        },
        $v: function() {
            var t = this.R0.Yv;
            return t.jV ? t.jV.value : t.value;
        },
        n1: function() {
            if (this.R0.Yv.checked) {
                ql.prototype.n1.call(this);
            }
        },
        w0: function(t, e) {
            var n;
            ql.prototype.w0.call(this, t, e);
            if (n = this.R0.Yv) {
                n.name = "{{" + this.rU.$T + "}}";
            }
        },
        uw: function() {
            zt(this.m1, this);
        }
    });
    var Ql = Jl;
    var td = ql.extend({
        name: "name",
        t1: function() {
            this.C1 = true;
            return [];
        },
        init: function() {
            var t, e;
            this.D1 = true;
            this.m1 = Yl(this.root.O_, "checkboxes", this.rU.$T);
            this.m1.push(this);
            if (this.C1) {
                this.m1.C1 = true;
            }
            if (this.m1.C1 && this.R0.getAttribute("checked")) {
                t = this.root.hU.get(this.rU);
                e = this.R0.getAttribute("value");
                t.push(e);
            }
        },
        uw: function() {
            zt(this.m1, this);
        },
        xx: function() {
            var t = this.R0.Yv, e, n;
            e = this.root.hU.get(this.rU);
            n = this.R0.getAttribute("value");
            if (L(e)) {
                this.o1 = Pt(e, n);
            } else {
                this.o1 = e == n;
            }
            t.name = "{{" + this.rU.$T + "}}";
            t.checked = this.o1;
            t.addEventListener("change", Bl, false);
            if (t.attachEvent) {
                t.addEventListener("click", Bl, false);
            }
        },
        tU: function() {
            var t = this.R0.Yv;
            t.removeEventListener("change", Bl, false);
            t.removeEventListener("click", Bl, false);
        },
        E1: function() {
            var t = !!this.o1;
            this.o1 = this.R0.Yv.checked;
            return this.o1 === t;
        },
        n1: function() {
            this.o1 = this.R0.Yv.checked;
            ql.prototype.n1.call(this);
        },
        $v: function() {
            return this.m1.filter(ed).map(nd);
        }
    });
    function ed(t) {
        return t.o1;
    }
    function nd(t) {
        return t.R0.getAttribute("value");
    }
    var id = td;
    var rd = ql.extend({
        name: "checked",
        xx: function() {
            var t = this.R0.Yv;
            t.addEventListener("change", Bl, false);
            if (t.attachEvent) {
                t.addEventListener("click", Bl, false);
            }
        },
        tU: function() {
            var t = this.R0.Yv;
            t.removeEventListener("change", Bl, false);
            t.removeEventListener("click", Bl, false);
        },
        $v: function() {
            return this.R0.Yv.checked;
        }
    });
    var ad = rd;
    var sd = ql.extend({
        t1: function() {
            var t = this.R0.options, e, n, i, r;
            if (this.R0.getAttribute("value") !== undefined) {
                return;
            }
            n = e = t.length;
            if (!e) {
                return;
            }
            while (n--) {
                if (t[n].getAttribute("selected")) {
                    i = t[n].getAttribute("value");
                    r = true;
                    break;
                }
            }
            if (!r) {
                while (++n < e) {
                    if (!t[n].getAttribute("disabled")) {
                        i = t[n].getAttribute("value");
                        break;
                    }
                }
            }
            if (i !== undefined) {
                this.R0.attributes.value.value = i;
            }
            return i;
        },
        xx: function() {
            this.R0.Yv.addEventListener("change", Bl, false);
        },
        tU: function() {
            this.R0.Yv.removeEventListener("change", Bl, false);
        },
        _v: function(t) {
            this.root.hU.set(this.rU, t);
        },
        $v: function() {
            var t, e, n, i, r;
            t = this.R0.Yv.options;
            n = t.length;
            for (e = 0; e < n; e += 1) {
                i = t[e];
                if (t[e].selected) {
                    r = i.jV ? i.jV.value : i.value;
                    return r;
                }
            }
        },
        F1: function() {
            var t = this;
            var e = this.$v();
            if (e !== undefined) {
                this.s1.l1 = true;
                ve.XU(function() {
                    return t.s1.l1 = false;
                });
                this.root.hU.set(this.rU, e);
            }
        }
    });
    var od = sd;
    var fd = od.extend({
        t1: function() {
            return this.R0.options.filter(function(t) {
                return t.getAttribute("selected");
            }).map(function(t) {
                return t.getAttribute("value");
            });
        },
        xx: function() {
            var t;
            this.R0.Yv.addEventListener("change", Bl, false);
            t = this.root.hU.get(this.rU);
            if (t === undefined) {
                this.n1();
            }
        },
        tU: function() {
            this.R0.Yv.removeEventListener("change", Bl, false);
        },
        _v: function() {
            throw new Error("TODO not implemented yet");
        },
        $v: function() {
            var t, e, n, i, r, a;
            t = [];
            e = this.R0.Yv.options;
            i = e.length;
            for (n = 0; n < i; n += 1) {
                r = e[n];
                if (r.selected) {
                    a = r.jV ? r.jV.value : r.value;
                    t.push(a);
                }
            }
            return t;
        },
        n1: function() {
            var t, e, n;
            t = this.s1;
            e = t.value;
            n = this.$v();
            if (e === undefined || !Nt(n, e)) {
                od.prototype.n1.call(this);
            }
            return this;
        },
        F1: function() {
            var t = this;
            var e = this.$v();
            if (e !== undefined) {
                this.s1.l1 = true;
                ve.XU(function() {
                    return t.s1.l1 = false;
                });
                this.root.hU.set(this.rU, e);
            }
        },
        G1: function() {
            if (this.s1.value === undefined || !this.s1.value.length) {
                this.root.hU.set(this.rU, this.H1);
            }
        }
    });
    var ud = fd;
    var hd = ql.extend({
        xx: function() {
            this.R0.Yv.addEventListener("change", Bl, false);
        },
        tU: function() {
            this.R0.Yv.removeEventListener("change", Bl, false);
        },
        $v: function() {
            return this.R0.Yv.files;
        }
    });
    var cd = hd;
    var ld = Dl.extend({
        t1: function() {
            return undefined;
        },
        $v: function() {
            var t = parseFloat(this.R0.Yv.value);
            return isNaN(t) ? undefined : t;
        }
    });
    var dd = vd;
    function vd(t) {
        var e = t.attributes, n, i, r, a, s;
        if (t.bv) {
            t.bv.sU();
            t.bv = null;
        }
        if ((t.getAttribute("contenteditable") || !!e.Z0 && pd(e.Z0)) && pd(e.value)) {
            i = Wl;
        } else if (t.name === "input") {
            n = t.getAttribute("type");
            if (n === "radio" || n === "checkbox") {
                r = pd(e.name);
                a = pd(e.checked);
                if (r && a) {
                    X("A radio input can have two-way binding on its name attribute, or its checked attribute - not both", {
                        VT: t.root
                    });
                }
                if (r) {
                    i = n === "radio" ? Ql : id;
                } else if (a) {
                    i = n === "radio" ? $l : ad;
                }
            } else if (n === "file" && pd(e.value)) {
                i = cd;
            } else if (pd(e.value)) {
                i = n === "number" || n === "range" ? ld : Dl;
            }
        } else if (t.name === "select" && pd(e.value)) {
            i = t.getAttribute("multiple") ? ud : od;
        } else if (t.name === "textarea" && pd(e.value)) {
            i = Dl;
        }
        if (i && (s = new i(t)) && s.rU) {
            return s;
        }
    }
    function pd(t) {
        return t && t.S0;
    }
    var Ed = gd;
    function gd() {
        var t = this.I1();
        if (t && !this.J1) {
            this.K1();
        } else if (!t && this.J1) {
            this.tU();
        }
    }
    var md = Td;
    function Td(t) {
        nn(this.root, this.I1(), {
            event: t
        });
    }
    var yd = Rd;
    function Rd() {
        return this.action.toString().trim();
    }
    var wd = bd;
    var xd = /^event(?:\.(.+))?/;
    function bd(t, e, n) {
        var i = this;
        var r, a, s;
        this.R0 = t;
        this.root = t.root;
        this.qU = t.qU;
        this.name = e;
        if (e.indexOf("*") !== -1) {
            F('Only component proxy-events may contain "*" wildcards, <%s on-%s="..."/> is not valid', t.name, e);
            this.L1 = true;
        }
        if (n.qW) {
            a = n.a.r;
            this.method = n.qW;
            this.g0 = [];
            this._Q = bu(n.a.Li, a.length);
            this.qU = t.qU;
            s = this.root;
            this.h0 = [];
            a.forEach(function(t, e) {
                var n = undefined;
                if (n = xd.exec(t)) {
                    i.g0[e] = {
                        M1: true,
                        N1: n[1] ? n[1].split(".") : []
                    };
                } else {
                    i.h0.push(wu(i, t, function(t) {
                        return i.resolve(e, t);
                    }));
                }
            });
            this.pU = Hd;
        } else {
            r = n.n || n;
            if (typeof r !== "string") {
                r = new Km({
                    Mf: r,
                    root: this.root,
                    mV: this
                });
            }
            this.action = r;
            if (n.d) {
                this.O1 = new Km({
                    Mf: n.d,
                    root: this.root,
                    mV: this.R0
                });
                this.pU = Ad;
            } else if (n.a) {
                this.cq = n.a;
                this.pU = _d;
            }
        }
    }
    function Hd(t) {
        var e, n, i;
        e = this.root;
        if (typeof e[this.method] !== "function") {
            throw new Error('Attempted to call a non-existent method ("' + this.method + '")');
        }
        n = this.g0.map(function(n) {
            var i, r, a;
            if (n === undefined) {
                return undefined;
            }
            if (n.M1) {
                i = t;
                if (r = n.N1.length) {
                    for (a = 0; a < r; a += 1) {
                        i = i[n.N1[a]];
                    }
                }
            } else {
                i = e.hU.get(n);
            }
            return i;
        });
        en.BV(e, t);
        i = this._Q.apply(null, n);
        e[this.method].apply(e, i);
        en.DV(e);
    }
    function _d(t) {
        nn(this.root, this.I1(), {
            event: t,
            gc: this.cq
        });
    }
    function Ad(t) {
        var e = this.O1.P1();
        if (typeof e === "string") {
            e = e.substr(1, e.length - 2);
        }
        nn(this.root, this.I1(), {
            event: t,
            gc: e
        });
    }
    var Md = Od;
    function Od(t) {
        var e, n, i, r = {};
        e = this.jV;
        n = e.Q1[t.type];
        if (i = yu(n.R0.qU)) {
            r = yu.resolve(i);
        }
        n.pU({
            Yv: this,
            GV: t,
            index: r,
            rU: e.rU.$T,
            context: e.root.hU.get(e.rU)
        });
    }
    var Sd = Ld;
    var Ud = {}, Cd = {
        R1: true,
        S1: true,
        T1: true,
        U1: true,
        V1: true
    };
    function Ld() {
        var t, e = this.name;
        if (this.L1) {
            return;
        }
        if (t = Q("events", this.root, e)) {
            this.W1 = t(this.Yv, Pd(e));
        } else {
            if (!("on" + e in this.Yv) && !(window && "on" + e in window) && !a) {
                if (!Cd[e]) {
                    K(J(e, "event"), {
                        Yv: this.Yv
                    });
                }
                return;
            }
            this.Yv.addEventListener(e, Md, false);
        }
        this.J1 = true;
    }
    function Pd(t) {
        if (!Ud[t]) {
            Ud[t] = function(e) {
                var n = e.Yv.jV;
                e.index = n.index;
                e.rU = n.rU.$T;
                e.context = n.root.hU.get(n.rU);
                n.Q1[t].pU(e);
            };
        }
        return Ud[t];
    }
    var Nd = Id;
    function Id(t, e) {
        var n;
        if (this.method) {
            n = this.R0.qU;
            this.h0.forEach(i);
            return;
        }
        if (typeof this.action !== "string") {
            i(this.action);
        }
        if (this.O1) {
            i(this.O1);
        }
        function i(n) {
            n && n.V_(t, e);
        }
    }
    var qd = zd;
    function zd() {
        this.Yv = this.R0.Yv;
        this.Yv.jV.Q1[this.name] = this;
        if (this.method || this.I1()) {
            this.K1();
        }
    }
    var Bd = kd;
    function kd(t, e) {
        this.g0[t] = e;
    }
    var jd = Dd;
    function Dd() {
        if (this.method) {
            this.h0.forEach(ne);
            return;
        }
        if (typeof this.action !== "string") {
            this.action.uw();
        }
        if (this.O1) {
            this.O1.uw();
        }
    }
    var Gd = Fd;
    function Fd() {
        if (this.W1) {
            this.W1.sU();
        } else {
            this.Yv.removeEventListener(this.name, Md, false);
        }
        this.J1 = false;
    }
    var Vd = function(t, e, n) {
        this.init(t, e, n);
    };
    Vd.prototype = {
        L_: Ed,
        pU: md,
        I1: yd,
        init: wd,
        K1: Sd,
        V_: Nd,
        xx: qd,
        resolve: Bd,
        uw: jd,
        tU: Gd
    };
    var Wd = Vd;
    var Yd = function(t, e) {
        var n, i, r, a, s = [];
        for (i in e) {
            if (e.hasOwnProperty(i)) {
                r = i.split("-");
                n = r.length;
                while (n--) {
                    a = new Wd(t, r[n], e[i]);
                    s.push(a);
                }
            }
        }
        return s;
    };
    var Xd = function(t, e) {
        var n = this, i, r, a;
        this.R0 = t;
        this.root = i = t.root;
        r = e.n || e;
        if (typeof r !== "string") {
            a = new Km({
                Mf: r,
                root: i,
                mV: t
            });
            r = a.toString();
            a.uw();
            if (r === "") {
                return;
            }
        }
        if (e.a) {
            this.cq = e.a;
        } else if (e.d) {
            this.XT = new Km({
                Mf: e.d,
                root: i,
                mV: t
            });
            this.cq = this.XT.P1();
            this.XT.L_ = function() {
                this.K_ = this.J_ = true;
                n.cq = this.P1();
                if (n.aR) {
                    n.update();
                }
            };
        }
        this._Q = Q("decorators", i, r);
        if (!this._Q) {
            F(J(r, "decorator"));
        }
    };
    Xd.prototype = {
        init: function() {
            var t, e, n;
            t = this.R0.Yv;
            if (this.cq) {
                n = [ t ].concat(this.cq);
                e = this._Q.apply(this.root, n);
            } else {
                e = this._Q.call(this.root, t);
            }
            if (!e || !e.sU) {
                throw new Error("Decorator definition must return an object with a teardown method");
            }
            this.X1 = e;
            this.aR = true;
        },
        update: function() {
            if (this.X1.update) {
                this.X1.update.apply(this.root, this.cq);
            } else {
                this.X1.sU(true);
                this.init();
            }
        },
        V_: function(t, e) {
            if (this.XT) {
                this.XT.V_(t, e);
            }
        },
        sU: function(t) {
            this.Y1 = true;
            if (this.aR) {
                this.X1.sU();
            }
            if (!t && this.XT) {
                this.XT.uw();
            }
        }
    };
    var Kd = Xd;
    function Zd() {
        var t = this;
        if (!this.Z1) {
            this.Z1 = true;
            ve.XU(function() {
                $d(t);
                t.Z1 = false;
            });
        }
        this.qU.L_();
    }
    function $d(t) {
        var e, n, i, r, a;
        e = t.Yv;
        if (!e) {
            return;
        }
        r = Bt(e.options);
        n = t.getAttribute("value");
        i = t.getAttribute("multiple");
        if (n !== undefined) {
            r.forEach(function(t) {
                var e, r;
                e = t.jV ? t.jV.value : t.value;
                r = i ? Jd(n, e) : n == e;
                if (r) {
                    a = true;
                }
                t.selected = r;
            });
            if (!a) {
                if (r[0]) {
                    r[0].selected = true;
                }
                if (t.bv) {
                    t.bv.F1();
                }
            }
        } else if (t.bv) {
            t.bv.F1();
        }
    }
    function Jd(t, e) {
        var n = t.length;
        while (n--) {
            if (t[n] == e) {
                return true;
            }
        }
    }
    function Qd(t, e) {
        t.select = ev(t.parent);
        if (!t.select) {
            return;
        }
        t.select.options.push(t);
        if (!e.a) {
            e.a = {};
        }
        if (e.a.value === undefined && !e.a.hasOwnProperty("disabled")) {
            e.a.value = e.f;
        }
        if ("selected" in e.a && t.select.getAttribute("value") !== undefined) {
            delete e.a.selected;
        }
    }
    function tv(t) {
        if (t.select) {
            zt(t.select.options, t);
        }
    }
    function ev(t) {
        if (!t) {
            return;
        }
        do {
            if (t.name === "select") {
                return t;
            }
        } while (t = t.parent);
    }
    var nv = iv;
    function iv(t) {
        var e, n, i, r, a, s, o;
        this.type = Bi;
        e = this.qU = t.qU;
        n = this.Mf = t.Mf;
        this.parent = t.Q_ || e.Q_;
        this.root = i = e.root;
        this.index = t.index;
        this.key = t.key;
        this.name = Bc(n.e);
        if (this.name === "option") {
            Qd(this, n);
        }
        if (this.name === "select") {
            this.options = [];
            this.L_ = Zd;
        }
        if (this.name === "form") {
            this.v1 = [];
        }
        o = Cc(this, n);
        this.attributes = Ol(this, n.a);
        this._1 = Nl(this, n.qW);
        if (n.f) {
            this.XT = new Km({
                Mf: n.f,
                root: i,
                mV: this,
                Q_: this,
                a2: null
            });
        }
        s = i.FT;
        if (o.FT === false) s = false; else if (o.FT === true) s = true;
        this.FT = s;
        this.GT = o.GT;
        if (s && (r = dd(this, n.a))) {
            this.bv = r;
            a = this.root.w1[r.rU.$T] || (this.root.w1[r.rU.$T] = []);
            a.push(r);
        }
        if (n.tT) {
            this.b2 = Yd(this, n.tT);
        }
        if (n.lM) {
            this._$ = new Kd(this, n.lM);
        }
        this.Z$ = n.c2 || n.d2;
        this.$$ = n.c2 || n.e2;
    }
    var rv = av;
    function av(t, e) {
        var n, i, r, a;
        if (this.attributes) {
            this.attributes.forEach(s);
        }
        if (this._1) {
            this._1.forEach(s);
        }
        if (this.b2) {
            this.b2.forEach(s);
        }
        if (this._$) {
            s(this._$);
        }
        if (this.XT) {
            s(this.XT);
        }
        if (r = this.hV) {
            a = this.root;
            n = r.length;
            while (n--) {
                r[n].fV();
            }
        }
        if (this.Yv && (i = this.Yv.jV)) {
            vt(i, "keypath", t, e);
        }
        function s(n) {
            n.V_(t, e);
        }
    }
    function sv(t) {
        var e;
        if (t.attributes.width || t.attributes.height) {
            t.Yv.addEventListener("load", e = function() {
                var n = t.getAttribute("width"), i = t.getAttribute("height");
                if (n !== undefined) {
                    t.Yv.setAttribute("width", n);
                }
                if (i !== undefined) {
                    t.Yv.setAttribute("height", i);
                }
                t.Yv.removeEventListener("load", e, false);
            }, false);
        }
    }
    function ov(t) {
        t.Yv.addEventListener("reset", uv, false);
    }
    function fv(t) {
        t.Yv.removeEventListener("reset", uv, false);
    }
    function uv() {
        var t = this.jV.iV;
        ve.start();
        t.v1.forEach(hv);
        ve.end();
    }
    function hv(t) {
        t.root.hU.set(t.rU, t.u1);
    }
    var cv = lv;
    function lv(t, e, n) {
        var i, r, a;
        this.R0 = t;
        this.root = i = t.root;
        this.FU = n;
        r = e.n || e;
        if (typeof r !== "string") {
            a = new Km({
                Mf: r,
                root: i,
                mV: t
            });
            r = a.toString();
            a.uw();
            if (r === "") {
                return;
            }
        }
        this.name = r;
        if (e.a) {
            this.cq = e.a;
        } else if (e.d) {
            a = new Km({
                Mf: e.d,
                root: i,
                mV: t
            });
            this.cq = a.P1();
            a.uw();
        }
        this.D_ = Q("transitions", i, r);
        if (!this.D_) {
            K(J(r, "transition"), {
                VT: this.root
            });
        }
    }
    var dv = function(t) {
        return t.replace(/-([a-zA-Z])/g, function(t, e) {
            return e.toUpperCase();
        });
    };
    var vv, pv, Ev;
    if (!r) {
        vv = null;
    } else {
        pv = {};
        Ev = c("div").style;
        vv = function(t) {
            var e, n, i;
            t = dv(t);
            if (!pv[t]) {
                if (Ev[t] !== undefined) {
                    pv[t] = t;
                } else {
                    i = t.charAt(0).toUpperCase() + t.substring(1);
                    e = h.length;
                    while (e--) {
                        n = h[e];
                        if (Ev[n + i] !== undefined) {
                            pv[t] = n + i;
                            break;
                        }
                    }
                }
            }
            return pv[t];
        };
    }
    var gv = vv;
    var mv, Tv;
    if (!r) {
        mv = null;
    } else {
        Tv = window.getComputedStyle || x.getComputedStyle;
        mv = function(t) {
            var e, n, i, r, a;
            e = Tv(this.Yv);
            if (typeof t === "string") {
                a = e[gv(t)];
                if (a === "0px") {
                    a = 0;
                }
                return a;
            }
            if (!L(t)) {
                throw new Error("Transition$getStyle must be passed a string, or an array of strings representing CSS properties");
            }
            n = {};
            i = t.length;
            while (i--) {
                r = t[i];
                a = e[gv(r)];
                if (a === "0px") {
                    a = 0;
                }
                n[r] = a;
            }
            return n;
        };
    }
    var yv = mv;
    var Rv = function(t, e) {
        var n;
        if (typeof t === "string") {
            this.Yv.style[gv(t)] = e;
        } else {
            for (n in t) {
                if (t.hasOwnProperty(n)) {
                    this.Yv.style[gv(n)] = t[n];
                }
            }
        }
        return this;
    };
    var wv = function(t) {
        var e;
        this.duration = t.duration;
        this.step = t.step;
        this.complete = t.complete;
        if (typeof t.bV === "string") {
            e = t.root.bV[t.bV];
            if (!e) {
                K(J(t.bV, "easing"));
                e = bv;
            }
        } else if (typeof t.bV === "function") {
            e = t.bV;
        } else {
            e = bv;
        }
        this.bV = e;
        this.start = Ot();
        this.end = this.start + this.duration;
        this.Up = true;
        ye.add(this);
    };
    wv.prototype = {
        $U: function(t) {
            var e, n;
            if (!this.Up) {
                return false;
            }
            if (t > this.end) {
                if (this.step) {
                    this.step(1);
                }
                if (this.complete) {
                    this.complete(1);
                }
                return false;
            }
            e = t - this.start;
            n = this.bV(e / this.duration);
            if (this.step) {
                this.step(n);
            }
            return true;
        },
        stop: function() {
            if (this.abort) {
                this.abort();
            }
            this.Up = false;
        }
    };
    var xv = wv;
    function bv(t) {
        return t;
    }
    var Hv = new RegExp("^-(?:" + h.join("|") + ")-");
    var _v = function(t) {
        return t.replace(Hv, "");
    };
    var Av = new RegExp("^(?:" + h.join("|") + ")([A-Z])");
    var Mv = function(t) {
        var e;
        if (!t) {
            return "";
        }
        if (Av.test(t)) {
            t = "-" + t;
        }
        e = t.replace(/[A-Z]/g, function(t) {
            return "-" + t.toLowerCase();
        });
        return e;
    };
    var Ov, Sv, Uv, Cv, Lv, Pv, Nv, Iv, qv = {}, zv = {};
    if (!r) {
        Ov = null;
    } else {
        Sv = c("div").style;
        (function() {
            if (Sv.transition !== undefined) {
                Uv = "transition";
                Cv = "transitionend";
                Lv = true;
            } else if (Sv.webkitTransition !== undefined) {
                Uv = "webkitTransition";
                Cv = "webkitTransitionEnd";
                Lv = true;
            } else {
                Lv = false;
            }
        })();
        if (Uv) {
            Pv = Uv + "Duration";
            Nv = Uv + "Property";
            Iv = Uv + "TimingFunction";
        }
        Ov = function(t, e, n, i, r) {
            setTimeout(function() {
                var a, s, o, f, u;
                f = function() {
                    if (s && o) {
                        t.root.pU(t.name + ":end", t.Yv, t.FU);
                        r();
                    }
                };
                a = (t.Yv.namespaceURI || "") + t.Yv.tagName;
                t.Yv.style[Nv] = i.map(gv).map(Mv).join(",");
                t.Yv.style[Iv] = Mv(n.bV || "linear");
                t.Yv.style[Pv] = n.duration / 1e3 + "s";
                u = function(e) {
                    var n;
                    n = i.indexOf(dv(_v(e.propertyName)));
                    if (n !== -1) {
                        i.splice(n, 1);
                    }
                    if (i.length) {
                        return;
                    }
                    t.Yv.removeEventListener(Cv, u, false);
                    o = true;
                    f();
                };
                t.Yv.addEventListener(Cv, u, false);
                setTimeout(function() {
                    var r = i.length, h, c, l, d = [], v, p;
                    while (r--) {
                        v = i[r];
                        h = a + v;
                        if (Lv && !zv[h]) {
                            t.Yv.style[gv(v)] = e[v];
                            if (!qv[h]) {
                                c = t.Ni(v);
                                qv[h] = t.Ni(v) != e[v];
                                zv[h] = !qv[h];
                                if (zv[h]) {
                                    t.Yv.style[gv(v)] = c;
                                }
                            }
                        }
                        if (!Lv || zv[h]) {
                            if (c === undefined) {
                                c = t.Ni(v);
                            }
                            l = i.indexOf(v);
                            if (l === -1) {
                                X("Something very strange happened with transitions. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!", {
                                    Yv: t.Yv
                                });
                            } else {
                                i.splice(l, 1);
                            }
                            p = /[^\d]*$/.exec(e[v])[0];
                            d.push({
                                name: gv(v),
                                _U: nt(parseFloat(c), parseFloat(e[v])),
                                suffix: p
                            });
                        }
                    }
                    if (d.length) {
                        new xv({
                            root: t.root,
                            duration: n.duration,
                            bV: dv(n.bV || ""),
                            step: function(e) {
                                var n, i;
                                i = d.length;
                                while (i--) {
                                    n = d[i];
                                    t.Yv.style[n.name] = n._U(e) + n.suffix;
                                }
                            },
                            complete: function() {
                                s = true;
                                f();
                            }
                        });
                    } else {
                        s = true;
                    }
                    if (!i.length) {
                        t.Yv.removeEventListener(Cv, u, false);
                        o = true;
                        f();
                    }
                }, 0);
            }, n.Gc || 0);
        };
    }
    var Bv = Ov;
    var kv, jv, Dv, Gv, Fv;
    if (typeof document !== "undefined") {
        kv = "hidden";
        Fv = {};
        if (kv in document) {
            Dv = "";
        } else {
            Gv = h.length;
            while (Gv--) {
                jv = h[Gv];
                kv = jv + "Hidden";
                if (kv in document) {
                    Dv = jv;
                }
            }
        }
        if (Dv !== undefined) {
            document.addEventListener(Dv + "visibilitychange", Vv);
            Vv();
        } else {
            if ("onfocusout" in document) {
                document.addEventListener("focusout", Wv);
                document.addEventListener("focusin", Yv);
            } else {
                window.addEventListener("pagehide", Wv);
                window.addEventListener("blur", Wv);
                window.addEventListener("pageshow", Yv);
                window.addEventListener("focus", Yv);
            }
            Fv.hidden = false;
        }
    }
    function Vv() {
        Fv.hidden = document[kv];
    }
    function Wv() {
        Fv.hidden = true;
    }
    function Yv() {
        Fv.hidden = false;
    }
    var Xv = Fv;
    var Kv, Zv, $v;
    if (!r) {
        Kv = null;
    } else {
        Zv = window.getComputedStyle || x.getComputedStyle;
        Kv = function(t, e, n) {
            var i = this;
            var r;
            if (arguments.length === 4) {
                throw new Error("t.animateStyle() returns a promise - use .then() instead of passing a callback");
            }
            if (Xv.hidden) {
                this.zi(t, e);
                return $v || ($v = Ft.resolve());
            }
            if (typeof t === "string") {
                r = {};
                r[t] = e;
            } else {
                r = t;
                n = e;
            }
            if (!n) {
                K('The "%s" transition does not supply an options object to `t.animateStyle()`. This will break in a future version of Ractive. For more info see https://github.com/RactiveJS/Ractive/issues/340', this.name);
                n = this;
            }
            var a = new Ft(function(t) {
                var e, a, s, o, f, u, h;
                if (!n.duration) {
                    i.zi(r);
                    t();
                    return;
                }
                e = Object.keys(r);
                a = [];
                s = Zv(i.Yv);
                f = {};
                u = e.length;
                while (u--) {
                    h = e[u];
                    o = s[gv(h)];
                    if (o === "0px") {
                        o = 0;
                    }
                    if (o != r[h]) {
                        a.push(h);
                        i.Yv.style[gv(h)] = o;
                    }
                }
                if (!a.length) {
                    t();
                    return;
                }
                Bv(i, r, n, a, t);
            });
            return a;
        };
    }
    var Jv = Kv;
    var Qv = function(t, e) {
        if (typeof t === "number") {
            t = {
                duration: t
            };
        } else if (typeof t === "string") {
            if (t === "slow") {
                t = {
                    duration: 600
                };
            } else if (t === "fast") {
                t = {
                    duration: 200
                };
            } else {
                t = {
                    duration: 400
                };
            }
        } else if (!t) {
            t = {};
        }
        return O({}, t, e);
    };
    var tp = ep;
    function ep() {
        var t = this;
        var e, n, i;
        e = this.Yv = this.R0.Yv;
        n = e.getAttribute("style");
        this.complete = function(r) {
            if (i) {
                return;
            }
            if (!r && t.FU) {
                np(e, n);
            }
            e.jV.transition = null;
            t.RU.remove(t);
            i = true;
        };
        if (!this.D_) {
            this.complete();
            return;
        }
        this.D_.apply(this.root, [ this ].concat(this.cq));
    }
    function np(t, e) {
        if (e) {
            t.setAttribute("style", e);
        } else {
            t.getAttribute("style");
            t.removeAttribute("style");
        }
    }
    var ip = function(t, e, n) {
        this.init(t, e, n);
    };
    ip.prototype = {
        init: cv,
        start: tp,
        Ni: yv,
        zi: Rv,
        f2: Jv,
        g2: Qv
    };
    var rp = ip;
    var ap = fp;
    var sp, op;
    sp = function() {
        var t = this.Yv, e = this.XT.toString(false);
        if (window && window.h2) {
            t.type = "text/css";
        }
        if (t.styleSheet) {
            t.styleSheet.cssText = e;
        } else {
            while (t.hasChildNodes()) {
                t.removeChild(t.firstChild);
            }
            t.appendChild(document.createTextNode(e));
        }
    };
    op = function() {
        if (!this.Yv.type || this.Yv.type === "text/javascript") {
            X("Script tag was updated. This does not cause the code to be re-evaluated!", {
                VT: this.root
            });
        }
        this.Yv.text = this.XT.toString(false);
    };
    function fp() {
        var t = this;
        var e = this.root, n, i, r;
        n = up(this);
        i = this.Yv = c(this.name, n);
        if (this.qU.a2) {
            this.Yv.setAttribute("data-ractive-css", this.qU.a2.map(function(t) {
                return "{" + t + "}";
            }).join(" "));
        }
        H(this.Yv, "_ractive", {
            value: {
                iV: this,
                rU: Xt(this.qU),
                Q1: b(null),
                root: e
            }
        });
        this.attributes.forEach(function(t) {
            return t.xx(i);
        });
        this._1.forEach(function(t) {
            return t.xx(i);
        });
        if (this.XT) {
            if (this.name === "script") {
                this.L_ = op;
                this.Yv.text = this.XT.toString(false);
                this.XT.tU = z;
            } else if (this.name === "style") {
                this.L_ = sp;
                this.L_();
                this.XT.tU = z;
            } else if (this.bv && this.getAttribute("contenteditable")) {
                this.XT.tU = z;
            } else {
                this.Yv.appendChild(this.XT.xx());
            }
        }
        if (this.bv) {
            this.bv.xx();
            this.Yv.jV.bv = this.bv;
        }
        if (this.b2) {
            this.b2.forEach(function(t) {
                return t.xx();
            });
        }
        if (this.name === "option") {
            hp(this);
        }
        if (this.name === "img") {
            sv(this);
        } else if (this.name === "form") {
            ov(this);
        } else if (this.name === "input" || this.name === "textarea") {
            this.Yv.defaultValue = this.Yv.value;
        } else if (this.name === "option") {
            this.Yv.defaultSelected = this.Yv.selected;
        }
        if (this._$ && this._$._Q) {
            ve.XU(function() {
                if (!t._$.Y1) {
                    t._$.init();
                }
            }, true);
        }
        if (e.IT && this.Z$) {
            r = new rp(this, this.Z$, true);
            ve.QU(r);
            ve.XU(function() {
                return r.start();
            }, true);
            this.transition = r;
        }
        if (this.Yv.autofocus) {
            ve.XU(function() {
                return t.Yv.focus();
            }, true);
        }
        cp(this);
        return this.Yv;
    }
    function up(t) {
        var e, n, i;
        if (n = t.getAttribute("xmlns")) {
            e = n;
        } else if (t.name === "svg") {
            e = f.RT;
        } else if (i = t.parent) {
            if (i.name === "foreignObject") {
                e = f.PT;
            } else {
                e = i.Yv.namespaceURI;
            }
        } else {
            e = t.root.sT.namespaceURI;
        }
        return e;
    }
    function hp(t) {
        var e, n, i;
        if (!t.select) {
            return;
        }
        n = t.select.getAttribute("value");
        if (n === undefined) {
            return;
        }
        e = t.getAttribute("value");
        if (t.select.Yv.multiple && L(n)) {
            i = n.length;
            while (i--) {
                if (e == n[i]) {
                    t.Yv.selected = true;
                    break;
                }
            }
        } else {
            t.Yv.selected = e == n;
        }
    }
    function cp(t) {
        var e, n, i, r, a;
        e = t.root;
        do {
            n = e.tV;
            i = n.length;
            while (i--) {
                r = n[i];
                a = n["_" + r];
                if (a.qV(t)) {
                    (t.hV || (t.hV = [])).push(a);
                }
            }
        } while (e = e.parent);
    }
    var lp = function() {
        var t, e;
        if (this.Mf.y) {
            return "<!DOCTYPE" + this.Mf.c_ + ">";
        }
        t = "<" + this.Mf.e;
        t += this.attributes.map(pp).join("") + this._1.map(pp).join("");
        if (this.name === "option" && dp(this)) {
            t += " selected";
        }
        if (this.name === "input" && vp(this)) {
            t += " checked";
        }
        t += ">";
        if (this.name === "textarea" && this.getAttribute("value") !== undefined) {
            t += _s(this.getAttribute("value"));
        } else if (this.getAttribute("contenteditable") !== undefined) {
            t += this.getAttribute("value") || "";
        }
        if (this.XT) {
            e = this.name !== "script" && this.name !== "style";
            t += this.XT.toString(e);
        }
        if (!gs.test(this.Mf.e)) {
            t += "</" + this.Mf.e + ">";
        }
        return t;
    };
    function dp(t) {
        var e, n, i;
        e = t.getAttribute("value");
        if (e === undefined || !t.select) {
            return false;
        }
        n = t.select.getAttribute("value");
        if (n == e) {
            return true;
        }
        if (t.select.getAttribute("multiple") && L(n)) {
            i = n.length;
            while (i--) {
                if (n[i] == e) {
                    return true;
                }
            }
        }
    }
    function vp(t) {
        var e, n, i, r;
        e = t.attributes;
        n = e.type;
        i = e.value;
        r = e.name;
        if (!n || n.value !== "radio" || !i || !r._U) {
            return;
        }
        if (i.value === r._U.value) {
            return true;
        }
    }
    function pp(t) {
        var e = t.toString();
        return e ? " " + e : "";
    }
    var Ep = gp;
    function gp() {
        if (this.XT) {
            this.XT.uw();
        }
        if (this.bv) {
            this.bv.uw();
        }
        if (this.b2) {
            this.b2.forEach(ne);
        }
        if (this.name === "option") {
            tv(this);
        }
        this.attributes.forEach(ne);
        this._1.forEach(ne);
    }
    var mp = Tp;
    function Tp(t) {
        var e, n, i;
        if (i = this.transition) {
            i.complete();
        }
        if (this.name === "option") {
            this.detach();
        } else if (t) {
            ve.WU(this);
        }
        if (this.XT) {
            this.XT.tU(false);
        }
        if (e = this.bv) {
            this.bv.tU();
            this.Yv.jV.bv = null;
            n = this.root.w1[e.rU.$T];
            n.splice(n.indexOf(e), 1);
        }
        if (this.b2) {
            this.b2.forEach(ie);
        }
        if (this._$) {
            ve.SU(this._$);
        }
        if (this.root.IT && this.$$) {
            i = new rp(this, this.$$, false);
            ve.QU(i);
            ve.XU(function() {
                return i.start();
            });
        }
        if (this.hV) {
            yp(this);
        }
        if (this.name === "form") {
            fv(this);
        }
    }
    function yp(t) {
        var e, n, i;
        i = t.hV.length;
        while (i--) {
            e = t.hV[i];
            n = e.selector;
            e.rV(t.Yv);
        }
    }
    var Rp = function(t) {
        this.init(t);
    };
    Rp.prototype = {
        L_: gc,
        detach: mc,
        find: yc,
        uV: Rc,
        wV: wc,
        xV: xc,
        N_: bc,
        M_: _c,
        getAttribute: Mc,
        init: nv,
        V_: rv,
        xx: ap,
        toString: lp,
        uw: Ep,
        tU: mp
    };
    var wp = Rp;
    var xp = /^\s*$/, bp = /^\s*/;
    var Hp = function(t) {
        var e, n, i, r;
        e = t.split("\n");
        n = e[0];
        if (n !== undefined && xp.test(n)) {
            e.shift();
        }
        i = qt(e);
        if (i !== undefined && xp.test(i)) {
            e.pop();
        }
        r = e.reduce(_p, null);
        if (r) {
            t = e.map(function(t) {
                return t.replace(r, "");
            }).join("\n");
        }
        return t;
    };
    function _p(t, e) {
        var n = bp.exec(e)[0];
        if (t === null || n.length < t.length) {
            return n;
        }
        return t;
    }
    var Ap = Mp;
    function Mp(t, e, n) {
        var i;
        if (i = Op(t, e, n || {})) {
            return i;
        }
        i = sf.v_(e, {
            A_: true
        });
        if (i) {
            i = Hp(i);
            var r = sf.parse(i, sf.y_(t));
            return t.partials[e] = r.uT;
        }
    }
    function Op(t, e, n) {
        var i = undefined, r = Cp(e, n.mV);
        if (r) return r;
        var a = tt("partials", t, e);
        if (!a) {
            return;
        }
        r = a.partials[e];
        if (typeof r === "function") {
            i = r.bind(a);
            i.E_ = a.partials.hasOwnProperty(e);
            r = i.call(t, sf);
        }
        if (!r && r !== "") {
            X($, e, "partial", "partial", {
                VT: t
            });
            return;
        }
        if (!sf.x_(r)) {
            var s = sf.parse(r, sf.y_(a));
            if (s.m) {
                X("Partials ({{>%s}}) cannot contain nested inline partials", e, {
                    VT: t
                });
            }
            var o = i ? a : Sp(a, e);
            o.partials[e] = r = s.uT;
        }
        if (i) {
            r.D_ = i;
        }
        return r.tT ? r.uT : r;
    }
    function Sp(t, e) {
        return t.partials.hasOwnProperty(e) ? t : Up(t.constructor, e);
    }
    function Up(t, e) {
        if (!t) {
            return;
        }
        return t.partials.hasOwnProperty(e) ? t : Up(t.i2, e);
    }
    function Cp(t, e) {
        if (e) {
            if (e.Mf && e.Mf.m && e.Mf.m[t]) {
                return e.Mf.m[t];
            } else if (e.qU && e.qU.mV) {
                return Cp(t, e.qU.mV);
            }
        }
    }
    var Lp = function(t, e) {
        var n;
        if (!e) {
            return t;
        }
        n = t.split("\n").map(function(t, n) {
            return n ? e + t : t;
        }).join("\n");
        return n;
    };
    var Pp = 'Could not find template for partial "%s"';
    var Np = function(t) {
        var e, n;
        e = this.qU = t.qU;
        this.root = e.root;
        this.type = ki;
        this.index = t.index;
        this.name = t.Mf.r;
        this.YT = false;
        this.XT = this.j2 = this.l2 = null;
        Xu.init(this, t);
        if (!this.rU) {
            if (n = Ap(this.root, this.name, e)) {
                fu.call(this);
                this.m2 = true;
                this.n2(n);
            } else {
                K(Pp, this.name);
            }
        }
    };
    Np.prototype = {
        L_: function() {
            this.qU.L_();
        },
        detach: function() {
            return this.XT.detach();
        },
        find: function(t) {
            return this.XT.find(t);
        },
        uV: function(t, e) {
            return this.XT.uV(t, e);
        },
        xV: function(t) {
            return this.XT.xV(t);
        },
        wV: function(t, e) {
            return this.XT.wV(t, e);
        },
        M_: function() {
            return this.XT.M_();
        },
        N_: function() {
            return this.qU.N_(this);
        },
        o2: function() {
            if (this.m2 && this.name) return this.name; else if (this.value === undefined) return this.name; else return this.value;
        },
        $v: function() {
            return this.XT.$v();
        },
        V_: function(t, e) {
            if (!this.m2) {
                Wu.call(this, t, e);
            }
            if (this.XT) {
                this.XT.V_(t, e);
            }
        },
        xx: function() {
            this.C0 = document.createDocumentFragment();
            this.update();
            this.YT = true;
            return this.C0;
        },
        resolve: Xu.resolve,
        _v: function(t) {
            var e;
            if (t !== undefined && t === this.value) {
                return;
            }
            if (t !== undefined) {
                e = Ap(this.root, "" + t, this.qU);
            }
            if (!e && this.name && (e = Ap(this.root, this.name, this.qU))) {
                fu.call(this);
                this.m2 = true;
            }
            if (!e) {
                K(Pp, this.name, {
                    VT: this.root
                });
            }
            this.value = t;
            this.n2(e || []);
            this.L_();
            if (this.YT) {
                ve.TU(this);
            }
        },
        n2: function(t) {
            if (this.XT) {
                this.XT.uw();
                if (this.YT) {
                    this.l2 = this.XT;
                }
            }
            this.XT = new Km({
                Mf: t,
                root: this.root,
                mV: this,
                Q_: this.qU.Q_
            });
            this.j2 = this.XT;
        },
        toString: function(t) {
            var e, n, i, r;
            e = this.XT.toString(t);
            n = this.qU.kV[this.index - 1];
            if (!n || n.type !== Li) {
                return e;
            }
            i = n.text.split("\n").pop();
            if (r = /^\s+$/.exec(i)) {
                return Lp(e, r[0]);
            }
            return e;
        },
        uw: function() {
            if (!this.m2) {
                fu.call(this);
            }
            if (this.XT) {
                this.XT.uw();
            }
        },
        tU: function(t) {
            if (this.YT) {
                if (this.XT) {
                    this.XT.tU(t);
                }
                this.YT = false;
            }
        },
        update: function() {
            var t, e;
            if (this.l2) {
                this.l2.tU(true);
                this.l2 = null;
            }
            if (this.j2) {
                this.C0.appendChild(this.j2.xx());
                this.j2 = null;
            }
            if (this.YT) {
                t = this.qU.H0();
                e = this.qU.N_(this);
                t.insertBefore(this.C0, e);
            }
        }
    };
    var Ip = Np;
    var qp = zp;
    function zp(t, e) {
        var n, i = tt("components", t, e);
        if (i) {
            n = i.q2[e];
            if (!n.i2) {
                var r = n.bind(i);
                r.E_ = i.q2.hasOwnProperty(e);
                n = r();
                if (!n) {
                    X($, e, "component", "component", {
                        VT: t
                    });
                    return;
                }
                if (typeof n === "string") {
                    n = zp(t, n);
                }
                n.D_ = r;
                i.q2[e] = n;
            }
        }
        return n;
    }
    var Bp = jp;
    var kp = new Ct("detach");
    function jp() {
        var t = this.NU.XT.detach();
        kp.pU(this.NU);
        return t;
    }
    var Dp = Gp;
    function Gp(t) {
        return this.NU.XT.find(t);
    }
    var Fp = Vp;
    function Vp(t, e) {
        return this.NU.XT.uV(t, e);
    }
    var Wp = Yp;
    function Yp(t, e) {
        e.qV(this, true);
        if (this.NU.XT) {
            this.NU.XT.wV(t, e);
        }
    }
    var Xp = Kp;
    function Kp(t) {
        if (!t || t === this.name) {
            return this.NU;
        }
        if (this.NU.XT) {
            return this.NU.XT.xV(t);
        }
        return null;
    }
    var Zp = $p;
    function $p() {
        return this.qU.N_(this);
    }
    var Jp = Qp;
    function Qp() {
        if (this.YT) {
            return this.NU.XT.M_();
        }
        return null;
    }
    var tE = function(t, e, n, i) {
        var r = t.root;
        var a = t.rU;
        if (!!i) {
            r.hU.TV(a, e, i);
        } else {
            r.hU.mark(a);
        }
    };
    var eE = [], nE = [ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], iE, rE, aE;
    nE.forEach(function(t) {
        var e = function() {
            for (var e = arguments.length, n = Array(e), i = 0; i < e; i++) {
                n[i] = arguments[i];
            }
            var r, a, s, o;
            r = kn(this, t, n);
            a = Array.prototype[t].apply(this, arguments);
            ve.start();
            this.jV.s2 = true;
            o = this.jV.t2.length;
            while (o--) {
                s = this.jV.t2[o];
                ve.PU(s.root);
                tE(s, this, t, r);
            }
            ve.end();
            this.jV.s2 = false;
            return a;
        };
        H(eE, t, {
            value: e
        });
    });
    iE = {};
    if (iE.__proto__) {
        rE = function(t) {
            t.__proto__ = eE;
        };
        aE = function(t) {
            t.__proto__ = Array.prototype;
        };
    } else {
        rE = function(t) {
            var e, n;
            e = nE.length;
            while (e--) {
                n = nE[e];
                H(t, n, {
                    value: eE[n],
                    TR: true
                });
            }
        };
        aE = function(t) {
            var e;
            e = nE.length;
            while (e--) {
                delete t[nE[e]];
            }
        };
    }
    rE.u2 = aE;
    var sE = rE;
    var oE, fE, uE;
    oE = {
        filter: function(t) {
            return L(t) && (!t.jV || !t.jV.s2);
        },
        wrap: function(t, e, n) {
            return new fE(t, e, n);
        }
    };
    fE = function(t, e, n) {
        this.root = t;
        this.value = e;
        this.rU = Et(n);
        if (!e.jV) {
            H(e, "_ractive", {
                value: {
                    t2: [],
                    _s: [],
                    s2: false
                },
                TR: true
            });
            sE(e);
        }
        if (!e.jV._s[t.O_]) {
            e.jV._s[t.O_] = 0;
            e.jV._s.push(t);
        }
        e.jV._s[t.O_] += 1;
        e.jV.t2.push(this);
    };
    fE.prototype = {
        get: function() {
            return this.value;
        },
        sU: function() {
            var t, e, n, i, r;
            t = this.value;
            e = t.jV;
            n = e.t2;
            i = e._s;
            if (e.s2) {
                return false;
            }
            r = n.indexOf(this);
            if (r === -1) {
                throw new Error(uE);
            }
            n.splice(r, 1);
            if (!n.length) {
                delete t.jV;
                sE.u2(this.value);
            } else {
                i[this.root.O_] -= 1;
                if (!i[this.root.O_]) {
                    r = i.indexOf(this.root);
                    if (r === -1) {
                        throw new Error(uE);
                    }
                    i.splice(r, 1);
                }
            }
        }
    };
    uE = "Something went wrong in a rather interesting way";
    var hE = oE;
    var cE = /^\s*[0-9]+\s*$/;
    var lE = function(t) {
        return cE.test(t) ? [] : {};
    };
    var dE, vE;
    try {
        Object.defineProperty({}, "test", {
            value: 0
        });
        dE = {
            filter: function(t, e, n) {
                var i, r;
                if (!e) {
                    return false;
                }
                e = Et(e);
                if ((i = n.hU.kU[e.parent.$T]) && !i.BT) {
                    return false;
                }
                r = n.hU.get(e.parent);
                if (L(r) && /^[0-9]+$/.test(e.bU)) {
                    return false;
                }
                return r && (typeof r === "object" || typeof r === "function");
            },
            wrap: function(t, e, n) {
                return new vE(t, e, n);
            }
        };
        vE = function(t, e, n) {
            var i, r, a;
            n = Et(n);
            this.BT = true;
            this.VT = t;
            this.rU = n;
            this.value = e;
            this.n$ = n.bU;
            i = n.parent;
            this.v2 = i.dU ? t.hU.data : t.hU.get(i);
            r = this.w2 = Object.getOwnPropertyDescriptor(this.v2, this.n$);
            if (r && r.set && (a = r.set.z2)) {
                if (a.indexOf(this) === -1) {
                    a.push(this);
                }
                return;
            }
            EE(this, e, r);
        };
        vE.prototype = {
            get: function() {
                return this.value;
            },
            reset: function(t) {
                if (this.updating) {
                    return;
                }
                this.updating = true;
                this.v2[this.n$] = t;
                ve.PU(this.VT);
                this.VT.hU.mark(this.rU, {
                    A2: true
                });
                this.updating = false;
                return true;
            },
            set: function(t, e) {
                if (this.updating) {
                    return;
                }
                if (!this.v2[this.n$]) {
                    this.updating = true;
                    this.v2[this.n$] = lE(t);
                    this.updating = false;
                }
                this.v2[this.n$][t] = e;
            },
            sU: function() {
                var t, e, n, i, r;
                if (this.updating) {
                    return false;
                }
                t = Object.getOwnPropertyDescriptor(this.v2, this.n$);
                e = t && t.set;
                if (!e) {
                    return;
                }
                i = e.z2;
                r = i.indexOf(this);
                if (r !== -1) {
                    i.splice(r, 1);
                }
                if (!i.length) {
                    n = this.v2[this.n$];
                    Object.defineProperty(this.v2, this.n$, this.w2 || {
                        sV: true,
                        vq: true,
                        TR: true
                    });
                    this.v2[this.n$] = n;
                }
            }
        };
    } catch (t) {
        dE = false;
    }
    var pE = dE;
    function EE(t, e, n) {
        var i, r, a, s, o, f;
        i = t.v2;
        r = t.n$;
        if (n && !n.TR) {
            if (r === "length") {
                return;
            }
            throw new Error('Cannot use magic mode with property "' + r + '" - object is not configurable');
        }
        if (n) {
            a = n.get;
            s = n.set;
        }
        o = a || function() {
            return e;
        };
        f = function(t) {
            if (s) {
                s(t);
            }
            e = a ? a() : t;
            f.z2.forEach(u);
        };
        function u(t) {
            var n, i;
            t.value = e;
            if (t.updating) {
                return;
            }
            i = t.VT;
            n = t.rU;
            t.updating = true;
            ve.start(i);
            i.hU.mark(n);
            ve.end();
            t.updating = false;
        }
        f.z2 = [ t ];
        Object.defineProperty(i, r, {
            get: o,
            set: f,
            vq: true,
            TR: true
        });
    }
    var gE, mE;
    if (pE) {
        gE = {
            filter: function(t, e, n) {
                return pE.filter(t, e, n) && hE.filter(t);
            },
            wrap: function(t, e, n) {
                return new mE(t, e, n);
            }
        };
        mE = function(t, e, n) {
            this.value = e;
            this.BT = true;
            this.B2 = pE.wrap(t, e, n);
            this.C2 = hE.wrap(t, e, n);
        };
        mE.prototype = {
            get: function() {
                return this.value;
            },
            sU: function() {
                this.C2.sU();
                this.B2.sU();
            },
            reset: function(t) {
                return this.B2.reset(t);
            }
        };
    }
    var TE = gE;
    var yE = wE;
    var RE = {};
    function wE(t, e) {
        var n, i, r, a;
        if (!this.I_) return;
        n = this.I_.length;
        for (i = 0; i < n; i += 1) {
            r = this.I_[i];
            if (r.filter(e, t, this.VT)) {
                a = this.kU[t] = r.wrap(this.VT, e, t, bE(t));
                a.value = e;
                return;
            }
        }
    }
    function xE(t, e) {
        var n = {}, i;
        if (!e) {
            return t;
        }
        e += ".";
        for (i in t) {
            if (t.hasOwnProperty(i)) {
                n[e + i] = t[i];
            }
        }
        return n;
    }
    function bE(t) {
        var e;
        if (!RE[t]) {
            e = t ? t + "." : "";
            RE[t] = function(n, i) {
                var r;
                if (typeof n === "string") {
                    r = {};
                    r[e + n] = i;
                    return r;
                }
                if (typeof n === "object") {
                    return e ? xE(n, t) : n;
                }
            };
        }
        return RE[t];
    }
    var HE = _E;
    function _E(t) {
        var e = [ yt ], n, i;
        n = t.length;
        while (n--) {
            i = t[n].parent;
            while (i && !i.dU) {
                if (t.indexOf(i) === -1) {
                    Lt(e, i);
                }
                i = i.parent;
            }
        }
        return e;
    }
    var AE = ME;
    function ME(t, e, n) {
        var i;
        SE(t, e);
        if (n) {
            return;
        }
        i = e.fU();
        i.forEach(function(n) {
            OE(t, n, e);
        });
    }
    function OE(t, e, n) {
        var i, r, a;
        e = e.$T || e;
        i = t.D2.PV;
        r = i && i[e];
        if (!r) {
            return;
        }
        r.forEach(function(e) {
            a = n.join(e.bU);
            SE(t, a);
            OE(t, e, a);
        });
    }
    function SE(t, e) {
        t.PV.forEach(function(t) {
            if (t.KV.test(e.$T)) {
                t.update(e);
            }
        });
    }
    var UE = CE;
    function CE() {
        var t = this;
        var e = this, n, i, r = {}, a;
        n = this.OU;
        if (!n.length) {
            return;
        }
        function s(t) {
            var i = t.key;
            if (t.hU === e) {
                e.E2(i.$T);
                t.F2();
                n.push(i);
                o(i);
            } else {
                t.hU.mark(i);
            }
        }
        function o(t) {
            var n, i;
            if (e.G2.hasOwnProperty(t.$T)) {
                return;
            }
            if (i = e.k0.AT[t.$T]) {
                i.forEach(s);
            }
            if (n = e.D2.AT[t.$T]) {
                n.forEach(o);
            }
        }
        n.slice().forEach(o);
        i = HE(n);
        i.forEach(function(t) {
            var i;
            if (n.indexOf(t) === -1 && (i = e.k0.AT[t.$T])) {
                i.forEach(s);
            }
        });
        this.OU = [];
        if (this.PV.length) {
            i.forEach(function(e) {
                return AE(t, e, true);
            });
            n.forEach(function(e) {
                return AE(t, e);
            });
        }
        if (this.k0.H2) {
            i.forEach(function(e) {
                return LE(t, null, e, "observers");
            });
            NE(this, n, "observers");
        }
        if (this.k0["default"]) {
            a = [];
            i.forEach(function(e) {
                return LE(t, a, e, "default");
            });
            if (a.length) {
                PE(this, a, n);
            }
            NE(this, n, "default");
        }
        n.forEach(function(e) {
            r[e.$T] = t.get(e);
        });
        this.MV = {};
        this.G2 = {};
        return r;
    }
    function LE(t, e, n, i) {
        var r, a;
        if (r = IE(t, n, i)) {
            a = t.get(n);
            r.forEach(function(t) {
                if (e && t.I2) {
                    e.push(t);
                } else {
                    t._v(a);
                }
            });
        }
    }
    function PE(t, e, n) {
        e.forEach(function(e) {
            var i = false, r = 0, a = n.length, s = [];
            while (r < a) {
                var o = n[r];
                if (o === e.rU) {
                    i = true;
                    break;
                }
                if (o.slice(0, e.rU.length) === e.rU) {
                    s.push(o);
                }
                r++;
            }
            if (i) {
                e._v(t.get(e.rU));
            }
            if (s.length) {
                e.I2(s);
            }
        });
    }
    function NE(t, e, n) {
        var i = [];
        r(e);
        i.forEach(o);
        function r(t) {
            t.forEach(a);
            t.forEach(s);
        }
        function a(e) {
            var r = IE(t, e, n);
            if (r) {
                i.push({
                    rU: e,
                    k0: r
                });
            }
        }
        function s(e) {
            var i;
            if (i = t.D2[n][e.$T]) {
                r(i);
            }
        }
        function o(e) {
            var n = t.get(e.rU);
            e.k0.forEach(function(t) {
                return t._v(n);
            });
        }
    }
    function IE(t, e, n) {
        var i = t.k0[n];
        return i ? i[e.$T] : null;
    }
    var qE = zE;
    function zE() {
        this.J2.push([]);
    }
    var BE = kE;
    function kE(t, e) {
        var n, i;
        if (!e) {
            if (i = this.kU[t]) {
                if (i.sU() !== false) {
                    this.kU[t] = null;
                }
            }
        }
        this.nc[t] = undefined;
        if (n = this.K2[t]) {
            while (n.length) {
                this.E2(n.pop());
            }
        }
    }
    var jE = function(t, e) {
        this.L2 = t;
        this.hU = t.hU;
        this.ZU = e;
        this.root = this.hU.VT;
        this.qU = this.root.WT && this.root.WT.qU;
    };
    jE.prototype = {
        resolve: function(t) {
            this.L2.M2.push(t);
            this.L2.N2[t.$T] = null;
            this.hU.register(t, this.L2, "computed");
        }
    };
    var DE = jE;
    var GE = function(t, e) {
        this.key = t;
        this.l0 = e.l0;
        this.O2 = e.O2;
        this.P2 = e.k0 || [];
        this.M2 = [];
        this.N2 = {};
        this.Q2 = {};
        this.nV = this.R2 = true;
    };
    GE.prototype = {
        constructor: GE,
        init: function(t) {
            var e = this;
            var n;
            this.hU = t;
            this.S2 = true;
            n = t.get(this.key);
            t.E2(this.key.$T);
            this.S2 = false;
            if (this.O2 && n !== undefined) {
                this.set(n);
            }
            if (this.P2) {
                this.P2.forEach(function(n) {
                    return t.register(n, e, "computed");
                });
            }
        },
        F2: function() {
            this.nV = true;
        },
        get: function() {
            var t = this;
            var e, n, i = false;
            if (this.T2) {
                var r = "The " + this.key.$T + " computation indirectly called itself. This probably indicates a bug in the computation. It is commonly caused by `array.sort(...)` - if that's the case, clone the array first with `array.slice().sort(...)`";
                Y(r);
                return this.value;
            }
            this.T2 = true;
            if (this.nV) {
                if (this.R2 || !this.P2.length && !this.M2.length) {
                    i = true;
                } else {
                    [ this.P2, this.M2 ].forEach(function(e) {
                        var n, r, a;
                        if (i) {
                            return;
                        }
                        a = e.length;
                        while (a--) {
                            n = e[a];
                            r = t.hU.get(n);
                            if (!N(r, t.Q2[n.$T])) {
                                t.Q2[n.$T] = r;
                                i = true;
                                return;
                            }
                        }
                    });
                }
                if (i) {
                    this.hU.HV();
                    try {
                        this.value = this.l0();
                    } catch (t) {
                        X('Failed to compute "%s"', this.key.$T);
                        V(t.stack || t);
                        this.value = void 0;
                    }
                    e = this.hU.release();
                    n = this.U2(e);
                    if (n) {
                        [ this.P2, this.M2 ].forEach(function(e) {
                            e.forEach(function(e) {
                                t.Q2[e.$T] = t.hU.get(e);
                            });
                        });
                    }
                }
                this.nV = false;
            }
            this.T2 = this.R2 = false;
            return this.value;
        },
        set: function(t) {
            if (this.s2) {
                this.value = t;
                return;
            }
            if (!this.O2) {
                throw new Error("Computed properties without setters are read-only. (This may change in a future version of Ractive!)");
            }
            this.O2(t);
        },
        U2: function(t) {
            var e, n, i, r, a;
            n = this.M2;
            e = n.length;
            while (e--) {
                i = n[e];
                if (t.indexOf(i) === -1) {
                    r = true;
                    this.hU.unregister(i, this, "computed");
                }
            }
            e = t.length;
            while (e--) {
                i = t[e];
                if (n.indexOf(i) === -1 && (!this.P2 || this.P2.indexOf(i) === -1)) {
                    r = true;
                    if (FE(this.hU, i) && !this.N2[i.$T]) {
                        a = new DE(this, i.$T);
                        t.splice(e, 1);
                        this.N2[i.$T] = a;
                        ve.UU(a);
                    } else {
                        this.hU.register(i, this, "computed");
                    }
                }
            }
            if (r) {
                this.M2 = t.slice();
            }
            return r;
        }
    };
    function FE(t, e) {
        var n = e.aU;
        return !(n in t.data) && !(n in t.jU) && !(n in t.iU);
    }
    var VE = GE;
    var WE = YE;
    function YE(t, e) {
        var n = new VE(t, e);
        if (this.aR) {
            n.init(this);
        }
        return this.jU[t.$T] = n;
    }
    var XE = {
        V2: true
    };
    var KE = $E;
    var ZE = {};
    function $E(t, e) {
        var n = this.nc, i, r, a, s, o = t.$T, f;
        e = e || ZE;
        if (e.HV && (s = qt(this.J2))) {
            if (!~s.indexOf(t)) {
                s.push(t);
            }
        }
        if (S.call(this.iU, t.aU)) {
            return this.iU[t.aU].get(t, e);
        }
        if (t._T) {
            return t.value;
        }
        if (n[o] === undefined) {
            if ((r = this.jU[o]) && !r.S2) {
                i = r.get();
                this.DT(o, i);
            } else if (a = this.kU[o]) {
                i = a.value;
            } else if (t.dU) {
                this.DT("", this.data);
                i = this.data;
            } else {
                i = JE(this, t);
            }
            n[o] = i;
        } else {
            i = n[o];
        }
        if (!e.IV && (a = this.kU[o])) {
            i = a.get();
        }
        if (t.dU && e.JV) {
            for (f in this.iU) {
                i[f] = this.iU[f].$v();
            }
        }
        return i === XE ? void 0 : i;
    }
    function JE(t, e) {
        var n, i, r, a;
        n = t.get(e.parent);
        if (a = t.kU[e.parent.$T]) {
            n = a.get();
        }
        if (n === null || n === undefined) {
            return;
        }
        if (!(i = t.K2[e.parent.$T])) {
            t.K2[e.parent.$T] = [ e.$T ];
        } else {
            if (i.indexOf(e.$T) === -1) {
                i.push(e.$T);
            }
        }
        if (typeof n === "object" && !(e.bU in n)) {
            return t.nc[e.$T] = XE;
        }
        r = n[e.bU];
        t.DT(e.$T, r, false);
        t.nc[e.$T] = r;
        return r;
    }
    var QE = tg;
    function tg() {
        var t;
        for (t in this.jU) {
            this.jU[t].init(this);
        }
    }
    var eg = ng;
    function ng(t, e) {
        var n = this.iU[t.$T] = new ig(t, e);
        n.W2(this);
        return n;
    }
    var ig = function(t, e) {
        this.X2 = t;
        this.rU = e.rU;
        this.origin = e.origin;
        this.k0 = [];
        this.r0 = [];
        this.T_ = false;
    };
    ig.prototype = {
        U_: function() {
            this.rU = this.X2;
            this.Y2();
        },
        get: function(t, e) {
            if (!this.T_) {
                return undefined;
            }
            return this.origin.get(this.map(t), e);
        },
        $v: function() {
            if (!this.rU) {
                return undefined;
            }
            return this.origin.get(this.rU);
        },
        W2: function(t) {
            this.Z2 = t;
            this.Y2();
        },
        map: function(t) {
            if (typeof this.rU === undefined) {
                return this.X2;
            }
            return t.replace(this.X2, this.rU);
        },
        register: function(t, e, n) {
            this.k0.push({
                rU: t,
                _2: e,
                group: n
            });
            if (this.T_) {
                this.origin.register(this.map(t), e, n);
            }
        },
        resolve: function(t) {
            if (this.rU !== undefined) {
                this.uw(true);
            }
            this.rU = t;
            this.Y2();
        },
        set: function(t, e) {
            if (!this.T_) {
                this.U_();
            }
            this.origin.set(this.map(t), e);
        },
        Y2: function() {
            var t = this;
            if (this.rU === undefined) {
                return;
            }
            this.T_ = true;
            if (this.k0.length) {
                this.k0.forEach(function(e) {
                    var n = t.map(e.rU);
                    t.origin.register(n, e._2, e.group);
                    if (e._2._v) {
                        e._2._v(t.origin.get(n));
                    } else if (e._2.F2) {
                        e._2.F2();
                    } else {
                        throw new Error("An unexpected error occurred. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!");
                    }
                });
                this.origin.mark(this.rU);
            }
        },
        _v: function(t) {
            if (!this.rU) {
                throw new Error("Mapping does not have keypath, cannot set value. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!");
            }
            this.origin.set(this.rU, t);
        },
        uw: function(t) {
            var e = this;
            if (!t) {
                delete this.Z2.iU[this.X2];
            }
            if (!this.T_) {
                return;
            }
            this.k0.forEach(function(t) {
                e.origin.unregister(e.map(t.rU), t._2, t.group);
            });
            if (this.a3) {
                this.origin.unregister(this.rU, this.a3);
            }
        },
        unregister: function(t, e, n) {
            var i, r;
            if (!this.T_) {
                return;
            }
            i = this.k0;
            r = i.length;
            while (r--) {
                if (i[r]._2 === e) {
                    i.splice(r, 1);
                    break;
                }
            }
            this.origin.unregister(this.map(t), e, n);
        }
    };
    var rg = ag;
    function ag(t, e) {
        var n, i = t.$T;
        if (e) {
            if (e.b3) {
                this.MV[i] = true;
            }
            if (e.G2) {
                this.G2[i] = true;
            }
        }
        if (n = this.jU[i]) {
            n.F2();
        }
        if (this.OU.indexOf(t) === -1) {
            this.OU.push(t);
        }
        var r = e ? e.A2 : false;
        this.E2(i, r);
        if (this.aR) {
            this.onchange();
        }
    }
    var sg = function(t, e) {
        var n, i, r, a;
        n = {};
        i = 0;
        r = t.map(function(t, r) {
            var s, o, f;
            o = i;
            f = e.length;
            do {
                s = e.indexOf(t, o);
                if (s === -1) {
                    a = true;
                    return -1;
                }
                o = s + 1;
            } while (n[s] && o < f);
            if (s === i) {
                i += 1;
            }
            if (s !== r) {
                a = true;
            }
            n[s] = true;
            return s;
        });
        return r;
    };
    var og = ug;
    var fg = {};
    function ug(t, e, n, i) {
        var r, a, s, o;
        this.mark(t);
        if (i && i.ZR) {
            s = cg(i.ZR);
            try {
                r = e.map(s);
                a = n.map(s);
            } catch (i) {
                X('merge(): "%s" comparison failed. Falling back to identity checking', t);
                r = e;
                a = n;
            }
        } else {
            r = e;
            a = n;
        }
        o = sg(r, a);
        this.TV(t, n, o, e.length !== n.length);
    }
    function hg(t) {
        return JSON.stringify(t);
    }
    function cg(t) {
        if (t === true) {
            return hg;
        }
        if (typeof t === "string") {
            if (!fg[t]) {
                fg[t] = function(e) {
                    return e[t];
                };
            }
            return fg[t];
        }
        if (typeof t === "function") {
            return t;
        }
        throw new Error("The `compare` option must be a function, or a string representing an identifying field (or `true` to use JSON.stringify)");
    }
    var lg = dg;
    function dg(t, e) {
        var n = arguments[2] === undefined ? "default" : arguments[2];
        var i, r, a;
        if (e.nW) {
            return;
        }
        if (i = this.iU[t.aU]) {
            i.register(t, e, n);
        } else {
            r = this.k0[n] || (this.k0[n] = {});
            a = r[t.$T] || (r[t.$T] = []);
            a.push(e);
            if (!this.D2[n]) {
                this.D2[n] = {};
            }
            if (!t.dU) {
                vg(this, t, n);
            }
        }
    }
    function vg(t, e, n) {
        var i, r, a;
        while (!e.dU) {
            i = t.D2[n];
            r = i[e.parent.$T] || (i[e.parent.$T] = []);
            a = e.$T;
            if (r["_" + a] === undefined) {
                r["_" + a] = 0;
                r.push(e);
            }
            r["_" + a] += 1;
            e = e.parent;
        }
    }
    var pg = Eg;
    function Eg() {
        return this.J2.pop();
    }
    var gg = mg;
    function mg(t) {
        this.data = t;
        this.E2("");
    }
    var Tg = yg;
    function yg(t, e) {
        var n = arguments[2] === undefined ? {} : arguments[2];
        var i, r, a, s;
        if (!n.c3) {
            if (i = this.iU[t.aU]) {
                return i.set(t, e);
            }
        }
        r = this.jU[t.$T];
        if (r) {
            if (r.s2) {
                return;
            }
            r.set(e);
            e = r.get();
        }
        if (N(this.nc[t.$T], e)) {
            return;
        }
        a = this.kU[t.$T];
        if (a && a.reset) {
            s = a.reset(e) !== false;
            if (s) {
                e = a.get();
            }
        }
        if (!r && !s) {
            Rg(this, t, e);
        }
        if (!n.d3) {
            this.mark(t);
        } else {
            this.E2(t.$T);
        }
    }
    function Rg(t, e, n) {
        var i, r, a, s;
        a = function() {
            if (i.set) {
                i.set(e.bU, n);
            } else {
                r = i.get();
                s();
            }
        };
        s = function() {
            if (!r) {
                r = lE(e.bU);
                t.set(e.parent, r, {
                    d3: true
                });
            }
            r[e.bU] = n;
        };
        i = t.kU[e.parent.$T];
        if (i) {
            a();
        } else {
            r = t.get(e.parent);
            if (i = t.kU[e.parent.$T]) {
                a();
            } else {
                s();
            }
        }
    }
    var wg = Hg;
    var xg = {
        b3: true
    }, bg = {
        G2: true
    };
    function Hg(t, e, n) {
        var i = this;
        var r, a, s;
        a = n.length;
        n.forEach(function(e, n) {
            if (e === -1) {
                i.mark(t.join(n), bg);
            }
        });
        this.set(t, e, {
            d3: true
        });
        if (r = this.k0["default"][t.$T]) {
            r.filter(_g).forEach(function(t) {
                return t.Kd(n, e);
            });
        }
        if (a !== e.length) {
            this.mark(t.join("length"), xg);
            for (s = n.SV; s < e.length; s += 1) {
                this.mark(t.join(s));
            }
            for (s = e.length; s < a; s += 1) {
                this.mark(t.join(s), bg);
            }
        }
    }
    function _g(t) {
        return typeof t.Kd === "function";
    }
    var Ag = Mg;
    function Mg() {
        var t = this;
        var e;
        Object.keys(this.nc).forEach(function(e) {
            return t.E2(e);
        });
        while (e = this.e3.pop()) {
            e.sU();
        }
    }
    var Og = Sg;
    function Sg(t, e) {
        var n = arguments[2] === undefined ? "default" : arguments[2];
        var i, r, a;
        if (e.nW) {
            return;
        }
        if (i = this.iU[t.aU]) {
            return i.unregister(t, e, n);
        }
        r = this.k0[n][t.$T];
        a = r.indexOf(e);
        if (a === -1) {
            throw new Error("Attempted to remove a dependant that was no longer registered! This should not happen. If you are seeing this bug in development please raise an issue at https://github.com/RactiveJS/Ractive/issues - thanks");
        }
        r.splice(a, 1);
        if (t.dU) {
            return;
        }
        Ug(this, t, n);
    }
    function Ug(t, e, n) {
        var i, r;
        while (!e.dU) {
            i = t.D2[n];
            r = i[e.parent.$T];
            r["_" + e.$T] -= 1;
            if (!r["_" + e.$T]) {
                zt(r, e);
                r["_" + e.$T] = undefined;
            }
            e = e.parent;
        }
    }
    var Cg = function(t) {
        var e = t.DT;
        var n = t.data;
        var i = t.VT;
        var r = t.AT;
        var a = t.iU;
        var s;
        var o;
        this.VT = i;
        this.I_ = e;
        this.onchange = t.onchange;
        this.nc = {};
        this.K2 = b(null);
        this.k0 = {
            AT: b(null),
            default: b(null)
        };
        this.D2 = {
            AT: b(null),
            default: b(null)
        };
        this.PV = [];
        this.f3 = b(null);
        this.kU = b(null);
        this.jU = b(null);
        this.J2 = [];
        this.e3 = [];
        this.OU = [];
        this.MV = {};
        this.G2 = {};
        this.data = n;
        this.iU = b(null);
        for (s in a) {
            this.map(Et(s), a[s]);
        }
        if (n) {
            for (s in n) {
                if ((o = this.iU[s]) && o.$v() === undefined) {
                    o._v(n[s]);
                }
            }
        }
        for (s in r) {
            if (a && s in a) {
                F("Cannot map to a computed property ('%s')", s);
            }
            this.m0(Et(s), r[s]);
        }
        this.aR = true;
    };
    Cg.prototype = {
        DT: yE,
        YU: UE,
        HV: qE,
        E2: BE,
        m0: WE,
        get: KE,
        init: QE,
        map: eg,
        mark: rg,
        jd: og,
        register: lg,
        release: pg,
        reset: gg,
        set: Tg,
        TV: wg,
        sU: Ag,
        unregister: Og
    };
    var Lg = Cg;
    function Pg(t) {
        this.g3 = new Ct(t);
        this.h3 = {};
        this.i3 = {};
    }
    Pg.prototype = {
        constructor: Pg,
        j3: function(t) {
            this.h3[t.O_] = true;
        },
        end: function(t) {
            var e = t.parent;
            if (!e || !this.h3[e.O_]) {
                Ig(this, t);
            } else {
                Ng(this.i3, e).push(t);
            }
            delete this.h3[t.O_];
        }
    };
    function Ng(t, e) {
        return t[e.O_] || (t[e.O_] = []);
    }
    function Ig(t, e) {
        var n = Ng(t.i3, e);
        t.g3.pU(e);
        while (n.length) {
            Ig(t, n.shift());
        }
        delete t.i3[e.O_];
    }
    var qg = Pg;
    var zg = kg;
    var Bg = /\$\{([^\}]+)\}/g;
    function kg(t, e) {
        var n = {}, i;
        for (i in e) {
            n[i] = jg(t, i, e[i]);
        }
        return n;
    }
    function jg(t, e, n) {
        var i, r;
        if (typeof n === "function") {
            i = Gg(n, t);
        }
        if (typeof n === "string") {
            i = Dg(t, n);
        }
        if (typeof n === "object") {
            if (typeof n.get === "string") {
                i = Dg(t, n.get);
            } else if (typeof n.get === "function") {
                i = Gg(n.get, t);
            } else {
                F("`%s` computation must have a `get()` method", e);
            }
            if (typeof n.set === "function") {
                r = Gg(n.set, t);
            }
        }
        return {
            l0: i,
            O2: r
        };
    }
    function Dg(t, e) {
        var n, i, r;
        n = "return (" + e.replace(Bg, function(t, e) {
            i = true;
            return '__ractive.get("' + e + '")';
        }) + ");";
        if (i) {
            n = "var __ractive = this; " + n;
        }
        r = new Function(n);
        return i ? r.bind(t) : r;
    }
    function Gg(t, e) {
        return /this/.test(t.toString()) ? t.bind(e) : t;
    }
    var Fg = new Ct("construct");
    var Vg = new Ct("config");
    var Wg = new qg("init");
    var Yg = 0;
    var Xg = [ "adaptors", "components", "decorators", "easing", "events", "interpolators", "partials", "transitions" ];
    var Kg = Zg;
    function Zg(t) {
        var e = arguments[1] === undefined ? {} : arguments[1];
        var n = arguments[2] === undefined ? {} : arguments[2];
        var i, r;
        if (VT.ZT) {
            D();
        }
        Qg(t, n);
        H(t, "data", {
            get: tm
        });
        Fg.pU(t, e);
        Xg.forEach(function(n) {
            t[n] = M(b(t.constructor[n] || null), e[n]);
        });
        r = new Lg({
            DT: $g(t, t.DT, e),
            data: Hi.init(t.constructor, t, e),
            AT: zg(t, M(b(t.constructor.prototype.AT), e.AT)),
            iU: n.iU,
            VT: t,
            onchange: function() {
                return ve.PU(t);
            }
        });
        t.hU = r;
        r.init();
        Pf.init(t.constructor, t, e);
        Vg.pU(t);
        Wg.j3(t);
        if (t.Mf) {
            var a = undefined;
            if (n.a2 || t.VV) {
                a = n.a2 ? n.a2.slice() : [];
                if (t.VV) {
                    a.push(t.VV);
                }
            }
            t.XT = new Km({
                Mf: t.Mf,
                root: t,
                mV: t,
                a2: a
            });
        }
        Wg.end(t);
        if (i = y(t.sT)) {
            var s = t.xx(i, t.append);
            if (VT.l3) {
                s["catch"](function(e) {
                    K("Promise debugging is enabled, to help solve errors that happen asynchronously. Some browsers will log unhandled promise rejections, in which case you can safely disable promise debugging:\n  Ractive.DEBUG_PROMISES = false;");
                    X("An error happened during rendering", {
                        VT: t
                    });
                    e.stack && V(e.stack);
                    throw e;
                });
            }
        }
    }
    function $g(t, e, n) {
        var i, r, a;
        e = e.map(s);
        i = It(n.DT).map(s);
        i = Jg(e, i);
        r = "magic" in n ? n.BT : t.BT;
        a = "modifyArrays" in n ? n.CT : t.CT;
        if (r) {
            if (!o) {
                throw new Error("Getters and setters (magic mode) are not supported in this browser");
            }
            if (a) {
                i.push(TE);
            }
            i.push(pE);
        }
        if (a) {
            i.push(hE);
        }
        return i;
        function s(e) {
            if (typeof e === "string") {
                e = Q("adaptors", t, e);
                if (!e) {
                    F(J(e, "adaptor"));
                }
            }
            return e;
        }
    }
    function Jg(t, e) {
        var n = t.slice(), i = e.length;
        while (i--) {
            if (!~n.indexOf(e[i])) {
                n.push(e[i]);
            }
        }
        return n;
    }
    function Qg(t, e) {
        t.O_ = "r-" + Yg++;
        t.FV = b(null);
        t.bT = {};
        t.w1 = b(null);
        t.aV = [];
        t.J0 = {};
        t.tV = [];
        t.vV = [];
        t.o0 = [];
        t.QV = [];
        if (e.WT) {
            t.parent = e.parent;
            t.yV = e.yV || null;
            t.root = t.parent.root;
            t.WT = e.WT;
            e.WT.NU = t;
            t.m3 = e.n3;
        } else {
            t.root = t;
            t.parent = t.yV = null;
        }
    }
    function tm() {
        throw new Error("Using `ractive.data` is no longer supported - you must use the `ractive.get()` API instead");
    }
    function em(t, e, n) {
        this.qU = t.qU;
        this.uU = n;
        this.XT = new Km({
            Mf: e,
            root: t.root,
            mV: this
        });
        this.update();
    }
    var nm = em;
    em.prototype = {
        L_: function() {
            if (!this.Z1) {
                this.Z1 = true;
                ve.TU(this);
            }
        },
        update: function() {
            this.uU(this.XT.$v());
            this.Z1 = false;
        },
        V_: function(t, e) {
            this.XT.V_(t, e);
        },
        uw: function() {
            this.XT.uw();
        }
    };
    var im = function(t, e, n, i, r) {
        var a, s, o, f, u, h = {}, c = {}, l = {}, d, v = [];
        s = t.qU;
        o = t.root;
        r = r || {};
        M(h, r);
        r.content = i || [];
        h["o3"] = r.content;
        if (e.Nb.sT) {
            X("The <%s/> component has a default `el` property; it has been disregarded", t.name);
        }
        f = s;
        while (f) {
            if (f.mV.type === Wi) {
                u = f.mV.yV;
                break;
            }
            f = f.parent;
        }
        if (n) {
            Object.keys(n).forEach(function(e) {
                var i = n[e], r, s;
                if (typeof i === "string") {
                    r = uo(i);
                    c[e] = r ? r.value : i;
                } else if (i === 0) {
                    c[e] = true;
                } else if (L(i)) {
                    if (am(i)) {
                        l[e] = {
                            origin: t.root.hU,
                            rU: undefined
                        };
                        s = rm(t, i[0], function(t) {
                            if (t._T) {
                                if (d) {
                                    a.set(e, t.value);
                                } else {
                                    c[e] = t.value;
                                    delete l[e];
                                }
                            } else {
                                if (d) {
                                    a.hU.iU[e].resolve(t);
                                } else {
                                    l[e].rU = t;
                                }
                            }
                        });
                    } else {
                        s = new nm(t, i, function(t) {
                            if (d) {
                                a.set(e, t);
                            } else {
                                c[e] = t;
                            }
                        });
                    }
                    v.push(s);
                } else {
                    throw new Error("erm wut");
                }
            });
        }
        a = b(e.prototype);
        Kg(a, {
            sT: null,
            append: true,
            data: c,
            partials: r,
            BT: o.BT || e.Nb.BT,
            CT: o.CT,
            DT: o.DT
        }, {
            parent: o,
            WT: t,
            yV: u,
            iU: l,
            n3: h,
            a2: s.a2
        });
        d = true;
        t.q3 = v;
        return a;
    };
    function rm(t, e, n) {
        var i;
        if (e.r) {
            i = wu(t, e.r, n);
        } else if (e.x) {
            i = new Ou(t, t.qU, e.x, n);
        } else if (e.rx) {
            i = new ju(t, e.rx, n);
        }
        return i;
    }
    function am(t) {
        return t.length === 1 && t[0].uT === Pi;
    }
    var sm = om;
    function om(t, e) {
        var n;
        for (n in e) {
            if (e.hasOwnProperty(n)) {
                fm(t.NU, t.root, n, e[n]);
            }
        }
    }
    function fm(t, e, n, i) {
        if (typeof i !== "string") {
            F("Components currently only support simple events - you cannot include arguments. Sorry!");
        }
        t.jT(n, function() {
            var t, n;
            if (arguments.length && arguments[0] && arguments[0].Yv) {
                t = Array.prototype.shift.call(arguments);
            }
            n = Array.prototype.slice.call(arguments);
            nn(e, i, {
                event: t,
                gc: n
            });
            return false;
        });
    }
    var um = function(t) {
        var e, n;
        e = t.root;
        while (e) {
            if (n = e.vV["_" + t.name]) {
                n.push(t.NU);
            }
            e = e.parent;
        }
    };
    var hm = cm;
    function cm(t, e) {
        var n, i;
        if (!e) {
            throw new Error('Component "' + this.name + '" not found');
        }
        n = this.qU = t.qU;
        i = n.root;
        this.root = i;
        this.type = Vi;
        this.name = t.Mf.e;
        this.index = t.index;
        this.r3 = {};
        this.s3 = {};
        this.q3 = [];
        im(this, e, t.Mf.a, t.Mf.f, t.Mf.m);
        sm(this, t.Mf.tT);
        if (t.Mf.c2 || t.Mf.d2 || t.Mf.e2 || t.Mf.lM) {
            X('The "intro", "outro" and "decorator" directives have no effect on components', {
                VT: this.NU
            });
        }
        um(this);
    }
    var lm = dm;
    function dm(t, e) {
        var n;
        this.q3.forEach(r);
        for (var i in this.s3) {
            if (this.s3[i][0]) {
                r(this.s3[i][0]);
            }
        }
        if (n = this.root.vV["_" + this.name]) {
            n.fV();
        }
        function r(n) {
            n.V_(t, e);
        }
    }
    var vm = pm;
    function pm() {
        var t = this.NU;
        t.xx(this.qU.H0());
        this.YT = true;
        return t.XT.detach();
    }
    var Em = gm;
    function gm() {
        return this.NU.XT.toString();
    }
    var mm = ym;
    var Tm = new Ct("teardown");
    function ym() {
        var t = this.NU;
        this.q3.forEach(ne);
        Rm(this);
        t.QV.forEach(re);
        t.XT.uw();
        t.hU.sU();
        if (t.XT.YT && t.sT.dV) {
            zt(t.sT.dV, t);
        }
        Tm.pU(t);
    }
    function Rm(t) {
        var e, n;
        e = t.root;
        do {
            if (n = e.vV["_" + t.name]) {
                n.rV(t);
            }
        } while (e = e.parent);
    }
    var wm = xm;
    function xm(t) {
        this.t3 = t;
        this.NU.tU();
    }
    var bm = function(t, e) {
        this.init(t, e);
    };
    bm.prototype = {
        detach: Bp,
        find: Dp,
        uV: Fp,
        wV: Wp,
        xV: Xp,
        N_: Zp,
        M_: Jp,
        init: hm,
        V_: lm,
        xx: vm,
        toString: Em,
        uw: mm,
        tU: wm
    };
    var Hm = bm;
    var _m = function(t) {
        this.type = ji;
        this.value = t.Mf.c;
    };
    _m.prototype = {
        detach: au,
        M_: function() {
            return this.Yv;
        },
        xx: function() {
            if (!this.Yv) {
                this.Yv = document.createComment(this.value);
            }
            return this.Yv;
        },
        toString: function() {
            return "<!--" + this.value + "-->";
        },
        tU: function(t) {
            if (t) {
                this.Yv.parentNode.removeChild(this.Yv);
            }
        }
    };
    var Am = _m;
    var Mm = function(t) {
        var e, n;
        this.type = Wi;
        this.yV = e = t.qU.root;
        this.WT = n = e.WT;
        this.yV = e;
        this.u3 = t.qU;
        this.qU = n.qU;
        var i = this.name = t.Mf.n || "";
        var r = e.m3[i];
        if (!r) {
            X('Could not find template for partial "' + i + '"', {
                VT: t.root
            });
            r = [];
        }
        this.XT = new Km({
            mV: this,
            root: e.parent,
            Mf: r,
            Q_: this.u3.Q_
        });
        if (!L(n.s3[i])) {
            n.s3[i] = [ this ];
        } else {
            n.s3[i].push(this);
        }
        ve.XU(function() {
            if (n.s3[i].length > 1) {
                throw new Error("A component template can only have one {{yield" + (i ? " " + i : "") + "}} declaration at a time");
            }
        });
    };
    Mm.prototype = {
        detach: function() {
            return this.XT.detach();
        },
        find: function(t) {
            return this.XT.find(t);
        },
        uV: function(t, e) {
            return this.XT.uV(t, e);
        },
        xV: function(t) {
            return this.XT.xV(t);
        },
        wV: function(t, e) {
            return this.XT.wV(t, e);
        },
        N_: function() {
            return this.u3.N_(this);
        },
        M_: function() {
            return this.XT.M_();
        },
        $v: function(t) {
            return this.XT.$v(t);
        },
        xx: function() {
            return this.XT.xx();
        },
        uw: function() {
            this.XT.uw();
        },
        tU: function(t) {
            this.XT.tU(t);
            zt(this.WT.s3[this.name], this);
        },
        V_: function(t, e) {
            this.XT.V_(t, e);
        },
        toString: function() {
            return this.XT.toString();
        }
    };
    var Om = Mm;
    var Sm = function(t) {
        this.v3 = t.Mf.a;
    };
    Sm.prototype = {
        init: z,
        xx: z,
        tU: z,
        sU: z,
        toString: function() {
            return "<!DOCTYPE" + this.v3 + ">";
        }
    };
    var Um = Sm;
    var Cm = Lm;
    function Lm(t) {
        var e = this;
        this.mV = t.mV;
        this.parent = this.mV.qU;
        this.root = t.root;
        this.Q_ = t.Q_;
        this.context = t.context;
        this.index = t.index;
        this.key = t.key;
        this.A0 = [];
        this.a2 = "cssIds" in t ? t.a2 : this.parent ? this.parent.a2 : null;
        this.kV = t.Mf.map(function(n, i) {
            return Pm({
                qU: e,
                Q_: t.Q_,
                Mf: n,
                index: i
            });
        });
        this.value = this.P_ = null;
        this.K_ = this.J_ = true;
        this.bound = true;
    }
    function Pm(t) {
        if (typeof t.Mf === "string") {
            return new ou(t);
        }
        switch (t.Mf.uT) {
          case Wi:
            return new Om(t);

          case Pi:
            return new Zu(t);

          case Ii:
            return new Dh(t);

          case Ni:
            return new Ec(t);

          case Bi:
            var e = undefined;
            if (e = qp(t.qU.root, t.Mf.e)) {
                return new Hm(t, e);
            }
            return new wp(t);

          case ki:
            return new Ip(t);

          case ji:
            return new Am(t);

          case Xi:
            return new Um(t);

          default:
            throw new Error("Something very strange happened. Please file an issue at https://github.com/ractivejs/ractive/issues. Thanks!");
        }
    }
    var Nm = Im;
    function Im(t, e) {
        if (!this.mV || this.mV.F0) {
            vt(this, "context", t, e);
        }
        this.kV.forEach(function(n) {
            if (n.V_) {
                n.V_(t, e);
            }
        });
    }
    var qm = zm;
    function zm() {
        var t;
        if (this.kV.length === 1) {
            t = this.kV[0].xx();
        } else {
            t = document.createDocumentFragment();
            this.kV.forEach(function(e) {
                t.appendChild(e.xx());
            });
        }
        this.YT = true;
        return t;
    }
    var Bm = km;
    function km(t) {
        if (!this.kV) {
            return "";
        }
        return this.kV.map(t ? Dm : jm).join("");
    }
    function jm(t) {
        return t.toString();
    }
    function Dm(t) {
        return t.toString(true);
    }
    var Gm = Fm;
    function Fm() {
        if (!this.bound) {
            return;
        }
        this.kV.forEach(Vm);
        this.bound = false;
    }
    function Vm(t) {
        if (t.uw) {
            t.uw();
        }
    }
    var Wm = Ym;
    function Ym(t) {
        if (!this.YT) {
            throw new Error("Attempted to unrender a fragment that was not rendered");
        }
        this.kV.forEach(function(e) {
            return e.tU(t);
        });
        this.YT = false;
    }
    var Xm = function(t) {
        this.init(t);
    };
    Xm.prototype = {
        L_: Nf,
        detach: qf,
        find: Bf,
        uV: jf,
        wV: Gf,
        xV: Vf,
        N_: Yf,
        M_: Kf,
        P1: Qf,
        H0: eu,
        $v: iu,
        init: Cm,
        V_: Nm,
        a0: function(t) {
            var e = this.A0;
            if (e.indexOf(t) === -1) {
                e.push(t);
            }
        },
        xx: qm,
        toString: Bm,
        uw: Gm,
        b0: function(t) {
            var e = this.A0;
            e.splice(e.indexOf(t), 1);
        },
        tU: Wm
    };
    var Km = Xm;
    var Zm = Qm;
    var $m = [ "template", "partials", "components", "decorators", "events" ], Jm = new Ct("reset");
    function Qm(t) {
        var e, n, i, r, a;
        t = t || {};
        if (typeof t !== "object") {
            throw new Error("The reset method takes either no arguments, or an object containing new data");
        }
        if ((n = this.hU.kU["o3"]) && n.reset) {
            if (n.reset(t) === false) {
                this.hU.reset(t);
            }
        } else {
            this.hU.reset(t);
        }
        i = Pf.reset(this);
        r = i.length;
        while (r--) {
            if ($m.indexOf(i[r]) > -1) {
                a = true;
                break;
            }
        }
        if (a) {
            var s = undefined;
            this.hU.mark(yt);
            if (s = this.WT) {
                s.t3 = true;
            }
            this.tU();
            if (s) {
                s.t3 = false;
            }
            if (this.XT.Mf !== this.Mf) {
                this.XT.uw();
                this.XT = new Km({
                    Mf: this.Mf,
                    root: this,
                    mV: this
                });
            }
            e = this.xx(this.sT, this.anchor);
        } else {
            e = ve.start(this, true);
            this.hU.mark(yt);
            ve.end();
        }
        Jm.pU(this, t);
        return e;
    }
    var tT = function(t, e) {
        var n, i = [];
        function r(e, n, i) {
            if (i && i.partials[t]) return;
            e.forEach(function(e) {
                if (e.type === ki && e.o2() === t) {
                    n.push(e);
                }
                if (e.XT) {
                    r(e.XT.kV, n, i);
                }
                if (L(e.lV)) {
                    r(e.lV, n, i);
                } else if (L(e.kV)) {
                    r(e.kV, n, i);
                } else if (e.type === Vi && e.NU) {
                    r(e.NU.XT.kV, n, e.NU);
                }
                if (e.type === Bi) {
                    if (L(e.attributes)) {
                        r(e.attributes, n, i);
                    }
                    if (L(e._1)) {
                        r(e._1, n, i);
                    }
                }
            });
        }
        r(this.XT.kV, i);
        this.partials[t] = e;
        n = ve.start(this, true);
        i.forEach(function(e) {
            e.value = undefined;
            e._v(t);
        });
        ve.end();
        return n;
    };
    var eT = nT;
    function nT(t) {
        var e, n;
        df.init(null, this, {
            Mf: t
        });
        e = this.IT;
        this.IT = false;
        if (n = this.WT) {
            n.t3 = true;
        }
        this.tU();
        if (n) {
            n.t3 = false;
        }
        this.XT.uw();
        this.XT = new Km({
            Mf: this.Mf,
            root: this,
            mV: this
        });
        this.xx(this.sT, this.anchor);
        this.IT = e;
    }
    var iT = Fn("reverse");
    var rT = aT;
    function aT(t, e) {
        var n, i;
        i = ve.start(this, true);
        if (q(t)) {
            n = t;
            for (t in n) {
                if (n.hasOwnProperty(t)) {
                    e = n[t];
                    sT(this, t, e);
                }
            }
        } else {
            sT(this, t, e);
        }
        ve.end();
        return i;
    }
    function sT(t, e, n) {
        e = Et(Tt(e));
        if (e.cU) {
            gt(t, e).forEach(function(e) {
                t.hU.set(e, n);
            });
        } else {
            t.hU.set(e, n);
        }
    }
    var oT = Fn("shift");
    var fT = Fn("sort");
    var uT = Fn("splice");
    var hT = cT;
    function cT(t, e) {
        return Rt(this, t, e === undefined ? -1 : -e);
    }
    var lT = vT;
    var dT = new Ct("teardown");
    function vT() {
        var t;
        this.XT.uw();
        this.hU.sU();
        this.QV.forEach(re);
        if (this.XT.YT && this.sT.dV) {
            zt(this.sT.dV, this);
        }
        this.t3 = true;
        t = this.XT.YT ? this.tU() : Ft.resolve();
        dT.pU(this);
        this.o0.forEach(pT);
        return t;
    }
    function pT(t) {
        delete t._Q[t.n$];
    }
    var ET = gT;
    function gT(t) {
        var e = this;
        if (typeof t !== "string") {
            throw new TypeError(Z);
        }
        var n = undefined;
        if (/\*/.test(t)) {
            n = {};
            gt(this, Et(Tt(t))).forEach(function(t) {
                n[t.$T] = !e.hU.get(t);
            });
            return this.set(n);
        }
        return this.set(t, !this.get(t));
    }
    var mT = TT;
    function TT() {
        return this.XT.toString(true);
    }
    var yT = wT;
    var RT = new Ct("unrender");
    function wT() {
        var t, e;
        if (!this.XT.YT) {
            X("ractive.unrender() was called on a Ractive instance that was not rendered");
            return Ft.resolve();
        }
        t = ve.start(this, true);
        e = !this.WT || this.WT.t3 || this.t3;
        while (this.aV[0]) {
            this.aV[0].stop();
        }
        this.XT.tU(e);
        zt(this.sT.dV, this);
        RT.pU(this);
        ve.end();
        return t;
    }
    var xT = Fn("unshift");
    var bT = _T;
    var HT = new Ct("update");
    function _T(t) {
        var e;
        t = Et(t) || yt;
        e = ve.start(this, true);
        this.hU.mark(t);
        ve.end();
        HT.pU(this, t);
        return e;
    }
    var AT = MT;
    function MT(t, e) {
        var n, i, r;
        if (typeof t === "string" && !e) {
            r = this.w1[t];
        } else {
            r = [];
            for (i in this.w1) {
                if (!t || Et(i).eU(t)) {
                    r.push.apply(r, this.w1[i]);
                }
            }
        }
        n = OT(this, r);
        return this.set(n);
    }
    function OT(t, e) {
        var n = {}, i = [];
        e.forEach(function(t) {
            var e, r;
            if (t.B1 && !t.R0.Yv.checked) {
                return;
            }
            if (t.D1) {
                if (!i[t.rU.$T] && !t.E1()) {
                    i.push(t.rU);
                    i[t.rU.$T] = t;
                }
                return;
            }
            e = t.s1.value;
            r = t.$v();
            if (Nt(e, r)) {
                return;
            }
            if (!N(e, r)) {
                n[t.rU.$T] = r;
            }
        });
        if (i.length) {
            i.forEach(function(t) {
                var e, r, a;
                e = i[t.$T];
                r = e.s1.value;
                a = e.$v();
                if (!Nt(r, a)) {
                    n[t.$T] = a;
                }
            });
        }
        return n;
    }
    var ST = {
        add: bt,
        animate: xe,
        detach: Ae,
        find: Se,
        uV: Fe,
        wV: We,
        xV: Xe,
        zV: Ze,
        AV: Je,
        pU: on,
        get: un,
        w3: ln,
        jd: En,
        observe: Mn,
        x3: Sn,
        RV: Pn,
        jT: In,
        rd: zn,
        pop: Vn,
        push: Wn,
        xx: ii,
        reset: Zm,
        y3: tT,
        z3: eT,
        reverse: iT,
        set: rT,
        shift: oT,
        sort: fT,
        splice: uT,
        Jf: hT,
        sU: lT,
        toggle: ET,
        A3: mT,
        B3: mT,
        tU: yT,
        unshift: xT,
        update: bT,
        G1: AT
    };
    var UT = function(t, e, n) {
        if (n || CT(t, e)) {
            return function() {
                var n = "_super" in this, i = this.G_, r;
                this.G_ = e;
                r = t.apply(this, arguments);
                if (n) {
                    this.G_ = i;
                }
                return r;
            };
        } else {
            return t;
        }
    };
    function CT(t, e) {
        return typeof e === "function" && /_super/.test(t);
    }
    var LT = PT;
    function PT(t) {
        var e = {};
        while (t) {
            NT(t, e);
            qT(t, e);
            if (t.i2 !== VT) {
                t = t.i2;
            } else {
                t = false;
            }
        }
        return e;
    }
    function NT(t, e) {
        gf.forEach(function(n) {
            IT(n.B_ ? t.prototype : t, e, n.name);
        });
    }
    function IT(t, e, n) {
        var i, r = Object.keys(t[n]);
        if (!r.length) {
            return;
        }
        if (!(i = e[n])) {
            i = e[n] = {};
        }
        r.filter(function(t) {
            return !(t in i);
        }).forEach(function(e) {
            return i[e] = t[n][e];
        });
    }
    function qT(t, e) {
        Object.keys(t.prototype).forEach(function(n) {
            if (n === "computed") {
                return;
            }
            var i = t.prototype[n];
            if (!(n in e)) {
                e[n] = i.H_ ? i.H_ : i;
            } else if (typeof e[n] === "function" && typeof i === "function" && e[n].H_) {
                var r = undefined, a = i.H_;
                if (a) {
                    i = i.H_;
                }
                r = UT(e[n].H_, i);
                if (a) {
                    r.H_ = r;
                }
                e[n] = r;
            }
        });
    }
    var zT = BT;
    function BT() {
        for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) {
            e[n] = arguments[n];
        }
        if (!e.length) {
            return kT(this);
        } else {
            return e.reduce(kT, this);
        }
    }
    function kT(t) {
        var e = arguments[1] === undefined ? {} : arguments[1];
        var n, i;
        if (e.prototype instanceof VT) {
            e = LT(e);
        }
        n = function(t) {
            if (!(this instanceof n)) return new n(t);
            Kg(this, t);
        };
        i = b(t.prototype);
        i.constructor = n;
        A(n, {
            Nb: {
                value: i
            },
            extend: {
                value: BT,
                sV: true,
                TR: true
            },
            i2: {
                value: t
            }
        });
        Pf.extend(t, i, e);
        Hi.extend(t, i, e);
        if (e.AT) {
            i.AT = M(b(t.prototype.AT), e.AT);
        }
        n.prototype = i;
        return n;
    }
    var jT = function(t) {
        var e = {}, n, i;
        if (!t || !(n = t.jV)) {
            return e;
        }
        e.VT = n.root;
        e.rU = n.rU.$T;
        e.index = {};
        if (i = yu(n.iV.qU)) {
            e.index = yu.resolve(i);
        }
        return e;
    };
    var DT, GT;
    DT = function(t) {
        if (!(this instanceof DT)) return new DT(t);
        Kg(this, t);
    };
    GT = {
        ZT: {
            sV: true,
            value: true
        },
        l3: {
            sV: true,
            value: true
        },
        extend: {
            value: zT
        },
        C3: {
            value: jT
        },
        parse: {
            value: Go
        },
        Promise: {
            value: Ft
        },
        RT: {
            value: u
        },
        BT: {
            value: o
        },
        VERSION: {
            value: "0.7.3"
        },
        I_: {
            sV: true,
            value: {}
        },
        q2: {
            sV: true,
            value: {}
        },
        D3: {
            sV: true,
            value: {}
        },
        bV: {
            sV: true,
            value: i
        },
        Q1: {
            sV: true,
            value: {}
        },
        E3: {
            sV: true,
            value: at
        },
        partials: {
            sV: true,
            value: {}
        },
        F3: {
            sV: true,
            value: {}
        }
    };
    A(DT, GT);
    DT.prototype = M(ST, n);
    DT.prototype.constructor = DT;
    DT.Nb = DT.prototype;
    var FT = "function";
    if (typeof Date.now !== FT || typeof String.prototype.trim !== FT || typeof Object.keys !== FT || typeof Array.prototype.indexOf !== FT || typeof Array.prototype.forEach !== FT || typeof Array.prototype.map !== FT || typeof Array.prototype.filter !== FT || typeof window !== "undefined" && typeof window.addEventListener !== FT) {
        throw new Error("It looks like you're attempting to use Ractive.js in an older browser. You'll need to use one of the 'legacy builds' in order to continue - see http://docs.ractivejs.org/latest/legacy-builds for more information.");
    }
    var VT = DT;
    return VT;
});

var SPE = {
    R: {
        G3: 1,
        P: 2,
        H3: 3
    },
    I3: 4
};

if (typeof define === "function" && define.bg) {
    define("spe", SPE);
} else if (typeof exports !== "undefined" && typeof module !== "undefined") {
    module.Lb = SPE;
}

SPE.J3 = function(t, e, n, i) {
    "use strict";
    this.K3 = n || 1;
    this.size = e || 1;
    this.L3 = t || Float32Array;
    this.dc = new t(e * this.K3);
    this.M3 = i || 0;
};

SPE.J3.constructor = SPE.J3;

SPE.J3.prototype.$G = function(t, e) {
    "use strict";
    var n = this.dc.length;
    if (!e) {
        t = t * this.K3;
    }
    if (t < n) {
        return this.N3(t);
    } else if (t > n) {
        return this.O3(t);
    } else {
        console.info("TypedArray is already of size:", t + ".", "Will not resize.");
    }
};

SPE.J3.prototype.N3 = function(t) {
    "use strict";
    this.dc = this.dc.subarray(0, t);
    this.size = t;
    return this;
};

SPE.J3.prototype.O3 = function(t) {
    "use strict";
    var e = this.dc, n = new this.L3(t);
    n.set(e);
    this.dc = n;
    this.size = t;
    return this;
};

SPE.J3.prototype.splice = function(t, e) {
    "use strict";
    t *= this.K3;
    e *= this.K3;
    var n = [], i = this.dc, r = i.length;
    for (var a = 0; a < r; ++a) {
        if (a < t || a >= e) {
            n.push(i[a]);
        }
    }
    this.wn(0, n);
    return this;
};

SPE.J3.prototype.wn = function(t, e) {
    "use strict";
    var n = e.length, i = t + n;
    if (i > this.dc.length) {
        this.O3(i);
    } else if (i < this.dc.length) {
        this.N3(i);
    }
    this.dc.set(e, this.M3 + t);
    return this;
};

SPE.J3.prototype.P3 = function(t, e) {
    "use strict";
    return this.Q3(t, e.x, e.y);
};

SPE.J3.prototype.Q3 = function(t, e, n) {
    "use strict";
    var i = this.dc, r = this.M3 + t * this.K3;
    i[r] = e;
    i[r + 1] = n;
    return this;
};

SPE.J3.prototype.R3 = function(t, e) {
    "use strict";
    return this.S3(t, e.x, e.y, e.z);
};

SPE.J3.prototype.S3 = function(t, e, n, i) {
    "use strict";
    var r = this.dc, a = this.M3 + t * this.K3;
    r[a] = e;
    r[a + 1] = n;
    r[a + 2] = i;
    return this;
};

SPE.J3.prototype.T3 = function(t, e) {
    "use strict";
    return this.U3(t, e.x, e.y, e.z, e.w);
};

SPE.J3.prototype.U3 = function(t, e, n, i, r) {
    "use strict";
    var a = this.dc, s = this.M3 + t * this.K3;
    a[s] = e;
    a[s + 1] = n;
    a[s + 2] = i;
    a[s + 3] = r;
    return this;
};

SPE.J3.prototype.V3 = function(t, e) {
    "use strict";
    return this.wn(this.M3 + t * this.K3, e.elements);
};

SPE.J3.prototype.W3 = function(t, e) {
    "use strict";
    return this.wn(this.M3 + t * this.K3, e.elements);
};

SPE.J3.prototype.setColor = function(t, e) {
    "use strict";
    return this.S3(t, e.r, e.wi, e.b);
};

SPE.J3.prototype.X3 = function(t, e) {
    "use strict";
    this.dc[this.M3 + t * this.K3] = e;
    return this;
};

SPE.J3.prototype.Y3 = function(t) {
    "use strict";
    return this.dc[this.M3 + t];
};

SPE.J3.prototype.Z3 = function(t) {
    "use strict";
    return this.dc.subarray(this.M3 + t * this.K3);
};

SPE._3 = function(t, e, n) {
    "use strict";
    var i = SPE._3.a4;
    this.type = typeof t === "string" && i.hasOwnProperty(t) ? t : "f";
    this.K3 = i[this.type];
    this.b4 = n || Float32Array;
    this.c4 = null;
    this.d4 = null;
    this.e4 = !!e;
    this.f4 = 0;
    this.g4 = 0;
};

SPE._3.constructor = SPE._3;

SPE._3.a4 = {
    f: 1,
    MM: 2,
    OM: 3,
    h4: 4,
    c: 3,
    i4: 9,
    j4: 16
};

SPE._3.prototype.l4 = function(t, e) {
    "use strict";
    this.f4 = Math.min(t * this.K3, this.f4 * this.K3);
    this.g4 = Math.max(e * this.K3, this.g4 * this.K3);
};

SPE._3.prototype.m4 = function() {
    "use strict";
    var t = this.d4, e = t.sr;
    e.offset = this.f4;
    e.count = Math.min(this.g4 - this.f4 + this.K3, this.c4.dc.length);
    t.ur = true;
};

SPE._3.prototype.n4 = function() {
    "use strict";
    this.f4 = 0;
    this.g4 = 0;
};

SPE._3.prototype.o4 = function() {
    "use strict";
    this.d4.rr = this.e4;
};

SPE._3.prototype.splice = function(t, e) {
    "use strict";
    this.c4.splice(t, e);
    this.q4();
};

SPE._3.prototype.q4 = function() {
    "use strict";
    this.d4.dc = this.c4.dc;
    this.d4.sr.offset = 0;
    this.d4.sr.count = -1;
    this.d4.rr = false;
    this.d4.ur = true;
};

SPE._3.prototype.r4 = function(t) {
    "use strict";
    if (this.c4 !== null && this.c4.size === t * this.K3) {
        return;
    } else if (this.c4 !== null && this.c4.size !== t) {
        this.c4.$G(t);
    } else if (this.c4 === null) {
        this.c4 = new SPE.J3(this.b4, t, this.K3);
    }
};

SPE._3.prototype.s4 = function(t) {
    "use strict";
    this.r4(t);
    if (this.d4 !== null) {
        this.d4.dc = this.c4.dc;
        this.d4.ur = true;
        return;
    }
    this.d4 = new THREE.qr(this.c4.dc, this.K3);
    this.d4.rr = this.e4;
};

SPE._3.prototype.kp = function() {
    "use strict";
    if (this.c4 === null) {
        return 0;
    }
    return this.c4.dc.length;
};

SPE.t4 = {
    RB: [ "#define PACKED_COLOR_SIZE 256.0", "#define PACKED_COLOR_DIVISOR 255.0" ].join("\n"),
    l: [ "uniform float deltaTime;", "uniform float runTime;", "uniform sampler2D texture;", "uniform vec4 textureAnimation;", "uniform float scale;" ].join("\n"),
    attributes: [ "attribute vec4 acceleration;", "attribute vec3 velocity;", "attribute vec4 rotation;", "attribute vec3 rotationCenter;", "attribute vec4 params;", "attribute vec4 size;", "attribute vec4 angle;", "attribute vec4 color;", "attribute vec4 opacity;" ].join("\n"),
    u4: [ "varying vec4 vColor;", "#ifdef SHOULD_ROTATE_TEXTURE", "    varying float vAngle;", "#endif", "#ifdef SHOULD_CALCULATE_SPRITE", "    varying vec4 vSpriteSheet;", "#endif" ].join("\n"),
    v4: [ "float when_gt(float x, float y) {", "    return max(sign(x - y), 0.0);", "}", "float when_lt(float x, float y) {", "    return min( max(1.0 - sign(x - y), 0.0), 1.0 );", "}", "float when_eq( float x, float y ) {", "    return 1.0 - abs( sign( x - y ) );", "}", "float when_ge(float x, float y) {", "  return 1.0 - when_lt(x, y);", "}", "float when_le(float x, float y) {", "  return 1.0 - when_gt(x, y);", "}", "float and(float a, float b) {", "    return a * b;", "}", "float or(float a, float b) {", "    return min(a + b, 1.0);", "}" ].join("\n"),
    w4: [ "vec3 unpackColor( in float hex ) {", "   vec3 c = vec3( 0.0 );", "   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );", "   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );", "   float b = mod( hex, PACKED_COLOR_SIZE );", "   c.r = r / PACKED_COLOR_DIVISOR;", "   c.g = g / PACKED_COLOR_DIVISOR;", "   c.b = b / PACKED_COLOR_DIVISOR;", "   return c;", "}" ].join("\n"),
    x4: [ "vec3 unpackRotationAxis( in float hex ) {", "   vec3 c = vec3( 0.0 );", "   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );", "   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );", "   float b = mod( hex, PACKED_COLOR_SIZE );", "   c.r = r / PACKED_COLOR_DIVISOR;", "   c.g = g / PACKED_COLOR_DIVISOR;", "   c.b = b / PACKED_COLOR_DIVISOR;", "   c *= vec3( 2.0 );", "   c -= vec3( 1.0 );", "   return c;", "}" ].join("\n"),
    y4: [ "float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {", "    highp float value = 0.0;", "    float deltaAge = positionInTime * float( VALUE_OVER_LIFETIME_LENGTH - 1 );", "    float fIndex = 0.0;", "    float shouldApplyValue = 0.0;", "    value += attr[ 0 ] * when_eq( deltaAge, 0.0 );", "", "    for( int i = 0; i < VALUE_OVER_LIFETIME_LENGTH - 1; ++i ) {", "       fIndex = float( i );", "       shouldApplyValue = and( when_gt( deltaAge, fIndex ), when_le( deltaAge, fIndex + 1.0 ) );", "       value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );", "    }", "", "    return value;", "}" ].join("\n"),
    z4: [ "vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {", "    vec3 value = vec3( 0.0 );", "    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );", "    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );", "    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );", "    return value;", "}" ].join("\n"),
    A4: [ "float getAlive() {", "   return params.x;", "}", "float getAge() {", "   return params.y;", "}", "float getMaxAge() {", "   return params.z;", "}", "float getWiggle() {", "   return params.w;", "}" ].join("\n"),
    B4: [ "vec4 getPosition( in float age ) {", "   return modelViewMatrix * vec4( position, 1.0 );", "}", "vec3 getVelocity( in float age ) {", "   return velocity * age;", "}", "vec3 getAcceleration( in float age ) {", "   return acceleration.xyz * age;", "}" ].join("\n"),
    C4: [ "#ifdef SHOULD_ROTATE_PARTICLES", "   mat4 getRotationMatrix( in vec3 axis, in float angle) {", "       axis = normalize(axis);", "       float s = sin(angle);", "       float c = cos(angle);", "       float oc = 1.0 - c;", "", "       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,", "                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,", "                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,", "                   0.0,                                0.0,                                0.0,                                1.0);", "   }", "", "   vec3 getRotation( in vec3 pos, in float positionInTime ) {", "      if( rotation.y == 0.0 ) {", "           return pos;", "      }", "", "      vec3 axis = unpackRotationAxis( rotation.x );", "      vec3 center = rotationCenter;", "      vec3 translated;", "      mat4 rotationMatrix;", "      float angle = 0.0;", "      angle += when_eq( rotation.z, 0.0 ) * rotation.y;", "      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime );", "      translated = rotationCenter - pos;", "      rotationMatrix = getRotationMatrix( axis, angle );", "      return center - vec3( rotationMatrix * vec4( translated, 0.0 ) );", "   }", "#endif" ].join("\n"),
    D4: [ "    vec2 vUv = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );", "", "    #ifdef SHOULD_ROTATE_TEXTURE", "       float x = gl_PointCoord.x - 0.5;", "       float y = 1.0 - gl_PointCoord.y - 0.5;", "       float c = cos( -vAngle );", "       float s = sin( -vAngle );", "       vUv = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );", "    #endif", "", "    #ifdef SHOULD_CALCULATE_SPRITE", "        float framesX = vSpriteSheet.x;", "        float framesY = vSpriteSheet.y;", "        float columnNorm = vSpriteSheet.z;", "        float rowNorm = vSpriteSheet.w;", "        vUv.x = gl_PointCoord.x * framesX + columnNorm;", "        vUv.y = 1.0 - (gl_PointCoord.y * framesY + rowNorm);", "    #endif", "", "    vec4 rotatedTexture = texture2D( texture, vUv );" ].join("\n")
};

SPE.E4 = {
    $J: [ SPE.t4.RB, SPE.t4.l, SPE.t4.attributes, SPE.t4.u4, THREE.mC.ED, THREE.mC.cE, SPE.t4.v4, SPE.t4.w4, SPE.t4.x4, SPE.t4.y4, SPE.t4.z4, SPE.t4.A4, SPE.t4.B4, SPE.t4.C4, "void main() {", "    highp float age = getAge();", "    highp float alive = getAlive();", "    highp float maxAge = getMaxAge();", "    highp float positionInTime = (age / maxAge);", "    highp float isAlive = when_gt( alive, 0.0 );", "    #ifdef SHOULD_WIGGLE_PARTICLES", "        float wiggleAmount = positionInTime * getWiggle();", "        float wiggleSin = isAlive * sin( wiggleAmount );", "        float wiggleCos = isAlive * cos( wiggleAmount );", "    #endif", "    vec3 vel = getVelocity( age );", "    vec3 accel = getAcceleration( age );", "    vec3 force = vec3( 0.0 );", "    vec3 pos = vec3( position );", "    float drag = 1.0 - (positionInTime * 0.5) * acceleration.w;", "    force += vel;", "    force *= drag;", "    force += accel * age;", "    pos += force;", "    #ifdef SHOULD_WIGGLE_PARTICLES", "        pos.x += wiggleSin;", "        pos.y += wiggleCos;", "        pos.z += wiggleSin;", "    #endif", "    #ifdef SHOULD_ROTATE_PARTICLES", "        pos = getRotation( pos, positionInTime );", "    #endif", "    vec4 mvPos = modelViewMatrix * vec4( pos, 1.0 );", "    highp float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;", "    #ifdef HAS_PERSPECTIVE", "        float perspective = scale / length( mvPos.xyz );", "    #else", "        float perspective = 1.0;", "    #endif", "    float pointSizePerspective = pointSize * perspective;", "    #ifdef COLORIZE", "       vec3 c = isAlive * getColorOverLifetime(", "           positionInTime,", "           unpackColor( color.x ),", "           unpackColor( color.y ),", "           unpackColor( color.z ),", "           unpackColor( color.w )", "       );", "    #else", "       vec3 c = vec3(1.0);", "    #endif", "    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );", "    vColor = vec4( c, o );", "    #ifdef SHOULD_ROTATE_TEXTURE", "        vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );", "    #endif", "    #ifdef SHOULD_CALCULATE_SPRITE", "        float framesX = textureAnimation.x;", "        float framesY = textureAnimation.y;", "        float loopCount = textureAnimation.w;", "        float totalFrames = textureAnimation.z;", "        float frameNumber = mod( (positionInTime * loopCount) * totalFrames, totalFrames );", "        float column = floor(mod( frameNumber, framesX ));", "        float row = floor( (frameNumber - column) / framesX );", "        float columnNorm = column / framesX;", "        float rowNorm = row / framesY;", "        vSpriteSheet.x = 1.0 / framesX;", "        vSpriteSheet.y = 1.0 / framesY;", "        vSpriteSheet.z = columnNorm;", "        vSpriteSheet.w = rowNorm;", "    #endif", "    gl_PointSize = pointSizePerspective;", "    gl_Position = projectionMatrix * mvPos;", THREE.mC.dE, "}" ].join("\n"),
    XT: [ SPE.t4.l, THREE.mC.ED, THREE.mC.SD, THREE.mC.bE, SPE.t4.u4, SPE.t4.v4, "void main() {", "    vec3 outgoingLight = vColor.xyz;", "    ", "    #ifdef ALPHATEST", "       if ( vColor.w < float(ALPHATEST) ) discard;", "    #endif", SPE.t4.D4, THREE.mC.aE, "    outgoingLight = vColor.xyz * rotatedTexture.xyz;", THREE.mC.RD, "    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );", "}" ].join("\n")
};

SPE.F4 = {
    types: {
        G4: "boolean",
        H4: "string",
        I4: "number",
        J4: "object"
    },
    K4: function(t, e, n) {
        "use strict";
        if (typeof t === e) {
            return t;
        } else {
            return n;
        }
    },
    L4: function(t, e, n) {
        "use strict";
        if (Array.isArray(t)) {
            for (var i = t.length - 1; i >= 0; --i) {
                if (typeof t[i] !== e) {
                    return n;
                }
            }
            return t;
        }
        return this.K4(t, e, n);
    },
    M4: function(t, e, n) {
        "use strict";
        if (e !== undefined && t instanceof e) {
            return t;
        } else {
            return n;
        }
    },
    N4: function(t, e, n) {
        "use strict";
        if (Array.isArray(t)) {
            for (var i = t.length - 1; i >= 0; --i) {
                if (e !== undefined && t[i] instanceof e === false) {
                    return n;
                }
            }
            return t;
        }
        return this.M4(t, e, n);
    },
    O4: function(t, e, n) {
        "use strict";
        e = e || 3;
        n = n || 3;
        if (Array.isArray(t.P4) === false) {
            t.P4 = [ t.P4 ];
        }
        if (Array.isArray(t.Q4) === false) {
            t.Q4 = [ t.Q4 ];
        }
        var i = this.ue(t.P4.length, e, n), r = this.ue(t.Q4.length, e, n), a = Math.max(i, r);
        if (t.P4.length !== a) {
            t.P4 = this.R4(t.P4, a);
        }
        if (t.Q4.length !== a) {
            t.Q4 = this.R4(t.Q4, a);
        }
    },
    R4: function(t, e) {
        "use strict";
        var n = t.length, i = [ typeof t[0].clone === "function" ? t[0].clone() : t[0] ], r = (n - 1) / (e - 1);
        for (var a = 1; a < e - 1; ++a) {
            var s = a * r, o = Math.floor(s), f = Math.ceil(s), u = s - o;
            i[a] = this.S4(t[o], t[f], u);
        }
        i.push(typeof t[n - 1].clone === "function" ? t[n - 1].clone() : t[n - 1]);
        return i;
    },
    ue: function(t, e, n) {
        "use strict";
        return Math.max(e, Math.min(t, n));
    },
    T4: function(t, e) {
        "use strict";
        var n = 1e-5, i = t;
        i = e ? Math.random() * n * 10 : n;
        if (t < 0 && t > -n) {
            i = -i;
        }
        return i;
    },
    S4: function(t, e, n) {
        "use strict";
        var i = this.types, r;
        if (typeof t === i.I4 && typeof e === i.I4) {
            return t + (e - t) * n;
        } else if (t instanceof THREE.fa && e instanceof THREE.fa) {
            r = t.clone();
            r.x = this.Si(t.x, e.x, n);
            r.y = this.Si(t.y, e.y, n);
            return r;
        } else if (t instanceof THREE.K && e instanceof THREE.K) {
            r = t.clone();
            r.x = this.Si(t.x, e.x, n);
            r.y = this.Si(t.y, e.y, n);
            r.z = this.Si(t.z, e.z, n);
            return r;
        } else if (t instanceof THREE.Sm && e instanceof THREE.Sm) {
            r = t.clone();
            r.x = this.Si(t.x, e.x, n);
            r.y = this.Si(t.y, e.y, n);
            r.z = this.Si(t.z, e.z, n);
            r.w = this.Si(t.w, e.w, n);
            return r;
        } else if (t instanceof THREE.T && e instanceof THREE.T) {
            r = t.clone();
            r.r = this.Si(t.r, e.r, n);
            r.wi = this.Si(t.wi, e.wi, n);
            r.b = this.Si(t.b, e.b, n);
            return r;
        } else {
            console.warn("Invalid argument types, or argument types do not match:", t, e);
        }
    },
    Si: function(t, e, n) {
        "use strict";
        return t + (e - t) * n;
    },
    U4: function(t, e) {
        "use strict";
        var n = 0;
        if (e === 0) {
            return t;
        }
        n = Math.abs(t) % e;
        if (n === 0) {
            return t;
        }
        if (t < 0) {
            return -(Math.abs(t) - n);
        }
        return t + e - n;
    },
    V4: function(t) {
        "use strict";
        for (var e = 0; e < t.length - 1; ++e) {
            if (t[e] !== t[e + 1]) {
                return false;
            }
        }
        return true;
    },
    W4: function(t, e) {
        "use strict";
        return t + e * (Math.random() - .5);
    },
    X4: function(t, e, n, i, r) {
        "use strict";
        var a = n.x + (Math.random() * i.x - i.x * .5), s = n.y + (Math.random() * i.y - i.y * .5), o = n.z + (Math.random() * i.z - i.z * .5);
        if (r) {
            a = -r.x * .5 + this.U4(a, r.x);
            s = -r.y * .5 + this.U4(s, r.y);
            o = -r.z * .5 + this.U4(o, r.z);
        }
        t.c4.S3(e, a, s, o);
    },
    Y4: function(t, e, n, i) {
        "use strict";
        var r = n.r + Math.random() * i.x, a = n.wi + Math.random() * i.y, s = n.b + Math.random() * i.z;
        r = this.ue(r, 0, 1);
        a = this.ue(a, 0, 1);
        s = this.ue(s, 0, 1);
        t.c4.S3(e, r, a, s);
    },
    Z4: function() {
        "use strict";
        var t = new THREE.T();
        return function(e, n, i, r) {
            var a = i.length, s = [];
            for (var o = 0; o < a; ++o) {
                var f = r[o];
                t.xi(i[o]);
                t.r += Math.random() * f.x - f.x * .5;
                t.wi += Math.random() * f.y - f.y * .5;
                t.b += Math.random() * f.z - f.z * .5;
                t.r = this.ue(t.r, 0, 1);
                t.wi = this.ue(t.wi, 0, 1);
                t.b = this.ue(t.b, 0, 1);
                s.push(t.Ii());
            }
            e.c4.U3(n, s[0], s[1], s[2], s[3]);
        };
    }(),
    _4: function(t, e, n, i, r, a, s, o) {
        "use strict";
        var f = 2 * Math.random() - 1, u = 6.2832 * Math.random(), h = Math.sqrt(1 - f * f), c = this.W4(i, r), l = 0, d = 0, v = 0;
        if (s) {
            c = Math.round(c / s) * s;
        }
        l = h * Math.cos(u) * c;
        d = h * Math.sin(u) * c;
        v = f * c;
        l *= a.x;
        d *= a.y;
        v *= a.z;
        l += n.x;
        d += n.y;
        v += n.z;
        t.c4.S3(e, l, d, v);
    },
    a5: function(t) {
        var e = Math.sin(t) * 1e4;
        return e - (e | 0);
    },
    b5: function(t, e, n, i, r, a, s) {
        "use strict";
        var o = 6.2832 * Math.random(), f = Math.abs(this.W4(i, r)), u = 0, h = 0, c = 0;
        if (s) {
            f = Math.round(f / s) * s;
        }
        u = Math.cos(o) * f;
        h = Math.sin(o) * f;
        u *= a.x;
        h *= a.y;
        u += n.x;
        h += n.y;
        c += n.z;
        t.c4.S3(e, u, h, c);
    },
    c5: function() {
        "use strict";
        var t = new THREE.K();
        return function(e, n, i, r, a, s, o, f) {
            t.xi(s);
            t.x -= i;
            t.y -= r;
            t.z -= a;
            t.normalize().Ri(-this.W4(o, f));
            e.c4.S3(n, t.x, t.y, t.z);
        };
    }(),
    d5: function() {
        "use strict";
        var t = new THREE.K();
        return function(e, n, i, r, a, s, o, f) {
            t.xi(s);
            t.x -= i;
            t.y -= r;
            t.z -= a;
            t.normalize().Ri(-this.W4(o, f));
            e.c4.S3(n, t.x, t.y, 0);
        };
    }(),
    e5: function() {
        "use strict";
        var t = new THREE.K(), e = new THREE.K(), n = new THREE.T(), i = new THREE.K(1, 1, 1);
        return function(r, a) {
            t.xi(r).normalize();
            e.xi(a).normalize();
            t.x += -a.x * .5 + Math.random() * a.x;
            t.y += -a.y * .5 + Math.random() * a.y;
            t.z += -a.z * .5 + Math.random() * a.z;
            t.normalize().add(i).Ri(.5);
            n.vi(t.x, t.y, t.z);
            return n.Ii();
        };
    }()
};

SPE.WA = function(t) {
    "use strict";
    var e = SPE.F4, n = e.types;
    t = e.K4(t, n.J4, {});
    t.G = e.K4(t.G, n.J4, {});
    this.sq = THREE.Math.Vo();
    this.f5 = e.K4(t.f5, n.I4, .016);
    this.G = e.M4(t.G.value, THREE.TA, null);
    this.g5 = e.M4(t.G.frames, THREE.fa, new THREE.fa(1, 1));
    this.h5 = e.K4(t.G.i5, n.I4, this.g5.x * this.g5.y);
    this.j5 = e.K4(t.G.loop, n.I4, 1);
    this.g5.max(new THREE.fa(1, 1));
    this.k5 = e.K4(t.k5, n.G4, true);
    this.l5 = e.K4(t.l5, n.G4, true);
    this.H = e.K4(t.H, n.I4, null);
    this.Ay = e.K4(t.Ay, n.I4, THREE.Ag);
    this.D = e.K4(t.D, n.G4, true);
    this.bA = parseFloat(e.K4(t.bA, n.I4, 0));
    this.dA = e.K4(t.dA, n.G4, false);
    this.cA = e.K4(t.cA, n.G4, true);
    this.kB = e.K4(t.kB, n.G4, true);
    this.scale = e.K4(t.scale, n.I4, 300);
    this.m5 = [];
    this.n5 = [];
    this.o5 = [];
    this.p5 = null;
    this.q5 = 0;
    this.r5 = false;
    this.s5 = false;
    this.U = 0;
    this.l = {
        G: {
            type: "t",
            value: this.G
        },
        t5: {
            type: "v4",
            value: new THREE.Sm(this.g5.x, this.g5.y, this.h5, Math.max(Math.abs(this.j5), 1))
        },
        aF: {
            type: "c",
            value: null
        },
        $E: {
            type: "f",
            value: 10
        },
        _E: {
            type: "f",
            value: 200
        },
        ZE: {
            type: "f",
            value: .5
        },
        u5: {
            type: "f",
            value: 0
        },
        v5: {
            type: "f",
            value: 0
        },
        scale: {
            type: "f",
            value: this.scale
        }
    };
    this.RB = {
        w5: this.k5,
        x5: this.l5,
        y5: SPE.I3,
        z5: false,
        A5: false,
        B5: false,
        C5: this.g5.x > 1 || this.g5.y > 1
    };
    this.attributes = {
        position: new SPE._3("v3", true),
        acceleration: new SPE._3("v4", true),
        D5: new SPE._3("v3", true),
        rotation: new SPE._3("v4", true),
        E5: new SPE._3("v3", true),
        cq: new SPE._3("v4", true),
        size: new SPE._3("v4", true),
        angle: new SPE._3("v4", true),
        color: new SPE._3("v4", true),
        opacity: new SPE._3("v4", true)
    };
    this.F5 = Object.keys(this.attributes);
    this.G5 = this.F5.length;
    this.k = new THREE.$B({
        l: this.l,
        B: SPE.E4.$J,
        C: SPE.E4.XT,
        Ay: this.Ay,
        D: this.D,
        bA: this.bA,
        dA: this.dA,
        cA: this.cA,
        RB: this.RB,
        kB: this.kB
    });
    this.j = new THREE.Cn();
    this.H5 = new THREE.gq(this.j, this.k);
    if (this.H === null) {
        console.warn("SPE.Group: No maxParticleCount specified. Adding emitters after rendering will probably cause errors.");
    }
};

SPE.WA.constructor = SPE.WA;

SPE.WA.prototype.I5 = function() {
    "use strict";
    var t = this.m5, e = t.length - 1, n, i = this.RB;
    for (e; e >= 0; --e) {
        n = t[e];
        if (!i.C5) {
            i.z5 = i.z5 || !!Math.max(Math.max.apply(null, n.angle.value), Math.max.apply(null, n.angle.L));
        }
        i.A5 = i.A5 || !!Math.max(n.rotation.angle, n.rotation.J5);
        i.B5 = i.B5 || !!Math.max(n.K5.value, n.K5.L);
    }
    this.k.ur = true;
};

SPE.WA.prototype.L5 = function() {
    "use strict";
    var t = this.attributes, e = this.j, n = e.attributes, i, r;
    for (var a in t) {
        if (t.hasOwnProperty(a)) {
            i = t[a];
            r = n[a];
            if (r) {
                r.dc = i.c4.dc;
            } else {
                e.Os(a, i.d4);
            }
            i.d4.ur = true;
        }
    }
    this.j.Rs(0, this.U);
};

SPE.WA.prototype.M5 = function(t) {
    "use strict";
    if (t instanceof SPE.N5 === false) {
        console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:", t);
        return;
    } else if (this.n5.indexOf(t.sq) > -1) {
        console.error("Emitter already exists in this group. Will not add again.");
        return;
    } else if (t.group !== null) {
        console.error("Emitter already belongs to another group. Will not add to requested group.");
        return;
    }
    var e = this.attributes, n = this.U, i = n + t.U;
    this.U = i;
    if (this.H !== null && this.U > this.H) {
        console.warn("SPE.Group: maxParticleCount exceeded. Requesting", this.U, "particles, can support only", this.H);
    }
    t.O5(t.J.P4 + t.J.Q4);
    t.P5(this.F5);
    t.Q5(n);
    t.group = this;
    t.attributes = this.attributes;
    for (var r in e) {
        if (e.hasOwnProperty(r)) {
            e[r].s4(this.H !== null ? this.H : this.U);
        }
    }
    for (var a = n; a < i; ++a) {
        t.R5(a);
        t.S5(a, "velocity");
        t.S5(a, "acceleration");
        t.T5(a, "opacity");
        t.T5(a, "size");
        t.U5(a);
        t.V5(a);
        t.W5(a);
        t.X5(a);
    }
    this.L5();
    this.m5.push(t);
    this.n5.push(t.sq);
    this.I5(t);
    this.k.ur = true;
    this.j.ur = true;
    this.r5 = true;
    return this;
};

SPE.WA.prototype.Y5 = function(t) {
    "use strict";
    var e = this.n5.indexOf(t.sq);
    if (t instanceof SPE.N5 === false) {
        console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:", t);
        return;
    } else if (e === -1) {
        console.error("Emitter does not exist in this group. Will not remove.");
        return;
    }
    var n = t.Z5, i = n + t.U, r = this.attributes.cq.c4;
    for (var a = n; a < i; ++a) {
        r.dc[a * 4] = 0;
        r.dc[a * 4 + 1] = 0;
    }
    this.m5.splice(e, 1);
    this.n5.splice(e, 1);
    for (var s in this.attributes) {
        if (this.attributes.hasOwnProperty(s)) {
            this.attributes[s].splice(n, i);
        }
    }
    this.U -= t.U;
    t._5();
    this.r5 = true;
};

SPE.WA.prototype.a6 = function() {
    "use strict";
    var t = this.o5, e = this.q5;
    if (t.length) {
        return t.pop();
    } else if (e) {
        return new SPE.N5(this.p5);
    }
    return null;
};

SPE.WA.prototype.b6 = function(t) {
    "use strict";
    if (t instanceof SPE.N5 === false) {
        console.error("Argument is not instanceof SPE.Emitter:", t);
        return;
    }
    t.reset();
    this.o5.unshift(t);
    return this;
};

SPE.WA.prototype.c6 = function() {
    "use strict";
    return this.o5;
};

SPE.WA.prototype.d6 = function(t, e, n) {
    "use strict";
    var i;
    this.p5 = e;
    this.q5 = !!n;
    for (var r = 0; r < t; ++r) {
        if (Array.isArray(e)) {
            i = new SPE.N5(e[r]);
        } else {
            i = new SPE.N5(e);
        }
        this.M5(i);
        this.b6(i);
    }
    return this;
};

SPE.WA.prototype.e6 = function(t) {
    "use strict";
    var e = this.a6(), n = this;
    if (e === null) {
        console.log("SPE.Group pool ran out.");
        return;
    }
    if (t instanceof THREE.K) {
        e.position.value.xi(t);
        e.position.value = e.position.value;
    }
    e.enable();
    setTimeout(function() {
        e.disable();
        n.b6(e);
    }, Math.max(e.duration, e.J.value + e.J.L) * 1e3);
    return this;
};

SPE.WA.prototype.f6 = function(t, e) {
    "use strict";
    if (typeof t === "number" && t > 1) {
        for (var n = 0; n < t; ++n) {
            this.e6(e);
        }
    } else {
        this.e6(e);
    }
    return this;
};

SPE.WA.prototype.g6 = function(t) {
    "use strict";
    this.l.v5.value += t;
    this.l.u5.value = t;
};

SPE.WA.prototype.h6 = function() {
    "use strict";
    var t = this.F5, e = this.G5 - 1, n = this.attributes;
    for (e; e >= 0; --e) {
        n[t[e]].n4();
    }
};

SPE.WA.prototype.i6 = function(t) {
    "use strict";
    var e = this.F5, n = this.G5 - 1, i = this.attributes, r = t.j6, a, s, o;
    for (n; n >= 0; --n) {
        a = e[n];
        s = r[a];
        o = i[a];
        o.l4(s.min, s.max);
        o.m4();
    }
};

SPE.WA.prototype.$U = function(t) {
    "use strict";
    var e = this.m5, n = e.length, i = t || this.f5, r = this.F5, a, s = this.attributes;
    this.g6(i);
    this.h6();
    if (n === 0 && this.r5 === false && this.s5 === false) {
        return;
    }
    for (var a = 0, o; a < n; ++a) {
        o = e[a];
        o.$U(i);
        this.i6(o);
    }
    if (this.s5 === true) {
        a = this.G5 - 1;
        for (a; a >= 0; --a) {
            s[r[a]].o4();
        }
        this.s5 = false;
    }
    if (this.r5 === true) {
        a = this.G5 - 1;
        for (a; a >= 0; --a) {
            s[r[a]].q4();
        }
        this.r5 = false;
        this.s5 = true;
    }
};

SPE.WA.prototype.Es = function() {
    "use strict";
    this.j.Es();
    this.k.Es();
    return this;
};

SPE.N5 = function(t) {
    "use strict";
    var e = SPE.F4, n = e.types, i = SPE.I3;
    t = e.K4(t, n.J4, {});
    t.position = e.K4(t.position, n.J4, {});
    t.D5 = e.K4(t.D5, n.J4, {});
    t.acceleration = e.K4(t.acceleration, n.J4, {});
    t.N = e.K4(t.N, n.J4, {});
    t.S = e.K4(t.S, n.J4, {});
    t.rotation = e.K4(t.rotation, n.J4, {});
    t.color = e.K4(t.color, n.J4, {});
    t.opacity = e.K4(t.opacity, n.J4, {});
    t.size = e.K4(t.size, n.J4, {});
    t.angle = e.K4(t.angle, n.J4, {});
    t.K5 = e.K4(t.K5, n.J4, {});
    t.J = e.K4(t.J, n.J4, {});
    if (t.k6) {
        console.warn("onParticleSpawn has been removed. Please set properties directly to alter values at runtime.");
    }
    this.sq = THREE.Math.Vo();
    this.type = e.K4(t.type, n.I4, SPE.R.G3);
    this.position = {
        P4: e.M4(t.position.value, THREE.K, new THREE.K()),
        Q4: e.M4(t.position.L, THREE.K, new THREE.K()),
        l6: e.M4(t.position.M, THREE.K, new THREE.K()),
        m6: e.K4(t.position.O, n.I4, this.type),
        n6: e.K4(t.position.o6, n.G4, false),
        p6: e.K4(t.position.N, n.I4, 10),
        q6: e.M4(t.position.r6, THREE.K, new THREE.K(1, 1, 1)),
        s6: e.K4(t.position.t6, n.I4, 0)
    };
    this.D5 = {
        P4: e.M4(t.D5.value, THREE.K, new THREE.K()),
        Q4: e.M4(t.D5.L, THREE.K, new THREE.K()),
        m6: e.K4(t.D5.O, n.I4, this.type),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.acceleration = {
        P4: e.M4(t.acceleration.value, THREE.K, new THREE.K()),
        Q4: e.M4(t.acceleration.L, THREE.K, new THREE.K()),
        m6: e.K4(t.acceleration.O, n.I4, this.type),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.S = {
        P4: e.K4(t.S.value, n.I4, 0),
        Q4: e.K4(t.S.L, n.I4, 0),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.K5 = {
        P4: e.K4(t.K5.value, n.I4, 0),
        Q4: e.K4(t.K5.L, n.I4, 0)
    };
    this.rotation = {
        u6: e.M4(t.rotation.axis, THREE.K, new THREE.K(0, 1, 0)),
        v6: e.M4(t.rotation.w6, THREE.K, new THREE.K()),
        x6: e.K4(t.rotation.angle, n.I4, 0),
        y6: e.K4(t.rotation.J5, n.I4, 0),
        z6: e.K4(t.rotation.A6, n.G4, false),
        B6: e.M4(t.rotation.dn, THREE.K, this.position.P4.clone()),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.J = {
        P4: e.K4(t.J.value, n.I4, 2),
        Q4: e.K4(t.J.L, n.I4, 0)
    };
    this.color = {
        P4: e.N4(t.color.value, THREE.T, new THREE.T()),
        Q4: e.N4(t.color.L, THREE.K, new THREE.K()),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.opacity = {
        P4: e.L4(t.opacity.value, n.I4, 1),
        Q4: e.L4(t.opacity.L, n.I4, 0),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.size = {
        P4: e.L4(t.size.value, n.I4, 1),
        Q4: e.L4(t.size.L, n.I4, 0),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.angle = {
        P4: e.L4(t.angle.value, n.I4, 0),
        Q4: e.L4(t.angle.L, n.I4, 0),
        n6: e.K4(t.position.o6, n.G4, false)
    };
    this.U = e.K4(t.U, n.I4, 100);
    this.duration = e.K4(t.duration, n.I4, null);
    this.nW = e.K4(t.nW, n.G4, false);
    this.V = e.K4(t.V, n.I4, 1);
    this.direction = e.K4(t.direction, n.I4, 1);
    this.C6 = e.K4(t.C6, n.G4, true);
    this.D6 = 0;
    this.E6 = 0;
    this.Z5 = 0;
    this.F6 = 0;
    this.G6 = 0;
    this.H6 = 0;
    this.group = null;
    this.attributes = null;
    this.I6 = null;
    this.J6 = {
        position: e.K4(t.position.o6, n.G4, false) || e.K4(t.N.o6, n.G4, false),
        D5: e.K4(t.D5.o6, n.G4, false),
        acceleration: e.K4(t.acceleration.o6, n.G4, false) || e.K4(t.S.o6, n.G4, false),
        rotation: e.K4(t.rotation.o6, n.G4, false),
        E5: e.K4(t.rotation.o6, n.G4, false),
        size: e.K4(t.size.o6, n.G4, false),
        color: e.K4(t.color.o6, n.G4, false),
        opacity: e.K4(t.opacity.o6, n.G4, false),
        angle: e.K4(t.angle.o6, n.G4, false)
    };
    this.K6 = {};
    this.L6 = {};
    this.M6 = {
        J: "params",
        position: "position",
        D5: "velocity",
        acceleration: "acceleration",
        S: "acceleration",
        K5: "params",
        rotation: "rotation",
        size: "size",
        color: "color",
        opacity: "opacity",
        angle: "angle"
    };
    for (var r in this.M6) {
        if (this.M6.hasOwnProperty(r)) {
            this.L6[this.M6[r]] = 0;
            this.K6[this.M6[r]] = false;
            this.N6(this[r], r);
        }
    }
    this.j6 = {};
    this.F5 = null;
    this.G5 = 0;
    e.O4(this.color, i, i);
    e.O4(this.opacity, i, i);
    e.O4(this.size, i, i);
    e.O4(this.angle, i, i);
};

SPE.N5.constructor = SPE.N5;

SPE.N5.prototype.N6 = function(t, e) {
    "use strict";
    var n = this;
    for (var i in t) {
        if (t.hasOwnProperty(i)) {
            var r = i.replace("_", "");
            Object.defineProperty(t, r, {
                get: function(t) {
                    return function() {
                        return this[t];
                    };
                }(i),
                set: function(t) {
                    return function(i) {
                        var r = n.M6[e], a = this[t], s = SPE.I3;
                        if (t === "_rotationCenter") {
                            n.K6.E5 = true;
                            n.L6.E5 = 0;
                        } else if (t === "_randomise") {
                            n.J6[r] = i;
                        } else {
                            n.K6[r] = true;
                            n.L6[r] = 0;
                        }
                        n.group.I5();
                        this[t] = i;
                        if (Array.isArray(a)) {
                            SPE.F4.O4(n[e], s, s);
                        }
                    };
                }(i)
            });
        }
    }
};

SPE.N5.prototype.P5 = function(t) {
    "use strict";
    this.F5 = t;
    this.G5 = t.length;
    for (var e = this.G5 - 1; e >= 0; --e) {
        this.j6[t[e]] = {
            min: Number.POSITIVE_INFINITY,
            max: Number.NEGATIVE_INFINITY
        };
    }
};

SPE.N5.prototype.O5 = function(t) {
    "use strict";
    var e = this.U;
    if (this.duration) {
        this.D6 = e / (t < this.duration ? t : this.duration);
    } else {
        this.D6 = e / t;
    }
};

SPE.N5.prototype.Q5 = function(t) {
    this.Z5 = t;
    this.E6 = t;
    this.O6 = t + this.U;
};

SPE.N5.prototype.P6 = function(t, e) {
    "use strict";
    switch (t) {
      case "position":
        this.R5(e);
        break;

      case "velocity":
      case "acceleration":
        this.S5(e, t);
        break;

      case "size":
      case "opacity":
        this.T5(e, t);
        break;

      case "angle":
        this.U5(e);
        break;

      case "params":
        this.W5(e);
        break;

      case "rotation":
        this.V5(e);
        break;

      case "color":
        this.X5(e);
        break;
    }
};

SPE.N5.prototype.R5 = function(t) {
    "use strict";
    var e = SPE.R, n = SPE.F4, i = this.position, r = this.attributes.position, a = i.P4, s = i.Q4, o = i.m6;
    switch (o) {
      case e.G3:
        n.X4(r, t, a, s, i.l6);
        break;

      case e.P:
        n._4(r, t, a, i.p6, i.Q4.x, i.q6, i.l6.x, i.s6 || this.U);
        break;

      case e.H3:
        n.b5(r, t, a, i.p6, i.Q4.x, i.q6, i.l6.x);
        break;
    }
};

SPE.N5.prototype.S5 = function(t, e) {
    "use strict";
    var n = SPE.R, i = SPE.F4, r = this[e], a = r.P4, s = r.Q4, o = r.m6, f, u, h, c, l;
    switch (o) {
      case n.G3:
        i.X4(this.attributes[e], t, a, s);
        break;

      case n.P:
        f = this.attributes.position.c4.dc;
        l = t * 3;
        u = f[l];
        h = f[l + 1];
        c = f[l + 2];
        i.c5(this.attributes[e], t, u, h, c, this.position.P4, r.P4.x, r.Q4.x);
        break;

      case n.H3:
        f = this.attributes.position.c4.dc;
        l = t * 3;
        u = f[l];
        h = f[l + 1];
        c = f[l + 2];
        i.d5(this.attributes[e], t, u, h, c, this.position.P4, r.P4.x, r.Q4.x);
        break;
    }
    if (e === "acceleration") {
        var d = i.ue(i.W4(this.S.P4, this.S.Q4), 0, 1);
        this.attributes.acceleration.c4.dc[t * 4 + 3] = d;
    }
};

SPE.N5.prototype.T5 = function(t, e) {
    "use strict";
    var n = this.attributes[e].c4, i = this[e], r = SPE.F4, a;
    if (r.V4(i.P4) && r.V4(i.Q4)) {
        a = Math.abs(r.W4(i.P4[0], i.Q4[0]));
        n.U3(t, a, a, a, a);
    } else {
        n.U3(t, Math.abs(r.W4(i.P4[0], i.Q4[0])), Math.abs(r.W4(i.P4[1], i.Q4[1])), Math.abs(r.W4(i.P4[2], i.Q4[2])), Math.abs(r.W4(i.P4[3], i.Q4[3])));
    }
};

SPE.N5.prototype.U5 = function(t) {
    "use strict";
    var e = this.attributes.angle.c4, n = this.angle, i = SPE.F4, r;
    if (i.V4(n.P4) && i.V4(n.Q4)) {
        r = i.W4(n.P4[0], n.Q4[0]);
        e.U3(t, r, r, r, r);
    } else {
        e.U3(t, i.W4(n.P4[0], n.Q4[0]), i.W4(n.P4[1], n.Q4[1]), i.W4(n.P4[2], n.Q4[2]), i.W4(n.P4[3], n.Q4[3]));
    }
};

SPE.N5.prototype.W5 = function(t) {
    "use strict";
    this.attributes.cq.c4.U3(t, this.nW ? 1 : 0, 0, Math.abs(SPE.F4.W4(this.J.P4, this.J.Q4)), SPE.F4.W4(this.K5.P4, this.K5.Q4));
};

SPE.N5.prototype.V5 = function(t) {
    "use strict";
    this.attributes.rotation.c4.S3(t, SPE.F4.e5(this.rotation.u6, this.rotation.v6), SPE.F4.W4(this.rotation.x6, this.rotation.y6), this.rotation.z6 ? 0 : 1);
    this.attributes.E5.c4.R3(t, this.rotation.B6);
};

SPE.N5.prototype.X5 = function(t) {
    "use strict";
    SPE.F4.Z4(this.attributes.color, t, this.color.P4, this.color.Q4);
};

SPE.N5.prototype.Q6 = function(t) {
    "use strict";
    var e = this.J6, n = this.K6, i = this.L6, r = this.F5, a, s;
    for (var o = this.G5 - 1; o >= 0; --o) {
        a = r[o];
        s = n[a];
        if (e[a] === true || s === true) {
            this.P6(a, t);
            this.R6(a, t);
            if (s === true && i[a] === this.U) {
                n[a] = false;
                i[a] = 0;
            } else if (s == true) {
                ++i[a];
            }
        }
    }
};

SPE.N5.prototype.R6 = function(t, e) {
    "use strict";
    var n = this.j6[t];
    n.min = Math.min(e, n.min);
    n.max = Math.max(e, n.max);
};

SPE.N5.prototype.h6 = function() {
    "use strict";
    var t = this.j6, e = this.S6, n = this.T6 - 1, i;
    for (n; n >= 0; --n) {
        i = e[n];
        t[i].min = Number.POSITIVE_INFINITY;
        t[i].max = Number.NEGATIVE_INFINITY;
    }
};

SPE.N5.prototype._5 = function() {
    "use strict";
    this.D6 = 0;
    this.Z5 = 0;
    this.E6 = 0;
    this.H6 = 0;
    this.group = null;
    this.attributes = null;
    this.I6 = null;
    this.G6 = 0;
};

SPE.N5.prototype.U6 = function() {
    "use strict";
    --this.H6;
};

SPE.N5.prototype.V6 = function() {
    "use strict";
    ++this.H6;
};

SPE.N5.prototype.W6 = function(t, e, n, i) {
    "use strict";
    for (var r = e - 1, a, s, o, f; r >= t; --r) {
        a = r * 4;
        f = n[a];
        if (f === 0) {
            continue;
        }
        o = n[a + 1];
        s = n[a + 2];
        if (this.direction === 1) {
            o += i;
            if (o >= s) {
                o = 0;
                f = 0;
                this.U6();
            }
        } else {
            o -= i;
            if (o <= 0) {
                o = s;
                f = 0;
                this.U6();
            }
        }
        n[a] = f;
        n[a + 1] = o;
        this.R6("params", r);
    }
};

SPE.N5.prototype.X6 = function(t, e, n, i) {
    "use strict";
    var r = this.direction;
    for (var a = t, s, o; a < e; ++a) {
        s = a * 4;
        if (n[s] != 0 && this.U !== 1) {
            continue;
        }
        this.V6();
        n[s] = 1;
        this.Q6(a);
        o = i * (a - t);
        n[s + 1] = r === -1 ? n[s + 2] - o : o;
        this.R6("params", a);
    }
};

SPE.N5.prototype.$U = function(t) {
    "use strict";
    if (this.nW) {
        return;
    }
    if (this.I6 === null) {
        this.I6 = this.attributes.cq.c4.dc;
    }
    var e = this.Z5, n = e + this.U, i = this.I6, r = this.D6 * this.V * t, a = this.E6;
    this.h6();
    this.W6(e, n, i, t);
    if (this.C6 === false) {
        this.G6 = 0;
        return;
    }
    if (this.duration !== null && this.G6 > this.duration) {
        this.C6 = false;
        this.G6 = 0;
        return;
    }
    var s = this.U === 1 ? a : a | 0, o = Math.min(s + r, this.O6), f = o - this.E6 | 0, u = f > 0 ? t / f : 0;
    this.X6(s, o, i, u);
    this.E6 += r;
    if (this.E6 > n) {
        this.E6 = e;
    }
    this.G6 += t;
};

SPE.N5.prototype.reset = function(t) {
    "use strict";
    this.G6 = 0;
    this.C6 = false;
    if (t === true) {
        var e = this.Z5, n = e + this.U, i = this.I6, r = this.attributes.cq.d4;
        for (var a = n - 1, s; a >= e; --a) {
            s = a * 4;
            i[s] = 0;
            i[s + 1] = 0;
        }
        r.sr.offset = 0;
        r.sr.count = -1;
        r.ur = true;
    }
    return this;
};

SPE.N5.prototype.enable = function() {
    "use strict";
    this.C6 = true;
    return this;
};

SPE.N5.prototype.disable = function() {
    "use strict";
    this.C6 = false;
    return this;
};

SPE.N5.prototype.remove = function() {
    "use strict";
    if (this.group !== null) {
        this.group.Y5(this);
    } else {
        console.error("Emitter does not belong to a group, cannot remove.");
    }
    return this;
};

(function(THREE) {
    "use strict";
    function t(t) {
        return !isNaN(t) && isFinite(t);
    }
    function e(t) {
        return Object.prototype.toString.call(t) === "[object Array]";
    }
    function n(t) {
        return t ? e(t) !== true ? [ t ] : t : [];
    }
    function i(t, e) {
        for (var n = 0, i = t.length; n < i; n++) {
            if (t[n] === e) {
                return n;
            }
        }
        return -1;
    }
    function r(t, e, n) {
        for (var i = 0, r = t.length; i < r; i++) {
            if (t[i][e] === n) {
                return i;
            }
        }
        return -1;
    }
    THREE.Y6 = function(e) {
        e = e || {};
        e.Z6 = this;
        this._6 = 0;
        this.a7 = -1;
        this.b7 = 2;
        this.c7 = t(e.c7) ? e.c7 : 0;
        this.d7 = t(e.d7) ? e.d7 : 1;
        this.e7 = t(e.e7) ? e.e7 : 2;
        this.f7 = t(e.f7) ? e.f7 : 3;
        this.g7 = t(e.g7) ? e.g7 : 4;
        this.h7 = t(e.h7) ? e.h7 : 5;
        this.i7 = [];
        this.i7[this.c7] = {
            index: this.c7,
            count: 0,
            x: 1,
            y: 0,
            z: 0
        };
        this.i7[this.d7] = {
            index: this.d7,
            count: 0,
            x: -1,
            y: 0,
            z: 0
        };
        this.i7[this.e7] = {
            index: this.e7,
            count: 0,
            x: 0,
            y: 1,
            z: 0
        };
        this.i7[this.f7] = {
            index: this.f7,
            count: 0,
            x: 0,
            y: -1,
            z: 0
        };
        this.i7[this.g7] = {
            index: this.g7,
            count: 0,
            x: 0,
            y: 0,
            z: 1
        };
        this.i7[this.h7] = {
            index: this.h7,
            count: 0,
            x: 0,
            y: 0,
            z: -1
        };
        this.j7 = 1 << this.c7 + 1;
        this.k7 = 1 << this.d7 + 1;
        this.l7 = 1 << this.e7 + 1;
        this.m7 = 1 << this.f7 + 1;
        this.n7 = 1 << this.g7 + 1;
        this.o7 = 1 << this.h7 + 1;
        this.p7 = new THREE.K();
        this.q7 = new THREE.K();
        this.r7 = e.r7;
        if (this.r7) {
            this.s7 = new THREE.kN(1, 1, 1);
            this.t7 = new THREE.GB({
                color: 16711782,
                fA: true,
                gA: 1
            });
        }
        this.Cv = [];
        this.u7 = {};
        this.v7 = [];
        this.w7 = [];
        this.x7 = t(e.x7) ? e.x7 : Infinity;
        this.y7 = t(e.y7) ? e.y7 : 8;
        this.z7 = t(e.z7) ? e.z7 : .15;
        this.A7 = e.A7 || false;
        this.root = e.root instanceof THREE.B7 ? e.root : new THREE.B7(e);
    };
    THREE.Y6.prototype = {
        update: function() {
            if (this.w7.length > 0) {
                for (var t = 0, e = this.w7.length; t < e; t++) {
                    var n = this.w7[t];
                    this.C7(n.object, n.options);
                }
                this.w7.length = 0;
            }
        },
        add: function(t, e) {
            if (this.A7) {
                this.D7(t);
                this.C7(t, e);
            } else {
                this.w7.push({
                    object: t,
                    options: e
                });
            }
        },
        C7: function(t, e) {
            var n, i, r, a, s, o, f, u;
            if (t instanceof THREE.E7) {
                t = t.object;
            }
            if (!t.sq) {
                t.sq = THREE.Math.Vo();
            }
            if (!this.u7[t.sq]) {
                this.Cv.push(t);
                this.u7[t.sq] = t;
                if (e) {
                    s = e.F7;
                    f = e.G7;
                }
                if (f === true) {
                    r = t.j;
                    o = r.Bn;
                    for (n = 0, i = o.length; n < i; n++) {
                        this.H7(t, o[n]);
                    }
                } else if (s === true) {
                    r = t.j;
                    a = r.Wr;
                    for (n = 0, i = a.length; n < i; n++) {
                        this.H7(t, a[n]);
                    }
                } else {
                    this.H7(t);
                }
            }
        },
        H7: function(t, e) {
            var n = new THREE.E7(t, e);
            this.v7.push(n);
            this.root.I7(n);
        },
        remove: function(t) {
            var e, n, a = t, s, o;
            if (t instanceof THREE.E7) {
                t = t.object;
            }
            if (this.u7[t.sq]) {
                this.u7[t.sq] = undefined;
                s = i(this.Cv, t);
                if (s !== -1) {
                    this.Cv.splice(s, 1);
                    o = this.root.J7(a);
                    for (e = 0, n = o.length; e < n; e++) {
                        a = o[e];
                        s = i(this.v7, a);
                        if (s !== -1) {
                            this.v7.splice(s, 1);
                        }
                    }
                }
            } else if (this.w7.length > 0) {
                s = r(this.w7, "object", t);
                if (s !== -1) {
                    this.w7.splice(s, 1);
                }
            }
        },
        extend: function(t) {
            var e, n, i, r;
            if (t instanceof THREE.Y6) {
                i = t.v7;
                for (e = 0, n = i.length; e < n; e++) {
                    r = i[e];
                    this.add(r, {
                        F7: r.Wr,
                        G7: r.Bn
                    });
                }
            }
        },
        K7: function() {
            var t, e, n, i, r, a, s, o = [];
            for (t = 0, e = this.v7.length; t < e; t++) {
                r = this.v7[t];
                n = r.Yv;
                r.update();
                if (n instanceof THREE.B7 && !r.L7.Ti(r.position)) {
                    s = r.M7;
                    a = n.N7(r);
                    if (a !== s) {
                        o.push(r);
                    }
                }
            }
            for (t = 0, e = o.length; t < e; t++) {
                r = o[t];
                r.Yv.J7(r);
                this.root.I7(r);
            }
        },
        D7: function(t) {
            var e, n, i = [ t ], r, a;
            r = t.parent;
            while (r) {
                i.push(r);
                r = r.parent;
            }
            for (e = 0, n = i.length; e < n; e++) {
                r = i[e];
                if (r.Bq === true) {
                    a = r;
                }
            }
            if (typeof a !== "undefined") {
                a.yn();
            }
        },
        search: function(t, e, n, r) {
            var a, s, o, f, u, h, c, l, d, v, p;
            f = [].concat(this.root.Cv);
            if (!(e > 0)) {
                e = Number.MAX_VALUE;
            }
            if (r instanceof THREE.K) {
                r = this.p7.xi(r).normalize();
                p = this.q7.set(1, 1, 1).dm(r);
            }
            for (a = 0, s = this.root.O7.length; a < s; a++) {
                o = this.root.P7[this.root.O7[a]];
                f = o.search(t, e, f, r, p);
            }
            if (n === true) {
                c = [];
                d = [];
                for (a = 0, s = f.length; a < s; a++) {
                    u = f[a];
                    h = u.object;
                    v = i(d, h);
                    if (v === -1) {
                        l = {
                            object: h,
                            Wr: [],
                            Bn: []
                        };
                        c.push(l);
                        d.push(h);
                    } else {
                        l = c[v];
                    }
                    if (u.Wr) {
                        l.Wr.push(u.Wr);
                    } else if (u.Bn) {
                        l.Bn.push(u.Bn);
                    }
                }
            } else {
                c = f;
            }
            return c;
        },
        Q7: function(t) {
            if (t instanceof THREE.B7) {
                this.root = t;
                this.root.R7();
            }
        },
        S7: function() {
            return this.root.S7();
        },
        T7: function() {
            return this.root.T7();
        },
        U7: function() {
            return this.root.U7();
        },
        V7: function() {
            this.root.V7();
        }
    };
    THREE.E7 = function(t, e) {
        this.object = t;
        if (e instanceof THREE.mr) {
            this.Wr = e;
            this.W7 = true;
            this.X7 = new THREE.K();
        } else if (e instanceof THREE.K) {
            this.Bn = e;
        }
        this.N = 0;
        this.position = new THREE.K();
        if (this.object instanceof THREE.qq) {
            this.update();
        } else {
            this.position.set(t.x, t.y, t.z);
            this.N = t.N;
        }
        this.L7 = this.position.clone();
    };
    THREE.E7.prototype = {
        update: function() {
            if (this.W7) {
                this.N = this.Y7(this.object, this.Wr);
                this.position.xi(this.Wr.Z7).xm(this.object.Em);
            } else if (this.Bn) {
                this.N = this.object.k.size || 1;
                this.position.xi(this.Bn).xm(this.object.Em);
            } else {
                if (this.object.j) {
                    if (this.object.j.Ho === null) {
                        this.object.j.Io();
                    }
                    this.N = this.object.j.Ho.N;
                    this.position.xi(this.object.j.Ho.dn).xm(this.object.Em);
                } else {
                    this.N = this.object._7;
                    this.position.Pm(this.object.Em);
                }
            }
            this.N = this.N * Math.max(this.object.scale.x, this.object.scale.y, this.object.scale.z);
        },
        Y7: function(t, e) {
            if (e.Z7 === undefined) e.Z7 = new THREE.K();
            var n = t.j || t, i = n.Bn, r = e.Z7, a = i[e.a], s = i[e.b], o = i[e.c], f = this.X7, u;
            r._l(a, s).add(o).em(3);
            u = Math.max(f.bm(r, a).length(), f.bm(r, s).length(), f.bm(r, o).length());
            return u;
        }
    };
    THREE.B7 = function(t) {
        this.a8 = new THREE.K();
        this.b8 = new THREE.K();
        this.c8 = new THREE.K();
        t = t || {};
        if (t.Z6 instanceof THREE.Y6) {
            this.Z6 = t.Z6;
        } else if (t.parent instanceof THREE.B7 !== true) {
            t.root = this;
            this.Z6 = new THREE.Y6(t);
        }
        this.id = this.Z6._6++;
        this.position = t.position instanceof THREE.K ? t.position : new THREE.K();
        this.N = t.N > 0 ? t.N : 1;
        this.M7 = t.M7;
        this.AA = 0;
        this.reset();
        this.d8(t.parent);
        this.e8 = this.N * this.Z6.z7;
        this.f8 = this.N + this.e8;
        this.left = this.position.x - this.f8;
        this.right = this.position.x + this.f8;
        this.bottom = this.position.y - this.f8;
        this.top = this.position.y + this.f8;
        this.back = this.position.z - this.f8;
        this.g8 = this.position.z + this.f8;
        if (this.Z6.r7) {
            this.h8 = new THREE.dq(this.Z6.s7, this.Z6.t7);
            this.h8.scale.set(this.f8 * 2, this.f8 * 2, this.f8 * 2);
            this.h8.position.xi(this.position);
            this.Z6.r7.add(this.h8);
        }
    };
    THREE.B7.prototype = {
        d8: function(t) {
            if (t !== this && this.parent !== t) {
                this.parent = t;
                this.R7();
            }
        },
        R7: function() {
            var t, e;
            if (this.parent instanceof THREE.B7) {
                this.Z6 = this.parent.Z6;
                this.AA = this.parent.AA + 1;
            } else {
                this.AA = 0;
            }
            for (t = 0, e = this.O7.length; t < e; t++) {
                this.P7[this.O7[t]].R7();
            }
        },
        reset: function(t, e) {
            var n, i, r, a = this.O7 || [], s = this.P7;
            this.Cv = [];
            this.O7 = [];
            this.P7 = {};
            for (n = 0, i = a.length; n < i; n++) {
                r = s[a[n]];
                r.d8(undefined);
                if (t === true) {
                    r.reset(t, e);
                }
            }
            if (e === true && this.h8 && this.h8.parent) {
                this.h8.parent.remove(this.h8);
            }
        },
        i8: function(t, e) {
            t.M7 = e;
            if (i(this.O7, e) === -1) {
                this.O7.push(e);
            }
            this.P7[e] = t;
            if (t.parent !== this) {
                t.d8(this);
            }
        },
        removeNode: function(t) {
            var e, n;
            e = i(this.O7, t);
            this.O7.splice(e, 1);
            n = n || this.P7[t];
            delete this.P7[t];
            if (n.parent === this) {
                n.d8(undefined);
            }
        },
        I7: function(t) {
            var e, n, r;
            n = this.N7(t);
            if (n > -1 && this.O7.length > 0) {
                r = this.j8(n);
                r.I7(t);
            } else if (n < -1 && this.parent instanceof THREE.B7) {
                this.parent.I7(t);
            } else {
                e = i(this.Cv, t);
                if (e === -1) {
                    this.Cv.push(t);
                }
                t.Yv = this;
                this.k8();
            }
        },
        l8: function(t) {
            var e, n, i;
            for (e = 0, n = t.length; e < n; e++) {
                i = t[e];
                this.Cv.push(i);
                i.Yv = this;
            }
        },
        J7: function(t) {
            var e, n, i, r;
            r = this.m8(t, {
                n8: false,
                o8: [],
                p8: []
            });
            i = r.o8;
            if (i.length > 0) {
                for (e = 0, n = i.length; e < n; e++) {
                    i[e].N3();
                }
            }
            return r.p8;
        },
        m8: function(t, e) {
            var n, r, a = -1, s, o, f;
            if (t instanceof THREE.E7) {
                a = i(this.Cv, t);
                if (a !== -1) {
                    this.Cv.splice(a, 1);
                    t.Yv = undefined;
                    e.p8.push(t);
                    e.n8 = f = true;
                }
            } else {
                for (n = this.Cv.length - 1; n >= 0; n--) {
                    s = this.Cv[n];
                    if (s.object === t) {
                        this.Cv.splice(n, 1);
                        s.Yv = undefined;
                        e.p8.push(s);
                        f = true;
                        if (!s.Wr && !s.Bn) {
                            e.n8 = true;
                            break;
                        }
                    }
                }
            }
            if (f === true) {
                e.o8.push(this);
            }
            if (e.n8 !== true) {
                for (n = 0, r = this.O7.length; n < r; n++) {
                    o = this.P7[this.O7[n]];
                    e = o.m8(t, e);
                    if (e.n8 === true) {
                        break;
                    }
                }
            }
            return e;
        },
        k8: function() {
            if (this.Cv.length > this.Z6.y7 && this.Z6.y7 > 0) {
                this.O3();
            }
        },
        O3: function() {
            var t, e, n = [], i = [], r = [], a = [], s = [], o, f;
            for (o = 0, f = this.Cv.length; o < f; o++) {
                e = this.Cv[o];
                t = this.N7(e);
                if (t > -1) {
                    r.push(e);
                    a.push(t);
                } else if (t < -1) {
                    n.push(e);
                    i.push(t);
                } else {
                    s.push(e);
                }
            }
            if (r.length > 0) {
                s = s.concat(this.split(r, a));
            }
            if (n.length > 0) {
                s = s.concat(this.expand(n, i));
            }
            this.Cv = s;
            this.q8();
        },
        split: function(t, e) {
            var n, i, r, a, s, o;
            if (this.AA < this.Z6.x7) {
                t = t || this.Cv;
                e = e || [];
                o = [];
                for (n = 0, i = t.length; n < i; n++) {
                    a = t[n];
                    r = e[n];
                    if (r > -1) {
                        s = this.j8(r);
                        s.I7(a);
                    } else {
                        o.push(a);
                    }
                }
                if (t === this.Cv) {
                    this.Cv = o;
                }
            } else {
                o = this.Cv;
            }
            return o;
        },
        j8: function(t) {
            var e, n, i, r, a, s;
            if (this.P7[t] instanceof THREE.B7) {
                e = this.P7[t];
            } else {
                i = this.f8 * .5;
                n = i * this.Z6.z7;
                r = i - n;
                a = this.a8.set(t & 1 ? r : -r, t & 2 ? r : -r, t & 4 ? r : -r);
                s = new THREE.K()._l(this.position, a);
                e = new THREE.B7({
                    Z6: this.Z6,
                    parent: this,
                    position: s,
                    N: i,
                    M7: t
                });
                this.i8(e, t);
            }
            return e;
        },
        expand: function(t, e) {
            var n, i, r, a, s, o, f, u, h, c = this.Z6.i7, l, d, v, p, E, g, m, T, y, R, w, x, b, H, A, M, O, S, U, C = this.b8, L, P;
            if (this.Z6.root.S7() < this.Z6.x7) {
                t = t || this.Cv;
                e = e || [];
                a = [];
                s = [];
                for (n = 0, i = c.length; n < i; n++) {
                    c[n].count = 0;
                }
                for (n = 0, i = t.length; n < i; n++) {
                    r = t[n];
                    o = e[n];
                    if (o < -1) {
                        f = -o - this.Z6.b7;
                        if (f & this.Z6.j7) {
                            c[this.Z6.c7].count++;
                        } else if (f & this.Z6.k7) {
                            c[this.Z6.d7].count++;
                        }
                        if (f & this.Z6.l7) {
                            c[this.Z6.e7].count++;
                        } else if (f & this.Z6.m7) {
                            c[this.Z6.f7].count++;
                        }
                        if (f & this.Z6.n7) {
                            c[this.Z6.g7].count++;
                        } else if (f & this.Z6.o7) {
                            c[this.Z6.h7].count++;
                        }
                        s.push(r);
                    } else {
                        a.push(r);
                    }
                }
                if (s.length > 0) {
                    l = c.slice(0);
                    l.sort(function(t, e) {
                        return e.count - t.count;
                    });
                    d = l[0];
                    E = d.index | 1;
                    m = l[1];
                    T = l[2];
                    v = (m.index | 1) !== E ? m : T;
                    g = v.index | 1;
                    m = l[2];
                    T = l[3];
                    y = l[4];
                    R = m.index | 1;
                    w = T.index | 1;
                    p = R !== E && R !== g ? m : w !== E && w !== g ? T : y;
                    x = d.x + v.x + p.x;
                    b = d.y + v.y + p.y;
                    H = d.z + v.z + p.z;
                    o = this.r8(x, b, H);
                    h = this.r8(-x, -b, -H);
                    A = this.e8;
                    M = this.N;
                    S = this.Z6.z7 > 0 ? A / (.5 * this.Z6.z7 * (1 + this.Z6.z7)) : M * 2;
                    U = S * this.Z6.z7;
                    O = S + U - (M + A);
                    C.set(o & 1 ? O : -O, o & 2 ? O : -O, o & 4 ? O : -O);
                    L = new THREE.K()._l(this.position, C);
                    P = new THREE.B7({
                        Z6: this.Z6,
                        position: L,
                        N: S
                    });
                    P.i8(this, h);
                    this.Z6.Q7(P);
                    for (n = 0, i = s.length; n < i; n++) {
                        this.Z6.root.I7(s[n]);
                    }
                }
                if (t === this.Cv) {
                    this.Cv = a;
                }
            } else {
                a = t;
            }
            return a;
        },
        N3: function() {
            this.q8();
            this.Z6.root.s8();
        },
        q8: function() {
            var t = this, e;
            while (t.parent instanceof THREE.B7 && t.U7() < this.Z6.y7) {
                e = t;
                t = t.parent;
            }
            if (t !== this) {
                t.jd(e);
            }
        },
        jd: function(t) {
            var e, i, r, a, s;
            t = n(t);
            for (e = 0, i = t.length; e < i; e++) {
                s = t[e];
                this.l8(s.t8());
                s.reset(true, true);
                this.removeNode(s.M7, s);
            }
            this.q8();
        },
        s8: function() {
            var t, e, n, i, r, a, s;
            if (this.O7.length > 0) {
                a = 0;
                s = this.Cv.length;
                for (t = 0, e = this.O7.length; t < e; t++) {
                    n = this.P7[this.O7[t]];
                    i = n.U7();
                    s += i;
                    if (r instanceof THREE.B7 === false || i > a) {
                        r = n;
                        a = i;
                    }
                }
                s -= a;
                if (s < this.Z6.y7 && r instanceof THREE.B7) {
                    this.u8(r);
                }
            }
        },
        u8: function(t) {
            var e, n, i;
            for (e = 0, n = this.O7.length; e < n; e++) {
                i = this.P7[this.O7[e]];
                if (i !== t) {
                    t.l8(i.t8());
                    i.reset(true, true);
                }
            }
            t.l8(this.Cv);
            this.reset(false, true);
            this.Z6.Q7(t);
            t.s8();
        },
        N7: function(t) {
            var e, n, i, r, a = this.position, s = this.f8, o = this.e8, f, u, h, c, l, d, v, p = 0;
            if (t instanceof THREE.E7) {
                r = t.N;
                i = t.position;
                t.L7.xi(i);
            } else if (t instanceof THREE.B7) {
                i = t.position;
                r = 0;
            }
            f = i.x - a.x;
            u = i.y - a.y;
            h = i.z - a.z;
            c = Math.abs(f);
            l = Math.abs(u);
            d = Math.abs(h);
            v = Math.max(c, l, d);
            if (v + r > s) {
                if (c + r > s) {
                    p = p ^ (f > 0 ? this.Z6.j7 : this.Z6.k7);
                }
                if (l + r > s) {
                    p = p ^ (u > 0 ? this.Z6.l7 : this.Z6.m7);
                }
                if (d + r > s) {
                    p = p ^ (h > 0 ? this.Z6.n7 : this.Z6.o7);
                }
                t.M7 = -p - this.Z6.b7;
                return t.M7;
            }
            if (f - r > -o) {
                p = p | 1;
            } else if (!(f + r < o)) {
                t.M7 = this.Z6.a7;
                return t.M7;
            }
            if (u - r > -o) {
                p = p | 2;
            } else if (!(u + r < o)) {
                t.M7 = this.Z6.a7;
                return t.M7;
            }
            if (h - r > -o) {
                p = p | 4;
            } else if (!(h + r < o)) {
                t.M7 = this.Z6.a7;
                return t.M7;
            }
            t.M7 = p;
            return t.M7;
        },
        r8: function(t, e, n) {
            var i = 0;
            if (t > 0) {
                i = i | 1;
            }
            if (e > 0) {
                i = i | 2;
            }
            if (n > 0) {
                i = i | 4;
            }
            return i;
        },
        search: function(t, e, n, i, r) {
            var a, s, o, f;
            if (i) {
                f = this.v8(t, i, e, r);
            } else {
                f = this.vo(t, e);
            }
            if (f === true) {
                n = n.concat(this.Cv);
                for (a = 0, s = this.O7.length; a < s; a++) {
                    o = this.P7[this.O7[a]];
                    n = o.search(t, e, n, i);
                }
            }
            return n;
        },
        vo: function(t, e) {
            var n = e * e, i = t.x, r = t.y, a = t.z;
            if (i < this.left) {
                n -= Math.pow(i - this.left, 2);
            } else if (i > this.right) {
                n -= Math.pow(i - this.right, 2);
            }
            if (r < this.bottom) {
                n -= Math.pow(r - this.bottom, 2);
            } else if (r > this.top) {
                n -= Math.pow(r - this.top, 2);
            }
            if (a < this.back) {
                n -= Math.pow(a - this.back, 2);
            } else if (a > this.g8) {
                n -= Math.pow(a - this.g8, 2);
            }
            return n >= 0;
        },
        v8: function(t, e, n, i) {
            if (typeof i === "undefined") {
                i = this.c8.set(1, 1, 1).dm(e);
            }
            var r = (this.left - t.x) * i.x, a = (this.right - t.x) * i.x, s = (this.bottom - t.y) * i.y, o = (this.top - t.y) * i.y, f = (this.back - t.z) * i.z, u = (this.g8 - t.z) * i.z, h = Math.min(Math.min(Math.max(r, a), Math.max(s, o)), Math.max(f, u)), c;
            if (h < 0) {
                return false;
            }
            c = Math.max(Math.max(Math.min(r, a), Math.min(s, o)), Math.min(f, u));
            if (c > h || c > n) {
                return false;
            }
            return true;
        },
        S7: function(t) {
            var e, n, i;
            if (this.O7.length > 0) {
                for (e = 0, n = this.O7.length; e < n; e++) {
                    i = this.P7[this.O7[e]];
                    t = i.S7(t);
                }
            } else {
                t = !t || this.AA > t ? this.AA : t;
            }
            return t;
        },
        T7: function() {
            return this.Z6.root.w8() + 1;
        },
        w8: function() {
            var t, e, n = this.O7.length;
            for (t = 0, e = this.O7.length; t < e; t++) {
                n += this.P7[this.O7[t]].w8();
            }
            return n;
        },
        t8: function(t) {
            var e, n, i;
            t = (t || []).concat(this.Cv);
            for (e = 0, n = this.O7.length; e < n; e++) {
                i = this.P7[this.O7[e]];
                t = i.t8(t);
            }
            return t;
        },
        U7: function() {
            var t, e, n = this.Cv.length;
            for (t = 0, e = this.O7.length; t < e; t++) {
                n += this.P7[this.O7[t]].U7();
            }
            return n;
        },
        x8: function() {
            var t = this.Cv.length, e = this.parent;
            while (e instanceof THREE.B7) {
                t += e.Cv.length;
                e = e.parent;
            }
            return t;
        },
        V7: function(t) {
            var e, n, i, r = "   ";
            t = typeof t === "string" ? t : r;
            console.log(this.parent ? t + " octree NODE > " : " octree ROOT > ", this, " // id: ", this.id, " // indexOctant: ", this.M7, " // position: ", this.position.x, this.position.y, this.position.z, " // radius: ", this.N, " // depth: ", this.AA);
            console.log(this.parent ? t + " " : " ", "+ objects ( ", this.Cv.length, " ) ", this.Cv);
            console.log(this.parent ? t + " " : " ", "+ children ( ", this.O7.length, " )", this.O7, this.P7);
            for (e = 0, n = this.O7.length; e < n; e++) {
                i = this.P7[this.O7[e]];
                i.V7(t + r);
            }
        }
    };
    THREE._p.prototype.y8 = function(t, e) {
        var n, i, r, a;
        if (t.object instanceof THREE.qq) {
            i = t;
            t = i.object;
            a = i.Wr;
            r = t.j.Wr;
            if (a.length > 0) {
                t.j.Wr = a;
            }
            n = this.oq(t, e);
            if (a.length > 0) {
                t.j.Wr = r;
            }
        } else {
            n = this.oq(t, e);
        }
        return n;
    };
    THREE._p.prototype.z8 = function(t, e) {
        var n, i, r = [];
        for (n = 0, i = t.length; n < i; n++) {
            r = r.concat(this.y8(t[n], e));
        }
        return r;
    };
})(THREE);

(function(t) {
    var e = /iPhone/i, n = /iPod/i, i = /iPad/i, r = /(?=.*\bAndroid\b)(?=.*\bMobile\b)/i, a = /Android/i, s = /(?=.*\bAndroid\b)(?=.*\bSD4930UR\b)/i, o = /(?=.*\bAndroid\b)(?=.*\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\b)/i, f = /IEMobile/i, u = /(?=.*\bWindows\b)(?=.*\bARM\b)/i, h = /BlackBerry/i, c = /BB10/i, l = /Opera Mini/i, d = /(CriOS|Chrome)(?=.*\bMobile\b)/i, v = /(?=.*\bFirefox\b)(?=.*\bMobile\b)/i, p = new RegExp("(?:" + "Nexus 7" + "|" + "BNTV250" + "|" + "Kindle Fire" + "|" + "Silk" + "|" + "GT-P1000" + ")", "i");
    var E = function(t, e) {
        return t.test(e);
    };
    var g = function(t) {
        var g = t || navigator.userAgent;
        var m = g.split("[FBAN");
        if (typeof m[1] !== "undefined") {
            g = m[0];
        }
        this.A8 = {
            B8: E(e, g),
            C8: E(n, g),
            D8: !E(e, g) && E(i, g),
            E8: E(e, g) || E(n, g) || E(i, g)
        };
        this.F8 = {
            B8: E(s, g),
            D8: !E(s, g) && E(o, g),
            E8: E(s, g) || E(o, g)
        };
        this.G8 = {
            B8: E(s, g) || E(r, g),
            D8: !E(s, g) && !E(r, g) && (E(o, g) || E(a, g)),
            E8: E(s, g) || E(o, g) || E(r, g) || E(a, g)
        };
        this.H8 = {
            B8: E(f, g),
            D8: E(u, g),
            E8: E(f, g) || E(u, g)
        };
        this.I8 = {
            J8: E(h, g),
            K8: E(c, g),
            opera: E(l, g),
            L8: E(v, g),
            chrome: E(d, g),
            E8: E(h, g) || E(c, g) || E(l, g) || E(v, g) || E(d, g)
        };
        this.M8 = E(p, g);
        this.N8 = this.A8.E8 || this.G8.E8 || this.H8.E8 || this.I8.E8 || this.M8;
        this.B8 = this.A8.B8 || this.G8.B8 || this.H8.B8;
        this.D8 = this.A8.D8 || this.G8.D8 || this.H8.D8;
        if (typeof window === "undefined") {
            return this;
        }
    };
    var m = function() {
        var t = new g();
        t.O8 = g;
        return t;
    };
    if (typeof module != "undefined" && module.Lb && typeof window === "undefined") {
        module.Lb = g;
    } else if (typeof module != "undefined" && module.Lb && typeof window !== "undefined") {
        module.Lb = m();
    } else if (typeof define === "function" && define.bg) {
        define("isMobile", [], t.isMobile = m());
    } else {
        t.isMobile = m();
    }
})(this);

(function(t, e) {
    "use strict";
    if (typeof exports === "object") {
        module.Lb = e(require("./punycode"), require("./IPv6"), require("./SecondLevelDomains"));
    } else if (typeof define === "function" && define.bg) {
        define([ "./punycode", "./IPv6", "./SecondLevelDomains" ], e);
    } else {
        t.URI = e(t.P8, t.Q8, t.R8, t);
    }
})(this, function(t, e, n, i) {
    "use strict";
    var r = i && i.URI;
    function a(t, e) {
        var n = arguments.length >= 1;
        var i = arguments.length >= 2;
        if (!(this instanceof a)) {
            if (n) {
                if (i) {
                    return new a(t, e);
                }
                return new a(t);
            }
            return new a();
        }
        if (t === undefined) {
            if (n) {
                throw new TypeError("undefined is not a valid argument for URI");
            }
            if (typeof location !== "undefined") {
                t = location.href + "";
            } else {
                t = "";
            }
        }
        this.href(t);
        if (e !== undefined) {
            return this.S8(e);
        }
        return this;
    }
    a.version = "1.18.1";
    var s = a.prototype;
    var o = Object.prototype.hasOwnProperty;
    function f(t) {
        return t.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
    }
    function u(t) {
        if (t === undefined) {
            return "Undefined";
        }
        return String(Object.prototype.toString.call(t)).slice(8, -1);
    }
    function h(t) {
        return u(t) === "Array";
    }
    function c(t, e) {
        var n = {};
        var i, r;
        if (u(e) === "RegExp") {
            n = null;
        } else if (h(e)) {
            for (i = 0, r = e.length; i < r; i++) {
                n[e[i]] = true;
            }
        } else {
            n[e] = true;
        }
        for (i = 0, r = t.length; i < r; i++) {
            var a = n && n[t[i]] !== undefined || !n && e.test(t[i]);
            if (a) {
                t.splice(i, 1);
                r--;
                i--;
            }
        }
        return t;
    }
    function l(t, e) {
        var n, i;
        if (h(e)) {
            for (n = 0, i = e.length; n < i; n++) {
                if (!l(t, e[n])) {
                    return false;
                }
            }
            return true;
        }
        var r = u(e);
        for (n = 0, i = t.length; n < i; n++) {
            if (r === "RegExp") {
                if (typeof t[n] === "string" && t[n].match(e)) {
                    return true;
                }
            } else if (t[n] === e) {
                return true;
            }
        }
        return false;
    }
    function d(t, e) {
        if (!h(t) || !h(e)) {
            return false;
        }
        if (t.length !== e.length) {
            return false;
        }
        t.sort();
        e.sort();
        for (var n = 0, i = t.length; n < i; n++) {
            if (t[n] !== e[n]) {
                return false;
            }
        }
        return true;
    }
    function v(t) {
        var e = /^\/+|\/+$/g;
        return t.replace(e, "");
    }
    a.T8 = function() {
        return {
            protocol: null,
            username: null,
            password: null,
            hostname: null,
            urn: null,
            port: null,
            path: null,
            U8: null,
            XT: null,
            V8: a.V8,
            W8: a.W8
        };
    };
    a.V8 = false;
    a.W8 = true;
    a.X8 = /^[a-z][a-z0-9.+-]*$/i;
    a.Y8 = /[^a-z0-9\.-]/i;
    a.Z8 = /(xn--)/i;
    a._8 = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
    a.a9 = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
    a.b9 = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi;
    a.c9 = {
        start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,
        end: /[\s\r\n]|$/,
        trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/
    };
    a.d9 = {
        e9: "80",
        f9: "443",
        g9: "21",
        h9: "70",
        i9: "80",
        j9: "443"
    };
    a.k9 = /[^a-zA-Z0-9\.-]/;
    a.l9 = {
        a: "href",
        m9: "cite",
        link: "href",
        WV: "href",
        t_: "src",
        form: "action",
        n9: "src",
        qp: "href",
        o9: "src",
        p9: "src",
        source: "src",
        track: "src",
        input: "src",
        q9: "src",
        r9: "src"
    };
    a.s9 = function(t) {
        if (!t || !t.nodeName) {
            return undefined;
        }
        var e = t.nodeName.toLowerCase();
        if (e === "input" && t.type !== "image") {
            return undefined;
        }
        return a.l9[e];
    };
    function p(t) {
        return escape(t);
    }
    function E(t) {
        return encodeURIComponent(t).replace(/[!'()*]/g, p).replace(/\*/g, "%2A");
    }
    a.encode = E;
    a.decode = decodeURIComponent;
    a.t9 = function() {
        a.encode = escape;
        a.decode = unescape;
    };
    a.u9 = function() {
        a.encode = E;
        a.decode = decodeURIComponent;
    };
    a.v9 = {
        pathname: {
            encode: {
                w9: /%(24|26|2B|2C|3B|3D|3A|40)/gi,
                map: {
                    x9: "$",
                    y9: "&",
                    z9: "+",
                    A9: ",",
                    B9: ";",
                    C9: "=",
                    D9: ":",
                    E9: "@"
                }
            },
            decode: {
                w9: /[\/\?#]/g,
                map: {
                    F9: "%2F",
                    jM: "%3F",
                    G9: "%23"
                }
            }
        },
        H9: {
            encode: {
                w9: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,
                map: {
                    D9: ":",
                    I9: "/",
                    J9: "?",
                    K9: "#",
                    L9: "[",
                    M9: "]",
                    E9: "@",
                    N9: "!",
                    x9: "$",
                    y9: "&",
                    O9: "'",
                    P9: "(",
                    Q9: ")",
                    R9: "*",
                    z9: "+",
                    A9: ",",
                    B9: ";",
                    C9: "="
                }
            }
        },
        S9: {
            encode: {
                w9: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,
                map: {
                    N9: "!",
                    x9: "$",
                    O9: "'",
                    P9: "(",
                    Q9: ")",
                    R9: "*",
                    z9: "+",
                    A9: ",",
                    B9: ";",
                    C9: "=",
                    E9: "@"
                }
            },
            decode: {
                w9: /[\/\?#:]/g,
                map: {
                    F9: "%2F",
                    jM: "%3F",
                    G9: "%23",
                    T9: "%3A"
                }
            }
        }
    };
    a.U9 = function(t, e) {
        var n = a.encode(t + "");
        if (e === undefined) {
            e = a.W8;
        }
        return e ? n.replace(/%20/g, "+") : n;
    };
    a.V9 = function(t, e) {
        t += "";
        if (e === undefined) {
            e = a.W8;
        }
        try {
            return a.decode(e ? t.replace(/\+/g, "%20") : t);
        } catch (e) {
            return t;
        }
    };
    var g = {
        encode: "encode",
        decode: "decode"
    };
    var m;
    var T = function(t, e) {
        return function(n) {
            try {
                return a[e](n + "").replace(a.v9[t][e].w9, function(n) {
                    return a.v9[t][e].map[n];
                });
            } catch (t) {
                return n;
            }
        };
    };
    for (m in g) {
        a[m + "PathSegment"] = T("pathname", g[m]);
        a[m + "UrnPathSegment"] = T("urnpath", g[m]);
    }
    var y = function(t, e, n) {
        return function(i) {
            var r;
            if (!n) {
                r = a[e];
            } else {
                r = function(t) {
                    return a[e](a[n](t));
                };
            }
            var s = (i + "").split(t);
            for (var o = 0, f = s.length; o < f; o++) {
                s[o] = r(s[o]);
            }
            return s.join(t);
        };
    };
    a.W9 = y("/", "decodePathSegment");
    a.X9 = y(":", "decodeUrnPathSegment");
    a.Y9 = y("/", "encodePathSegment", "decode");
    a.Z9 = y(":", "encodeUrnPathSegment", "decode");
    a._9 = T("reserved", "encode");
    a.parse = function(t, e) {
        var n;
        if (!e) {
            e = {};
        }
        n = t.indexOf("#");
        if (n > -1) {
            e.XT = t.substring(n + 1) || null;
            t = t.substring(0, n);
        }
        n = t.indexOf("?");
        if (n > -1) {
            e.U8 = t.substring(n + 1) || null;
            t = t.substring(0, n);
        }
        if (t.substring(0, 2) === "//") {
            e.protocol = null;
            t = t.substring(2);
            t = a.aaa(t, e);
        } else {
            n = t.indexOf(":");
            if (n > -1) {
                e.protocol = t.substring(0, n) || null;
                if (e.protocol && !e.protocol.match(a.X8)) {
                    e.protocol = undefined;
                } else if (t.substring(n + 1, n + 3) === "//") {
                    t = t.substring(n + 3);
                    t = a.aaa(t, e);
                } else {
                    t = t.substring(n + 1);
                    e.urn = true;
                }
            }
        }
        e.path = t;
        return e;
    };
    a.baa = function(t, e) {
        t = t.replace(/\\/g, "/");
        var n = t.indexOf("/");
        var i;
        var r;
        if (n === -1) {
            n = t.length;
        }
        if (t.charAt(0) === "[") {
            i = t.indexOf("]");
            e.hostname = t.substring(1, i) || null;
            e.port = t.substring(i + 2, n) || null;
            if (e.port === "/") {
                e.port = null;
            }
        } else {
            var a = t.indexOf(":");
            var s = t.indexOf("/");
            var o = t.indexOf(":", a + 1);
            if (o !== -1 && (s === -1 || o < s)) {
                e.hostname = t.substring(0, n) || null;
                e.port = null;
            } else {
                r = t.substring(0, n).split(":");
                e.hostname = r[0] || null;
                e.port = r[1] || null;
            }
        }
        if (e.hostname && t.substring(n).charAt(0) !== "/") {
            n++;
            t = "/" + t;
        }
        return t.substring(n) || "/";
    };
    a.aaa = function(t, e) {
        t = a.caa(t, e);
        return a.baa(t, e);
    };
    a.caa = function(t, e) {
        var n = t.indexOf("/");
        var i = t.lastIndexOf("@", n > -1 ? n : t.length - 1);
        var r;
        if (i > -1 && (n === -1 || i < n)) {
            r = t.substring(0, i).split(":");
            e.username = r[0] ? a.decode(r[0]) : null;
            r.shift();
            e.password = r[0] ? a.decode(r.join(":")) : null;
            t = t.substring(i + 1);
        } else {
            e.username = null;
            e.password = null;
        }
        return t;
    };
    a.daa = function(t, e) {
        if (!t) {
            return {};
        }
        t = t.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, "");
        if (!t) {
            return {};
        }
        var n = {};
        var i = t.split("&");
        var r = i.length;
        var s, f, u;
        for (var h = 0; h < r; h++) {
            s = i[h].split("=");
            f = a.V9(s.shift(), e);
            u = s.length ? a.V9(s.join("="), e) : null;
            if (o.call(n, f)) {
                if (typeof n[f] === "string" || n[f] === null) {
                    n[f] = [ n[f] ];
                }
                n[f].push(u);
            } else {
                n[f] = u;
            }
        }
        return n;
    };
    a.XS = function(t) {
        var e = "";
        if (t.protocol) {
            e += t.protocol + ":";
        }
        if (!t.urn && (e || t.hostname)) {
            e += "//";
        }
        e += a.eaa(t) || "";
        if (typeof t.path === "string") {
            if (t.path.charAt(0) !== "/" && typeof t.hostname === "string") {
                e += "/";
            }
            e += t.path;
        }
        if (typeof t.U8 === "string" && t.U8) {
            e += "?" + t.U8;
        }
        if (typeof t.XT === "string" && t.XT) {
            e += "#" + t.XT;
        }
        return e;
    };
    a.faa = function(t) {
        var e = "";
        if (!t.hostname) {
            return "";
        } else if (a.a9.test(t.hostname)) {
            e += "[" + t.hostname + "]";
        } else {
            e += t.hostname;
        }
        if (t.port) {
            e += ":" + t.port;
        }
        return e;
    };
    a.eaa = function(t) {
        return a.gaa(t) + a.faa(t);
    };
    a.gaa = function(t) {
        var e = "";
        if (t.username) {
            e += a.encode(t.username);
        }
        if (t.password) {
            e += ":" + a.encode(t.password);
        }
        if (e) {
            e += "@";
        }
        return e;
    };
    a.haa = function(t, e, n) {
        var i = "";
        var r, s, f, u;
        for (s in t) {
            if (o.call(t, s) && s) {
                if (h(t[s])) {
                    r = {};
                    for (f = 0, u = t[s].length; f < u; f++) {
                        if (t[s][f] !== undefined && r[t[s][f] + ""] === undefined) {
                            i += "&" + a.iaa(s, t[s][f], n);
                            if (e !== true) {
                                r[t[s][f] + ""] = true;
                            }
                        }
                    }
                } else if (t[s] !== undefined) {
                    i += "&" + a.iaa(s, t[s], n);
                }
            }
        }
        return i.substring(1);
    };
    a.iaa = function(t, e, n) {
        return a.U9(t, n) + (e !== null ? "=" + a.U9(e, n) : "");
    };
    a.jaa = function(t, e, n) {
        if (typeof e === "object") {
            for (var i in e) {
                if (o.call(e, i)) {
                    a.jaa(t, i, e[i]);
                }
            }
        } else if (typeof e === "string") {
            if (t[e] === undefined) {
                t[e] = n;
                return;
            } else if (typeof t[e] === "string") {
                t[e] = [ t[e] ];
            }
            if (!h(n)) {
                n = [ n ];
            }
            t[e] = (t[e] || []).concat(n);
        } else {
            throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        }
    };
    a.kaa = function(t, e, n) {
        var i, r, s;
        if (h(e)) {
            for (i = 0, r = e.length; i < r; i++) {
                t[e[i]] = undefined;
            }
        } else if (u(e) === "RegExp") {
            for (s in t) {
                if (e.test(s)) {
                    t[s] = undefined;
                }
            }
        } else if (typeof e === "object") {
            for (s in e) {
                if (o.call(e, s)) {
                    a.kaa(t, s, e[s]);
                }
            }
        } else if (typeof e === "string") {
            if (n !== undefined) {
                if (u(n) === "RegExp") {
                    if (!h(t[e]) && n.test(t[e])) {
                        t[e] = undefined;
                    } else {
                        t[e] = c(t[e], n);
                    }
                } else if (t[e] === String(n) && (!h(n) || n.length === 1)) {
                    t[e] = undefined;
                } else if (h(t[e])) {
                    t[e] = c(t[e], n);
                }
            } else {
                t[e] = undefined;
            }
        } else {
            throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
        }
    };
    a.laa = function(t, e, n, i) {
        switch (u(e)) {
          case "String":
            break;

          case "RegExp":
            for (var r in t) {
                if (o.call(t, r)) {
                    if (e.test(r) && (n === undefined || a.laa(t, r, n))) {
                        return true;
                    }
                }
            }
            return false;

          case "Object":
            for (var s in e) {
                if (o.call(e, s)) {
                    if (!a.laa(t, s, e[s])) {
                        return false;
                    }
                }
            }
            return true;

          default:
            throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
        }
        switch (u(n)) {
          case "Undefined":
            return e in t;

          case "Boolean":
            var f = Boolean(h(t[e]) ? t[e].length : t[e]);
            return n === f;

          case "Function":
            return !!n(t[e], e, t);

          case "Array":
            if (!h(t[e])) {
                return false;
            }
            var c = i ? l : d;
            return c(t[e], n);

          case "RegExp":
            if (!h(t[e])) {
                return Boolean(t[e] && t[e].match(n));
            }
            if (!i) {
                return false;
            }
            return l(t[e], n);

          case "Number":
            n = String(n);

          case "String":
            if (!h(t[e])) {
                return t[e] === n;
            }
            if (!i) {
                return false;
            }
            return l(t[e], n);

          default:
            throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
    };
    a.maa = function() {
        var t = [];
        var e = [];
        var n = 0;
        for (var i = 0; i < arguments.length; i++) {
            var r = new a(arguments[i]);
            t.push(r);
            var s = r.naa();
            for (var o = 0; o < s.length; o++) {
                if (typeof s[o] === "string") {
                    e.push(s[o]);
                }
                if (s[o]) {
                    n++;
                }
            }
        }
        if (!e.length || !n) {
            return new a("");
        }
        var f = new a("").naa(e);
        if (t[0].path() === "" || t[0].path().slice(0, 1) === "/") {
            f.path("/" + f.path());
        }
        return f.normalize();
    };
    a.oaa = function(t, e) {
        var n = Math.min(t.length, e.length);
        var i;
        for (i = 0; i < n; i++) {
            if (t.charAt(i) !== e.charAt(i)) {
                i--;
                break;
            }
        }
        if (i < 1) {
            return t.charAt(0) === e.charAt(0) && t.charAt(0) === "/" ? "/" : "";
        }
        if (t.charAt(i) !== "/" || e.charAt(i) !== "/") {
            i = t.substring(0, i).lastIndexOf("/");
        }
        return t.substring(0, i + 1);
    };
    a.paa = function(t, e, n) {
        n || (n = {});
        var i = n.start || a.c9.start;
        var r = n.end || a.c9.end;
        var s = n.trim || a.c9.trim;
        var o = /[a-z0-9-]=["']?$/i;
        i.lastIndex = 0;
        while (true) {
            var f = i.exec(t);
            if (!f) {
                break;
            }
            var u = f.index;
            if (n.qaa) {
                var h = t.slice(Math.max(u - 3, 0), u);
                if (h && o.test(h)) {
                    continue;
                }
            }
            var c = u + t.slice(u).search(r);
            var l = t.slice(u, c).replace(s, "");
            if (n.raa && n.raa.test(l)) {
                continue;
            }
            c = u + l.length;
            var d = e(l, u, c, t);
            t = t.slice(0, u) + d + t.slice(c);
            i.lastIndex = u + d.length;
        }
        i.lastIndex = 0;
        return t;
    };
    a.saa = function(e) {
        if (e.match(a.k9)) {
            if (!t) {
                throw new TypeError('Hostname "' + e + '" contains characters other than [A-Z0-9.-] and Punycode.js is not available');
            }
            if (t.taa(e).match(a.k9)) {
                throw new TypeError('Hostname "' + e + '" contains characters other than [A-Z0-9.-]');
            }
        }
    };
    a.vf = function(t) {
        if (t) {
            var e = {
                URI: this.vf()
            };
            if (i.uaa && typeof i.uaa.vf === "function") {
                e.uaa = i.uaa.vf();
            }
            if (i.Q8 && typeof i.Q8.vf === "function") {
                e.Q8 = i.Q8.vf();
            }
            if (i.R8 && typeof i.R8.vf === "function") {
                e.R8 = i.R8.vf();
            }
            return e;
        } else if (i.URI === this) {
            i.URI = r;
        }
        return this;
    };
    s.XS = function(t) {
        if (t === true) {
            this.vaa = true;
        } else if (t === undefined || this.vaa) {
            this.waa = a.XS(this.T8);
            this.vaa = false;
        }
        return this;
    };
    s.clone = function() {
        return new a(this);
    };
    s.valueOf = s.toString = function() {
        return this.XS(false).waa;
    };
    function R(t) {
        return function(e, n) {
            if (e === undefined) {
                return this.T8[t] || "";
            } else {
                this.T8[t] = e || null;
                this.XS(!n);
                return this;
            }
        };
    }
    function w(t, e) {
        return function(n, i) {
            if (n === undefined) {
                return this.T8[t] || "";
            } else {
                if (n !== null) {
                    n = n + "";
                    if (n.charAt(0) === e) {
                        n = n.substring(1);
                    }
                }
                this.T8[t] = n;
                this.XS(!i);
                return this;
            }
        };
    }
    s.protocol = R("protocol");
    s.username = R("username");
    s.password = R("password");
    s.hostname = R("hostname");
    s.port = R("port");
    s.U8 = w("query", "?");
    s.XT = w("fragment", "#");
    s.search = function(t, e) {
        var n = this.U8(t, e);
        return typeof n === "string" && n.length ? "?" + n : n;
    };
    s.hash = function(t, e) {
        var n = this.XT(t, e);
        return typeof n === "string" && n.length ? "#" + n : n;
    };
    s.pathname = function(t, e) {
        if (t === undefined || t === true) {
            var n = this.T8.path || (this.T8.hostname ? "/" : "");
            return t ? (this.T8.urn ? a.X9 : a.W9)(n) : n;
        } else {
            if (this.T8.urn) {
                this.T8.path = t ? a.Z9(t) : "";
            } else {
                this.T8.path = t ? a.Y9(t) : "/";
            }
            this.XS(!e);
            return this;
        }
    };
    s.path = s.pathname;
    s.href = function(t, e) {
        var n;
        if (t === undefined) {
            return this.toString();
        }
        this.waa = "";
        this.T8 = a.T8();
        var i = t instanceof a;
        var r = typeof t === "object" && (t.hostname || t.path || t.pathname);
        if (t.nodeName) {
            var s = a.s9(t);
            t = t[s] || "";
            r = false;
        }
        if (!i && r && t.pathname !== undefined) {
            t = t.toString();
        }
        if (typeof t === "string" || t instanceof String) {
            this.T8 = a.parse(String(t), this.T8);
        } else if (i || r) {
            var f = i ? t.T8 : t;
            for (n in f) {
                if (o.call(this.T8, n)) {
                    this.T8[n] = f[n];
                }
            }
        } else {
            throw new TypeError("invalid input");
        }
        this.XS(!e);
        return this;
    };
    s.is = function(t) {
        var e = false;
        var i = false;
        var r = false;
        var s = false;
        var o = false;
        var f = false;
        var u = false;
        var h = !this.T8.urn;
        if (this.T8.hostname) {
            h = false;
            i = a._8.test(this.T8.hostname);
            r = a.a9.test(this.T8.hostname);
            e = i || r;
            s = !e;
            o = s && n && n.has(this.T8.hostname);
            f = s && a.Y8.test(this.T8.hostname);
            u = s && a.Z8.test(this.T8.hostname);
        }
        switch (t.toLowerCase()) {
          case "relative":
            return h;

          case "absolute":
            return !h;

          case "domain":
          case "name":
            return s;

          case "sld":
            return o;

          case "ip":
            return e;

          case "ip4":
          case "ipv4":
          case "inet4":
            return i;

          case "ip6":
          case "ipv6":
          case "inet6":
            return r;

          case "idn":
            return f;

          case "url":
            return !this.T8.urn;

          case "urn":
            return !!this.T8.urn;

          case "punycode":
            return u;
        }
        return null;
    };
    var x = s.protocol;
    var b = s.port;
    var H = s.hostname;
    s.protocol = function(t, e) {
        if (t !== undefined) {
            if (t) {
                t = t.replace(/:(\/\/)?$/, "");
                if (!t.match(a.X8)) {
                    throw new TypeError('Protocol "' + t + "\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");
                }
            }
        }
        return x.call(this, t, e);
    };
    s.scheme = s.protocol;
    s.port = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t !== undefined) {
            if (t === 0) {
                t = null;
            }
            if (t) {
                t += "";
                if (t.charAt(0) === ":") {
                    t = t.substring(1);
                }
                if (t.match(/[^0-9]/)) {
                    throw new TypeError('Port "' + t + '" contains characters other than [0-9]');
                }
            }
        }
        return b.call(this, t, e);
    };
    s.hostname = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t !== undefined) {
            var n = {};
            var i = a.baa(t, n);
            if (i !== "/") {
                throw new TypeError('Hostname "' + t + '" contains characters other than [A-Z0-9.-]');
            }
            t = n.hostname;
        }
        return H.call(this, t, e);
    };
    s.origin = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined) {
            var n = this.protocol();
            var i = this.xaa();
            if (!i) {
                return "";
            }
            return (n ? n + "://" : "") + this.xaa();
        } else {
            var r = a(t);
            this.protocol(r.protocol()).xaa(r.xaa()).XS(!e);
            return this;
        }
    };
    s.host = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined) {
            return this.T8.hostname ? a.faa(this.T8) : "";
        } else {
            var n = a.baa(t, this.T8);
            if (n !== "/") {
                throw new TypeError('Hostname "' + t + '" contains characters other than [A-Z0-9.-]');
            }
            this.XS(!e);
            return this;
        }
    };
    s.xaa = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined) {
            return this.T8.hostname ? a.eaa(this.T8) : "";
        } else {
            var n = a.aaa(t, this.T8);
            if (n !== "/") {
                throw new TypeError('Hostname "' + t + '" contains characters other than [A-Z0-9.-]');
            }
            this.XS(!e);
            return this;
        }
    };
    s.yaa = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined) {
            var n = a.gaa(this.T8);
            return n ? n.substring(0, n.length - 1) : n;
        } else {
            if (t[t.length - 1] !== "@") {
                t += "@";
            }
            a.caa(t, this.T8);
            this.XS(!e);
            return this;
        }
    };
    s.zaa = function(t, e) {
        var n;
        if (t === undefined) {
            return this.path() + this.search() + this.hash();
        }
        n = a.parse(t);
        this.T8.path = n.path;
        this.T8.U8 = n.U8;
        this.T8.XT = n.XT;
        this.XS(!e);
        return this;
    };
    s.Aaa = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined) {
            if (!this.T8.hostname || this.is("IP")) {
                return "";
            }
            var n = this.T8.hostname.length - this.domain().length - 1;
            return this.T8.hostname.substring(0, n) || "";
        } else {
            var i = this.T8.hostname.length - this.domain().length;
            var r = this.T8.hostname.substring(0, i);
            var s = new RegExp("^" + f(r));
            if (t && t.charAt(t.length - 1) !== ".") {
                t += ".";
            }
            if (t) {
                a.saa(t);
            }
            this.T8.hostname = this.T8.hostname.replace(s, t);
            this.XS(!e);
            return this;
        }
    };
    s.domain = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (typeof t === "boolean") {
            e = t;
            t = undefined;
        }
        if (t === undefined) {
            if (!this.T8.hostname || this.is("IP")) {
                return "";
            }
            var n = this.T8.hostname.match(/\./g);
            if (n && n.length < 2) {
                return this.T8.hostname;
            }
            var i = this.T8.hostname.length - this.Baa(e).length - 1;
            i = this.T8.hostname.lastIndexOf(".", i - 1) + 1;
            return this.T8.hostname.substring(i) || "";
        } else {
            if (!t) {
                throw new TypeError("cannot set domain empty");
            }
            a.saa(t);
            if (!this.T8.hostname || this.is("IP")) {
                this.T8.hostname = t;
            } else {
                var r = new RegExp(f(this.domain()) + "$");
                this.T8.hostname = this.T8.hostname.replace(r, t);
            }
            this.XS(!e);
            return this;
        }
    };
    s.Baa = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (typeof t === "boolean") {
            e = t;
            t = undefined;
        }
        if (t === undefined) {
            if (!this.T8.hostname || this.is("IP")) {
                return "";
            }
            var i = this.T8.hostname.lastIndexOf(".");
            var r = this.T8.hostname.substring(i + 1);
            if (e !== true && n && n.list[r.toLowerCase()]) {
                return n.get(this.T8.hostname) || r;
            }
            return r;
        } else {
            var a;
            if (!t) {
                throw new TypeError("cannot set TLD empty");
            } else if (t.match(/[^a-zA-Z0-9-]/)) {
                if (n && n.is(t)) {
                    a = new RegExp(f(this.Baa()) + "$");
                    this.T8.hostname = this.T8.hostname.replace(a, t);
                } else {
                    throw new TypeError('TLD "' + t + '" contains characters other than [A-Z0-9]');
                }
            } else if (!this.T8.hostname || this.is("IP")) {
                throw new ReferenceError("cannot set TLD on non-domain host");
            } else {
                a = new RegExp(f(this.Baa()) + "$");
                this.T8.hostname = this.T8.hostname.replace(a, t);
            }
            this.XS(!e);
            return this;
        }
    };
    s.Caa = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined || t === true) {
            if (!this.T8.path && !this.T8.hostname) {
                return "";
            }
            if (this.T8.path === "/") {
                return "/";
            }
            var n = this.T8.path.length - this.filename().length - 1;
            var i = this.T8.path.substring(0, n) || (this.T8.hostname ? "/" : "");
            return t ? a.W9(i) : i;
        } else {
            var r = this.T8.path.length - this.filename().length;
            var s = this.T8.path.substring(0, r);
            var o = new RegExp("^" + f(s));
            if (!this.is("relative")) {
                if (!t) {
                    t = "/";
                }
                if (t.charAt(0) !== "/") {
                    t = "/" + t;
                }
            }
            if (t && t.charAt(t.length - 1) !== "/") {
                t += "/";
            }
            t = a.Y9(t);
            this.T8.path = this.T8.path.replace(o, t);
            this.XS(!e);
            return this;
        }
    };
    s.filename = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined || t === true) {
            if (!this.T8.path || this.T8.path === "/") {
                return "";
            }
            var n = this.T8.path.lastIndexOf("/");
            var i = this.T8.path.substring(n + 1);
            return t ? a.Daa(i) : i;
        } else {
            var r = false;
            if (t.charAt(0) === "/") {
                t = t.substring(1);
            }
            if (t.match(/\.?\//)) {
                r = true;
            }
            var s = new RegExp(f(this.filename()) + "$");
            t = a.Y9(t);
            this.T8.path = this.T8.path.replace(s, t);
            if (r) {
                this.Eaa(e);
            } else {
                this.XS(!e);
            }
            return this;
        }
    };
    s.suffix = function(t, e) {
        if (this.T8.urn) {
            return t === undefined ? "" : this;
        }
        if (t === undefined || t === true) {
            if (!this.T8.path || this.T8.path === "/") {
                return "";
            }
            var n = this.filename();
            var i = n.lastIndexOf(".");
            var r, s;
            if (i === -1) {
                return "";
            }
            r = n.substring(i + 1);
            s = /^[a-z0-9%]+$/i.test(r) ? r : "";
            return t ? a.Daa(s) : s;
        } else {
            if (t.charAt(0) === ".") {
                t = t.substring(1);
            }
            var o = this.suffix();
            var u;
            if (!o) {
                if (!t) {
                    return this;
                }
                this.T8.path += "." + a.Y9(t);
            } else if (!t) {
                u = new RegExp(f("." + o) + "$");
            } else {
                u = new RegExp(f(o) + "$");
            }
            if (u) {
                t = a.Y9(t);
                this.T8.path = this.T8.path.replace(u, t);
            }
            this.XS(!e);
            return this;
        }
    };
    s.naa = function(t, e, n) {
        var i = this.T8.urn ? ":" : "/";
        var r = this.path();
        var a = r.substring(0, 1) === "/";
        var s = r.split(i);
        if (t !== undefined && typeof t !== "number") {
            n = e;
            e = t;
            t = undefined;
        }
        if (t !== undefined && typeof t !== "number") {
            throw new Error('Bad segment "' + t + '", must be 0-based integer');
        }
        if (a) {
            s.shift();
        }
        if (t < 0) {
            t = Math.max(s.length + t, 0);
        }
        if (e === undefined) {
            return t === undefined ? s : s[t];
        } else if (t === null || s[t] === undefined) {
            if (h(e)) {
                s = [];
                for (var o = 0, f = e.length; o < f; o++) {
                    if (!e[o].length && (!s.length || !s[s.length - 1].length)) {
                        continue;
                    }
                    if (s.length && !s[s.length - 1].length) {
                        s.pop();
                    }
                    s.push(v(e[o]));
                }
            } else if (e || typeof e === "string") {
                e = v(e);
                if (s[s.length - 1] === "") {
                    s[s.length - 1] = e;
                } else {
                    s.push(e);
                }
            }
        } else {
            if (e) {
                s[t] = v(e);
            } else {
                s.splice(t, 1);
            }
        }
        if (a) {
            s.unshift("");
        }
        return this.path(s.join(i), n);
    };
    s.Faa = function(t, e, n) {
        var i, r, s;
        if (typeof t !== "number") {
            n = e;
            e = t;
            t = undefined;
        }
        if (e === undefined) {
            i = this.naa(t, e, n);
            if (!h(i)) {
                i = i !== undefined ? a.decode(i) : undefined;
            } else {
                for (r = 0, s = i.length; r < s; r++) {
                    i[r] = a.decode(i[r]);
                }
            }
            return i;
        }
        if (!h(e)) {
            e = typeof e === "string" || e instanceof String ? a.encode(e) : e;
        } else {
            for (r = 0, s = e.length; r < s; r++) {
                e[r] = a.encode(e[r]);
            }
        }
        return this.naa(t, e, n);
    };
    var A = s.U8;
    s.U8 = function(t, e) {
        if (t === true) {
            return a.daa(this.T8.U8, this.T8.W8);
        } else if (typeof t === "function") {
            var n = a.daa(this.T8.U8, this.T8.W8);
            var i = t.call(this, n);
            this.T8.U8 = a.haa(i || n, this.T8.V8, this.T8.W8);
            this.XS(!e);
            return this;
        } else if (t !== undefined && typeof t !== "string") {
            this.T8.U8 = a.haa(t, this.T8.V8, this.T8.W8);
            this.XS(!e);
            return this;
        } else {
            return A.call(this, t, e);
        }
    };
    s.Gaa = function(t, e, n) {
        var i = a.daa(this.T8.U8, this.T8.W8);
        if (typeof t === "string" || t instanceof String) {
            i[t] = e !== undefined ? e : null;
        } else if (typeof t === "object") {
            for (var r in t) {
                if (o.call(t, r)) {
                    i[r] = t[r];
                }
            }
        } else {
            throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        }
        this.T8.U8 = a.haa(i, this.T8.V8, this.T8.W8);
        if (typeof t !== "string") {
            n = e;
        }
        this.XS(!n);
        return this;
    };
    s.jaa = function(t, e, n) {
        var i = a.daa(this.T8.U8, this.T8.W8);
        a.jaa(i, t, e === undefined ? null : e);
        this.T8.U8 = a.haa(i, this.T8.V8, this.T8.W8);
        if (typeof t !== "string") {
            n = e;
        }
        this.XS(!n);
        return this;
    };
    s.kaa = function(t, e, n) {
        var i = a.daa(this.T8.U8, this.T8.W8);
        a.kaa(i, t, e);
        this.T8.U8 = a.haa(i, this.T8.V8, this.T8.W8);
        if (typeof t !== "string") {
            n = e;
        }
        this.XS(!n);
        return this;
    };
    s.laa = function(t, e, n) {
        var i = a.daa(this.T8.U8, this.T8.W8);
        return a.laa(i, t, e, n);
    };
    s.Haa = s.Gaa;
    s.Iaa = s.jaa;
    s.Jaa = s.kaa;
    s.Kaa = s.laa;
    s.normalize = function() {
        if (this.T8.urn) {
            return this.Naa(false).Eaa(false).Maa(false).Laa(false).XS();
        }
        return this.Naa(false).Paa(false).Oaa(false).Eaa(false).Maa(false).Laa(false).XS();
    };
    s.Naa = function(t) {
        if (typeof this.T8.protocol === "string") {
            this.T8.protocol = this.T8.protocol.toLowerCase();
            this.XS(!t);
        }
        return this;
    };
    s.Paa = function(n) {
        if (this.T8.hostname) {
            if (this.is("IDN") && t) {
                this.T8.hostname = t.taa(this.T8.hostname);
            } else if (this.is("IPv6") && e) {
                this.T8.hostname = e.Qaa(this.T8.hostname);
            }
            this.T8.hostname = this.T8.hostname.toLowerCase();
            this.XS(!n);
        }
        return this;
    };
    s.Oaa = function(t) {
        if (typeof this.T8.protocol === "string" && this.T8.port === a.d9[this.T8.protocol]) {
            this.T8.port = null;
            this.XS(!t);
        }
        return this;
    };
    s.Eaa = function(t) {
        var e = this.T8.path;
        if (!e) {
            return this;
        }
        if (this.T8.urn) {
            this.T8.path = a.Z9(this.T8.path);
            this.XS(!t);
            return this;
        }
        if (this.T8.path === "/") {
            return this;
        }
        e = a.Y9(e);
        var n;
        var i = "";
        var r, s;
        if (e.charAt(0) !== "/") {
            n = true;
            e = "/" + e;
        }
        if (e.slice(-3) === "/.." || e.slice(-2) === "/.") {
            e += "/";
        }
        e = e.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/");
        if (n) {
            i = e.substring(1).match(/^(\.\.\/)+/) || "";
            if (i) {
                i = i[0];
            }
        }
        while (true) {
            r = e.search(/\/\.\.(\/|$)/);
            if (r === -1) {
                break;
            } else if (r === 0) {
                e = e.substring(3);
                continue;
            }
            s = e.substring(0, r).lastIndexOf("/");
            if (s === -1) {
                s = r;
            }
            e = e.substring(0, s) + e.substring(r + 3);
        }
        if (n && this.is("relative")) {
            e = i + e.substring(1);
        }
        this.T8.path = e;
        this.XS(!t);
        return this;
    };
    s.Raa = s.Eaa;
    s.Maa = function(t) {
        if (typeof this.T8.U8 === "string") {
            if (!this.T8.U8.length) {
                this.T8.U8 = null;
            } else {
                this.U8(a.daa(this.T8.U8, this.T8.W8));
            }
            this.XS(!t);
        }
        return this;
    };
    s.Laa = function(t) {
        if (!this.T8.XT) {
            this.T8.XT = null;
            this.XS(!t);
        }
        return this;
    };
    s.Saa = s.Maa;
    s.Taa = s.Laa;
    s.t9 = function() {
        var t = a.encode;
        var e = a.decode;
        a.encode = escape;
        a.decode = decodeURIComponent;
        try {
            this.normalize();
        } finally {
            a.encode = t;
            a.decode = e;
        }
        return this;
    };
    s.u9 = function() {
        var t = a.encode;
        var e = a.decode;
        a.encode = E;
        a.decode = unescape;
        try {
            this.normalize();
        } finally {
            a.encode = t;
            a.decode = e;
        }
        return this;
    };
    s.Uaa = function() {
        var e = this.clone();
        e.username("").password("").normalize();
        var n = "";
        if (e.T8.protocol) {
            n += e.T8.protocol + "://";
        }
        if (e.T8.hostname) {
            if (e.is("punycode") && t) {
                n += t.Vaa(e.T8.hostname);
                if (e.T8.port) {
                    n += ":" + e.T8.port;
                }
            } else {
                n += e.host();
            }
        }
        if (e.T8.hostname && e.T8.path && e.T8.path.charAt(0) !== "/") {
            n += "/";
        }
        n += e.path(true);
        if (e.T8.U8) {
            var i = "";
            for (var r = 0, s = e.T8.U8.split("&"), o = s.length; r < o; r++) {
                var f = (s[r] || "").split("=");
                i += "&" + a.V9(f[0], this.T8.W8).replace(/&/g, "%26");
                if (f[1] !== undefined) {
                    i += "=" + a.V9(f[1], this.T8.W8).replace(/&/g, "%26");
                }
            }
            n += "?" + i.substring(1);
        }
        n += a.V9(e.hash(), true);
        return n;
    };
    s.S8 = function(t) {
        var e = this.clone();
        var n = [ "protocol", "username", "password", "hostname", "port" ];
        var i, r, s;
        if (this.T8.urn) {
            throw new Error("URNs do not have any generally defined hierarchical components");
        }
        if (!(t instanceof a)) {
            t = new a(t);
        }
        if (!e.T8.protocol) {
            e.T8.protocol = t.T8.protocol;
        }
        if (this.T8.hostname) {
            return e;
        }
        for (r = 0; s = n[r]; r++) {
            e.T8[s] = t.T8[s];
        }
        if (!e.T8.path) {
            e.T8.path = t.T8.path;
            if (!e.T8.U8) {
                e.T8.U8 = t.T8.U8;
            }
        } else if (e.T8.path.substring(-2) === "..") {
            e.T8.path += "/";
        }
        if (e.path().charAt(0) !== "/") {
            i = t.Caa();
            i = i ? i : t.path().indexOf("/") === 0 ? "/" : "";
            e.T8.path = (i ? i + "/" : "") + e.T8.path;
            e.Eaa();
        }
        e.XS();
        return e;
    };
    s.Waa = function(t) {
        var e = this.clone().normalize();
        var n, i, r, s, o;
        if (e.T8.urn) {
            throw new Error("URNs do not have any generally defined hierarchical components");
        }
        t = new a(t).normalize();
        n = e.T8;
        i = t.T8;
        s = e.path();
        o = t.path();
        if (s.charAt(0) !== "/") {
            throw new Error("URI is already relative");
        }
        if (o.charAt(0) !== "/") {
            throw new Error("Cannot calculate a URI relative to another relative URI");
        }
        if (n.protocol === i.protocol) {
            n.protocol = null;
        }
        if (n.username !== i.username || n.password !== i.password) {
            return e.XS();
        }
        if (n.protocol !== null || n.username !== null || n.password !== null) {
            return e.XS();
        }
        if (n.hostname === i.hostname && n.port === i.port) {
            n.hostname = null;
            n.port = null;
        } else {
            return e.XS();
        }
        if (s === o) {
            n.path = "";
            return e.XS();
        }
        r = a.oaa(s, o);
        if (!r) {
            return e.XS();
        }
        var f = i.path.substring(r.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
        n.path = f + n.path.substring(r.length) || "./";
        return e.XS();
    };
    s.Ti = function(t) {
        var e = this.clone();
        var n = new a(t);
        var i = {};
        var r = {};
        var s = {};
        var f, u, c;
        e.normalize();
        n.normalize();
        if (e.toString() === n.toString()) {
            return true;
        }
        f = e.U8();
        u = n.U8();
        e.U8("");
        n.U8("");
        if (e.toString() !== n.toString()) {
            return false;
        }
        if (f.length !== u.length) {
            return false;
        }
        i = a.daa(f, this.T8.W8);
        r = a.daa(u, this.T8.W8);
        for (c in i) {
            if (o.call(i, c)) {
                if (!h(i[c])) {
                    if (i[c] !== r[c]) {
                        return false;
                    }
                } else if (!d(i[c], r[c])) {
                    return false;
                }
                s[c] = true;
            }
        }
        for (c in r) {
            if (o.call(r, c)) {
                if (!s[c]) {
                    return false;
                }
            }
        }
        return true;
    };
    s.V8 = function(t) {
        this.T8.V8 = !!t;
        return this;
    };
    s.W8 = function(t) {
        this.T8.W8 = !!t;
        return this;
    };
    return a;
});

(function() {
    var t = {};
    var e = null, n = true, i = false;
    try {
        if (typeof AudioContext !== "undefined") {
            e = new AudioContext();
        } else if (typeof webkitAudioContext !== "undefined") {
            e = new webkitAudioContext();
        } else {
            n = false;
        }
    } catch (t) {
        n = false;
    }
    if (!n) {
        if (typeof Audio !== "undefined") {
            try {
                new Audio();
            } catch (t) {
                i = true;
            }
        } else {
            i = true;
        }
    }
    if (n) {
        var r = typeof e.createGain === "undefined" ? e.createGainNode() : e.createGain();
        r.gain.value = 1;
        r.connect(e.destination);
    }
    var a = function(t) {
        this.Xaa = 1;
        this.Yaa = false;
        this.Zaa = n;
        this.$aa = e;
        this._aa = i;
        this.aba = [];
        this.bba = t;
        this.cba = true;
    };
    a.prototype = {
        volume: function(t) {
            var e = this;
            t = parseFloat(t);
            if (t >= 0 && t <= 1) {
                e.Xaa = t;
                if (n) {
                    r.gain.value = t;
                }
                for (var i in e.aba) {
                    if (e.aba.hasOwnProperty(i) && e.aba[i].dba === false) {
                        for (var a = 0; a < e.aba[i].eba.length; a++) {
                            e.aba[i].eba[a].volume = e.aba[i].Xaa * e.Xaa;
                        }
                    }
                }
                return e;
            }
            return n ? r.gain.value : e.Xaa;
        },
        fba: function() {
            this.gba(true);
            return this;
        },
        hba: function() {
            this.gba(false);
            return this;
        },
        gba: function(t) {
            var e = this;
            e.Yaa = t;
            if (n) {
                r.gain.value = t ? 0 : e.Xaa;
            }
            for (var i in e.aba) {
                if (e.aba.hasOwnProperty(i) && e.aba[i].dba === false) {
                    for (var a = 0; a < e.aba[i].eba.length; a++) {
                        e.aba[i].eba[a].muted = t;
                    }
                }
            }
        },
        iba: function(t) {
            return this.bba[t];
        },
        jba: function() {
            var t = this;
            if (e && (t.kba || !/iPhone|iPad|iPod/i.test(navigator.userAgent))) {
                return;
            }
            t.kba = false;
            var n = function() {
                var i = e.createBuffer(1, 1, 22050);
                var r = e.createBufferSource();
                r.buffer = i;
                r.connect(e.destination);
                if (typeof r.start === "undefined") {
                    r.noteOn(0);
                } else {
                    r.start(0);
                }
                setTimeout(function() {
                    if (r.playbackState === r.PLAYING_STATE || r.playbackState === r.FINISHED_STATE) {
                        t.kba = true;
                        t.cba = false;
                        window.removeEventListener("touchend", n, false);
                    }
                }, 0);
            };
            window.addEventListener("touchend", n, false);
            return t;
        }
    };
    var s = null;
    var o = {};
    if (!i) {
        s = new Audio();
        o = {
            lba: !!s.canPlayType("audio/mpeg;").replace(/^no$/, ""),
            mba: !!s.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
            nba: !!s.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
            oba: !!s.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
            pba: !!s.canPlayType("audio/aac;").replace(/^no$/, ""),
            qba: !!(s.canPlayType("audio/x-m4a;") || s.canPlayType("audio/m4a;") || s.canPlayType("audio/aac;")).replace(/^no$/, ""),
            rba: !!(s.canPlayType("audio/x-mp4;") || s.canPlayType("audio/mp4;") || s.canPlayType("audio/aac;")).replace(/^no$/, ""),
            sba: !!s.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")
        };
    }
    var f = new a(o);
    var u = function(t) {
        var i = this;
        i.tba = t.autoplay || false;
        i.uba = t.buffer || false;
        i.vba = t.duration || 0;
        i.wba = t.format || null;
        i.xba = t.loop || false;
        i.yba = false;
        i.zba = t.Aba || {};
        i.Bba = t.src || "";
        i.Cba = t.Dba || [ 0, 0, -.5 ];
        i.Xaa = t.volume !== undefined ? t.volume : 1;
        i.Eba = t.Fba || [];
        i.Gba = t.rate || 1;
        i.Hba = t.q || null;
        i.Iba = [ t.onload || function() {} ];
        i.Jba = [ t.Kba || function() {} ];
        i.Lba = [ t.onend || function() {} ];
        i.Mba = [ t.onpause || function() {} ];
        i.Nba = [ t.onplay || function() {} ];
        i.Oba = [];
        i.dba = n && !i.uba;
        i.eba = [];
        if (i.dba) {
            i.Pba();
        }
        if (typeof e !== "undefined" && e && f.cba) {
            f.jba();
        }
        f.aba.push(i);
        i.load();
    };
    u.prototype = {
        load: function() {
            var t = this, e = null;
            if (i) {
                t.jT("loaderror", new Error("No audio support."));
                return;
            }
            for (var n = 0; n < t.Eba.length; n++) {
                var r, s;
                if (t.wba) {
                    r = t.wba;
                } else {
                    s = t.Eba[n];
                    r = /^data:audio\/([^;,]+);/i.exec(s);
                    if (!r) {
                        r = /\.([^.]+)$/.exec(s.split("?", 1)[0]);
                    }
                    if (r) {
                        r = r[1].toLowerCase();
                    } else {
                        t.jT("loaderror", new Error("Could not extract format from passed URLs, please add format parameter."));
                        return;
                    }
                }
                if (o[r]) {
                    e = t.Eba[n];
                    break;
                }
            }
            if (!e) {
                t.jT("loaderror", new Error("No codec support for selected audio sources."));
                return;
            }
            t.Bba = e;
            if (t.dba) {
                h(t, e);
            } else {
                var u = new Audio();
                u.addEventListener("error", function() {
                    if (u.error && u.error.code === 4) {
                        a._aa = true;
                    }
                    t.jT("loaderror", {
                        type: u.error ? u.error.code : 0
                    });
                }, false);
                t.eba.push(u);
                u.src = e;
                u.Qba = 0;
                u.preload = "auto";
                u.volume = f.Yaa ? 0 : t.Xaa * f.volume();
                var c = function() {
                    t.vba = Math.ceil(u.duration * 10) / 10;
                    if (Object.getOwnPropertyNames(t.zba).length === 0) {
                        t.zba = {
                            Rba: [ 0, t.vba * 1e3 ]
                        };
                    }
                    if (!t.yba) {
                        t.yba = true;
                        t.jT("load");
                    }
                    if (t.tba) {
                        t.play();
                    }
                    u.removeEventListener("canplaythrough", c, false);
                };
                u.addEventListener("canplaythrough", c, false);
                u.load();
            }
            return t;
        },
        Fba: function(t) {
            var e = this;
            if (t) {
                e.stop();
                e.Eba = typeof t === "string" ? [ t ] : t;
                e.yba = false;
                e.load();
                return e;
            } else {
                return e.Eba;
            }
        },
        play: function(t, n) {
            var i = this;
            if (typeof t === "function") {
                n = t;
            }
            if (!t || typeof t === "function") {
                t = "_default";
            }
            if (!i.yba) {
                i.jT("load", function() {
                    i.play(t, n);
                });
                return i;
            }
            if (!i.zba[t]) {
                if (typeof n === "function") n();
                return i;
            }
            i.Sba(function(r) {
                r.zba = t;
                var a = r.Qba > 0 ? r.Qba : i.zba[t][0] / 1e3;
                var s = 0;
                if (i.dba) {
                    s = i.zba[t][1] / 1e3 - r.Qba;
                    if (r.Qba > 0) {
                        a = i.zba[t][0] / 1e3 + a;
                    }
                } else {
                    s = i.zba[t][1] / 1e3 - (a - i.zba[t][0] / 1e3);
                }
                var o = !!(i.xba || i.zba[t][2]);
                var u = typeof n === "string" ? n : Math.round(Date.now() * Math.random()) + "", h;
                (function() {
                    var e = {
                        id: u,
                        Aba: t,
                        loop: o
                    };
                    h = setTimeout(function() {
                        if (!i.dba && o) {
                            i.stop(e.id).play(t, e.id);
                        }
                        if (i.dba && !o) {
                            i.Tba(e.id).paused = true;
                            i.Tba(e.id).Qba = 0;
                            i.Uba(e.id);
                        }
                        if (!i.dba && !o) {
                            i.stop(e.id);
                        }
                        i.jT("end", u);
                    }, s / i.Gba * 1e3);
                    i.Oba.push({
                        Vba: h,
                        id: e.id
                    });
                })();
                if (i.dba) {
                    var c = i.zba[t][0] / 1e3, l = i.zba[t][1] / 1e3;
                    r.id = u;
                    r.paused = false;
                    d(i, [ o, c, l ], u);
                    i.Wba = e.currentTime;
                    r.gain.value = i.Xaa;
                    if (typeof r.Xba.start === "undefined") {
                        o ? r.Xba.noteGrainOn(0, a, 86400) : r.Xba.noteGrainOn(0, a, s);
                    } else {
                        o ? r.Xba.start(0, a, 86400) : r.Xba.start(0, a, s);
                    }
                } else {
                    if (r.readyState === 4 || !r.readyState && navigator.Yba) {
                        r.readyState = 4;
                        r.id = u;
                        r.currentTime = a;
                        r.muted = f.Yaa || r.muted;
                        r.volume = i.Xaa * f.volume();
                        setTimeout(function() {
                            r.play();
                        }, 0);
                    } else {
                        i.Uba(u);
                        (function() {
                            var e = i, a = t, s = n, o = r;
                            var f = function() {
                                e.play(a, s);
                                o.removeEventListener("canplaythrough", f, false);
                            };
                            o.addEventListener("canplaythrough", f, false);
                        })();
                        return i;
                    }
                }
                i.jT("play");
                if (typeof n === "function") n(u);
                return i;
            });
            return i;
        },
        pause: function(t) {
            var e = this;
            if (!e.yba) {
                e.jT("play", function() {
                    e.pause(t);
                });
                return e;
            }
            e.Uba(t);
            var n = t ? e.Tba(t) : e.Zba();
            if (n) {
                n.Qba = e.YC(null, t);
                if (e.dba) {
                    if (!n.Xba || n.paused) {
                        return e;
                    }
                    n.paused = true;
                    if (typeof n.Xba.stop === "undefined") {
                        n.Xba.noteOff(0);
                    } else {
                        n.Xba.stop(0);
                    }
                } else {
                    n.pause();
                }
            }
            e.jT("pause");
            return e;
        },
        stop: function(t) {
            var e = this;
            if (!e.yba) {
                e.jT("play", function() {
                    e.stop(t);
                });
                return e;
            }
            e.Uba(t);
            var n = t ? e.Tba(t) : e.Zba();
            if (n) {
                n.Qba = 0;
                if (e.dba) {
                    if (!n.Xba || n.paused) {
                        return e;
                    }
                    n.paused = true;
                    if (typeof n.Xba.stop === "undefined") {
                        n.Xba.noteOff(0);
                    } else {
                        n.Xba.stop(0);
                    }
                } else if (!isNaN(n.duration)) {
                    n.pause();
                    n.currentTime = 0;
                }
            }
            return e;
        },
        fba: function(t) {
            var e = this;
            if (!e.yba) {
                e.jT("play", function() {
                    e.fba(t);
                });
                return e;
            }
            var n = t ? e.Tba(t) : e.Zba();
            if (n) {
                if (e.dba) {
                    n.gain.value = 0;
                } else {
                    n.muted = true;
                }
            }
            return e;
        },
        hba: function(t) {
            var e = this;
            if (!e.yba) {
                e.jT("play", function() {
                    e.hba(t);
                });
                return e;
            }
            var n = t ? e.Tba(t) : e.Zba();
            if (n) {
                if (e.dba) {
                    n.gain.value = e.Xaa;
                } else {
                    n.muted = false;
                }
            }
            return e;
        },
        volume: function(t, e) {
            var n = this;
            t = parseFloat(t);
            if (t >= 0 && t <= 1) {
                n.Xaa = t;
                if (!n.yba) {
                    n.jT("play", function() {
                        n.volume(t, e);
                    });
                    return n;
                }
                var i = e ? n.Tba(e) : n.Zba();
                if (i) {
                    if (n.dba) {
                        i.gain.value = t;
                    } else {
                        i.volume = t * f.volume();
                    }
                }
                return n;
            } else {
                return n.Xaa;
            }
        },
        loop: function(t) {
            var e = this;
            if (typeof t === "boolean") {
                e.xba = t;
                return e;
            } else {
                return e.xba;
            }
        },
        Aba: function(t) {
            var e = this;
            if (typeof t === "object") {
                e.zba = t;
                return e;
            } else {
                return e.zba;
            }
        },
        YC: function(t, n) {
            var i = this;
            if (!i.yba) {
                i.jT("load", function() {
                    i.YC(t);
                });
                return typeof t === "number" ? i : i.Qba || 0;
            }
            t = parseFloat(t);
            var r = n ? i.Tba(n) : i.Zba();
            if (r) {
                if (t >= 0) {
                    i.pause(n);
                    r.Qba = t;
                    i.play(r.zba, n);
                    return i;
                } else {
                    return i.dba ? r.Qba + (e.currentTime - i.Wba) : r.currentTime;
                }
            } else if (t >= 0) {
                return i;
            } else {
                for (var a = 0; a < i.eba.length; a++) {
                    if (i.eba[a].paused && i.eba[a].readyState === 4) {
                        return i.dba ? i.eba[a].Qba : i.eba[a].currentTime;
                    }
                }
            }
        },
        Dba: function(t, e, n, i) {
            var r = this;
            e = typeof e === "undefined" || !e ? 0 : e;
            n = typeof n === "undefined" || !n ? -.5 : n;
            if (!r.yba) {
                r.jT("play", function() {
                    r.Dba(t, e, n, i);
                });
                return r;
            }
            if (t >= 0 || t < 0) {
                if (r.dba) {
                    var a = i ? r.Tba(i) : r.Zba();
                    if (a) {
                        r.Cba = [ t, e, n ];
                        a.$w.setPosition(t, e, n);
                        a.$w.panningModel = r.Hba || "HRTF";
                    }
                }
            } else {
                return r.Cba;
            }
            return r;
        },
        $ba: function(t, e, n, i, r) {
            var a = this, s = Math.abs(t - e), o = t > e ? "down" : "up", f = s / .01, u = n / f;
            if (!a.yba) {
                a.jT("load", function() {
                    a.$ba(t, e, n, i, r);
                });
                return a;
            }
            a.volume(t, r);
            for (var h = 1; h <= f; h++) {
                (function() {
                    var t = a.Xaa + (o === "up" ? .01 : -.01) * h, n = Math.round(1e3 * t) / 1e3, s = e;
                    setTimeout(function() {
                        a.volume(n, r);
                        if (n === s) {
                            if (i) i();
                        }
                    }, u * h);
                })();
            }
        },
        Mt: function(t, e, n) {
            return this.volume(0).play().$ba(0, t, e, n);
        },
        Ot: function(t, e, n, i) {
            var r = this;
            return r.$ba(r.Xaa, t, e, function() {
                if (n) n();
                r.pause(i);
                r.jT("end");
            }, i);
        },
        Tba: function(t) {
            var e = this, n = e.eba[0];
            for (var i = 0; i < e.eba.length; i++) {
                if (e.eba[i].id === t) {
                    n = e.eba[i];
                    break;
                }
            }
            return n;
        },
        Zba: function() {
            var t = this, e = null;
            for (var n = 0; n < t.eba.length; n++) {
                if (!t.eba[n].paused) {
                    e = t.eba[n];
                    break;
                }
            }
            t._ba();
            return e;
        },
        Sba: function(t) {
            var e = this, n = null;
            for (var i = 0; i < e.eba.length; i++) {
                if (e.eba[i].paused && e.eba[i].readyState === 4) {
                    t(e.eba[i]);
                    n = true;
                    break;
                }
            }
            e._ba();
            if (n) {
                return;
            }
            var r;
            if (e.dba) {
                r = e.Pba();
                t(r);
            } else {
                e.load();
                r = e.eba[e.eba.length - 1];
                var a = navigator.Yba ? "canplaythrough" : "loadedmetadata";
                var s = function() {
                    r.removeEventListener(a, s, false);
                    t(r);
                };
                r.addEventListener(a, s, false);
            }
        },
        _ba: function() {
            var t = this, e = 0, n;
            for (n = 0; n < t.eba.length; n++) {
                if (t.eba[n].paused) {
                    e++;
                }
            }
            for (n = t.eba.length - 1; n >= 0; n--) {
                if (e <= 5) {
                    break;
                }
                if (t.eba[n].paused) {
                    if (t.dba) {
                        t.eba[n].disconnect(0);
                    }
                    e--;
                    t.eba.splice(n, 1);
                }
            }
        },
        Uba: function(t) {
            var e = this, n = -1;
            for (var i = 0; i < e.Oba.length; i++) {
                if (e.Oba[i].id === t) {
                    n = i;
                    break;
                }
            }
            var r = e.Oba[n];
            if (r) {
                clearTimeout(r.Vba);
                e.Oba.splice(n, 1);
            }
        },
        Pba: function() {
            var t = this, n = t.eba, i = t.eba.length;
            n[i] = typeof e.createGain === "undefined" ? e.createGainNode() : e.createGain();
            n[i].gain.value = t.Xaa;
            n[i].paused = true;
            n[i].Qba = 0;
            n[i].readyState = 4;
            n[i].connect(r);
            n[i].$w = e.createPanner();
            n[i].$w.panningModel = t.Hba || "equalpower";
            n[i].$w.setPosition(t.Cba[0], t.Cba[1], t.Cba[2]);
            n[i].$w.connect(n[i]);
            return n[i];
        },
        jT: function(t, e) {
            var n = this, i = n["_on" + t];
            if (typeof e === "function") {
                i.push(e);
            } else {
                for (var r = 0; r < i.length; r++) {
                    if (e) {
                        i[r].call(n, e);
                    } else {
                        i[r].call(n);
                    }
                }
            }
            return n;
        },
        RV: function(t, e) {
            var n = this, i = n["_on" + t];
            if (e) {
                for (var r = 0; r < i.length; r++) {
                    if (e === i[r]) {
                        i.splice(r, 1);
                        break;
                    }
                }
            } else {
                n["_on" + t] = [];
            }
            return n;
        },
        aca: function() {
            var e = this;
            var n = e.eba;
            for (var i = 0; i < e.eba.length; i++) {
                if (!n[i].paused) {
                    e.stop(n[i].id);
                    e.jT("end", n[i].id);
                }
                if (!e.dba) {
                    n[i].src = "";
                } else {
                    n[i].disconnect(0);
                }
            }
            for (i = 0; i < e.Oba.length; i++) {
                clearTimeout(e.Oba[i].Vba);
            }
            var r = f.aba.indexOf(e);
            if (r !== null && r >= 0) {
                f.aba.splice(r, 1);
            }
            delete t[e.Bba];
            e = null;
        }
    };
    if (n) {
        var h = function(e, n) {
            if (n in t) {
                e.vba = t[n].duration;
                l(e);
                return;
            }
            if (/^data:[^;]+;base64,/.test(n)) {
                var i = atob(n.split(",")[1]);
                var r = new Uint8Array(i.length);
                for (var a = 0; a < i.length; ++a) {
                    r[a] = i.charCodeAt(a);
                }
                c(r.buffer, e, n);
            } else {
                var s = new XMLHttpRequest();
                s.open("GET", n, true);
                s.responseType = "arraybuffer";
                s.onload = function() {
                    c(s.response, e, n);
                };
                s.onerror = function() {
                    if (e.dba) {
                        e.uba = true;
                        e.dba = false;
                        e.eba = [];
                        delete e.bca;
                        delete t[n];
                        e.load();
                    }
                };
                try {
                    s.send();
                } catch (t) {
                    s.onerror();
                }
            }
        };
        var c = function(n, i, r) {
            e.decodeAudioData(n, function(e) {
                if (e) {
                    t[r] = e;
                    l(i, e);
                }
            }, function(t) {
                i.jT("loaderror", t);
            });
        };
        var l = function(t, e) {
            t.vba = e ? e.duration : t.vba;
            if (Object.getOwnPropertyNames(t.zba).length === 0) {
                t.zba = {
                    Rba: [ 0, t.vba * 1e3 ]
                };
            }
            if (!t.yba) {
                t.yba = true;
                t.jT("load");
            }
            if (t.tba) {
                t.play();
            }
        };
        var d = function(n, i, r) {
            var a = n.Tba(r);
            a.Xba = e.createBufferSource();
            a.Xba.buffer = t[n.Bba];
            a.Xba.connect(a.$w);
            a.Xba.loop = i[0];
            if (i[0]) {
                a.Xba.loopStart = i[1];
                a.Xba.loopEnd = i[1] + i[2];
            }
            a.Xba.playbackRate.value = n.Gba;
        };
    }
    if (typeof define === "function" && define.bg) {
        define(function() {
            return {
                cca: f,
                dca: u
            };
        });
    }
    if (typeof exports !== "undefined") {
        exports.cca = f;
        exports.dca = u;
    }
    if (typeof window !== "undefined") {
        window.cca = f;
        window.dca = u;
    }
})();

(function(t) {
    "use strict";
    if (t.fetch) {
        return;
    }
    function e(t) {
        if (typeof t !== "string") {
            t = String(t);
        }
        if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t)) {
            throw new TypeError("Invalid character in header field name");
        }
        return t.toLowerCase();
    }
    function n(t) {
        if (typeof t !== "string") {
            t = String(t);
        }
        return t;
    }
    function i(t) {
        this.map = {};
        if (t instanceof i) {
            t.forEach(function(t, e) {
                this.append(e, t);
            }, this);
        } else if (t) {
            Object.getOwnPropertyNames(t).forEach(function(e) {
                this.append(e, t[e]);
            }, this);
        }
    }
    i.prototype.append = function(t, i) {
        t = e(t);
        i = n(i);
        var r = this.map[t];
        if (!r) {
            r = [];
            this.map[t] = r;
        }
        r.push(i);
    };
    i.prototype["delete"] = function(t) {
        delete this.map[e(t)];
    };
    i.prototype.get = function(t) {
        var n = this.map[e(t)];
        return n ? n[0] : null;
    };
    i.prototype.getAll = function(t) {
        return this.map[e(t)] || [];
    };
    i.prototype.has = function(t) {
        return this.map.hasOwnProperty(e(t));
    };
    i.prototype.set = function(t, i) {
        this.map[e(t)] = [ n(i) ];
    };
    i.prototype.forEach = function(t, e) {
        Object.getOwnPropertyNames(this.map).forEach(function(n) {
            this.map[n].forEach(function(i) {
                t.call(e, i, n, this);
            }, this);
        }, this);
    };
    function r(t) {
        if (t.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
        }
        t.bodyUsed = true;
    }
    function a(t) {
        return new Promise(function(e, n) {
            t.onload = function() {
                e(t.result);
            };
            t.onerror = function() {
                n(t.error);
            };
        });
    }
    function s(t) {
        var e = new FileReader();
        e.readAsArrayBuffer(t);
        return a(e);
    }
    function o(t) {
        var e = new FileReader();
        e.readAsText(t);
        return a(e);
    }
    var f = {
        blob: "FileReader" in t && "Blob" in t && function() {
            try {
                new Blob();
                return true;
            } catch (t) {
                return false;
            }
        }(),
        eca: "FormData" in t,
        arrayBuffer: "ArrayBuffer" in t
    };
    function u() {
        this.bodyUsed = false;
        this.fca = function(t) {
            this.gca = t;
            if (typeof t === "string") {
                this.hca = t;
            } else if (f.blob && Blob.prototype.isPrototypeOf(t)) {
                this.ica = t;
            } else if (f.eca && FormData.prototype.isPrototypeOf(t)) {
                this.jca = t;
            } else if (!t) {
                this.hca = "";
            } else if (f.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(t)) {} else {
                throw new Error("unsupported BodyInit type");
            }
            if (!this.headers.get("content-type")) {
                if (typeof t === "string") {
                    this.headers.set("content-type", "text/plain;charset=UTF-8");
                } else if (this.ica && this.ica.type) {
                    this.headers.set("content-type", this.ica.type);
                }
            }
        };
        if (f.blob) {
            this.blob = function() {
                var t = r(this);
                if (t) {
                    return t;
                }
                if (this.ica) {
                    return Promise.resolve(this.ica);
                } else if (this.jca) {
                    throw new Error("could not read FormData body as blob");
                } else {
                    return Promise.resolve(new Blob([ this.hca ]));
                }
            };
            this.arrayBuffer = function() {
                return this.blob().then(s);
            };
            this.text = function() {
                var t = r(this);
                if (t) {
                    return t;
                }
                if (this.ica) {
                    return o(this.ica);
                } else if (this.jca) {
                    throw new Error("could not read FormData body as text");
                } else {
                    return Promise.resolve(this.hca);
                }
            };
        } else {
            this.text = function() {
                var t = r(this);
                return t ? t : Promise.resolve(this.hca);
            };
        }
        if (f.eca) {
            this.eca = function() {
                return this.text().then(d);
            };
        }
        this.json = function() {
            return this.text().then(JSON.parse);
        };
        return this;
    }
    var h = [ "DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT" ];
    function c(t) {
        var e = t.toUpperCase();
        return h.indexOf(e) > -1 ? e : t;
    }
    function l(t, e) {
        e = e || {};
        var n = e.body;
        if (l.prototype.isPrototypeOf(t)) {
            if (t.bodyUsed) {
                throw new TypeError("Already read");
            }
            this.url = t.url;
            this.kca = t.kca;
            if (!e.headers) {
                this.headers = new i(t.headers);
            }
            this.method = t.method;
            this.mode = t.mode;
            if (!n) {
                n = t.gca;
                t.bodyUsed = true;
            }
        } else {
            this.url = t;
        }
        this.kca = e.kca || this.kca || "omit";
        if (e.headers || !this.headers) {
            this.headers = new i(e.headers);
        }
        this.method = c(e.method || this.method || "GET");
        this.mode = e.mode || this.mode || null;
        this.referrer = null;
        if ((this.method === "GET" || this.method === "HEAD") && n) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
        }
        this.fca(n);
    }
    l.prototype.clone = function() {
        return new l(this);
    };
    function d(t) {
        var e = new FormData();
        t.trim().split("&").forEach(function(t) {
            if (t) {
                var n = t.split("=");
                var i = n.shift().replace(/\+/g, " ");
                var r = n.join("=").replace(/\+/g, " ");
                e.append(decodeURIComponent(i), decodeURIComponent(r));
            }
        });
        return e;
    }
    function v(t) {
        var e = new i();
        var n = (t.getAllResponseHeaders() || "").trim().split("\n");
        n.forEach(function(t) {
            var n = t.trim().split(":");
            var i = n.shift().trim();
            var r = n.join(":").trim();
            e.append(i, r);
        });
        return e;
    }
    u.call(l.prototype);
    function p(t, e) {
        if (!e) {
            e = {};
        }
        this.type = "default";
        this.status = e.status;
        this.ok = this.status >= 200 && this.status < 300;
        this.statusText = e.statusText;
        this.headers = e.headers instanceof i ? e.headers : new i(e.headers);
        this.url = e.url || "";
        this.fca(t);
    }
    u.call(p.prototype);
    p.prototype.clone = function() {
        return new p(this.gca, {
            status: this.status,
            statusText: this.statusText,
            headers: new i(this.headers),
            url: this.url
        });
    };
    p.error = function() {
        var t = new p(null, {
            status: 0,
            statusText: ""
        });
        t.type = "error";
        return t;
    };
    var E = [ 301, 302, 303, 307, 308 ];
    p.lca = function(t, e) {
        if (E.indexOf(e) === -1) {
            throw new RangeError("Invalid status code");
        }
        return new p(null, {
            status: e,
            headers: {
                location: t
            }
        });
    };
    t.Headers = i;
    t.Request = l;
    t.Response = p;
    t.fetch = function(t, e) {
        return new Promise(function(n, i) {
            var r;
            if (l.prototype.isPrototypeOf(t) && !e) {
                r = t;
            } else {
                r = new l(t, e);
            }
            var a = new XMLHttpRequest();
            function s() {
                if ("responseURL" in a) {
                    return a.responseURL;
                }
                if (/^X-Request-URL:/m.test(a.getAllResponseHeaders())) {
                    return a.getResponseHeader("X-Request-URL");
                }
                return;
            }
            a.onload = function() {
                var t = a.status === 1223 ? 204 : a.status;
                if (t < 100 || t > 599) {
                    i(new TypeError("Network request failed"));
                    return;
                }
                var e = {
                    status: t,
                    statusText: a.statusText,
                    headers: v(a),
                    url: s()
                };
                var r = "response" in a ? a.response : a.responseText;
                n(new p(r, e));
            };
            a.onerror = function() {
                i(new TypeError("Network request failed"));
            };
            a.ontimeout = function() {
                i(new TypeError("Network request failed"));
            };
            a.open(r.method, r.url, true);
            if (r.kca === "include") {
                a.withCredentials = true;
            }
            if ("responseType" in a && f.blob) {
                a.responseType = "blob";
            }
            r.headers.forEach(function(t, e) {
                a.setRequestHeader(e, t);
            });
            a.send(typeof r.gca === "undefined" ? null : r.gca);
        });
    };
    t.fetch.mca = true;
})(typeof self !== "undefined" ? self : this);

(function() {
    "use strict";
    function t(t) {
        return typeof t === "function" || typeof t === "object" && t !== null;
    }
    function e(t) {
        return typeof t === "function";
    }
    function n(t) {
        return typeof t === "object" && t !== null;
    }
    var i;
    if (!Array.isArray) {
        i = function(t) {
            return Object.prototype.toString.call(t) === "[object Array]";
        };
    } else {
        i = Array.isArray;
    }
    var r = i;
    var a = 0;
    var s = {}.toString;
    var o;
    var f;
    var u = function t(e, n) {
        w[a] = e;
        w[a + 1] = n;
        a += 2;
        if (a === 2) {
            if (f) {
                f(x);
            } else {
                H();
            }
        }
    };
    function h(t) {
        f = t;
    }
    function c(t) {
        u = t;
    }
    var l = typeof window !== "undefined" ? window : undefined;
    var d = l || {};
    var v = d.MutationObserver || d.WebKitMutationObserver;
    var p = typeof process !== "undefined" && {}.toString.call(process) === "[object process]";
    var E = typeof Uint8ClampedArray !== "undefined" && typeof importScripts !== "undefined" && typeof MessageChannel !== "undefined";
    function g() {
        return function() {
            process.nca(x);
        };
    }
    function m() {
        return function() {
            o(x);
        };
    }
    function T() {
        var t = 0;
        var e = new v(x);
        var n = document.createTextNode("");
        e.observe(n, {
            characterData: true
        });
        return function() {
            n.data = t = ++t % 2;
        };
    }
    function y() {
        var t = new MessageChannel();
        t.port1.onmessage = x;
        return function() {
            t.port2.postMessage(0);
        };
    }
    function R() {
        return function() {
            setTimeout(x, 1);
        };
    }
    var w = new Array(1e3);
    function x() {
        for (var t = 0; t < a; t += 2) {
            var e = w[t];
            var n = w[t + 1];
            e(n);
            w[t] = undefined;
            w[t + 1] = undefined;
        }
        a = 0;
    }
    function b() {
        try {
            var t = require;
            var e = t("vertx");
            o = e.oca || e.pca;
            return m();
        } catch (t) {
            return R();
        }
    }
    var H;
    if (p) {
        H = g();
    } else if (v) {
        H = T();
    } else if (E) {
        H = y();
    } else if (l === undefined && typeof require === "function") {
        H = b();
    } else {
        H = R();
    }
    function A() {}
    var M = void 0;
    var O = 1;
    var S = 2;
    var U = new V();
    function C() {
        return new TypeError("You cannot resolve a promise with itself");
    }
    function L() {
        return new TypeError("A promises callback cannot return that same promise.");
    }
    function P(t) {
        try {
            return t.then;
        } catch (t) {
            U.error = t;
            return U;
        }
    }
    function N(t, e, n, i) {
        try {
            t.call(e, n, i);
        } catch (t) {
            return t;
        }
    }
    function I(t, e, n) {
        u(function(t) {
            var i = false;
            var r = N(n, e, function(n) {
                if (i) {
                    return;
                }
                i = true;
                if (e !== n) {
                    B(t, n);
                } else {
                    j(t, n);
                }
            }, function(e) {
                if (i) {
                    return;
                }
                i = true;
                D(t, e);
            }, "Settle: " + (t.qca || " unknown promise"));
            if (!i && r) {
                i = true;
                D(t, r);
            }
        }, t);
    }
    function q(t, e) {
        if (e.rca === O) {
            j(t, e.sca);
        } else if (e.rca === S) {
            D(t, e.sca);
        } else {
            G(e, undefined, function(e) {
                B(t, e);
            }, function(e) {
                D(t, e);
            });
        }
    }
    function z(t, n) {
        if (n.constructor === t.constructor) {
            q(t, n);
        } else {
            var i = P(n);
            if (i === U) {
                D(t, U.error);
            } else if (i === undefined) {
                j(t, n);
            } else if (e(i)) {
                I(t, n, i);
            } else {
                j(t, n);
            }
        }
    }
    function B(e, n) {
        if (e === n) {
            D(e, C());
        } else if (t(n)) {
            z(e, n);
        } else {
            j(e, n);
        }
    }
    function k(t) {
        if (t.tca) {
            t.tca(t.sca);
        }
        F(t);
    }
    function j(t, e) {
        if (t.rca !== M) {
            return;
        }
        t.sca = e;
        t.rca = O;
        if (t.uca.length !== 0) {
            u(F, t);
        }
    }
    function D(t, e) {
        if (t.rca !== M) {
            return;
        }
        t.rca = S;
        t.sca = e;
        u(k, t);
    }
    function G(t, e, n, i) {
        var r = t.uca;
        var a = r.length;
        t.tca = null;
        r[a] = e;
        r[a + O] = n;
        r[a + S] = i;
        if (a === 0 && t.rca) {
            u(F, t);
        }
    }
    function F(t) {
        var e = t.uca;
        var n = t.rca;
        if (e.length === 0) {
            return;
        }
        var i, r, a = t.sca;
        for (var s = 0; s < e.length; s += 3) {
            i = e[s];
            r = e[s + n];
            if (i) {
                X(n, i, r, a);
            } else {
                r(a);
            }
        }
        t.uca.length = 0;
    }
    function V() {
        this.error = null;
    }
    var W = new V();
    function Y(t, e) {
        try {
            return t(e);
        } catch (t) {
            W.error = t;
            return W;
        }
    }
    function X(t, n, i, r) {
        var a = e(i), s, o, f, u;
        if (a) {
            s = Y(i, r);
            if (s === W) {
                u = true;
                o = s.error;
                s = null;
            } else {
                f = true;
            }
            if (n === s) {
                D(n, L());
                return;
            }
        } else {
            s = r;
            f = true;
        }
        if (n.rca !== M) {} else if (a && f) {
            B(n, s);
        } else if (u) {
            D(n, o);
        } else if (t === O) {
            j(n, s);
        } else if (t === S) {
            D(n, s);
        }
    }
    function K(t, e) {
        try {
            e(function e(n) {
                B(t, n);
            }, function e(n) {
                D(t, n);
            });
        } catch (e) {
            D(t, e);
        }
    }
    function Z(t, e) {
        var n = this;
        n.vca = t;
        n.wca = new t(A);
        if (n.xca(e)) {
            n.yca = e;
            n.length = e.length;
            n.zca = e.length;
            n.Aca();
            if (n.length === 0) {
                j(n.wca, n.sca);
            } else {
                n.length = n.length || 0;
                n.Bca();
                if (n.zca === 0) {
                    j(n.wca, n.sca);
                }
            }
        } else {
            D(n.wca, n.Cca());
        }
    }
    Z.prototype.xca = function(t) {
        return r(t);
    };
    Z.prototype.Cca = function() {
        return new Error("Array Methods must be provided an Array");
    };
    Z.prototype.Aca = function() {
        this.sca = new Array(this.length);
    };
    var $ = Z;
    Z.prototype.Bca = function() {
        var t = this;
        var e = t.length;
        var n = t.wca;
        var i = t.yca;
        for (var r = 0; n.rca === M && r < e; r++) {
            t.Dca(i[r], r);
        }
    };
    Z.prototype.Dca = function(t, e) {
        var i = this;
        var r = i.vca;
        if (n(t)) {
            if (t.constructor === r && t.rca !== M) {
                t.tca = null;
                i.Eca(t.rca, e, t.sca);
            } else {
                i.Fca(r.resolve(t), e);
            }
        } else {
            i.zca--;
            i.sca[e] = t;
        }
    };
    Z.prototype.Eca = function(t, e, n) {
        var i = this;
        var r = i.wca;
        if (r.rca === M) {
            i.zca--;
            if (t === S) {
                D(r, n);
            } else {
                i.sca[e] = n;
            }
        }
        if (i.zca === 0) {
            j(r, i.sca);
        }
    };
    Z.prototype.Fca = function(t, e) {
        var n = this;
        G(t, undefined, function(t) {
            n.Eca(O, e, t);
        }, function(t) {
            n.Eca(S, e, t);
        });
    };
    function J(t) {
        return new $(this, t).wca;
    }
    var Q = J;
    function tt(t) {
        var e = this;
        var n = new e(A);
        if (!r(t)) {
            D(n, new TypeError("You must pass an array to race."));
            return n;
        }
        var i = t.length;
        function a(t) {
            B(n, t);
        }
        function s(t) {
            D(n, t);
        }
        for (var o = 0; n.rca === M && o < i; o++) {
            G(e.resolve(t[o]), undefined, a, s);
        }
        return n;
    }
    var et = tt;
    function nt(t) {
        var e = this;
        if (t && typeof t === "object" && t.constructor === e) {
            return t;
        }
        var n = new e(A);
        B(n, t);
        return n;
    }
    var it = nt;
    function rt(t) {
        var e = this;
        var n = new e(A);
        D(n, t);
        return n;
    }
    var at = rt;
    var st = 0;
    function ot() {
        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
    }
    function ft() {
        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
    }
    var ut = ht;
    function ht(t) {
        this.As = st++;
        this.rca = undefined;
        this.sca = undefined;
        this.uca = [];
        if (A !== t) {
            if (!e(t)) {
                ot();
            }
            if (!(this instanceof ht)) {
                ft();
            }
            K(this, t);
        }
    }
    ht.all = Q;
    ht.race = et;
    ht.resolve = it;
    ht.reject = at;
    ht.Gca = h;
    ht.Hca = c;
    ht.Ica = u;
    ht.prototype = {
        constructor: ht,
        then: function(t, e) {
            var n = this;
            var i = n.rca;
            if (i === O && !t || i === S && !e) {
                return this;
            }
            var r = new this.constructor(A);
            var a = n.sca;
            if (i) {
                var s = arguments[i - 1];
                u(function() {
                    X(i, r, s, a);
                });
            } else {
                G(n, r, t, e);
            }
            return r;
        },
        catch: function(t) {
            return this.then(null, t);
        }
    };
    function ct() {
        var t;
        if (typeof global !== "undefined") {
            t = global;
        } else if (typeof self !== "undefined") {
            t = self;
        } else {
            try {
                t = Function("return this")();
            } catch (t) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
            }
        }
        var e = t.Promise;
        if (e && Object.prototype.toString.call(e.resolve()) === "[object Promise]" && !e.cast) {
            return;
        }
        t.Promise = ut;
    }
    var lt = ct;
    var dt = {
        Promise: ut,
        mca: lt
    };
    if (typeof define === "function" && define["bg"]) {
        define(function() {
            return dt;
        });
    } else if (typeof module !== "undefined" && module["Lb"]) {
        module["Lb"] = dt;
    } else if (typeof this !== "undefined") {
        this["Jca"] = dt;
    }
    lt();
}).call(this);

(function(t, e) {
    if (typeof define === "function" && define.bg) {
        define([], function() {
            return t["Wad"] = e();
        });
    } else if (typeof exports === "object") {
        module.Lb = e();
    } else {
        t["Wad"] = e();
    }
})(this, function() {
    (function(t) {
        var e = "recorderWorker.js";
        var n = function(t, n) {
            var i = n || {};
            var r = i.Kca || 4096;
            var a = i.Lca || 2;
            this.context = t.context;
            this.Yv = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, r, a, a);
            var s = new Worker(i.Mca || e);
            s.postMessage({
                command: "init",
                RP: {
                    sampleRate: this.context.sampleRate,
                    Lca: a
                }
            });
            var o = false, f;
            this.Yv.onaudioprocess = function(t) {
                if (!o) return;
                var e = [];
                for (var n = 0; n < a; n++) {
                    e.push(t.inputBuffer.getChannelData(n));
                }
                s.postMessage({
                    command: "record",
                    buffer: e
                });
            };
            this.C_ = function(t) {
                for (var e in t) {
                    if (t.hasOwnProperty(e)) {
                        i[e] = t[e];
                    }
                }
            };
            this.Nca = function() {
                o = true;
            };
            this.stop = function() {
                o = false;
            };
            this.clear = function() {
                s.postMessage({
                    command: "clear"
                });
            };
            this.Oca = function(t) {
                f = t || i.uU;
                s.postMessage({
                    command: "getBuffer"
                });
            };
            this.Pca = function(t, e) {
                f = t || i.uU;
                e = e || i.type || "audio/wav";
                if (!f) throw new Error("Callback not set");
                s.postMessage({
                    command: "exportWAV",
                    type: e
                });
            };
            s.onmessage = function(t) {
                var e = t.data;
                f(e);
            };
            t.connect(this.Yv);
            this.Yv.connect(this.context.destination);
        };
        n.Qca = function(e, n) {
            var i = (t.URL || t.webkitURL).createObjectURL(e);
            var r = t.document.createElement("a");
            r.href = i;
            r.download = n || "output.wav";
            var a = document.createEvent("Event");
            a.initEvent("click", true, true);
            r.dispatchEvent(a);
        };
        t.Rca = n;
    })(window);
    (function(t) {
        var e, n, i = function(t, e) {
            t.value = e;
        }, r = Object.create(null, {
            Sca: {
                sV: true,
                value: function(t) {
                    if (t) {
                        this.input.disconnect();
                        this.input.connect(this.Tca);
                        if (this.Uca) {
                            this.Uca(t);
                        }
                    } else {
                        this.input.disconnect();
                        this.input.connect(this.Vca);
                    }
                }
            },
            S2: {
                get: function() {
                    return this.Wca;
                },
                set: function(t) {
                    if (this.Xca === t) {
                        return;
                    }
                    this.Wca = t;
                    this.Sca(!t);
                    this.Xca = t;
                }
            },
            connect: {
                value: function(t) {
                    this.Vca.connect(t);
                }
            },
            disconnect: {
                value: function(t) {
                    this.Vca.disconnect(t);
                }
            },
            Yca: {
                value: function(t) {
                    var e = t.length - 1;
                    while (e--) {
                        if (!t[e].connect) {
                            return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.", t[e]);
                        }
                        if (t[e + 1].input) {
                            t[e].connect(t[e + 1].input);
                        } else {
                            t[e].connect(t[e + 1]);
                        }
                    }
                }
            },
            Zca: {
                value: function() {
                    var t = {};
                    for (var e in this.Nb) {
                        t[e] = this.Nb[e].value;
                    }
                    return t;
                }
            },
            $ca: {
                value: function(t, n, i, r) {
                    var a = r ? ~~(r / 1e3) : e.currentTime, s = i ? ~~(i / 1e3) : 0, o = this.Nb[t], f = this[t], u;
                    if (f) {
                        if (o._ca) {
                            if (!i) {
                                u = "setValueAtTime";
                            } else {
                                u = "linearRampToValueAtTime";
                                f.cancelScheduledValues(a);
                                f.setValueAtTime(f.value, a);
                            }
                            f[u](n, s + a);
                        } else {
                            f = n;
                        }
                    } else {
                        console.error("Invalid Property for " + this.name);
                    }
                }
            }
        }), a = "float", s = "boolean", o = "string", f = "int";
        if (typeof module !== "undefined" && module.Lb) {
            module.Lb = Tuna;
        } else if (typeof define === "function") {
            t.ada("Tuna", u);
        } else {
            t.Tuna = Tuna;
        }
        function u() {
            return Tuna;
        }
        function Tuna(i) {
            if (!(this instanceof Tuna)) {
                return new Tuna(i);
            }
            if (!t.AudioContext) {
                t.AudioContext = t.webkitAudioContext;
            }
            if (!i) {
                console.log("tuna.js: Missing audio context! Creating a new context for you.");
                i = t.AudioContext && new t.AudioContext();
            }
            if (!i) {
                throw new Error("Tuna cannot initialize because this environment does not support web audio.");
            }
            h(i);
            e = i;
            n = this;
        }
        function h(t) {
            if (t.bda === true) return;
            var e = t.createGain(), n = Object.getPrototypeOf(Object.getPrototypeOf(e)), i = n.connect;
            n.connect = a;
            t.bda = true;
            function a() {
                var t = arguments[0];
                arguments[0] = r.isPrototypeOf ? r.isPrototypeOf(t) ? t.input : t : t.input || t;
                i.apply(this, arguments);
                return t;
            }
        }
        function c(t) {
            return Math.max(0, Math.round(100 * Math.pow(2, t / 6)) / 100);
        }
        function l(t, e) {
            var n, i, r = 0, a = 0, s = 0, o = 0;
            n = t.toExponential().match(/^.\.?(.*)e(.+)$/);
            r = parseInt(n[2], 10) - (n[1] + "").length;
            n = e.toExponential().match(/^.\.?(.*)e(.+)$/);
            a = parseInt(n[2], 10) - (n[1] + "").length;
            if (a > r) {
                r = a;
            }
            i = t % e;
            if (r < -100 || r > 20) {
                s = Math.round(Math.log(i) / Math.log(10));
                o = Math.pow(10, s);
                return (i / o).toFixed(s - r) * o;
            } else {
                return parseFloat(i.toFixed(-r));
            }
        }
        function d(t) {
            if (t === 0) {
                return 1;
            } else {
                return Math.abs(t) / t;
            }
        }
        function v(t) {
            return (Math.exp(t) - Math.exp(-t)) / (Math.exp(t) + Math.exp(-t));
        }
        function p(t, e) {
            return t === undefined ? e : t;
        }
        Tuna.prototype.cda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.bufferSize = t.bufferSize || this.Nb.bufferSize.value;
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.dda = e.createScriptProcessor(this.bufferSize, 1, 1);
            this.Vca = e.createGain();
            this.Tca.connect(this.dda);
            this.dda.connect(this.Vca);
            var n = 0, i = 0, r, a, s, o, f;
            this.dda.onaudioprocess = function(t) {
                r = t.inputBuffer.getChannelData(0), a = t.outputBuffer.getChannelData(0), s = Math.pow(1 / 2, this.eda);
                f = r.length;
                for (o = 0; o < f; o++) {
                    n += this.fda;
                    if (n >= 1) {
                        n -= 1;
                        i = s * Math.floor(r[o] / s + .5);
                    }
                    a[o] = i;
                }
            };
            this.eda = t.eda || this.Nb.eda.value;
            this.fda = p(t.fda, this.Nb.fda.value);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.cda.prototype = Object.create(r, {
            name: {
                value: "Bitcrusher"
            },
            Nb: {
                sV: true,
                value: {
                    eda: {
                        value: 4,
                        min: 1,
                        max: 16,
                        _ca: false,
                        type: f
                    },
                    bufferSize: {
                        value: 4096,
                        min: 256,
                        max: 16384,
                        _ca: false,
                        type: f
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    },
                    fda: {
                        value: .1,
                        min: 1e-4,
                        max: 1,
                        _ca: false,
                        type: a
                    }
                }
            },
            eda: {
                vq: true,
                get: function() {
                    return this.dda.eda;
                },
                set: function(t) {
                    this.dda.eda = t;
                }
            },
            fda: {
                vq: true,
                get: function() {
                    return this.dda.fda;
                },
                set: function(t) {
                    this.dda.fda = t;
                }
            }
        });
        Tuna.prototype.gda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.hda = this.ida(t.jda || "../impulses/impulse_guitar.wav");
            this.kda = e.createGain();
            this.Vca = e.createGain();
            this.Tca.connect(this.hda.input);
            this.hda.Vca.connect(this.kda);
            this.kda.connect(this.Vca);
            this.lda = p(t.lda, this.Nb.lda);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.gda.prototype = Object.create(r, {
            name: {
                value: "Cabinet"
            },
            Nb: {
                sV: true,
                value: {
                    lda: {
                        value: 1,
                        min: 0,
                        max: 20,
                        _ca: true,
                        type: a
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    }
                }
            },
            lda: {
                vq: true,
                get: function() {
                    return this.kda.gain;
                },
                set: function(t) {
                    this.kda.gain.value = t;
                }
            },
            ida: {
                value: function(t) {
                    return new n.mda({
                        nda: t,
                        oda: 0,
                        pda: 1
                    });
                }
            }
        });
        Tuna.prototype.qda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.rda = this.Tca = e.createGain();
            this.sda = e.createChannelSplitter(2);
            this.tda = e.createDelay();
            this.uda = e.createDelay();
            this.vda = e.createGain();
            this.wda = e.createGain();
            this.xda = e.createChannelMerger(2);
            this.Vca = e.createGain();
            this.yda = new n.zda({
                target: this.tda.delayTime,
                uU: i
            });
            this.Ada = new n.zda({
                target: this.uda.delayTime,
                uU: i
            });
            this.input.connect(this.rda);
            this.rda.connect(this.Vca);
            this.rda.connect(this.sda);
            this.sda.connect(this.tda, 0);
            this.sda.connect(this.uda, 1);
            this.tda.connect(this.vda);
            this.uda.connect(this.wda);
            this.vda.connect(this.uda);
            this.wda.connect(this.tda);
            this.tda.connect(this.xda, 0, 0);
            this.uda.connect(this.xda, 0, 1);
            this.xda.connect(this.Vca);
            this.Bda = p(t.Bda, this.Nb.Bda.value);
            this.rate = p(t.rate, this.Nb.rate.value);
            this.Gc = p(t.Gc, this.Nb.Gc.value);
            this.AA = p(t.AA, this.Nb.AA.value);
            this.Ada.Cda = Math.PI / 2;
            this.rda.gain.value = .6934;
            this.yda.Sca(true);
            this.Ada.Sca(true);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.qda.prototype = Object.create(r, {
            name: {
                value: "Chorus"
            },
            Nb: {
                sV: true,
                value: {
                    Bda: {
                        value: .4,
                        min: 0,
                        max: .95,
                        _ca: false,
                        type: a
                    },
                    Gc: {
                        value: .0045,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    AA: {
                        value: .7,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    rate: {
                        value: 1.5,
                        min: 0,
                        max: 8,
                        _ca: false,
                        type: a
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    }
                }
            },
            Gc: {
                vq: true,
                get: function() {
                    return this.Dda;
                },
                set: function(t) {
                    this.Dda = 2e-4 * (Math.pow(10, t) * 2);
                    this.yda.offset = this.Dda;
                    this.Ada.offset = this.Dda;
                    this.Eda = this.Eda;
                }
            },
            AA: {
                vq: true,
                get: function() {
                    return this.Eda;
                },
                set: function(t) {
                    this.Eda = t;
                    this.yda.Fda = this.Eda * this.Dda;
                    this.Ada.Fda = this.Eda * this.Dda;
                }
            },
            Bda: {
                vq: true,
                get: function() {
                    return this.Gda;
                },
                set: function(t) {
                    this.Gda = t;
                    this.vda.gain.value = this.Gda;
                    this.wda.gain.value = this.Gda;
                }
            },
            rate: {
                vq: true,
                get: function() {
                    return this.Gba;
                },
                set: function(t) {
                    this.Gba = t;
                    this.yda.frequency = this.Gba;
                    this.Ada.frequency = this.Gba;
                }
            }
        });
        Tuna.prototype.Hda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Ida = this.Tca = e.createDynamicsCompressor();
            this.kda = e.createGain();
            this.Vca = e.createGain();
            this.Ida.connect(this.kda);
            this.kda.connect(this.Vca);
            this.Jda = p(t.Jda, this.Nb.Jda.value);
            this.lda = t.lda || this.Nb.lda.value;
            this.threshold = p(t.threshold, this.Nb.threshold.value);
            this.release = t.release || this.Nb.release.value;
            this.attack = p(t.attack, this.Nb.attack.value);
            this.ratio = t.ratio || this.Nb.ratio.value;
            this.knee = p(t.knee, this.Nb.knee.value);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Hda.prototype = Object.create(r, {
            name: {
                value: "Compressor"
            },
            Nb: {
                sV: true,
                value: {
                    threshold: {
                        value: -20,
                        min: -60,
                        max: 0,
                        _ca: true,
                        type: a
                    },
                    release: {
                        value: 250,
                        min: 10,
                        max: 2e3,
                        _ca: true,
                        type: a
                    },
                    lda: {
                        value: 1,
                        min: 1,
                        max: 100,
                        _ca: true,
                        type: a
                    },
                    attack: {
                        value: 1,
                        min: 0,
                        max: 1e3,
                        _ca: true,
                        type: a
                    },
                    ratio: {
                        value: 4,
                        min: 1,
                        max: 50,
                        _ca: true,
                        type: a
                    },
                    knee: {
                        value: 5,
                        min: 0,
                        max: 40,
                        _ca: true,
                        type: a
                    },
                    Jda: {
                        value: false,
                        _ca: false,
                        type: s
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    }
                }
            },
            Kda: {
                value: function() {
                    var t = 4, e = this.Ida;
                    return -(e.threshold.value - e.threshold.value / e.ratio.value) / t;
                }
            },
            Jda: {
                vq: true,
                get: function() {
                    return this.Lda;
                },
                set: function(t) {
                    this.Lda = t;
                    if (this.Lda) this.lda = this.Kda();
                }
            },
            threshold: {
                vq: true,
                get: function() {
                    return this.Ida.threshold;
                },
                set: function(t) {
                    this.Ida.threshold.value = t;
                    if (this.Lda) this.lda = this.Kda();
                }
            },
            ratio: {
                vq: true,
                get: function() {
                    return this.Ida.ratio;
                },
                set: function(t) {
                    this.Ida.ratio.value = t;
                    if (this.Lda) this.lda = this.Kda();
                }
            },
            knee: {
                vq: true,
                get: function() {
                    return this.Ida.knee;
                },
                set: function(t) {
                    this.Ida.knee.value = t;
                    if (this.Lda) this.lda = this.Kda();
                }
            },
            attack: {
                vq: true,
                get: function() {
                    return this.Ida.attack;
                },
                set: function(t) {
                    this.Ida.attack.value = t / 1e3;
                }
            },
            release: {
                vq: true,
                get: function() {
                    return this.Ida.release;
                },
                set: function(t) {
                    this.Ida.release = t / 1e3;
                }
            },
            lda: {
                vq: true,
                get: function() {
                    return this.kda.gain;
                },
                set: function(t) {
                    this.kda.gain.value = c(t);
                }
            }
        });
        Tuna.prototype.mda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.hda = e.createConvolver();
            this.Mda = e.createGain();
            this.Nda = e.createBiquadFilter();
            this.Oda = e.createBiquadFilter();
            this.Pda = e.createGain();
            this.Vca = e.createGain();
            this.Tca.connect(this.Nda);
            this.Tca.connect(this.Mda);
            this.Nda.connect(this.Oda);
            this.Oda.connect(this.hda);
            this.hda.connect(this.Pda);
            this.Pda.connect(this.Vca);
            this.Mda.connect(this.Vca);
            this.oda = p(t.oda, this.Nb.oda.value);
            this.pda = p(t.pda, this.Nb.pda.value);
            this.Qda = t.Qda || this.Nb.Qda.value;
            this.buffer = t.nda || "../impulses/ir_rev_short.wav";
            this.Rda = t.Rda || this.Nb.Rda.value;
            this.level = p(t.level, this.Nb.level.value);
            this.Oda.type = "lowpass";
            this.Nda.type = "highpass";
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.mda.prototype = Object.create(r, {
            name: {
                value: "Convolver"
            },
            Nb: {
                sV: true,
                value: {
                    Qda: {
                        value: 22050,
                        min: 20,
                        max: 22050,
                        _ca: true,
                        type: a
                    },
                    Rda: {
                        value: 20,
                        min: 20,
                        max: 22050,
                        _ca: true,
                        type: a
                    },
                    oda: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a
                    },
                    pda: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a
                    },
                    level: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a
                    }
                }
            },
            Rda: {
                get: function() {
                    return this.Nda.frequency;
                },
                set: function(t) {
                    this.Nda.frequency.value = t;
                }
            },
            Qda: {
                get: function() {
                    return this.Oda.frequency;
                },
                set: function(t) {
                    this.Oda.frequency.value = t;
                }
            },
            level: {
                get: function() {
                    return this.Vca.gain;
                },
                set: function(t) {
                    this.Vca.gain.value = t;
                }
            },
            oda: {
                get: function() {
                    return this.Mda.gain;
                },
                set: function(t) {
                    this.Mda.gain.value = t;
                }
            },
            pda: {
                get: function() {
                    return this.Pda.gain;
                },
                set: function(t) {
                    this.Pda.gain.value = t;
                }
            },
            buffer: {
                vq: false,
                get: function() {
                    return this.hda.buffer;
                },
                set: function(t) {
                    var n = this.hda, i = new XMLHttpRequest();
                    if (!t) {
                        console.log("Tuna.Convolver.setBuffer: Missing impulse path!");
                        return;
                    }
                    i.open("GET", t, true);
                    i.responseType = "arraybuffer";
                    i.onreadystatechange = function() {
                        if (i.readyState === 4) {
                            if (i.status < 300 && i.status > 199 || i.status === 302) {
                                e.decodeAudioData(i.response, function(t) {
                                    n.buffer = t;
                                }, function(t) {
                                    if (t) console.log("Tuna.Convolver.setBuffer: Error decoding data" + t);
                                });
                            }
                        }
                    };
                    i.send(null);
                }
            }
        });
        Tuna.prototype.Sda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.Mda = e.createGain();
            this.Pda = e.createGain();
            this.filter = e.createBiquadFilter();
            this.Gc = e.createDelay();
            this.Tda = e.createGain();
            this.Vca = e.createGain();
            this.Tca.connect(this.Gc);
            this.Tca.connect(this.Mda);
            this.Gc.connect(this.filter);
            this.filter.connect(this.Tda);
            this.Tda.connect(this.Gc);
            this.Tda.connect(this.Pda);
            this.Pda.connect(this.Vca);
            this.Mda.connect(this.Vca);
            this.delayTime = t.delayTime || this.Nb.delayTime.value;
            this.Bda = p(t.Bda, this.Nb.Bda.value);
            this.pda = p(t.pda, this.Nb.pda.value);
            this.oda = p(t.oda, this.Nb.oda.value);
            this.Uda = t.Uda || this.Nb.Uda.value;
            this.filter.type = "lowpass";
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Sda.prototype = Object.create(r, {
            name: {
                value: "Delay"
            },
            Nb: {
                sV: true,
                value: {
                    delayTime: {
                        value: 100,
                        min: 20,
                        max: 1e3,
                        _ca: false,
                        type: a
                    },
                    Bda: {
                        value: .45,
                        min: 0,
                        max: .9,
                        _ca: true,
                        type: a
                    },
                    Uda: {
                        value: 2e4,
                        min: 20,
                        max: 2e4,
                        _ca: true,
                        type: a
                    },
                    pda: {
                        value: .5,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a
                    },
                    oda: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a
                    }
                }
            },
            delayTime: {
                vq: true,
                get: function() {
                    return this.Gc.delayTime;
                },
                set: function(t) {
                    this.Gc.delayTime.value = t / 1e3;
                }
            },
            pda: {
                vq: true,
                get: function() {
                    return this.Pda.gain;
                },
                set: function(t) {
                    this.Pda.gain.value = t;
                }
            },
            oda: {
                vq: true,
                get: function() {
                    return this.Mda.gain;
                },
                set: function(t) {
                    this.Mda.gain.value = t;
                }
            },
            Bda: {
                vq: true,
                get: function() {
                    return this.Tda.gain;
                },
                set: function(t) {
                    this.Tda.gain.value = t;
                }
            },
            Uda: {
                vq: true,
                get: function() {
                    return this.filter.frequency;
                },
                set: function(t) {
                    this.filter.frequency.value = t;
                }
            }
        });
        Tuna.prototype.Vda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.filter = e.createBiquadFilter();
            this.Vca = e.createGain();
            this.Tca.connect(this.filter);
            this.filter.connect(this.Vca);
            this.frequency = t.frequency || this.Nb.frequency.value;
            this.Q = t.Wda || this.Nb.Q.value;
            this.Xda = p(t.Xda, this.Nb.Xda.value);
            this.gain = p(t.gain, this.Nb.gain.value);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Vda.prototype = Object.create(r, {
            name: {
                value: "Filter"
            },
            Nb: {
                sV: true,
                value: {
                    frequency: {
                        value: 800,
                        min: 20,
                        max: 22050,
                        _ca: true,
                        type: a
                    },
                    Q: {
                        value: 1,
                        min: .001,
                        max: 100,
                        _ca: true,
                        type: a
                    },
                    gain: {
                        value: 0,
                        min: -40,
                        max: 40,
                        _ca: true,
                        type: a
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    },
                    Xda: {
                        value: "lowpass",
                        _ca: false,
                        type: o
                    }
                }
            },
            Xda: {
                vq: true,
                get: function() {
                    return this.filter.type;
                },
                set: function(t) {
                    this.filter.type = t;
                }
            },
            Q: {
                vq: true,
                get: function() {
                    return this.filter.Q;
                },
                set: function(t) {
                    this.filter.Q.value = t;
                }
            },
            gain: {
                vq: true,
                get: function() {
                    return this.filter.gain;
                },
                set: function(t) {
                    this.filter.gain.value = t;
                }
            },
            frequency: {
                vq: true,
                get: function() {
                    return this.filter.frequency;
                },
                set: function(t) {
                    this.filter.frequency.value = t;
                }
            }
        });
        Tuna.prototype.Yda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.bufferSize = t.bufferSize || this.Nb.bufferSize.value;
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.dda = e.createScriptProcessor(this.bufferSize, 1, 1);
            this.Vca = e.createGain();
            this.Tca.connect(this.dda);
            this.dda.connect(this.Vca);
            var n, i, r, a, s, o, f, u;
            n = i = r = a = s = o = f = u = 0;
            var h, c, l, d, v, E;
            this.dda.onaudioprocess = function(t) {
                h = t.inputBuffer.getChannelData(0), c = t.outputBuffer.getChannelData(0), l = this.Uda * 1.16, 
                inputFactor = .35013 * (l * l) * (l * l);
                d = this.Wda * (1 - .15 * l * l);
                E = h.length;
                for (v = 0; v < E; v++) {
                    h[v] -= u * d;
                    h[v] *= inputFactor;
                    s = h[v] + .3 * n + (1 - l) * s;
                    n = h[v];
                    o = s + .3 * i + (1 - l) * o;
                    i = s;
                    f = o + .3 * r + (1 - l) * f;
                    r = o;
                    u = f + .3 * a + (1 - l) * u;
                    a = f;
                    c[v] = u;
                }
            };
            this.Uda = p(t.Uda, this.Nb.Uda.value);
            this.Wda = p(t.Wda, this.Nb.Wda.value);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Yda.prototype = Object.create(r, {
            name: {
                value: "MoogFilter"
            },
            Nb: {
                sV: true,
                value: {
                    bufferSize: {
                        value: 4096,
                        min: 256,
                        max: 16384,
                        _ca: false,
                        type: f
                    },
                    S2: {
                        value: false,
                        _ca: false,
                        type: s
                    },
                    Uda: {
                        value: .065,
                        min: 1e-4,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    Wda: {
                        value: 3.5,
                        min: 0,
                        max: 4,
                        _ca: false,
                        type: a
                    }
                }
            },
            Uda: {
                vq: true,
                get: function() {
                    return this.dda.Uda;
                },
                set: function(t) {
                    this.dda.Uda = t;
                }
            },
            Wda: {
                vq: true,
                get: function() {
                    return this.dda.Wda;
                },
                set: function(t) {
                    this.dda.Wda = t;
                }
            }
        });
        Tuna.prototype.Zda = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.$da = e.createGain();
            this._da = e.createWaveShaper();
            this.aea = e.createGain();
            this.Vca = e.createGain();
            this.Tca.connect(this.$da);
            this.$da.connect(this._da);
            this._da.connect(this.aea);
            this.aea.connect(this.Vca);
            this.bea = new Float32Array(this.cea);
            this.dea = p(t.dea, this.Nb.dea.value);
            this.eea = p(t.eea, this.Nb.eea.value);
            this.fea = p(t.fea, this.Nb.fea.value);
            this.gea = p(t.gea, this.Nb.gea.value);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Zda.prototype = Object.create(r, {
            name: {
                value: "Overdrive"
            },
            Nb: {
                sV: true,
                value: {
                    dea: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a,
                        hea: true
                    },
                    eea: {
                        value: 1,
                        min: 0,
                        max: 1,
                        _ca: true,
                        type: a,
                        hea: true
                    },
                    fea: {
                        value: .725,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    gea: {
                        value: 0,
                        min: 0,
                        max: 5,
                        _ca: false,
                        type: f
                    }
                }
            },
            cea: {
                value: 8192
            },
            dea: {
                get: function() {
                    return this.$da.gain;
                },
                set: function(t) {
                    this.iea = t;
                }
            },
            fea: {
                get: function() {
                    return this.jea;
                },
                set: function(t) {
                    this.jea = t;
                    if (this.kea === undefined) {
                        this.kea = 0;
                    }
                    this.lea[this.kea](this.jea, this.cea, this.bea);
                    this._da.curve = this.bea;
                }
            },
            eea: {
                get: function() {
                    return this.aea.gain;
                },
                set: function(t) {
                    this.mea = c(t);
                }
            },
            gea: {
                get: function() {
                    return this.kea;
                },
                set: function(t) {
                    this.kea = t;
                    this.fea = this.jea;
                }
            },
            lea: {
                value: [ function(t, e, n) {
                    t = Math.min(t, .9999);
                    var i = 2 * t / (1 - t), r, a;
                    for (r = 0; r < e; r++) {
                        a = r * 2 / e - 1;
                        n[r] = (1 + i) * a / (1 + i * Math.abs(a));
                    }
                }, function(t, e, n) {
                    var i, r, a;
                    for (i = 0; i < e; i++) {
                        r = i * 2 / e - 1;
                        a = (.5 * Math.pow(r + 1.4, 2) - 1) * a >= 0 ? 5.8 : 1.2;
                        n[i] = v(a);
                    }
                }, function(t, e, n) {
                    var i, r, a, s = 1 - t;
                    for (i = 0; i < e; i++) {
                        r = i * 2 / e - 1;
                        a = r < 0 ? -Math.pow(Math.abs(r), s + .04) : Math.pow(r, s);
                        n[i] = v(a * 2);
                    }
                }, function(t, e, n) {
                    var i, r, a, s, o = 1 - t > .99 ? .99 : 1 - t;
                    for (i = 0; i < e; i++) {
                        r = i * 2 / e - 1;
                        s = Math.abs(r);
                        if (s < o) a = s; else if (s > o) a = o + (s - o) / (1 + Math.pow((s - o) / (1 - o), 2)); else if (s > 1) a = s;
                        n[i] = d(r) * a * (1 / ((o + 1) / 2));
                    }
                }, function(t, e, n) {
                    var i, r;
                    for (i = 0; i < e; i++) {
                        r = i * 2 / e - 1;
                        if (r < -.08905) {
                            n[i] = -3 / 4 * (1 - Math.pow(1 - (Math.abs(r) - .032857), 12) + 1 / 3 * (Math.abs(r) - .032847)) + .01;
                        } else if (r >= -.08905 && r < .320018) {
                            n[i] = -6.153 * (r * r) + 3.9375 * r;
                        } else {
                            n[i] = .630035;
                        }
                    }
                }, function(t, e, n) {
                    var i = 2 + Math.round(t * 14), r = Math.round(Math.pow(2, i - 1)), a, s;
                    for (a = 0; a < e; a++) {
                        s = a * 2 / e - 1;
                        n[a] = Math.round(s * r) / r;
                    }
                } ]
            }
        });
        Tuna.prototype.nea = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.sda = this.Tca = e.createChannelSplitter(2);
            this.oea = [];
            this.pea = [];
            this.qea = e.createGain();
            this.rea = e.createGain();
            this.xda = e.createChannelMerger(2);
            this.sea = e.createGain();
            this.Vca = e.createGain();
            this.yda = new n.zda({
                target: this.oea,
                uU: this.uU
            });
            this.Ada = new n.zda({
                target: this.pea,
                uU: this.uU
            });
            var i = this.tea;
            while (i--) {
                this.oea[i] = e.createBiquadFilter();
                this.pea[i] = e.createBiquadFilter();
                this.oea[i].type = "allpass";
                this.pea[i].type = "allpass";
            }
            this.input.connect(this.sda);
            this.input.connect(this.Vca);
            this.sda.connect(this.oea[0], 0, 0);
            this.sda.connect(this.pea[0], 1, 0);
            this.Yca(this.oea);
            this.Yca(this.pea);
            this.oea[this.tea - 1].connect(this.qea);
            this.oea[this.tea - 1].connect(this.xda, 0, 0);
            this.pea[this.tea - 1].connect(this.rea);
            this.pea[this.tea - 1].connect(this.xda, 0, 1);
            this.qea.connect(this.oea[0]);
            this.rea.connect(this.pea[0]);
            this.xda.connect(this.Vca);
            this.rate = p(t.rate, this.Nb.rate.value);
            this.uea = t.uea || this.Nb.uea.value;
            this.AA = p(t.AA, this.Nb.AA.value);
            this.Bda = p(t.Bda, this.Nb.Bda.value);
            this.vea = p(t.vea, this.Nb.vea.value);
            this.yda.Sca(true);
            this.Ada.Sca(true);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.nea.prototype = Object.create(r, {
            name: {
                value: "Phaser"
            },
            tea: {
                value: 4
            },
            Nb: {
                sV: true,
                value: {
                    rate: {
                        value: .1,
                        min: 0,
                        max: 8,
                        _ca: false,
                        type: a
                    },
                    AA: {
                        value: .6,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    Bda: {
                        value: .7,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    vea: {
                        value: 40,
                        min: 0,
                        max: 180,
                        _ca: false,
                        type: a
                    },
                    uea: {
                        value: 700,
                        min: 500,
                        max: 1500,
                        _ca: false,
                        type: a
                    }
                }
            },
            uU: {
                value: function(t, e) {
                    for (var n = 0; n < 4; n++) {
                        t[n].frequency.value = e;
                    }
                }
            },
            AA: {
                get: function() {
                    return this.Eda;
                },
                set: function(t) {
                    this.Eda = t;
                    this.yda.Fda = this.wea * this.Eda;
                    this.Ada.Fda = this.wea * this.Eda;
                }
            },
            rate: {
                get: function() {
                    return this.Gba;
                },
                set: function(t) {
                    this.Gba = t;
                    this.yda.frequency = this.Gba;
                    this.Ada.frequency = this.Gba;
                }
            },
            uea: {
                vq: true,
                get: function() {
                    return this.wea;
                },
                set: function(t) {
                    this.wea = t;
                    this.yda.offset = this.wea;
                    this.Ada.offset = this.wea;
                    this.Eda = this.Eda;
                }
            },
            Bda: {
                get: function() {
                    return this.Gda;
                },
                set: function(t) {
                    this.Gda = t;
                    this.qea.gain.value = this.Gda;
                    this.rea.gain.value = this.Gda;
                }
            },
            vea: {
                get: function() {
                    return this.xea;
                },
                set: function(t) {
                    this.xea = t;
                    var e = this.yda.yea + this.xea * Math.PI / 180;
                    e = l(e, 2 * Math.PI);
                    this.Ada.yea = e;
                }
            }
        });
        Tuna.prototype.zea = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.pda = e.createGain();
            this.Aea = e.createGain();
            this.Bea = e.createGain();
            this.Vca = e.createGain();
            this.Cea = e.createDelay();
            this.Dea = e.createDelay();
            this.Tca = e.createGain();
            this.sda = e.createChannelSplitter(2);
            this.xda = e.createChannelMerger(2);
            this.Tca.connect(this.sda);
            this.sda.connect(this.Aea, 0, 0);
            this.sda.connect(this.Aea, 1, 0);
            this.Aea.gain.value = .5;
            this.Aea.connect(this.pda);
            this.pda.connect(this.Cea);
            this.Bea.connect(this.Cea);
            this.Cea.connect(this.Dea);
            this.Dea.connect(this.Bea);
            this.Cea.connect(this.xda, 0, 0);
            this.Dea.connect(this.xda, 0, 1);
            this.xda.connect(this.Vca);
            this.Tca.connect(this.Vca);
            this.Eea = t.Eea !== undefined ? t.Eea : this.Nb.Eea.value;
            this.Fea = t.Fea !== undefined ? t.Fea : this.Nb.Fea.value;
            this.Bea.gain.value = t.Bda !== undefined ? t.Bda : this.Nb.Bda.value;
            this.pda.gain.value = t.pda !== undefined ? t.pda : this.Nb.pda.value;
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.zea.prototype = Object.create(r, {
            name: {
                value: "PingPongDelay"
            },
            Eea: {
                vq: true,
                get: function() {
                    return this.Gea;
                },
                set: function(t) {
                    this.Gea = t;
                    this.Cea.delayTime.value = t / 1e3;
                }
            },
            Fea: {
                vq: true,
                get: function() {
                    return this.Hea;
                },
                set: function(t) {
                    this.Hea = t;
                    this.Dea.delayTime.value = t / 1e3;
                }
            },
            Nb: {
                sV: true,
                value: {
                    Eea: {
                        value: 200,
                        min: 1,
                        max: 1e4,
                        _ca: false,
                        type: f
                    },
                    Fea: {
                        value: 400,
                        min: 1,
                        max: 1e4,
                        _ca: false,
                        type: f
                    },
                    Bda: {
                        value: .3,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    pda: {
                        value: .5,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    }
                }
            }
        });
        Tuna.prototype.Iea = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.sda = this.Tca = e.createChannelSplitter(2), this.Jea = e.createGain(), this.Kea = e.createGain(), 
            this.xda = e.createChannelMerger(2), this.Vca = e.createGain();
            this.yda = new n.zda({
                target: this.Jea.gain,
                uU: i
            });
            this.Ada = new n.zda({
                target: this.Kea.gain,
                uU: i
            });
            this.input.connect(this.sda);
            this.sda.connect(this.Jea, 0);
            this.sda.connect(this.Kea, 1);
            this.Jea.connect(this.xda, 0, 0);
            this.Kea.connect(this.xda, 0, 1);
            this.xda.connect(this.Vca);
            this.rate = t.rate || this.Nb.rate.value;
            this.Rx = p(t.Rx, this.Nb.Rx.value);
            this.vea = p(t.vea, this.Nb.vea.value);
            this.yda.offset = 1 - this.Rx / 2;
            this.Ada.offset = 1 - this.Rx / 2;
            this.yda.Cda = this.vea * Math.PI / 180;
            this.yda.Sca(true);
            this.Ada.Sca(true);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Iea.prototype = Object.create(r, {
            name: {
                value: "Tremolo"
            },
            Nb: {
                sV: true,
                value: {
                    Rx: {
                        value: .3,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    vea: {
                        value: 0,
                        min: 0,
                        max: 180,
                        _ca: false,
                        type: a
                    },
                    rate: {
                        value: 5,
                        min: .1,
                        max: 11,
                        _ca: false,
                        type: a
                    }
                }
            },
            Rx: {
                vq: true,
                get: function() {
                    return this.Lea;
                },
                set: function(t) {
                    this.Lea = t;
                    this.yda.offset = 1 - this.Lea / 2;
                    this.Ada.offset = 1 - this.Lea / 2;
                    this.yda.Fda = this.Lea;
                    this.Ada.Fda = this.Lea;
                }
            },
            rate: {
                vq: true,
                get: function() {
                    return this.Gba;
                },
                set: function(t) {
                    this.Gba = t;
                    this.yda.frequency = this.Gba;
                    this.Ada.frequency = this.Gba;
                }
            },
            vea: {
                vq: true,
                get: function() {
                    return this.Gba;
                },
                set: function(t) {
                    this.xea = t;
                    var e = this.yda.yea + this.xea * Math.PI / 180;
                    e = l(e, 2 * Math.PI);
                    this.Ada.Cda = e;
                }
            }
        });
        Tuna.prototype.Mea = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.Tca = e.createGain();
            this.Nea = new n.Oea({
                target: this,
                uU: function(t, e) {
                    t.Pea = e;
                }
            });
            this.Qea = e.createBiquadFilter();
            this.Rea = e.createBiquadFilter();
            this.Vca = e.createGain();
            this.Tca.connect(this.Qea);
            this.Qea.connect(this.Rea);
            this.Rea.connect(this.Vca);
            this.init();
            this.Sea = p(t.Tea, this.Nb.Sea.value);
            this.Wda = t.Wda || this.Nb.Wda.value;
            this.Uea = p(t.Uea, this.Nb.Uea.value);
            this.Vea = p(t.Vea, this.Nb.Vea.value);
            this.Wea = t.Wea || this.Nb.Wea.value;
            this.Pea = p(t.Pea, this.Nb.Pea.value);
            this.Tca.gain.value = 2;
            this.Nea.Sca(true);
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.Mea.prototype = Object.create(r, {
            name: {
                value: "WahWah"
            },
            Nb: {
                sV: true,
                value: {
                    Sea: {
                        value: true,
                        _ca: false,
                        type: s
                    },
                    Vea: {
                        value: .5,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    Wea: {
                        value: 2,
                        min: 1,
                        max: 6,
                        _ca: false,
                        type: a
                    },
                    Pea: {
                        value: .2,
                        min: 0,
                        max: 1,
                        _ca: false,
                        type: a
                    },
                    Wda: {
                        value: 10,
                        min: 1,
                        max: 100,
                        _ca: false,
                        type: a
                    },
                    Uea: {
                        value: .5,
                        min: -1,
                        max: 1,
                        _ca: false,
                        type: a
                    }
                }
            },
            Uca: {
                value: function(t) {
                    this.Sea = t;
                }
            },
            Sea: {
                get: function() {
                    return this.Xea;
                },
                set: function(t) {
                    this.Xea = t;
                    if (t) {
                        this.Tca.connect(this.Nea.input);
                        this.Nea.Sca(true);
                    } else {
                        this.Nea.Sca(false);
                        this.Tca.disconnect();
                        this.Tca.connect(this.Qea);
                    }
                }
            },
            Yea: {
                value: 0
            },
            Zea: {
                value: function() {
                    try {
                        this.Qea.frequency.value = this.$ea + this._ea * this.afa;
                        this.Rea.frequency.value = this.$ea + this._ea * this.afa;
                    } catch (t) {
                        clearTimeout(this.Yea);
                        this.Yea = setTimeout(function() {
                            this.Zea();
                        }.bind(this), 0);
                    }
                }
            },
            Pea: {
                vq: true,
                get: function() {
                    return this.afa.value;
                },
                set: function(t) {
                    this.afa = Math.pow(t > 1 ? 1 : t < 0 ? 0 : t, this.bfa);
                    this.Zea();
                }
            },
            Vea: {
                vq: true,
                get: function() {
                    return this.$ea;
                },
                set: function(t) {
                    this.$ea = 50 * Math.pow(10, t * 2);
                    this._ea = Math.min(e.sampleRate / 2, this.Vea * Math.pow(2, this.cfa));
                    this.Zea();
                }
            },
            Wea: {
                vq: true,
                get: function() {
                    return this.cfa;
                },
                set: function(t) {
                    this.cfa = t;
                    this._ea = Math.min(e.sampleRate / 2, this.Vea * Math.pow(2, this.cfa));
                    this.Zea();
                }
            },
            Uea: {
                vq: true,
                get: function() {
                    return this.bfa;
                },
                set: function(t) {
                    this.bfa = Math.pow(10, t);
                }
            },
            Wda: {
                vq: true,
                get: function() {
                    return this.dfa;
                },
                set: function(t) {
                    this.dfa = t;
                    this.Rea.Q = this.dfa;
                }
            },
            init: {
                value: function() {
                    this.Vca.gain.value = 1;
                    this.Rea.type = "peaking";
                    this.Qea.type = "bandpass";
                    this.Rea.frequency.value = 100;
                    this.Rea.gain.value = 20;
                    this.Rea.Q.value = 5;
                    this.Qea.frequency.value = 100;
                    this.Qea.Q.value = 1;
                }
            }
        });
        Tuna.prototype.Oea = function(t) {
            if (!t) {
                t = this.Zca();
            }
            this.input = e.createGain();
            this.efa = this.Vca = e.createScriptProcessor(this.ffa, 1, 1);
            this.input.connect(this.Vca);
            this.gfa = p(t.gfa, this.Nb.gfa.value);
            this.hfa = p(t.hfa, this.Nb.hfa.value);
            this.ifa = 0;
            this.target = t.target || {};
            this.uU = t.uU || function() {};
        };
        Tuna.prototype.Oea.prototype = Object.create(r, {
            name: {
                value: "EnvelopeFollower"
            },
            Nb: {
                value: {
                    gfa: {
                        value: .003,
                        min: 0,
                        max: .5,
                        _ca: false,
                        type: a
                    },
                    hfa: {
                        value: .5,
                        min: 0,
                        max: .5,
                        _ca: false,
                        type: a
                    }
                }
            },
            ffa: {
                value: 256
            },
            jfa: {
                value: 0
            },
            sampleRate: {
                value: 44100
            },
            gfa: {
                vq: true,
                get: function() {
                    return this.kfa;
                },
                set: function(t) {
                    this.kfa = t;
                    this.lfa = Math.exp(-1 / this.kfa * this.sampleRate / this.ffa);
                }
            },
            hfa: {
                vq: true,
                get: function() {
                    return this.mfa;
                },
                set: function(t) {
                    this.mfa = t;
                    this.nfa = Math.exp(-1 / this.mfa * this.sampleRate / this.ffa);
                }
            },
            uU: {
                get: function() {
                    return this.ofa;
                },
                set: function(t) {
                    if (typeof t === "function") {
                        this.ofa = t;
                    } else {
                        console.error("tuna.js: " + this.name + ": Callback must be a function!");
                    }
                }
            },
            target: {
                get: function() {
                    return this.pfa;
                },
                set: function(t) {
                    this.pfa = t;
                }
            },
            Sca: {
                value: function(t) {
                    this.qfa = t;
                    if (t) {
                        this.efa.connect(e.destination);
                        this.efa.onaudioprocess = this.rfa(this);
                    } else {
                        this.efa.disconnect();
                        this.efa.onaudioprocess = null;
                    }
                }
            },
            rfa: {
                value: function(t) {
                    return function(e) {
                        t.m0(e);
                    };
                }
            },
            m0: {
                value: function(t) {
                    var e = t.inputBuffer.getChannelData(0).length, n = t.inputBuffer.numberOfChannels, i, r, a, s;
                    r = a = s = 0;
                    if (n > 1) {
                        for (s = 0; s < e; ++s) {
                            for (;r < n; ++r) {
                                i = t.inputBuffer.getChannelData(r)[s];
                                a += i * i / n;
                            }
                        }
                    } else {
                        for (s = 0; s < e; ++s) {
                            i = t.inputBuffer.getChannelData(0)[s];
                            a += i * i;
                        }
                    }
                    a = Math.sqrt(a);
                    if (this.ifa < a) {
                        this.ifa *= this.lfa;
                        this.ifa += (1 - this.lfa) * a;
                    } else {
                        this.ifa *= this.nfa;
                        this.ifa += (1 - this.nfa) * a;
                    }
                    this.ofa(this.pfa, this.ifa);
                }
            }
        });
        Tuna.prototype.zda = function(t) {
            this.Vca = e.createScriptProcessor(256, 1, 1);
            this.Tca = e.destination;
            this.frequency = p(t.frequency, this.Nb.frequency.value);
            this.offset = p(t.offset, this.Nb.offset.value);
            this.Fda = p(t.Fda, this.Nb.Fda.value);
            this.Cda = p(t.Cda, this.Nb.Cda.value);
            this.target = t.target || {};
            this.Vca.onaudioprocess = this.uU(t.uU || function() {});
            this.S2 = t.S2 || false;
        };
        Tuna.prototype.zda.prototype = Object.create(r, {
            name: {
                value: "LFO"
            },
            bufferSize: {
                value: 256
            },
            sampleRate: {
                value: 44100
            },
            Nb: {
                value: {
                    frequency: {
                        value: 1,
                        min: 0,
                        max: 20,
                        _ca: false,
                        type: a
                    },
                    offset: {
                        value: .85,
                        min: 0,
                        max: 22049,
                        _ca: false,
                        type: a
                    },
                    Fda: {
                        value: .3,
                        min: -22050,
                        max: 22050,
                        _ca: false,
                        type: a
                    },
                    Cda: {
                        value: 0,
                        min: 0,
                        max: 2 * Math.PI,
                        _ca: false,
                        type: a
                    }
                }
            },
            frequency: {
                get: function() {
                    return this.sfa;
                },
                set: function(t) {
                    this.sfa = t;
                    this.tfa = 2 * Math.PI * this.sfa * this.bufferSize / this.sampleRate;
                }
            },
            offset: {
                get: function() {
                    return this.ufa;
                },
                set: function(t) {
                    this.ufa = t;
                }
            },
            Fda: {
                get: function() {
                    return this.vfa;
                },
                set: function(t) {
                    this.vfa = t;
                }
            },
            Cda: {
                get: function() {
                    return this.yea;
                },
                set: function(t) {
                    this.yea = t;
                }
            },
            target: {
                get: function() {
                    return this.pfa;
                },
                set: function(t) {
                    this.pfa = t;
                }
            },
            Sca: {
                value: function(t) {
                    if (!t) {
                        this.Vca.disconnect(e.destination);
                    } else {
                        this.Vca.connect(e.destination);
                    }
                }
            },
            uU: {
                value: function(t) {
                    var e = this;
                    return function() {
                        e.yea += e.tfa;
                        if (e.yea > 2 * Math.PI) {
                            e.yea = 0;
                        }
                        t(e.pfa, e.ufa + e.vfa * Math.sin(e.yea));
                    };
                }
            }
        });
        Tuna.toString = Tuna.prototype.toString = function() {
            return "Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js";
        };
    })(this);
    var t = window.AudioContext || window.webkitAudioContext;
    var e = new t();
    var n = function(t) {
        if (t.navigator.mediaDevices && t.navigator.mediaDevices.getUserMedia) {
            return t.navigator.mediaDevices.getUserMedia.bind(t.navigator.mediaDevices);
        }
        var e = t.navigator.getUserMedia || t.navigator.webkitGetUserMedia || t.navigator.mozGetUserMedia;
        if (e) {
            return function(n) {
                return new Promise(function(i, r) {
                    e.call(t.navigator, n, i, r);
                });
            };
        }
        return function() {
            throw "getUserMedia is unsupported";
        };
    }(window);
    if (n) console.log("Your browser supports getUserMedia."); else console.log("Your browser does not support getUserMedia.");
    var Wad = function() {
        var t = function() {
            Math.seed = 6;
            Math.a5 = function(t, e) {
                t = t || 1;
                e = e || 0;
                Math.seed = (Math.seed * 9301 + 49297) % 233280;
                var n = Math.seed / 233280;
                return e + n * (t - e);
            };
            var t = 2 * e.sampleRate;
            var n = e.createBuffer(1, t, e.sampleRate);
            var i = n.getChannelData(0);
            for (var r = 0; r < t; r++) {
                i[r] = Math.a5() * 2 - 1;
            }
            return n;
        }();
        var i = function(t) {
            return Object.prototype.toString.call(t) === "[object Array]";
        };
        var r = function(t, e) {
            t.wfa = {
                attack: e.wfa ? I(e.wfa.attack, 1) : 0,
                Tx: e.wfa ? I(e.wfa.Tx, 0) : 0,
                xfa: e.wfa ? I(e.wfa.xfa, 1) : 1,
                yfa: e.wfa ? I(e.wfa.yfa, 3.14159) : 3.14159,
                release: e.wfa ? I(e.wfa.release, 0) : 0
            };
            t.zfa = {
                attack: e.wfa ? I(e.wfa.attack, 1) : 0,
                Tx: e.wfa ? I(e.wfa.Tx, 0) : 0,
                xfa: e.wfa ? I(e.wfa.xfa, 1) : 1,
                yfa: e.wfa ? I(e.wfa.yfa, 3.14159) : 3.14159,
                release: e.wfa ? I(e.wfa.release, 0) : 0
            };
        };
        var a = function(t, e) {
            if (!e.filter) {
                e.filter = null;
            } else if (i(e.filter)) {
                t.filter = e.filter.map(function(t) {
                    return {
                        type: t.type || "lowpass",
                        frequency: t.frequency || 600,
                        RA: t.RA || 1,
                        wfa: t.wfa || null
                    };
                });
            } else {
                t.filter = [ {
                    type: e.filter.type || "lowpass",
                    frequency: e.filter.frequency || 600,
                    RA: e.filter.RA || 1,
                    wfa: e.filter.wfa || null
                } ];
            }
        };
        var s = function(t, n) {
            var i = new XMLHttpRequest();
            i.open("GET", t.source, true);
            i.responseType = "arraybuffer";
            t.Afa--;
            i.onload = function() {
                e.decodeAudioData(i.response, function(e) {
                    t.Bfa = e;
                    if (t.wfa.yfa === 3.14159) {
                        t.wfa.yfa = t.Bfa.duration + 1;
                    }
                    if (n) {
                        n(t);
                    }
                    t.Afa++;
                    if (t.Cfa) {
                        t.play(t.Dfa);
                    }
                });
            };
            i.send();
        };
        var o = function(t, e) {
            if (e.Efa) {
                t.Efa = {
                    shape: I(e.Efa.shape, "sine"),
                    speed: I(e.Efa.speed, 1),
                    Ffa: I(e.Efa.Ffa, 5),
                    attack: I(e.Efa.attack, 0)
                };
            } else {
                t.Efa = null;
            }
        };
        var f = function(t, e) {
            if (e.Gfa) {
                t.Gfa = {
                    shape: I(e.Gfa.shape, "sine"),
                    speed: I(e.Gfa.speed, 1),
                    Ffa: I(e.Gfa.Ffa, 5),
                    attack: I(e.Gfa.attack, 1)
                };
            } else {
                t.Gfa = null;
            }
        };
        var u = function(t, n) {
            if (n.Hfa) {
                t.Hfa = {
                    Pda: I(n.Hfa.Pda, 1)
                };
                var i = n.Hfa.nda || Wad.Ifa;
                var r = new XMLHttpRequest();
                r.open("GET", i, true);
                r.responseType = "arraybuffer";
                t.Afa--;
                r.onload = function() {
                    e.decodeAudioData(r.response, function(e) {
                        t.Hfa.buffer = e;
                        t.Afa++;
                        if (t.Cfa) {
                            t.play(t.Dfa);
                        }
                        if (t instanceof Wad.Jfa) {
                            t.Kfa(n);
                        }
                        if (t.source === "mic" && t.Hfa && t.Hfa.buffer && t.Hfa.Yv && !t.Hfa.Yv.buffer) {
                            t.Hfa.Yv.hda.buffer = t.Hfa.buffer;
                        }
                    });
                };
                r.send();
            } else {
                t.Hfa = null;
            }
        };
        var h = function(t, n) {
            if ("panning" in n) {
                t.Lfa = {
                    location: n.Lfa
                };
                if (typeof n.Lfa === "number") {
                    t.Lfa.type = "stereo";
                } else {
                    t.Lfa.type = "3d";
                    t.Lfa.panningModel = n.panningModel || "equalpower";
                }
            } else {
                t.Lfa = {
                    location: 0,
                    type: "stereo"
                };
            }
            if (t.Lfa.type === "stereo" && !e.createStereoPanner) {
                console.log("Your browser does not support stereo panning. Falling back to 3D panning.");
                t.Lfa = {
                    location: [ 0, 0, 0 ],
                    type: "3d",
                    panningModel: "equalpower"
                };
            }
        };
        var c = function(t, e) {
            if (e.Gc) {
                t.Gc = {
                    delayTime: I(e.Gc.delayTime, .5),
                    Mfa: I(e.Gc.Mfa, 2),
                    Bda: I(e.Gc.Bda, .25),
                    Pda: I(e.Gc.Pda, .25)
                };
            } else {
                t.Gc = null;
            }
        };
        var l = function(t, i) {
            t.J0 = [];
            t.Nfa = null;
            t.gain = null;
            return n({
                q9: true,
                r9: false
            }).then(function(n) {
                t.Nfa = e.createMediaStreamSource(n);
                Wad.Ofa = true;
                d(t, i);
                return t;
            }).catch(function(t) {
                console.log("Error setting up microphone input: ", t);
            });
        };
        var d = function(t, n) {
            t.J0 = [];
            t.gain = e.createGain();
            t.gain.gain.value = I(n.volume, t.volume);
            t.J0.push(t.Nfa);
            t.J0.push(t.gain);
            if (t.filter || n.filter) {
                T(t, n);
            }
            if (t.Hfa || n.Hfa) {
                R(t, n);
            }
            h(t, n);
            w(t, n);
            if (t.Gc || n.Gc) {
                H(t, n);
            }
            M(t, n);
            t.Pfa(n, e);
        };
        var Wad = function(n) {
            this.source = n.source;
            this.destination = n.destination || e.destination;
            this.volume = I(n.volume, 1);
            this.Qfa = this.volume;
            this.Afa = 1;
            this.pitch = Wad.Rfa[n.pitch] || n.pitch || 440;
            this.detune = n.detune || 0;
            this.Sfa = n.Sfa || false;
            this.gain = [];
            this.loop = n.loop || false;
            this.Tfa = n.Tfa || null;
            r(this, n);
            a(this, n);
            o(this, n);
            f(this, n);
            u(this, n);
            this.Ufa(n, e);
            h(this, n);
            c(this, n);
            if (this.source === "noise") {
                this.Bfa = t;
            } else if (this.source === "mic") {
                l(this, n);
            } else if (typeof this.source == "object") {
                var i = e.createBuffer(2, this.source[0].length, e.sampleRate);
                i.getChannelData(0).set(this.source[0]);
                i.getChannelData(1).set(this.source[1]);
                this.Bfa = i;
            } else if (!(this.source in {
                Vfa: 0,
                Wfa: 0,
                Xfa: 0,
                Yfa: 0
            })) {
                s(this, n.uU);
            } else {
                n.uU && n.uU(this);
            }
        };
        Wad.Ofa = false;
        Wad.Zfa = e;
        if (window.Tuna != undefined) {
            Wad.Tfa = new Tuna(Wad.Zfa);
        }
        var v = function(t, e) {
            t.filter.forEach(function(t, n) {
                t.Yv.frequency.linearRampToValueAtTime(t.frequency, e.$fa);
                t.Yv.frequency.linearRampToValueAtTime(t.wfa.frequency, e.$fa + t.wfa.attack);
            });
        };
        var p = function(t, e) {
            t.gain[0].gain.linearRampToValueAtTime(1e-4, e.$fa);
            t.gain[0].gain.linearRampToValueAtTime(t.volume, e.$fa + t.wfa.attack + 1e-5);
            t.gain[0].gain.linearRampToValueAtTime(t.volume * t.wfa.xfa, e.$fa + t.wfa.attack + t.wfa.Tx + 2e-5);
            t.gain[0].gain.linearRampToValueAtTime(t.volume * t.wfa.xfa, e.$fa + t.wfa.attack + t.wfa.Tx + t.wfa.yfa + 3e-5);
            t.gain[0].gain.linearRampToValueAtTime(1e-4, e.$fa + t.wfa.attack + t.wfa.Tx + t.wfa.yfa + t.wfa.release + 4e-5);
            t._fa.start(e.$fa);
            t._fa.stop(e.$fa + t.wfa.attack + t.wfa.Tx + t.wfa.yfa + t.wfa.release);
        };
        var E = function(t, e) {
            var n = e && e.destination || t.destination;
            for (var i = 1; i < t.J0.length; i++) {
                if (t.J0[i - 1].aga === "custom") {
                    var r = t.J0[i - 1].Vca;
                } else {
                    var r = t.J0[i - 1];
                }
                if (t.J0[i].aga === "custom") {
                    var a = t.J0[i].input;
                } else {
                    var a = t.J0[i];
                }
                r.connect(a);
            }
            if (t.J0[t.J0.length - 1].aga === "custom") {
                var s = t.J0[t.J0.length - 1].Vca;
            } else {
                var s = t.J0[t.J0.length - 1];
            }
            s.connect(n);
            if (Wad.Hfa && t.Sfa) {
                t.J0[t.J0.length - 1].connect(Wad.Hfa.Yv);
                Wad.Hfa.Yv.connect(Wad.Hfa.gain);
                Wad.Hfa.gain.connect(n);
            }
        };
        var g = function(t, n) {
            n = n || {};
            t._fa = e.createOscillator();
            t._fa.type = t.source;
            if (n.pitch) {
                if (n.pitch in Wad.Rfa) {
                    t._fa.frequency.value = Wad.Rfa[n.pitch];
                } else {
                    t._fa.frequency.value = n.pitch;
                }
            } else {
                t._fa.frequency.value = t.pitch;
            }
            t._fa.detune.value = n.detune || t.detune;
        };
        var m = function(t, e) {
            if (e && e.wfa) {
                t.wfa.attack = I(e.wfa.attack, t.zfa.attack);
                t.wfa.Tx = I(e.wfa.Tx, t.zfa.Tx);
                t.wfa.xfa = I(e.wfa.xfa, t.zfa.xfa);
                t.wfa.yfa = I(e.wfa.yfa, t.zfa.yfa);
                t.wfa.release = I(e.wfa.release, t.zfa.release);
            } else {
                t.wfa = {
                    attack: t.zfa.attack,
                    Tx: t.zfa.Tx,
                    xfa: t.zfa.xfa,
                    yfa: t.zfa.yfa,
                    release: t.zfa.release
                };
            }
        };
        var T = function(t, n) {
            if (n.filter && !i(n.filter)) {
                n.filter = [ n.filter ];
            }
            t.filter.forEach(function(i, r) {
                i.Yv = e.createBiquadFilter();
                i.Yv.type = i.type;
                i.Yv.frequency.value = n.filter && n.filter[r] ? n.filter[r].frequency || i.frequency : i.frequency;
                i.Yv.Q.value = n.filter && n.filter[r] ? n.filter[r].RA || i.RA : i.RA;
                if ((n.filter && n.filter[r].wfa || t.filter[r].wfa) && !(t.source === "mic")) {
                    i.wfa = {
                        attack: n.filter && n.filter[r].wfa && n.filter[r].wfa.attack || t.filter[r].wfa.attack,
                        frequency: n.filter && n.filter[r].wfa && n.filter[r].wfa.frequency || t.filter[r].wfa.frequency
                    };
                }
                t.J0.push(i.Yv);
            });
        };
        var y = function(t, e) {
            if (e && e.filter && t.filter) {
                if (!i(e.filter)) e.filter = [ e.filter ];
                T(t, e);
            } else if (t.filter) {
                T(t, t);
            }
        };
        var R = function(t, n) {
            var i = {
                aga: "custom",
                input: e.createGain(),
                hda: e.createConvolver(),
                Pda: e.createGain(),
                Vca: e.createGain()
            };
            i.hda.buffer = t.Hfa.buffer;
            i.Pda.gain.value = t.Hfa.Pda;
            i.input.connect(i.hda);
            i.input.connect(i.Vca);
            i.hda.connect(i.Pda);
            i.Pda.connect(i.Vca);
            t.Hfa.Yv = i;
            t.J0.push(t.Hfa.Yv);
        };
        var w = function(t, n) {
            var i = n && n.Lfa;
            if (typeof i === "undefined") {
                i = t.Lfa.location;
            }
            if (typeof i === "number") {
                t.Lfa.Yv = e.createStereoPanner();
                t.Lfa.Yv.bga.value = i;
                t.Lfa.type = "stereo";
            } else {
                t.Lfa.Yv = e.createPanner();
                t.Lfa.Yv.setPosition(i[0], i[1], i[2]);
                t.Lfa.Yv.panningModel = n.panningModel || t.panningModel || "equalpower";
                t.Lfa.type = "3d";
            }
            t.J0.push(t.Lfa.Yv);
        };
        var x = function(t, e) {
            t.Efa.cga = new Wad({
                source: t.Efa.shape,
                pitch: t.Efa.speed,
                volume: t.Efa.Ffa,
                wfa: {
                    attack: t.Efa.attack
                },
                destination: t._fa.frequency
            });
            t.Efa.cga.play();
        };
        var b = function(t, e) {
            t.Gfa.cga = new Wad({
                source: t.Gfa.shape,
                pitch: t.Gfa.speed,
                volume: t.Gfa.Ffa,
                wfa: {
                    attack: t.Gfa.attack,
                    yfa: 10
                },
                destination: t.gain[0].gain
            });
            t.Gfa.cga.play();
        };
        var H = function(t, n) {
            if (t.Gc) {
                if (!n.Gc) {
                    n.Gc = {};
                }
                var i = {
                    aga: "custom",
                    input: e.createGain(),
                    Vca: e.createGain(),
                    dga: e.createDelay(t.Gc.Mfa),
                    Tda: e.createGain(),
                    ega: e.createGain()
                };
                i.dga.delayTime.value = I(n.Gc.delayTime, t.Gc.delayTime);
                i.Tda.gain.value = I(n.Gc.Bda, t.Gc.Bda);
                i.ega.gain.value = I(n.Gc.Pda, t.Gc.Pda);
                i.input.connect(i.dga);
                i.input.connect(i.Vca);
                i.dga.connect(i.Tda);
                i.dga.connect(i.ega);
                i.Tda.connect(i.dga);
                i.ega.connect(i.Vca);
                t.Gc.dga = i;
                t.J0.push(i);
            }
        };
        var A = function(t, n) {
            t.fga = e.createDynamicsCompressor();
            t.fga.attack.value = I(n.fga.attack, t.fga.attack.value);
            t.fga.knee.value = I(n.fga.knee, t.fga.knee.value);
            t.fga.ratio.value = I(n.fga.ratio, t.fga.ratio.value);
            t.fga.release.value = I(n.fga.release, t.fga.release.value);
            t.fga.threshold.value = I(n.fga.threshold, t.fga.threshold.value);
            t.J0.push(t.fga);
        };
        var M = function(t, e) {
            if (!(t.Tfa || e.Tfa)) {
                return;
            }
            var n = {};
            if (t.Tfa) {
                for (var i in t.Tfa) {
                    n[i] = t.Tfa[i];
                }
            }
            if (e.Tfa) {
                for (var i in e.Tfa) {
                    n[i] = e.Tfa[i];
                }
            }
            console.log("tunaconfig: ", n);
            for (var i in n) {
                console.log(i);
                var r = new Wad.Tfa[i](n[i]);
                t.J0.push(r);
            }
        };
        Wad.prototype.Ufa = function(t, e) {};
        Wad.prototype.Pfa = function(t, e) {};
        Wad.prototype.play = function(t) {
            t = t || {
                gga: null
            };
            if (this.Afa < 1) {
                this.Cfa = true;
                this.Dfa = t;
            } else if (this.source === "mic") {
                if (Wad.Ofa) {
                    if (t.gga === null) {
                        E(this, t);
                    } else {
                        a(this, t);
                        o(this, t);
                        f(this, t);
                        u(this, t);
                        this.Ufa(t, e);
                        h(this, t);
                        c(this, t);
                        d(this, t);
                        E(this, t);
                    }
                } else {
                    console.log("You have not given your browser permission to use your microphone.");
                    l(this, t).then(function(e) {
                        e.play(t);
                    });
                }
            } else {
                this.J0 = [];
                if (!t.hga) {
                    t.hga = 0;
                }
                if (t.volume) {
                    this.volume = t.volume;
                } else {
                    this.volume = this.Qfa;
                }
                if (this.source in {
                    Vfa: 0,
                    Wfa: 0,
                    Xfa: 0,
                    Yfa: 0
                }) {
                    g(this, t);
                } else {
                    this._fa = e.createBufferSource();
                    this._fa.buffer = this.Bfa;
                    if (this.source === "noise" || this.loop || t.loop) {
                        this._fa.loop = true;
                    }
                }
                if (t.$fa === undefined) {
                    t.$fa = e.currentTime + t.hga;
                }
                this.J0.push(this._fa);
                m(this, t);
                y(this, t);
                M(this, t);
                this.Pfa(t, e);
                this.gain.unshift(e.createGain());
                this.gain[0].label = t.label;
                this.J0.push(this.gain[0]);
                if (this.gain.length > 15) {
                    this.gain.length = 15;
                }
                if (this.Hfa) {
                    R(this, t);
                }
                w(this, t);
                H(this, t);
                E(this, t);
                if (this.filter && this.filter[0].wfa) {
                    v(this, t);
                }
                p(this, t);
                if (this.Efa) {
                    x(this, t);
                }
                if (this.Gfa) {
                    b(this, t);
                }
            }
            if (t.uU) {
                t.uU(this);
            }
            return this;
        };
        Wad.prototype.Uw = function(t) {
            this.Qfa = t;
            if (this.gain.length > 0) {
                this.gain[0].gain.value = t;
            }
            return this;
        };
        Wad.prototype.iga = function(t) {
            var e;
            if (t && t > 0) e = t; else e = 0;
            if (this._fa) {
                this._fa.playbackRate.value = e;
            } else {
                console.log("Sorry, but the wad does not contain a soundSource!");
            }
            return this;
        };
        Wad.prototype.jga = function(t) {
            if (t in Wad.Rfa) {
                this._fa.frequency.value = Wad.Rfa[t];
            } else {
                this._fa.frequency.value = t;
            }
            return this;
        };
        Wad.prototype.kga = function(t) {
            this._fa.detune.value = t;
            return this;
        };
        Wad.prototype.lga = function(t) {
            this.Lfa.location = t;
            if (i(t) && this.Lfa.type === "3d" && this.Lfa.Yv) {
                this.Lfa.Yv.setPosition(t[0], t[1], t[2]);
            } else if (typeof t === "number" && this.Lfa.type === "stereo" && this.Lfa.Yv) {
                this.Lfa.Yv.bga.value = t;
            }
            if (i(t)) {
                this.Lfa.type = "3d";
            } else if (typeof t === "number") {
                this.Lfa.type = "stereo";
            }
            return this;
        };
        Wad.prototype.mga = function(t) {
            var e;
            if (t && t > 0 && t < 1) e = t; else if (t >= 1) e = 1; else e = 0;
            if (this.Hfa) {
                this.Hfa.Pda = e;
                if (this.Hfa.Yv) {
                    this.Hfa.Yv.Pda.gain.value = e;
                }
            } else {
                console.log("Sorry, but the wad does not contain Reverb!");
            }
            return this;
        };
        Wad.prototype.nga = function(t, e, n) {
            var i;
            if (t && t > 0) i = t; else i = 0;
            var r;
            if (e && e > 0 && e < 1) r = e; else if (e >= 1) r = 1; else r = 0;
            var a;
            if (n && n > 0 && n < 1) a = n; else if (n >= 1) a = 1; else a = 0;
            if (this.Gc) {
                this.Gc.delayTime = i;
                this.Gc.Pda = r;
                this.Gc.Bda = a;
                if (this.Gc.dga) {
                    this.Gc.dga.dga.delayTime.value = i;
                    this.Gc.dga.ega.gain.value = r;
                    this.Gc.dga.Tda.gain.value = a;
                }
            } else {
                console.log("Sorry, but the wad does not contain delay!");
            }
            return this;
        };
        Wad.prototype.stop = function(t) {
            if (!(this.source === "mic")) {
                if (t) {
                    for (var n = 0; n < this.gain.length; n++) {
                        if (this.gain[n].label === t) {
                            this.gain[n].gain.cancelScheduledValues(e.currentTime);
                            this.gain[n].gain.setValueAtTime(this.gain[n].gain.value, e.currentTime);
                            this.gain[n].gain.linearRampToValueAtTime(1e-4, e.currentTime + this.wfa.release);
                        }
                    }
                }
                if (!t) {
                    this.gain[0].gain.cancelScheduledValues(e.currentTime);
                    this.gain[0].gain.setValueAtTime(this.gain[0].gain.value, e.currentTime);
                    this.gain[0].gain.linearRampToValueAtTime(1e-4, e.currentTime + this.wfa.release);
                }
            } else if (Wad.Ofa) {
                this.Nfa.disconnect(0);
            } else {
                console.log("You have not given your browser permission to use your microphone.");
            }
            if (this.Gfa) {
                this.Gfa.cga.stop();
            }
        };
        var O = 2048;
        var S = new Uint8Array(O);
        var U = 134;
        var C = function(t) {
            var e = 12 * (Math.log(t / 440) / Math.log(2));
            return Math.round(e) + 69;
        };
        var L = function(t) {
            return 440 * Math.pow(2, (t - 69) / 12);
        };
        var P = function(t, e) {
            return Math.floor(1200 * Math.log(t / L(e)) / Math.log(2));
        };
        function N(t, e) {
            var n = 4;
            var i = 1e3;
            var r = 1e3;
            var a = -1;
            var s = 0;
            var o = 0;
            var f = false;
            if (t.length < r + i - n) return -1;
            for (var u = 0; u < r; u++) {
                var h = (t[u] - 128) / 128;
                o += h * h;
            }
            o = Math.sqrt(o / r);
            if (o < .01) return -1;
            var c = 1;
            for (var l = n; l <= i; l++) {
                var d = 0;
                for (var u = 0; u < r; u++) {
                    d += Math.abs((t[u] - 128) / 128 - (t[u + l] - 128) / 128);
                }
                d = 1 - d / r;
                if (d > .9 && d > c) f = true; else if (f) {
                    return e / a;
                }
                c = d;
                if (d > s) {
                    s = d;
                    a = l;
                }
            }
            if (s > .01) {
                return e / a;
            }
            return -1;
        }
        Wad.Jfa = function(t) {
            if (!t) {
                t = {};
            }
            this.oga = false;
            this.Afa = 1;
            if (t.Hfa) {
                u(this, t);
            } else {
                this.Kfa(t);
            }
        };
        Wad.Jfa.prototype.Kfa = function(t) {
            this.pga = [];
            this.input = e.createAnalyser();
            this.input.fftSize = 2048;
            this.J0 = [ this.input ];
            this.destination = t.destination || e.destination;
            this.volume = t.volume || 1;
            this.Vca = e.createGain();
            this.Vca.gain.value = this.volume;
            this.Tfa = t.Tfa || null;
            if (!(typeof Recorder === "undefined") && t.qga) {
                this.rga = new Recorder(this.Vca, t.qga);
                this.rga.sga = [];
                var n = this;
                var i = function(t) {
                    n.rga.tga.source = t;
                    n.rga.sga.unshift(new Wad(n.rga.tga));
                };
                this.rga.uga = function(t) {
                    this.tga = t || {
                        wfa: {
                            yfa: 9001
                        }
                    };
                    this.Oca(i);
                };
            }
            this.Sfa = t.Sfa || false;
            a(this, t);
            if (this.filter) {
                T(this, t);
            }
            if (this.Hfa) {
                R(this, t);
            }
            this.Ufa(t, e);
            h(this, t);
            w(this, t);
            if (t.fga) {
                A(this, t);
            }
            c(this, t);
            H(this, t);
            M(this, t);
            this.J0.push(this.Vca);
            E(this, t);
            this.oga = true;
            if (t.uU) {
                t.uU(this);
            }
        };
        Wad.Jfa.prototype.vga = function(t) {
            this.input.getByteTimeDomainData(S);
            var n = N(S, e.sampleRate);
            if (n !== -1 && n !== 11025 && n !== 12e3) {
                var i = n;
                this.pitch = Math.floor(i);
                var r = C(i);
                this.wga = Wad.xga[r - 12];
            }
            var a = this;
            a.yga = window.requestAnimationFrame(function() {
                a.vga();
            });
        };
        Wad.Jfa.prototype.zga = function() {
            cancelAnimationFrame(this.yga);
        };
        Wad.Jfa.prototype.Uw = function(t) {
            if (this.oga) {
                this.Vca.gain.value = t;
            } else {
                console.log("This PolyWad is not set up yet.");
            }
            return this;
        };
        Wad.Jfa.prototype.play = function(t) {
            if (this.oga) {
                if (this.Afa < 1) {
                    this.Cfa = true;
                    this.Dfa = t;
                } else {
                    if (t && t.volume) {
                        this.Vca.gain.value = t.volume;
                        t.volume = undefined;
                    }
                    for (var e = 0; e < this.pga.length; e++) {
                        this.pga[e].play(t);
                    }
                }
            } else {
                console.log("This PolyWad is not set up yet.");
            }
            return this;
        };
        Wad.Jfa.prototype.stop = function(t) {
            if (this.oga) {
                for (var e = 0; e < this.pga.length; e++) {
                    this.pga[e].stop(t);
                }
            }
        };
        Wad.Jfa.prototype.add = function(t) {
            if (this.oga) {
                t.destination = this.input;
                this.pga.push(t);
                if (t instanceof Wad.Jfa) {
                    t.Vca.disconnect(0);
                    t.Vca.connect(this.input);
                }
            } else {
                console.log("This PolyWad is not set up yet.");
            }
            return this;
        };
        Wad.Jfa.prototype.remove = function(t) {
            if (this.oga) {
                for (var n = 0; n < this.pga.length; n++) {
                    if (this.pga[n] === t) {
                        this.pga[n].destination = e.destination;
                        this.pga.splice(n, 1);
                        if (t instanceof Wad.Jfa) {
                            t.Vca.disconnect(0);
                            t.Vca.connect(e.destination);
                        }
                    }
                }
            }
            return this;
        };
        Wad.Jfa.prototype.Ufa = function(t, e) {};
        Wad.Ifa = "https://www.codecur.io/audio/widehall.wav";
        Wad.Aga = function(t) {
            Wad.Hfa = {};
            Wad.Hfa.Yv = e.createConvolver();
            Wad.Hfa.gain = e.createGain();
            Wad.Hfa.gain.gain.value = t.Pda;
            var n = t.nda || Wad.Ifa;
            var i = new XMLHttpRequest();
            i.open("GET", n, true);
            i.responseType = "arraybuffer";
            i.onload = function() {
                e.decodeAudioData(i.response, function(t) {
                    Wad.Hfa.Yv.buffer = t;
                });
            };
            i.send();
        };
        var I = function(t, e) {
            var n = t == null ? e : t;
            return n;
        };
        Wad.Rfa = {
            Bga: 27.5,
            Cga: 29.1352,
            Dga: 29.1352,
            Ega: 30.8677,
            Fga: 32.7032,
            Gga: 30.8677,
            Hga: 32.7032,
            Iga: 34.6478,
            Jga: 34.6478,
            Kga: 36.7081,
            Lga: 38.8909,
            Mga: 38.8909,
            Nga: 41.2034,
            Oga: 41.2034,
            Pga: 43.6535,
            Qga: 43.6535,
            Rga: 46.2493,
            Sga: 46.2493,
            Tga: 48.9994,
            Uga: 51.9131,
            Vga: 51.9131,
            Wga: 55,
            Xga: 58.2705,
            Yga: 58.2705,
            Zga: 61.7354,
            $ga: 61.7354,
            _ga: 65.4064,
            aha: 65.4064,
            bha: 69.2957,
            cha: 69.2957,
            dha: 73.4162,
            eha: 77.7817,
            fha: 77.7817,
            gha: 82.4069,
            hha: 82.4069,
            iha: 87.3071,
            jha: 87.3071,
            kha: 92.4986,
            lha: 92.4986,
            mha: 97.9989,
            nha: 103.826,
            oha: 103.826,
            pha: 110,
            qha: 116.541,
            rha: 116.541,
            sha: 123.471,
            tha: 123.471,
            uha: 130.813,
            vha: 130.813,
            wha: 138.591,
            xha: 138.591,
            yha: 146.832,
            zha: 155.563,
            Aha: 155.563,
            Bha: 164.814,
            Cha: 164.814,
            Dha: 174.614,
            Eha: 174.614,
            Fha: 184.997,
            Gha: 184.997,
            Hha: 195.998,
            Iha: 207.652,
            Jha: 207.652,
            Kha: 220,
            Lha: 233.082,
            Mha: 233.082,
            Nha: 246.942,
            Oha: 246.942,
            Pha: 261.626,
            Qha: 261.626,
            Rha: 277.183,
            Sha: 277.183,
            Tha: 293.665,
            Uha: 311.127,
            Vha: 311.127,
            Wha: 329.628,
            Xha: 329.628,
            Yha: 349.228,
            Zha: 349.228,
            $ha: 369.994,
            _ha: 369.994,
            aia: 391.995,
            bia: 415.305,
            cia: 415.305,
            dia: 440,
            eia: 466.164,
            fia: 466.164,
            gia: 493.883,
            hia: 493.883,
            iia: 523.251,
            jia: 523.251,
            kia: 554.365,
            lia: 554.365,
            mia: 587.33,
            nia: 622.254,
            oia: 622.254,
            pia: 659.255,
            qia: 659.255,
            ria: 698.456,
            sia: 698.456,
            tia: 739.989,
            uia: 739.989,
            via: 783.991,
            wia: 830.609,
            xia: 830.609,
            yia: 880,
            zia: 932.328,
            Aia: 932.328,
            Bia: 987.767,
            Cia: 987.767,
            Dia: 1046.5,
            Eia: 1046.5,
            Fia: 1108.73,
            Gia: 1108.73,
            Hia: 1174.66,
            Iia: 1244.51,
            Jia: 1244.51,
            Kia: 1318.51,
            Lia: 1318.51,
            Mia: 1396.91,
            Nia: 1396.91,
            Oia: 1479.98,
            Pia: 1479.98,
            Qia: 1567.98,
            Ria: 1661.22,
            Sia: 1661.22,
            Tia: 1760,
            Uia: 1864.66,
            Via: 1864.66,
            Wia: 1975.53,
            Xia: 1975.53,
            Yia: 2093,
            Zia: 2093,
            $ia: 2217.46,
            _ia: 2217.46,
            aja: 2349.32,
            bja: 2489.02,
            cja: 2489.02,
            dja: 2637.02,
            eja: 2637.02,
            fja: 2793.83,
            gja: 2793.83,
            hja: 2959.96,
            ija: 2959.96,
            jja: 3135.96,
            kja: 3322.44,
            lja: 3322.44,
            mja: 3520,
            nja: 3729.31,
            oja: 3729.31,
            pja: 3951.07,
            qja: 3951.07,
            rja: 4186.01,
            sja: 4186.01
        };
        Wad.xga = [ "C0", "C#0", "D0", "D#0", "E0", "F0", "F#0", "G0", "G#0", "A0", "A#0", "B0", "C1", "C#1", "D1", "D#1", "E1", "F1", "F#1", "G1", "G#1", "A1", "A#1", "B1", "C2", "C#2", "D2", "D#2", "E2", "F2", "F#2", "G2", "G#2", "A2", "A#2", "B2", "C3", "C#3", "D3", "D#3", "E3", "F3", "F#3", "G3", "G#3", "A3", "A#3", "B3", "C4", "C#4", "D4", "D#4", "E4", "F4", "F#4", "G4", "G#4", "A4", "A#4", "B4", "C5", "C#5", "D5", "D#5", "E5", "F5", "F#5", "G5", "G#5", "A5", "A#5", "B5", "C6", "C#6", "D6", "D#6", "E6", "F6", "F#6", "G6", "G#6", "A6", "A#6", "B6", "C7", "C#7", "D7", "D#7", "E7", "F7", "F#7", "G7", "G#7", "A7", "A#7", "B7", "C8" ];
        Wad.tja = {
            play: function() {
                console.log("playing midi");
            },
            stop: function() {
                console.log("stopping midi");
            }
        };
        Wad.uja = [];
        var q = function(t) {
            console.log(t.vja, t.data);
            if (t.data[0] === 144) {
                if (t.data[2] === 0) {
                    console.log("|| stopping note: ", Wad.xga[t.data[1] - 12]);
                    Wad.tja.stop(Wad.xga[t.data[1] - 12]);
                } else if (t.data[2] > 0) {
                    console.log("> playing note: ", Wad.xga[t.data[1] - 12]);
                    Wad.tja.play({
                        pitch: Wad.xga[t.data[1] - 12],
                        label: Wad.xga[t.data[1] - 12],
                        uU: function(t) {}
                    });
                }
            } else if (t.data[0] === 176) {
                console.log("controller");
                if (t.data[1] == 46) {
                    if (t.data[2] == 127) {
                        Wad.tja.wja = true;
                    } else if (t.data[2] == 0) {
                        Wad.tja.wja = false;
                    }
                }
            } else if (t.data[0] === 224) {
                console.log("pitch bend");
            }
        };
        var z = function(t) {
            Wad.uja = [];
            var e = t.xja.values();
            for (var n = e.next(); !n.done; n = e.next()) {
                Wad.uja.push(n.value);
            }
            console.log("MIDI inputs: ", Wad.uja);
            for (var i = 0; i < Wad.uja.length; i++) {
                Wad.uja[i].yja = q;
            }
        };
        var B = function(t) {
            console.log("uh-oh! Something went wrong!  Error code: " + t.code);
        };
        if (navigator && navigator.zja) {
            try {
                navigator.zja().then(z, B);
            } catch (t) {
                var k = "There was an error on this page.\n\n";
                k += "Error description: " + t.message + "\n\n";
                k += "Click OK to continue.\n\n";
                console.log(k);
            }
        }
        Wad.Aja = {
            Bja: {
                source: "noise",
                wfa: {
                    attack: .001,
                    Tx: .008,
                    xfa: .2,
                    yfa: .03,
                    release: .01
                },
                filter: {
                    type: "highpass",
                    frequency: 400,
                    RA: 1
                }
            },
            Cja: {
                source: "noise",
                wfa: {
                    attack: .001,
                    Tx: .01,
                    xfa: .2,
                    yfa: .03,
                    release: .02
                },
                filter: {
                    type: "bandpass",
                    frequency: 300,
                    RA: .18
                }
            },
            Dja: {
                source: "noise",
                wfa: {
                    attack: .001,
                    Tx: .008,
                    xfa: .2,
                    yfa: .43,
                    release: .01
                },
                filter: {
                    type: "highpass",
                    frequency: 100,
                    RA: .2
                }
            },
            Eja: {
                source: "square",
                volume: .3,
                wfa: {
                    attack: .01,
                    Tx: .002,
                    xfa: .5,
                    yfa: 2.5,
                    release: .3
                },
                filter: {
                    type: "lowpass",
                    frequency: 600,
                    RA: 7,
                    wfa: {
                        attack: .7,
                        frequency: 1600
                    }
                },
                Efa: {
                    attack: 8,
                    speed: 8,
                    Ffa: 100
                }
            },
            Fja: {
                source: "square",
                volume: 1.4,
                wfa: {
                    attack: .01,
                    Tx: .005,
                    xfa: .2,
                    yfa: .015,
                    release: .3
                },
                filter: {
                    type: "lowpass",
                    frequency: 1200,
                    RA: 8.5,
                    wfa: {
                        attack: .2,
                        frequency: 600
                    }
                }
            }
        };
        return Wad;
    }();
    if (typeof module !== "undefined" && module.Lb) {
        module.Lb = Wad;
    }
    return Wad;
});

!function(t, e) {
    function n(t, e, n) {
        return i.Gja(e((n || i.Hja)(t)));
    }
    e.Ija = t, t.Jja = function() {
        function t(t) {
            return t = t.split(x, 2), 2 === t.length && t[0] ? t[0] : null;
        }
        function e(t, e, n, i) {
            function r(t, n, r, s) {
                return n ? (n = Number(n[0] <= "9" ? n : "0" + n), i ? M(n) : 128 === n ? "€" : 130 === n ? "‚" : 131 === n ? "ƒ" : 132 === n ? "„" : 133 === n ? "…" : 134 === n ? "†" : 135 === n ? "‡" : 136 === n ? "ˆ" : 137 === n ? "‰" : 138 === n ? "Š" : 139 === n ? "‹" : 140 === n ? "Œ" : 142 === n ? "Ž" : 145 === n ? "‘" : 146 === n ? "’" : 147 === n ? "“" : 148 === n ? "”" : 149 === n ? "•" : 150 === n ? "–" : 151 === n ? "—" : 152 === n ? "˜" : 153 === n ? "™" : 154 === n ? "š" : 155 === n ? "›" : 156 === n ? "œ" : 158 === n ? "ž" : 159 === n ? "Ÿ" : n >= 55296 && 57343 >= n || 13 === n ? "�" : a.Kja(n)) : e[r || s] || t;
            }
            return e = e || p, n = n || v, void 0 === t ? "undefined" : null === t ? "null" : t.toString().replace(h, "�").replace(n, r);
        }
        function n(t) {
            return "\\" + t.charCodeAt(0).toString(16).toLowerCase() + " ";
        }
        function i(t) {
            return t.replace(T, function(t) {
                return "-x-" + t;
            });
        }
        function r(n) {
            n = a.Hja(e(n));
            var i = t(n);
            return i && w[i.toLowerCase()] ? "##" + n : n;
        }
        var a, s = /</g, o = /"/g, f = /'/g, u = /&/g, h = /\x00/g, c = /(?:^$|[\x00\x09-\x0D "'`=<>])/g, l = /[&<>"'`]/g, d = /(?:\x00|^-*!?>|--!?>|--?!?$|\]>|\]$)/g, v = /&(?:#([xX][0-9A-Fa-f]+|\d+);?|(Tab|NewLine|colon|semi|lpar|rpar|apos|sol|comma|excl|ast|midast|ensp|emsp|thinsp);|(nbsp|amp|AMP|lt|LT|gt|GT|quot|QUOT);?)/g, p = {
            Lja: "\t",
            Mja: "\n",
            Nja: ":",
            Oja: ";",
            Pja: "(",
            Qja: ")",
            BW: "'",
            Rja: "/",
            Sja: ",",
            Tja: "!",
            Uja: "*",
            Vja: "*",
            oZ: " ",
            pZ: " ",
            qZ: " ",
            DW: " ",
            AW: "&",
            qf: "<",
            Ke: ">",
            zW: '"',
            Wja: '"'
        }, E = /^(?:(?!-*expression)#?[-\w]+|[+-]?(?:\d+|\d*\.\d+)(?:r?em|ex|ch|cm|mm|in|px|pt|pc|%|vh|vw|vmin|vmax)?|!important|)$/i, g = /[\x00-\x1F\x7F\[\]{}\\"]/g, m = /[\x00-\x1F\x7F\[\]{}\\']/g, T = /url[\(\u207D\u208D]+/g, y = /['\(\)]/g, R = /\/\/%5[Bb]([A-Fa-f0-9:]+)%5[Dd]/, w = {
            Xja: 1,
            data: 1,
            Yja: 1,
            Zja: 1,
            $ja: 1
        }, x = /(?::|&#[xX]0*3[aA];?|&#0*58;?|&colon;)/, b = /(?:^[\x00-\x20]+|[\t\n\r\x00]+)/g, H = {
            Lja: "\t",
            Mja: "\n"
        }, A = function(t, e, n) {
            return void 0 === t ? "undefined" : null === t ? "null" : t.toString().replace(e, n);
        }, M = String.fromCodePoint || function(t) {
            return 0 === arguments.length ? "" : 65535 >= t ? String.fromCharCode(t) : (t -= 65536, 
            String.fromCharCode((t >> 10) + 55296, t % 1024 + 56320));
        };
        return a = {
            Kja: function(t) {
                return void 0 === t || null === t ? "" : !isFinite(t = Number(t)) || 0 >= t || t > 1114111 || t >= 1 && 8 >= t || t >= 14 && 31 >= t || t >= 127 && 159 >= t || t >= 64976 && 65007 >= t || 11 === t || 65535 === (65535 & t) || 65534 === (65535 & t) ? "�" : M(t);
            },
            d: e,
            _ja: function(n) {
                return n = t(n.replace(h, "")), n ? e(n, H, null, !0).replace(b, "").toLowerCase() : null;
            },
            y: function(t) {
                return A(t, l, function(t) {
                    return "&" === t ? "&amp;" : "<" === t ? "&lt;" : ">" === t ? "&gt;" : '"' === t ? "&quot;" : "'" === t ? "&#39;" : "&#96;";
                });
            },
            aka: function(t) {
                return A(t, u, "&amp;");
            },
            bka: function(t) {
                return A(t, s, "&lt;");
            },
            cka: function(t) {
                return A(t, d, function(t) {
                    return "\0" === t ? "�" : "--!" === t || "--" === t || "-" === t || "]" === t ? t + " " : t.slice(0, -1) + " >";
                });
            },
            dka: function(t) {
                return A(t, o, "&quot;");
            },
            eka: function(t) {
                return A(t, f, "&#39;");
            },
            fka: function(t) {
                return A(t, c, function(t) {
                    return "\t" === t ? "&#9;" : "\n" === t ? "&#10;" : "\v" === t ? "&#11;" : "\f" === t ? "&#12;" : "\r" === t ? "&#13;" : " " === t ? "&#32;" : "=" === t ? "&#61;" : "<" === t ? "&lt;" : ">" === t ? "&gt;" : '"' === t ? "&quot;" : "'" === t ? "&#39;" : "`" === t ? "&#96;" : "�";
                });
            },
            gka: encodeURI,
            hka: encodeURIComponent,
            Gja: function(t) {
                return w[a._ja(t)] ? "x-" + t : t;
            },
            Hja: function(t) {
                return a.gka(t).replace(R, function(t, e) {
                    return "//[" + e + "]";
                });
            },
            ika: function(t) {
                return a.Gja(a.Hja(t));
            },
            jka: function(t) {
                return t = e(t), E.test(t) ? t : ";-x:'" + i(t.replace(m, n)) + "';-v:";
            },
            kka: function(t) {
                return i(e(t).replace(g, n));
            },
            lka: function(t) {
                return i(e(t).replace(m, n));
            },
            mka: function(t) {
                return r(t).replace(y, function(t) {
                    return "'" === t ? "\\27 " : "(" === t ? "%28" : "%29";
                });
            },
            nka: function(t) {
                return r(t);
            },
            oka: function(t) {
                return r(t).replace(f, "\\27 ");
            }
        };
    };
    var i = t.pka = t.Jja();
    t.qka = i.bka, t.rka = i.cka, t.ska = i.eka, t.tka = i.dka, t.uka = i.fka, t.vka = function(t) {
        return n(t, i.eka);
    }, t.wka = function(t) {
        return n(t, i.dka);
    }, t.xka = function(t) {
        return n(t, i.fka);
    }, t.yka = i.Hja, t.zka = function(t) {
        return i.cka(i.Hja(t));
    }, t.Aka = function(t) {
        return n(t, i.eka, i.gka);
    }, t.Bka = function(t) {
        return n(t, i.dka, i.gka);
    }, t.Cka = function(t) {
        return n(t, i.fka, i.gka);
    }, t.Dka = i.gka, t.Eka = function(t) {
        return i.cka(i.gka(t));
    }, t.Fka = t.Aka, t.Gka = t.Bka, t.Hka = t.Cka, t.Ika = t.Dka, t.Jka = t.Eka, t.Kka = function(t) {
        return i.eka(i.hka(t));
    }, t.Lka = function(t) {
        return i.dka(i.hka(t));
    }, t.Mka = function(t) {
        return i.fka(i.hka(t));
    }, t.Nka = i.hka, t.Oka = function(t) {
        return i.cka(i.hka(t));
    }, t.Pka = function(t) {
        return i.Gja(i.eka(i.hka(t)));
    }, t.Qka = function(t) {
        return i.Gja(i.dka(i.hka(t)));
    }, t.Rka = function(t) {
        return i.Gja(i.fka(i.hka(t)));
    }, t.Ska = t.Nka, t.Tka = t.Oka;
}({}, function() {
    return this;
}());

var NODEJS = typeof module !== "undefined" && module.Lb;

var ZOR = ZOR || {};

ZOR.Uka = {
    Vka: 1e3,
    Wka: 3,
    Xka: 9,
    Yka: 5,
    Zka: 5,
    ZT: true,
    $ka: false,
    _ka: "LOCAL",
    ala: false,
    bla: false,
    cla: false,
    dla: true,
    ela: 2
};

if (NODEJS) module.Lb = ZOR.Uka;

var ZOR = ZOR || {};

var NODEJS = typeof module !== "undefined" && module.Lb;

if (NODEJS) {
    global.self = {};
    global.THREE = require("three");
    var _ = _ || require("lodash");
    ZOR.Uka = require("../common/environment.js");
}

var config = {};

config.ZT = false;

config.fla = false;

config.cla = true;

config.Vka = 1600;

config.gla = Math.sqrt(Math.pow(Math.sqrt(Math.pow(config.Vka, 2) + Math.pow(config.Vka, 2)), 2) + Math.pow(config.Vka, 2));

config.Wka = 12;

config.hla = 100;

config.ila = 8080;

config.jla = 31e3;

config.ela = 4;

config.kla = 25;

config.$ka = true;

config.lla = 3e4;

config.mla = 1e3;

config.nla = 5e3;

config.ola = 200;

config.pla = 40;

config.qla = 3e3;

config.bla = true;

config.rla = 6e4;

config.sla = 10;

config.tla = 29;

config.ala = true;

config.ula = 100;

config.vla = 4e3;

config.wla = 1e4;

if (!NODEJS) {
    config.xla = function t() {
        var e = localStorage.getItem("balancer");
        if (e) {
            return e;
        }
        var n = window.aP();
        console.log("Nearest linode location: ", n);
        switch (n) {
          case "london":
          case "frankfurt":
          case "singapore":
          case "fremont":
          case "newark":
          case "dallas":
            e = "dallas";
            break;

          default:
            e = "dallas";
        }
        return e;
    };
    config._ka = config.xla();
}

config.yla = Object.freeze({
    zla: "localhost",
    Ala: "uswest.zor.bio",
    Bla: "uscentral.zor.bio",
    Cla: "useast.zor.bio",
    Dla: "uk.zor.bio",
    Ela: "eu.zor.bio",
    Fla: "apac.zor.bio",
    j$: "zor.bio"
});

config.Yka = 5;

config.Gla = 150;

config.Hla = 2;

config.Ila = config.Gla + 25;

config.Jla = function t(e) {
    return e / 2;
};

config.Kla = function t(e) {
    var n = config.Hla;
    return n - e * n / config.Ila;
};

config.Lla = function t(e) {
    return Math.floor(e * 10);
};

config.dla = true;

config.Mla = Object.freeze({
    Nla: {
        Ola: "DRAG",
        Pla: .2
    },
    Qla: {
        Ola: "FOLLOW",
        Rla: .01,
        Sla: 10,
        Pla: .3
    }
});

config.Tla = config.Mla.Qla;

config.Ula = 1;

config.Vla = 1;

config.Wla = 500;

config.Xla = config.Yka;

config.Yla = 1.75;

config.Zla = .05;

config.$la = 300;

config._la = .4;

config.ama = 65;

config.Xka = 25;

config.Zka = .5;

config.bma = 3e4;

config.cma = 60;

config.dma = 1;

config.ema = "random";

config.fma = "hsl01";

config.gma = 8;

config.hma = function t(e) {
    return config.Zka / (e - 4);
};

config.ima = true;

config.jma = 10;

config.kma = 1;

config.lma = .08;

config.mma = .1;

config.nma = 30;

config.oma = 20;

config.pma = 1;

config.qma = 7;

config.rma = 1;

config.sma = 5;

config.tma = 1e4;

config.uma = 15;

config.u = true;

config.vma = 100;

config.t = 1e3;

config.wma = THREE.Di.aj;

config.xma = 50;

config.yma = 20;

config.zma = 50;

config.Ama = .2;

config.Bma = 64;

config.Cma = false;

config.Dma = true;

config.Ema = [ "ANGLE_instanced_arrays" ];

config.Fma = .001;

config.Gma = .0175;

config.Hma = 100;

config.Ima = 500;

config.Jma = .5;

config.Kma = (config.Ima - config.Hma) / (config.Gla - config.Yka);

config.Lma = function t(e) {
    return Math.floor(e * config.Kma * config.Gma) / config.Gma + config.Hma;
};

config.Mma = {};

function generateCameraZoomSteps() {
    var t = config.Yka;
    var e = 0;
    var n = config.Lma(t);
    var i = 0;
    while (t <= config.Gla) {
        i = config.Lma(t);
        if (i > n) {
            var r = Math.floor(n);
            config.Mma[r] = {
                min: e,
                max: t
            };
            e = t;
            n = i;
        }
        t += .1;
    }
    config.Mma[Math.floor(i)] = {
        min: e,
        max: Infinity
    };
}

generateCameraZoomSteps();

config.Nma = [ "#e5353a", "#e53570", "#e535c4", "#7135e5", "#353de5", "#3588e5", "#35dde5", "#35e5a3", "#35e569", "#36e535", "#96e535", "#e5bf35", "#e57035", "#e53f35", "#e40000", "#38FF4D", "#38FFC3", "#417AFF", "#41ACFF", "#5941FF", "#99FF38", "#A040FF", "#E140FF", "#F8FF38", "#FF386A", "#FF6B38", "#FF6DD2", "#FFB638", "#FFF42E" ];

config.Oma = {
    default: "default",
    h: "earth",
    ga: "boing",
    ha: "reddit"
};

if (!NODEJS) {
    config.Pma = localStorage.Qma || .45;
    config.Rma = localStorage.Sma || 1;
    config.Tma = false;
    config.Uma = [ "D3", "E3", "G3", "G4", "A3", "A4", "D4", "B3", "B4", "C3", "E4", "Gb3" ];
    config.Vma = .05;
}

config.Wma = [];

_.assign(config, ZOR.Uka);

if (NODEJS) {
    module.Lb = config;
} else {
    config._ka = config.yla[config._ka];
    if (!config.ZT) {
        console.log = function() {};
    }
}

if (!config.ZT) {
    Raven.RP("https://5b9c66b633364e43bc97ec763be5d018@app.getsentry.com/94111").bQ();
}

(function() {
    function t(t) {
        var e = new THREE.Am();
        var n = t.Cm.no.bind(t.Cm);
        t.Cm.no = function(t, i, r, a, s, o) {
            return n(t, i, r, a, s, o).multiply(e);
        };
        t.Xma = function(t) {
            e.io(t);
            this.zx();
        };
    }
    function e(e) {
        this.object = e;
        t(this.object);
        this.target = new THREE.qq();
        this.Yma = 0;
        this.maxDistance = Infinity;
        this.Zma = -Infinity;
        this.$ma = Infinity;
        this._ma = -Infinity;
        this.ana = Infinity;
        this.bna = false;
        this.cna = .25;
        this.dna = new THREE.K();
        this.ena = 0;
        var n = this;
        var i = 1e-6;
        var r;
        var a;
        var s = 0;
        var o = 0;
        var f = 1;
        var u = false;
        this.fna = function() {
            return a;
        };
        this.gna = function() {
            return r;
        };
        this.hna = function(t) {
            o -= t * config.Vla;
        };
        this.ina = function(t) {
            s -= t * config.Ula;
        };
        this.jna = function() {
            var t = new THREE.K();
            return function e(i) {
                var r = this.object.matrix.elements;
                t.set(r[0], r[1], r[2]);
                t.Ri(-i);
                n.dna.add(t);
            };
        }();
        this.kna = function() {
            var t = new THREE.K();
            return function e(i) {
                var r = this.object.matrix.elements;
                t.set(r[4], r[5], r[6]);
                t.Ri(i);
                n.dna.add(t);
            };
        }();
        this.bga = function(t, e, i, r) {
            var a = n.object.position;
            var s = a.clone().sub(n.target.position);
            var o = s.length();
            var f = n.lna ? 1 : -1;
            o *= Math.tan(n.object.Ex / 2 * Math.PI / 180);
            n.jna(2 * f * t * o / r);
            n.kna(2 * f * e * o / r);
        };
        this.mna = function(t) {
            f /= t;
        };
        this.nna = function(t) {
            f *= t;
        };
        this.update = function() {
            var t = new THREE.K();
            var h = new THREE.Dl().Nl(e.tq, new THREE.K(0, 1, 0));
            var c = h.clone().inverse();
            var l = new THREE.K();
            var d = new THREE.Dl();
            n.lna = false;
            return function() {
                var e = this.object.position;
                t.xi(e).sub(this.target.position);
                t.um(h);
                r = Math.atan2(t.x, t.z);
                a = Math.atan2(Math.sqrt(Math.pow(t.x, 2) + Math.pow(t.z, 2)), t.y);
                if (n.lna) {
                    if (a - s > Math.PI || a - s < 0) {
                        r += Math.PI;
                        a %= Math.PI;
                        n.lna = false;
                        this.object.Xma(0);
                    }
                } else {
                    if (a + s > Math.PI || a + s < 0) {
                        r += Math.PI;
                        a %= Math.PI;
                        n.lna = true;
                        this.object.Xma(Math.PI);
                    }
                }
                if (n.lna) {
                    r -= o;
                    a -= s;
                } else {
                    r += o;
                    a += s;
                }
                var v = t.length() * f;
                v = Math.max(this.Yma, Math.min(this.maxDistance, v));
                t.x = v * Math.sin(a) * Math.sin(r);
                t.y = v * Math.cos(a);
                t.z = v * Math.sin(a) * Math.cos(r);
                t.um(c);
                e.xi(this.target.position).add(t);
                this.object.ao(this.target.position);
                if (this.bna === true) {
                    o *= 1 - this.cna;
                    s *= 1 - this.cna;
                } else {
                    o = 0;
                    s = 0;
                }
                f = 1;
                if (u || l.km(this.object.position) > i || 8 * (1 - d.Ol(this.object.wq)) > i) {
                    l.xi(this.object.position);
                    d.xi(this.object.wq);
                    u = false;
                    return true;
                }
                return false;
            };
        }();
    }
    THREE.ona = function(t, n) {
        var i = new e(t);
        this.fG = n !== undefined ? n : document;
        Object.defineProperty(this, "constraint", {
            get: function() {
                return i;
            }
        });
        this.fna = function() {
            return i.fna();
        };
        this.gna = function() {
            return i.gna();
        };
        this.enabled = true;
        this.dn = this.target.position;
        this.pna = true;
        this.qna = 1;
        this.rna = true;
        this.sna = config.Tla.Pla;
        this.tna = true;
        this.una = 7;
        this.vna = false;
        this.wna = 2;
        this.xna = true;
        this.keys = {
            eg: 37,
            yna: 38,
            gg: 39,
            zna: 40
        };
        this.Ana = {
            Bna: THREE.dg.eg,
            Cna: THREE.dg.fg,
            Dna: THREE.dg.gg
        };
        var r = this;
        var a = new THREE.fa();
        var s = new THREE.fa();
        var o = new THREE.fa();
        var f = new THREE.fa();
        var u = new THREE.fa();
        var h = new THREE.fa();
        var c = new THREE.fa();
        var l = new THREE.fa();
        var d = new THREE.fa();
        var v = {
            NONE: -1,
            Ena: 0,
            Fna: 1,
            Dna: 2,
            Gna: 3,
            Hna: 4,
            Ina: 5
        };
        var p = 0;
        var E = 0;
        var g = v.NONE;
        this.Jna = this.target.position.clone();
        this.Kna = this.object.position.clone();
        this.Lna = this.object.zoom;
        var m = {
            type: "change"
        };
        var T = {
            type: "start"
        };
        var y = {
            type: "end"
        };
        var R = new THREE.fa();
        var w = r.fG === document ? r.fG.body : r.fG;
        function x(t, e) {
            var n = r.fG === document ? r.fG.body : r.fG;
            i.bga(t, e, n.clientWidth, n.clientHeight);
        }
        this.update = function() {
            if (this.vna && g === v.NONE) {
                i.hna(b());
            }
            if (config.Tla.Ola === "FOLLOW") {
                if (r.rna === false) return;
                R.Xl(w.clientWidth / 2 - p);
                R.Yl(w.clientHeight / 2 - E);
                var t = R.length();
                R.normalize().Ri(M(t));
                s.xi(R);
                o.bm(s, a);
                i.hna(R.x);
                i.ina(R.y);
                a.xi(s);
            }
            if (i.update() === true) {
                this.dispatchEvent(m);
            }
        };
        this.reset = function() {
            g = v.NONE;
            this.target.position.xi(this.Jna);
            this.object.position.xi(this.Kna);
            this.object.zoom = this.Lna;
            this.object.zx();
            this.dispatchEvent(m);
            this.update();
        };
        function b() {
            return 2 * Math.PI / 60 / 60 * r.wna;
        }
        function H() {
            return Math.pow(.95, r.qna);
        }
        function A(t) {
            if (r.enabled === false) return;
            if (config.Tla.Ola !== "DRAG") return;
            t.preventDefault();
            if (t.button === r.Ana.Bna) {
                if (r.rna === false) return;
                g = v.Ena;
                a.set(t.clientX, t.clientY);
            } else if (t.button === r.Ana.Dna) {
                if (r.tna === false) return;
                g = v.Dna;
                f.set(t.clientX, t.clientY);
            }
            if (g !== v.NONE) {
                document.addEventListener("mousemove", O, false);
                document.addEventListener("mouseup", S, false);
                r.dispatchEvent(T);
            }
        }
        function M(t) {
            return Math.min(0, -1 * config.Tla.Sla * (t - config.Tla.Rla));
        }
        function O(t) {
            p = t.clientX;
            E = t.clientY;
            if (r.enabled === false) return;
            if (config.Tla.Ola !== "DRAG") return;
            t.preventDefault();
            var e = r.fG === document ? r.fG.body : r.fG;
            if (g === v.Ena) {
                if (r.rna === false) return;
                s.set(t.clientX, t.clientY);
                o.bm(s, a);
                i.hna(2 * Math.PI * o.x / e.clientWidth * r.sna);
                i.ina(2 * Math.PI * o.y / e.clientHeight * r.sna);
                a.xi(s);
            } else if (g === v.Fna) {
                if (r.pna === false) return;
                l.set(t.clientX, t.clientY);
                d.bm(l, c);
                if (d.y > 0) {
                    i.mna(H());
                } else if (d.y < 0) {
                    i.nna(H());
                }
                c.xi(l);
            } else if (g === v.Dna) {
                if (r.tna === false) return;
                u.set(t.clientX, t.clientY);
                h.bm(u, f);
                x(h.x, h.y);
                f.xi(u);
            }
            if (g !== v.NONE) r.update();
        }
        function S() {
            if (r.enabled === false) return;
            document.removeEventListener("mousemove", O, false);
            document.removeEventListener("mouseup", S, false);
            r.dispatchEvent(y);
            g = v.NONE;
        }
        function U(t) {
            if (r.enabled === false || r.pna === false || g !== v.NONE) return;
            t.preventDefault();
            t.stopPropagation();
            var e = 0;
            if (t.wheelDelta !== undefined) {
                e = t.wheelDelta;
            } else if (t.detail !== undefined) {
                e = -t.detail;
            }
            if (e > 0) {
                i.nna(H());
            } else if (e < 0) {
                i.mna(H());
            }
            r.update();
            r.dispatchEvent(T);
            r.dispatchEvent(y);
        }
        function C(t) {
            if (r.enabled === false || r.xna === false || r.tna === false) return;
            switch (t.keyCode) {
              case r.keys.yna:
                x(0, r.una);
                r.update();
                break;

              case r.keys.zna:
                x(0, -r.una);
                r.update();
                break;

              case r.keys.eg:
                x(r.una, 0);
                r.update();
                break;

              case r.keys.gg:
                x(-r.una, 0);
                r.update();
                break;
            }
        }
        function L(t) {
            if (r.enabled === false) return;
            switch (t.touches.length) {
              case 1:
                if (r.rna === false) return;
                g = v.Gna;
                a.set(t.touches[0].pageX, t.touches[0].pageY);
                break;

              case 2:
                if (r.pna === false) return;
                g = v.Hna;
                var e = t.touches[0].pageX - t.touches[1].pageX;
                var n = t.touches[0].pageY - t.touches[1].pageY;
                var i = Math.sqrt(e * e + n * n);
                c.set(0, i);
                break;

              case 3:
                if (r.tna === false) return;
                g = v.Ina;
                f.set(t.touches[0].pageX, t.touches[0].pageY);
                break;

              default:
                g = v.NONE;
            }
            if (g !== v.NONE) r.dispatchEvent(T);
        }
        function P(t) {
            if (r.enabled === false) return;
            t.preventDefault();
            t.stopPropagation();
            var e = r.fG === document ? r.fG.body : r.fG;
            switch (t.touches.length) {
              case 1:
                if (r.rna === false) return;
                if (g !== v.Gna) return;
                s.set(t.touches[0].pageX, t.touches[0].pageY);
                o.bm(s, a);
                i.hna(2 * Math.PI * o.x / e.clientWidth * r.sna);
                i.ina(2 * Math.PI * o.y / e.clientHeight * r.sna);
                a.xi(s);
                r.update();
                break;

              case 2:
                if (r.pna === false) return;
                if (g !== v.Hna) return;
                var n = t.touches[0].pageX - t.touches[1].pageX;
                var p = t.touches[0].pageY - t.touches[1].pageY;
                var E = Math.sqrt(n * n + p * p);
                l.set(0, E);
                d.bm(l, c);
                if (d.y > 0) {
                    i.nna(H());
                } else if (d.y < 0) {
                    i.mna(H());
                }
                c.xi(l);
                r.update();
                break;

              case 3:
                if (r.tna === false) return;
                if (g !== v.Ina) return;
                u.set(t.touches[0].pageX, t.touches[0].pageY);
                h.bm(u, f);
                x(h.x, h.y);
                f.xi(u);
                r.update();
                break;

              default:
                g = v.NONE;
            }
        }
        function N() {
            if (r.enabled === false) return;
            r.dispatchEvent(y);
            g = v.NONE;
        }
        function I(t) {
            t.preventDefault();
        }
        this.Es = function() {
            this.fG.removeEventListener("contextmenu", I, false);
            this.fG.removeEventListener("mousedown", A, false);
            this.fG.removeEventListener("mousewheel", U, false);
            this.fG.removeEventListener("MozMousePixelScroll", U, false);
            this.fG.removeEventListener("touchstart", L, false);
            this.fG.removeEventListener("touchend", N, false);
            this.fG.removeEventListener("touchmove", P, false);
            document.removeEventListener("mousemove", O, false);
            document.removeEventListener("mouseup", S, false);
            window.removeEventListener("keydown", C, false);
        };
        this.fG.addEventListener("contextmenu", I, false);
        this.fG.addEventListener("mousedown", A, false);
        this.fG.addEventListener("mousemove", O, false);
        this.fG.addEventListener("mousewheel", U, false);
        this.fG.addEventListener("MozMousePixelScroll", U, false);
        this.fG.addEventListener("touchstart", L, false);
        this.fG.addEventListener("touchend", N, false);
        this.fG.addEventListener("touchmove", P, false);
        window.addEventListener("keydown", C, false);
        this.update();
    };
    THREE.ona.prototype = Object.create(THREE.Xp.prototype);
    THREE.ona.prototype.constructor = THREE.ona;
    Object.defineProperties(THREE.ona.prototype, {
        object: {
            get: function() {
                return this.Mna.object;
            }
        },
        dna: {
            get: function() {
                return this.Mna.dna;
            }
        },
        target: {
            get: function() {
                return this.Mna.target;
            },
            set: function(t) {
                this.Mna.target = t;
            }
        },
        Yma: {
            get: function() {
                return this.Mna.Yma;
            },
            set: function(t) {
                this.Mna.Yma = t;
            }
        },
        maxDistance: {
            get: function() {
                return this.Mna.maxDistance;
            },
            set: function(t) {
                this.Mna.maxDistance = t;
            }
        },
        Nna: {
            get: function() {
                return this.Mna.Nna;
            },
            set: function(t) {
                this.Mna.Nna = t;
            }
        },
        Ona: {
            get: function() {
                return this.Mna.Ona;
            },
            set: function(t) {
                this.Mna.Ona = t;
            }
        },
        Zma: {
            get: function() {
                return this.Mna.Zma;
            },
            set: function(t) {
                this.Mna.Zma = t;
            }
        },
        $ma: {
            get: function() {
                return this.Mna.$ma;
            },
            set: function(t) {
                this.Mna.$ma = t;
            }
        },
        _ma: {
            get: function() {
                return this.Mna._ma;
            },
            set: function(t) {
                this.Mna._ma = t;
            }
        },
        ana: {
            get: function() {
                return this.Mna.ana;
            },
            set: function(t) {
                this.Mna.ana = t;
            }
        },
        bna: {
            get: function() {
                return this.Mna.bna;
            },
            set: function(t) {
                this.Mna.bna = t;
            }
        },
        cna: {
            get: function() {
                return this.Mna.cna;
            },
            set: function(t) {
                this.Mna.cna = t;
            }
        },
        Pna: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");
                return !this.pna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");
                this.pna = !t;
            }
        },
        Qna: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");
                return !this.rna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");
                this.rna = !t;
            }
        },
        Rna: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .noPan has been deprecated. Use .enablePan instead.");
                return !this.tna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .noPan has been deprecated. Use .enablePan instead.");
                this.tna = !t;
            }
        },
        Sna: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");
                return !this.xna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");
                this.xna = !t;
            }
        },
        Tna: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");
                return !this.Mna.bna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");
                this.Mna.bna = !t;
            }
        },
        Una: {
            get: function() {
                console.warn("THREE.FollowOrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");
                return this.Mna.cna;
            },
            set: function(t) {
                console.warn("THREE.FollowOrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");
                this.Mna.cna = t;
            }
        }
    });
})();

THREE.Vna = function(t, e) {
    var n = this;
    var i = {
        NONE: -1,
        Ena: 0,
        Cna: 1,
        Dna: 2,
        Gna: 3,
        Wna: 4
    };
    this.object = t;
    this.fG = e !== undefined ? e : document;
    this.enabled = true;
    this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    };
    this.sna = 1;
    this.qna = 1.2;
    this.Xna = .3;
    this.Qna = false;
    this.Pna = false;
    this.Rna = false;
    this.Tna = false;
    this.Una = 0;
    this.Yma = 0;
    this.maxDistance = Infinity;
    this.keys = [ 65, 83, 68 ];
    this.dna = new THREE.K();
    this.target = new THREE.K();
    this.Yna = config.Tla.Ola === "FOLLOW";
    var r = 1e-6;
    var a = new THREE.K();
    var s = i.NONE, o = i.NONE, f = new THREE.K(), u = new THREE.fa(), h = new THREE.fa(), c = new THREE.K(), l = 0, d = new THREE.fa(), v = new THREE.fa(), p = 0, E = 0, g = new THREE.fa(), m = new THREE.fa();
    this.Jna = this.target.clone();
    this.Kna = this.object.position.clone();
    this.Zna = this.object.tq.clone();
    var T = {
        type: "change"
    };
    var y = {
        type: "start"
    };
    var R = {
        type: "end"
    };
    this.$na = function() {
        if (this.fG === document) {
            this.screen.left = 0;
            this.screen.top = 0;
            this.screen.width = window.innerWidth;
            this.screen.height = window.innerHeight;
        } else {
            var t = this.fG.getBoundingClientRect();
            var e = this.fG.ownerDocument.documentElement;
            this.screen.left = t.left + window.pageXOffset - e.clientLeft;
            this.screen.top = t.top + window.pageYOffset - e.clientTop;
            this.screen.width = t.width;
            this.screen.height = t.height;
        }
    };
    this.YQ = function(t) {
        if (typeof this[t.type] == "function") {
            this[t.type](t);
        }
    };
    var w = function() {
        var t = new THREE.fa();
        return function e(i, r) {
            t.set(config.Vla * (i - n.screen.left) / n.screen.width, config.Ula * (r - n.screen.top) / n.screen.height);
            return t;
        };
    }();
    var x = function() {
        var t = new THREE.fa();
        return function e(i, r) {
            t.set(config.Vla * ((i - n.screen.width * .5 - n.screen.left) / (n.screen.width * .5)), config.Ula * ((n.screen.height + 2 * (n.screen.top - r)) / n.screen.width));
            return t;
        };
    }();
    this._na = function() {
        var t = new THREE.K(), e = new THREE.Dl(), i = new THREE.K(), r = new THREE.K(), a = new THREE.K(), s = new THREE.K(), o = new THREE.fa(), d, v = 0;
        return function d() {
            if (n.Yna) {
                o.set(h.x, h.y);
                var p = o.length();
                o.normalize().Ri(UTIL.aoa(p));
                s.set(o.x, o.y, 0);
                u.set(0, 0);
                v += s.length() * ZOR.boa.get();
            } else {
                s.set(h.x - u.x, h.y - u.y, 0);
                v = s.length();
            }
            if (v) {
                f.xi(n.object.position).sub(n.target);
                i.xi(f).normalize();
                r.xi(n.object.tq).normalize();
                a.Pl(r, i).normalize();
                r.mm(h.y - u.y);
                a.mm(h.x - u.x);
                s.xi(r.add(a));
                t.Pl(s, f).normalize();
                v *= n.sna;
                e.Ll(t, v);
                f.um(e);
                n.object.tq.um(e);
                c.xi(t);
                l = v;
            } else if (!n.Tna && l) {
                l *= Math.sqrt(1 - n.Una);
                f.xi(n.object.position).sub(n.target);
                e.Ll(c, l);
                f.um(e);
                n.object.tq.um(e);
            }
            u.xi(h);
        };
    }();
    this.coa = function() {
        var t;
        if (s === i.Wna) {
            t = p / E;
            p = E;
            f.Ri(t);
        } else {
            t = 1 + (v.y - d.y) * n.qna;
            if (t !== 1 && t > 0) {
                f.Ri(t);
                if (n.Tna) {
                    d.xi(v);
                } else {
                    d.y += (v.y - d.y) * this.Una;
                }
            }
        }
    };
    this.doa = function() {
        var t = new THREE.fa(), e = new THREE.K(), i = new THREE.K();
        return function r() {
            t.xi(m).sub(g);
            if (t.Rl()) {
                t.Ri(f.length() * n.Xna);
                i.xi(f).Hm(n.object.tq).mm(t.x);
                i.add(e.xi(n.object.tq).mm(t.y));
                n.object.position.add(i);
                n.target.add(i);
                if (n.Tna) {
                    g.xi(m);
                } else {
                    g.add(t.bm(m, g).Ri(n.Una));
                }
            }
        };
    }();
    this.eoa = function() {
        if (!n.Pna || !n.Rna) {
            if (f.Rl() > n.maxDistance * n.maxDistance) {
                n.object.position._l(n.target, f.mm(n.maxDistance));
                d.xi(v);
            }
            if (f.Rl() < n.Yma * n.Yma) {
                n.object.position._l(n.target, f.mm(n.Yma));
                d.xi(v);
            }
        }
    };
    this.update = function() {
        f.bm(n.object.position, n.target);
        if (!n.Qna) {
            n._na();
        }
        if (!n.Pna) {
            n.coa();
        }
        if (!n.Rna) {
            n.doa();
        }
        n.object.position._l(n.target, f);
        n.eoa();
        n.object.ao(n.target);
        if (a.km(n.object.position) > r) {
            n.dispatchEvent(T);
            a.xi(n.object.position);
        }
    };
    this.reset = function() {
        s = i.NONE;
        o = i.NONE;
        n.target.xi(n.Jna);
        n.object.position.xi(n.Kna);
        n.object.tq.xi(n.Zna);
        f.bm(n.object.position, n.target);
        n.object.ao(n.target);
        n.dispatchEvent(T);
        a.xi(n.object.position);
    };
    function b(t) {
        if (n.enabled === false) return;
        window.removeEventListener("keydown", b);
        o = s;
        if (s !== i.NONE) {
            return;
        } else if (t.keyCode === n.keys[i.Ena] && !n.Qna) {
            s = i.Ena;
        } else if (t.keyCode === n.keys[i.Cna] && !n.Pna) {
            s = i.Cna;
        } else if (t.keyCode === n.keys[i.Dna] && !n.Rna) {
            s = i.Dna;
        }
    }
    function H(t) {
        if (n.enabled === false) return;
        s = o;
        window.addEventListener("keydown", b, false);
    }
    function A(t) {
        if (n.enabled === false) return;
        t.preventDefault();
        t.stopPropagation();
        if (s === i.NONE) {
            s = t.button;
        }
        if (s === i.Ena && !n.Qna) {
            h.xi(x(t.pageX, t.pageY));
            u.xi(h);
        } else if (s === i.Cna && !n.Pna) {
            d.xi(w(t.pageX, t.pageY));
            v.xi(d);
        } else if (s === i.Dna && !n.Rna) {
            g.xi(w(t.pageX, t.pageY));
            m.xi(g);
        }
        if (!n.Yna) {
            document.addEventListener("mousemove", M, false);
            document.addEventListener("mouseup", O, false);
        }
        n.dispatchEvent(y);
    }
    function M(t) {
        if (n.enabled === false) return;
        t.preventDefault();
        t.stopPropagation();
        if (s === i.Ena && !n.Qna || n.Yna) {
            u.xi(h);
            h.xi(x(t.pageX, t.pageY));
        } else if (s === i.Cna && !n.Pna) {
            v.xi(w(t.pageX, t.pageY));
        } else if (s === i.Dna && !n.Rna) {
            m.xi(w(t.pageX, t.pageY));
        }
    }
    function O(t) {
        if (n.enabled === false) return;
        t.preventDefault();
        t.stopPropagation();
        s = i.NONE;
        if (!n.Yna) {
            document.removeEventListener("mousemove", M);
            document.removeEventListener("mouseup", O);
        }
        n.dispatchEvent(R);
    }
    function S(t) {
        if (n.enabled === false) return;
        t.preventDefault();
        t.stopPropagation();
        var e = 0;
        if (t.wheelDelta) {
            e = t.wheelDelta / 40;
        } else if (t.detail) {
            e = -t.detail / 3;
        }
        d.y += e * .01;
        n.dispatchEvent(y);
        n.dispatchEvent(R);
    }
    function U(t) {
        if (n.enabled === false) return;
        switch (t.touches.length) {
          case 1:
            s = i.Gna;
            h.xi(x(t.touches[0].pageX, t.touches[0].pageY));
            u.xi(h);
            break;

          case 2:
            s = i.Wna;
            var e = t.touches[0].pageX - t.touches[1].pageX;
            var r = t.touches[0].pageY - t.touches[1].pageY;
            E = p = Math.sqrt(e * e + r * r);
            var a = (t.touches[0].pageX + t.touches[1].pageX) / 2;
            var o = (t.touches[0].pageY + t.touches[1].pageY) / 2;
            g.xi(w(a, o));
            m.xi(g);
            break;

          default:
            s = i.NONE;
        }
        n.dispatchEvent(y);
    }
    function C(t) {
        if (n.enabled === false) return;
        t.preventDefault();
        t.stopPropagation();
        switch (t.touches.length) {
          case 1:
            u.xi(h);
            h.xi(x(t.touches[0].pageX, t.touches[0].pageY));
            break;

          case 2:
            var e = t.touches[0].pageX - t.touches[1].pageX;
            var r = t.touches[0].pageY - t.touches[1].pageY;
            E = Math.sqrt(e * e + r * r);
            var a = (t.touches[0].pageX + t.touches[1].pageX) / 2;
            var o = (t.touches[0].pageY + t.touches[1].pageY) / 2;
            m.xi(w(a, o));
            break;

          default:
            s = i.NONE;
        }
    }
    function L(t) {
        if (n.enabled === false) return;
        switch (t.touches.length) {
          case 1:
            u.xi(h);
            h.xi(x(t.touches[0].pageX, t.touches[0].pageY));
            break;

          case 2:
            p = E = 0;
            var e = (t.touches[0].pageX + t.touches[1].pageX) / 2;
            var r = (t.touches[0].pageY + t.touches[1].pageY) / 2;
            m.xi(w(e, r));
            g.xi(m);
            break;
        }
        s = i.NONE;
        n.dispatchEvent(R);
    }
    function P(t) {
        t.preventDefault();
    }
    this.Es = function() {
        this.fG.removeEventListener("contextmenu", P, false);
        this.fG.removeEventListener("mousedown", A, false);
        this.fG.removeEventListener("mousewheel", S, false);
        this.fG.removeEventListener("MozMousePixelScroll", S, false);
        this.fG.removeEventListener("touchstart", U, false);
        this.fG.removeEventListener("touchend", L, false);
        this.fG.removeEventListener("touchmove", C, false);
        document.removeEventListener("mousemove", M, false);
        document.removeEventListener("mouseup", O, false);
        window.removeEventListener("keydown", b, false);
        window.removeEventListener("keyup", H, false);
    };
    this.fG.addEventListener("contextmenu", P, false);
    if (!this.Yna) {
        this.fG.addEventListener("mousedown", A, false);
    }
    this.fG.addEventListener("mousemove", M, false);
    this.fG.addEventListener("mousewheel", S, false);
    this.fG.addEventListener("MozMousePixelScroll", S, false);
    this.fG.addEventListener("touchstart", U, false);
    this.fG.addEventListener("touchend", L, false);
    this.fG.addEventListener("touchmove", C, false);
    window.addEventListener("keydown", b, false);
    window.addEventListener("keyup", H, false);
    window.addEventListener("resize", _.Ud(this.$na.bind(this), 50));
    this.$na();
    this.update();
};

THREE.Vna.prototype = Object.create(THREE.Xp.prototype);

THREE.Vna.prototype.constructor = THREE.Vna;

var NODEJS = typeof module !== "undefined" && module.Lb;

if (NODEJS) var config = require("./config.js");

if (NODEJS) var _ = require("lodash");

if (NODEJS) var xssFilters = require("xss-filters");

var UTIL = {};

UTIL.foa = function t(e, n) {
    return Math.floor(Math.random() * (n - e + 1)) + e;
};

UTIL.goa = function t(e, n) {
    return Math.random() * (n - e) + e;
};

UTIL.hoa = function t(e) {
    var n = /^\w*$/;
    return n.exec(e) !== null;
};

UTIL.ioa = function t(e) {
    var n = e * 1 / config.Gla;
    return n;
};

UTIL.bn = function t(e, n) {
    e[n] = new THREE.K().xi(e[n]);
};

function hitp(t, e, n, i, r) {
    return t[r] + e - n[r] > i[r] / 2;
}

function hitn(t, e, n, i, r) {
    return t[r] - e - n[r] < -i[r] / 2;
}

function hitxp(t, e, n, i) {
    return hitp(t, e, n, i, "x");
}

function hitxn(t, e, n, i) {
    return hitn(t, e, n, i, "x");
}

function hityp(t, e, n, i) {
    return hitp(t, e, n, i, "y");
}

function hityn(t, e, n, i) {
    return hitn(t, e, n, i, "y");
}

function hitzp(t, e, n, i) {
    return hitp(t, e, n, i, "z");
}

function hitzn(t, e, n, i) {
    return hitn(t, e, n, i, "z");
}

UTIL.joa = function t(e, n, i, r) {
    return hitxp(e, n, i, r) || hitxn(e, n, i, r) || hityp(e, n, i, r) || hityn(e, n, i, r) || hitzp(e, n, i, r) || hitzn(e, n, i, r);
};

UTIL.koa = function t(e, n, i, r) {
    var a = i.clone();
    if (hitxp(e, n, i, r) || hitxn(e, n, i, r)) a.x = 0;
    if (hityp(e, n, i, r) || hityn(e, n, i, r)) a.y = 0;
    if (hitzp(e, n, i, r) || hitzn(e, n, i, r)) a.z = 0;
    return a;
};

UTIL.aoa = function t(e) {
    return Math.max(0, (-config.Tla.Rla + e) / config.Tla.Sla);
};

UTIL.loa = function t() {
    var e = arguments[0] || Math.random();
    var n = config.Vka - 2 * config.Yka;
    return e * n - n / 2;
};

UTIL.moa = function t() {
    var e = UTIL.loa();
    var n = UTIL.loa();
    var i = UTIL.loa();
    return new THREE.K(e, n, i);
};

UTIL.noa = function t(e, n) {
    return {
        x: +e.x.toFixed(n),
        y: +e.y.toFixed(n),
        z: +e.z.toFixed(n)
    };
};

UTIL.ooa = function t(e) {
    return e + (4 - e % 4);
};

UTIL.poa = function t(e, n) {
    return +e.toFixed(n);
};

UTIL.qoa = function t(e, n, i) {
    e.splice(_.Df(e, n, i), 0, n);
};

UTIL.roa = function t(e) {
    return foodCrayons[e];
};

var foodCrayons = {
    random: function t() {
        return {
            r: UTIL.foa(0, 255) / 255,
            wi: UTIL.foa(0, 255) / 255,
            b: UTIL.foa(0, 255) / 255
        };
    },
    soa: function t(e, n, i) {
        var r = (e + n + i) / (2 * config.Vka);
        var a = 1;
        var s = .6;
        var o = new THREE.T().Bi(r, a, s);
        return {
            r: o.r,
            wi: o.wi,
            b: o.b
        };
    },
    toa: function t(e, n, i) {
        return {
            r: .5 + e / config.Vka,
            wi: .5 + n / config.Vka,
            b: .5 + i / config.Vka
        };
    },
    uoa: function t(e, n, i) {
        return {
            r: .5 + e / config.Vka + UTIL.foa(-128, 128) / 512,
            wi: .5 + n / config.Vka + UTIL.foa(-128, 128) / 512,
            b: .5 + i / config.Vka + UTIL.foa(-128, 128) / 512
        };
    },
    voa: function t(e, n, i) {
        var r, a, s;
        if (e >= 0 && n >= 0 && i >= 0) {
            r = 1;
            a = 0;
            s = 0;
        } else if (e < 0 && n >= 0 && i >= 0) {
            r = 0;
            a = 1;
            s = 0;
        } else if (e < 0 && n < 0 && i >= 0) {
            r = 0;
            a = 0;
            s = 1;
        } else if (e >= 0 && n < 0 && i >= 0) {
            r = 1;
            a = 1;
            s = 0;
        } else if (e >= 0 && n >= 0 && i < 0) {
            r = 0;
            a = 1;
            s = 1;
        } else if (e < 0 && n >= 0 && i < 0) {
            r = 1;
            a = 1;
            s = 1;
        } else if (e < 0 && n < 0 && i < 0) {
            r = 1;
            a = 0;
            s = 1;
        } else if (e >= 0 && n < 0 && i < 0) {
            r = .5;
            a = 0;
            s = .1;
        }
        return {
            r: r,
            wi: a,
            b: s
        };
    },
    woa: function t(e, n, i) {
        return {
            r: Math.sin(e / (config.Vka / config.gma)) / 2 + 1 / 2,
            wi: Math.sin(n / (config.Vka / config.gma)) / 2 + 1 / 2,
            b: Math.sin(i / (config.Vka / config.gma)) / 2 + 1 / 2
        };
    }
};

UTIL.xoa = function t(e) {
    return foodMaps[e];
};

var foodMaps = {
    random: function t(e, n) {
        var i = config.Vka / 2;
        var r = config.Vka / n;
        var a = 3;
        var s = 0;
        var o = new Int16Array(e * 3);
        for (var f = 1; f < n; ++f) {
            for (var u = 1; u < n; ++u) {
                for (var h = 1; h < n; ++h) {
                    var c = i - f * r + UTIL.foa(-r, r);
                    var l = i - u * r + UTIL.foa(-r, r);
                    var d = i - h * r + UTIL.foa(-r, r);
                    o[s] = c;
                    o[s + 1] = l;
                    o[s + 2] = d;
                    s += a;
                }
            }
        }
        return o;
    },
    yoa: function t(e, n) {
        var i = config.Vka / 2;
        var r = config.Vka / n;
        var a = 3;
        var s = 0;
        var o = new Int16Array(e * 3);
        for (var f = 1; f < n; ++f) {
            for (var u = 1; u < n; ++u) {
                for (var h = 1; h < n; ++h) {
                    var c = i - f * r;
                    var l = i - u * r;
                    var d = i - h * r;
                    o[s] = c;
                    o[s + 1] = l;
                    o[s + 2] = d;
                    s += a;
                }
            }
        }
        return o;
    }
};

UTIL.zoa = function t(e, n) {
    var i = 0;
    var r = Math.max(n, 0);
    return function() {
        if (i === r) {
            i = 0;
            return e.apply(this, arguments);
        } else {
            i++;
        }
    };
};

UTIL.Aoa = function t(e) {
    return !e || /^\s*$/.test(e);
};

UTIL.Boa = function t(e, n, i) {
    e.push(n);
    if (e.length > i) {
        e.shift();
    }
};

UTIL.Coa = function t(e) {
    var n = new ArrayBuffer(e.length);
    var i = new Uint8Array(n);
    for (var r = 0; r < e.length; ++r) {
        i[r] = e[r];
    }
    return n;
};

UTIL.Doa = function t(e, n) {
    return _.findIndex(e, function(t) {
        return t.id == n;
    });
};

UTIL.Eoa = function t(e) {
    var n = new Uint8Array(e);
    return n[0];
};

UTIL.Foa = function t(e, n, i) {
    console.log(e, (i - n).toFixed(3));
};

UTIL.Goa = function t(e) {
    var n = xssFilters.qka(e);
    if (UTIL.Aoa(n)) {
        n = "Guest";
    } else if (e.length > config.uma) {
        n = n.substr(0, config.uma);
    }
    return n;
};

UTIL.Si = function t(e, n, i) {
    return (1 - i) * e + i * n;
};

if (NODEJS) module.Lb = UTIL;

var NODEJS = typeof module !== "undefined" && module.Lb;

if (NODEJS) var THREE = require("three");

if (NODEJS) var UTIL = require("./util.js");

if (NODEJS) var config = require("./config.js");

if (NODEJS) var _ = require("lodash");

var ZOR = ZOR || {};

ZOR.Hoa = function t() {
    this.Ioa = [];
    this.Joa = [];
    this.Koa = [];
};

ZOR.Hoa.prototype.init = function t(e, n) {
    this.Loa = new THREE.K(e, e, e);
    this.Moa = n;
    if (n > 0) {
        this.Noa();
    }
};

ZOR.Hoa.prototype.Noa = function t() {
    this.Ooa = Math.pow(this.Moa - 1, 3);
    this.Poa = new Uint32Array(this.Ooa);
    this.Qoa = [];
    this.Roa = [];
    var e = UTIL.xoa(config.ema);
    this.Soa = e(this.Ooa, this.Moa);
};

ZOR.Hoa.prototype.Toa = function t(e) {
    if (!e.id) {
        throw "Actors must have an ID";
    }
    this.Ioa.push(e);
};

ZOR.Hoa.prototype.reduce = function t() {
    return {
        Ioa: this.Uoa(this.Ioa),
        Joa: this.Uoa(this.Joa),
        Loa: this.Loa,
        Soa: this.Soa,
        Ooa: this.Ooa,
        Moa: this.Moa,
        Poa: this.Poa,
        Roa: this.Roa,
        Qoa: this.Qoa
    };
};

ZOR.Hoa.prototype.Uoa = function t(e, n) {
    var i = [];
    e.forEach(function t(e) {
        i.push(e.reduce(n));
    });
    return i;
};

ZOR.Hoa.prototype.Voa = function t(e) {
    return this.Uoa(this.Ioa, e);
};

ZOR.Hoa.prototype.Woa = function t(e) {
    return this.Ioa[UTIL.Doa(this.Ioa, e)];
};

ZOR.Hoa.prototype.Xoa = function t(e) {
    return this.Joa[UTIL.Doa(this.Joa, e)];
};

ZOR.Hoa.prototype.Yoa = function t(e) {
    var n = UTIL.Doa(this.Joa, e);
    var i = this.Joa[n];
    var r = _.findIndex(this.Ioa, function(t) {
        return t.Zoa == e;
    });
    var a = this.Ioa[r];
    if (i) {
        r = UTIL.Doa(this.Ioa, i.p.id);
        a = this.Ioa[r];
        this.Joa.splice(n, 1);
    }
    if (a) {
        this.Ioa.splice(r, 1);
    }
};

ZOR.$oa = Object.freeze({
    _oa: "UNDEFINED",
    apa: "PLAYER_SPHERE",
    bpa: "FOOD",
    cpa: "PORTAL",
    dpa: "OBSTACLE",
    epa: "SPECTATOR"
});

ZOR.fpa = function t() {
    this.position = new THREE.K(0, 0, 0);
    this.D5 = new THREE.K(0, 0, 0);
    this.scale = 1;
    this.type = ZOR.$oa._oa;
    this.gpa = [];
};

ZOR.fpa.prototype.reduce = function t() {
    return this;
};

ZOR.fpa.prototype.hpa = function t(e) {
    e.position = new THREE.K(e.position.x, e.position.y, e.position.z);
    if (this.gpa.length === 0) {
        this.gpa.push(e);
    } else {
        var n = this.gpa[this.gpa.length - 1].time;
        var i = e.time;
        if (i > n) {
            this.gpa.push(e);
            while (this.gpa.length > config.nma) {
                this.gpa.shift();
            }
        }
    }
};

ZOR.ipa = function t(e, n, i, r, a, s) {
    ZOR.fpa.call(this);
    this.type = ZOR.$oa.apa;
    if (i) {
        this.position = new THREE.K(i.x, i.y, i.z);
    }
    if (r) {
        this.scale = r;
        this.jpa = r;
    } else {
        this.scale = config.Yka;
        this.jpa = config.Yka;
    }
    if (a) {
        this.D5 = a;
        UTIL.bn(this, "velocity");
    } else {
        this.D5 = {
            x: 0,
            y: 0,
            z: 0
        };
    }
    this.color = n;
    this.KC = s;
    this.kpa = 0;
    this.lpa = false;
    this.Zoa = e;
    this.id = this.Zoa;
};

ZOR.ipa.prototype = Object.create(ZOR.fpa.prototype);

ZOR.ipa.constructor = ZOR.ipa;

ZOR.ipa.prototype.reduce = function t(e) {
    var n = e || false;
    var i = {
        id: this.id,
        position: this.position,
        D5: this.D5,
        scale: this.scale,
        kpa: this.kpa,
        lpa: this.lpa
    };
    if (!n) {
        i.type = this.type;
        i.color = this.color;
        i.KC = this.KC;
        i.Zoa = this.Zoa;
    }
    return i;
};

ZOR.ipa.prototype.N = function t() {
    return this.scale;
};

ZOR.ipa.prototype.mpa = function t(e) {
    this.jpa += e;
    if (this.jpa > config.Gla) {
        this.jpa = config.Gla;
    } else if (this.jpa < config.Yka) {
        this.jpa = config.Yka;
    }
    this.scale = this.jpa;
};

ZOR.npa = Object.freeze({
    epa: "SPECTATOR",
    opa: "PLAYER",
    ppa: "BOT"
});

ZOR.qpa = function t(e, n, i, r, a, s, o, f) {
    var u = this;
    this.id = e;
    this.name = n;
    this.type = r;
    this.rpa = this.spa = Date.now();
    this.p = new ZOR.ipa(this.id, i, a, s, o, f);
    this.tpa = {};
    this.tpa.upa = new ZOR.vpa(this.p);
    this.tpa.upa.jT("deactivate", function() {
        u.p.gpa = [];
    });
    this.wpa = 0;
    this.xpa = 0;
    this.ypa = 0;
    this.zpa = 0;
    this.Apa = 0;
    this.Bpa = 0;
    this.Cpa = 0;
    this.Dpa = 0;
    this.Epa = 0;
    this.Fpa = new ZOR.Gpa(100);
    this.Hpa = new ZOR.Gpa(20, true);
    this.Ipa = new ZOR.Gpa(200);
    this.Jpa = new ZOR.Gpa(200);
    this.Kpa = new ZOR.Gpa(200);
    this.Lpa = new ZOR.Gpa(320);
};

ZOR.qpa.prototype.reduce = function t() {
    return {
        id: this.id,
        name: this.name,
        type: this.type,
        p: this.p.reduce()
    };
};

ZOR.qpa.prototype.Mpa = function t() {
    return config.Lla(this.p.scale);
};

ZOR.qpa.prototype.Npa = function t() {
    var e = config.Kla(this.p.scale);
    if (this.tpa.upa.Opa()) {
        e = e * config.Yla;
    }
    return e;
};

ZOR.qpa.prototype.Ppa = function t() {
    return this.Npa() * 3 + this.p.scale * 2 + 10;
};

ZOR.qpa.prototype.update = function t() {
    var e = Object.getOwnPropertyNames(this.tpa);
    for (var n = 0, i = e.length; n < i; n++) {
        var r = this.tpa[e[n]];
        r.update();
    }
};

ZOR.Gpa = function t(e, n) {
    this.threshold = e;
    this.Qpa = n || false;
    this.Rpa = Date.now();
    this.Spa = [];
    this.tf = 0;
    this.max = 0;
    this.min = 0;
    this.Tpa = 0;
};

ZOR.Gpa.prototype.add = function t(e) {
    e = +e;
    UTIL.Boa(this.Spa, e, config.ula);
    this.tf = Math.round(_.tf(this.Spa));
    this.max = _.max(this.Spa);
    this.min = _.min(this.Spa);
    if (this.Qpa) {
        if (e < this.threshold) {
            this.Tpa++;
        }
    } else {
        if (e > this.threshold) {
            this.Tpa++;
        }
    }
};

ZOR.Upa = function t() {
    var e = this;
    this.Opa = undefined;
    this.Sca = undefined;
    this.Vpa = undefined;
    this.Wpa = undefined;
    this.update = undefined;
    e.Q1 = {
        Sca: [],
        Vpa: [],
        update: []
    };
    this.jT = function t(n, i) {
        e.Q1[n].push(i);
    };
};

ZOR.vpa = function t(e) {
    this.p = e;
    ZOR.Upa.call(this);
    this.active = false;
    this.Xpa = config.Xla;
    this.Ypa = 0;
    this.Zpa = undefined;
    this.$pa = 0;
    this.Wpa = function t() {
        return !this.active && this.p.scale > this.Xpa;
    };
    this.Opa = function t() {
        return this.active;
    };
    this.Sca = function t() {
        if (!this.Wpa()) return false;
        this.active = true;
        this.Zpa = Date.now() - this.Ypa;
        this.p.lpa = true;
        this.$pa = 1e3;
        for (var e = 0; e < this.Q1.Sca.length; e++) {
            if (typeof this.Q1.Sca[e] === "function") {
                this.Q1.Sca[e]();
            }
        }
        return true;
    };
    this.Vpa = function t() {
        this.active = false;
        this.p.lpa = false;
        this.Zpa = undefined;
        for (var e = 0; e < this.Q1.Vpa.length; e++) {
            if (typeof this.Q1.Vpa[e] === "function") {
                this.Q1.Vpa[e]();
            }
        }
    };
    this.update = function t() {
        if (!this.active) {
            if (this.$pa > 0) {
                this.$pa = Math.max(this.$pa - config.pla, 0);
            } else if (this.Ypa > 0) {
                this.Ypa = Math.max(this.Ypa - config.pla, 0);
            }
            return;
        }
        this.Ypa = Date.now() - this.Zpa;
        for (var e = 0; e < this.Q1.update.length; e++) {
            if (typeof this.Q1.update[e] === "function") {
                this.Q1.update[e]();
            }
        }
    };
};

ZOR.vpa.prototype = Object.create(ZOR.Upa.prototype);

ZOR.vpa.constructor = ZOR.vpa;

ZOR.lock = {};

ZOR._pa = function t() {
    var e = Object.getOwnPropertyNames(ZOR.lock);
    for (var n = 0, i = e.length; n < i; n++) {
        var r = e[n];
        if (ZOR.lock[r] > 0) {
            console.log("Lock expiring in: ", r, ZOR.lock[r]);
            ZOR.lock[r] -= config.ola;
        } else {
            console.log("lock expired:", r);
            delete ZOR.lock[r];
        }
    }
};

ZOR.aqa = function t() {
    var e = 0;
    function n() {
        return ++e;
    }
    return {
        bqa: n
    };
}();

if (NODEJS) module.Lb = ZOR;

var NODEJS = typeof module !== "undefined" && module.Lb;

if (NODEJS) var schemapack = require("schemapack");

var ZOR = ZOR || {};

ZOR.cqa = function t() {
    var e = {
        x: "float32",
        y: "float32",
        z: "float32"
    };
    var n = {
        id: "varuint",
        position: e,
        D5: e,
        scale: "float32",
        kpa: "varuint",
        lpa: "boolean",
        type: "string",
        color: "uint8",
        KC: "string",
        Zoa: "varuint"
    };
    var i = {
        id: "varuint",
        position: e,
        D5: e,
        scale: "float32",
        kpa: "varuint",
        lpa: "boolean"
    };
    var r = {
        id: "varuint",
        name: "string",
        type: "string",
        p: n
    };
    var a = {
        Ioa: [ n ],
        Joa: [ r ],
        Loa: {
            x: "uint16",
            y: "uint16",
            z: "uint16"
        },
        Soa: [ "int16" ],
        Ooa: "uint32",
        Moa: "uint8",
        Poa: [ "varuint" ],
        Roa: [ "varuint" ],
        Qoa: [ "varuint" ]
    };
    var s = {
        dqa: "varuint",
        eqa: "varuint"
    };
    var o = {
        fr: [ "varuint" ],
        fqa: "string",
        Koa: [ s ]
    };
    var f = {
        position: e,
        N: "float32",
        time: "varuint"
    };
    var u = {
        gqa: "varuint",
        N: "float32"
    };
    var h = {
        0: "uint8",
        hqa: "string",
        q: a
    };
    var c = {
        0: "uint8",
        iqa: r
    };
    var l = {
        0: "uint8",
        Ioa: [ i ]
    };
    var d = {
        0: "uint8",
        dqa: "varuint",
        jqa: "varuint",
        kqa: "varuint",
        lqa: "varuint",
        mqa: "varuint",
        nqa: f,
        oqa: f,
        pqa: f,
        qqa: f,
        rqa: f,
        sqa: [ u ]
    };
    var v = {
        0: "uint8",
        tqa: "varuint",
        uqa: "varuint",
        vqa: "varuint",
        wqa: "varuint",
        xqa: "varuint",
        eqa: "varuint"
    };
    var p = {
        0: "uint8",
        yqa: o
    };
    var E = {
        zqa: 1,
        Aqa: 2,
        Bqa: 3,
        Cqa: 4,
        Dqa: 5,
        Eqa: 6
    };
    return {
        Fqa: E,
        Gqa: schemapack.XS(h),
        Hqa: schemapack.XS(l),
        Iqa: schemapack.XS(d),
        Jqa: schemapack.XS(p),
        Kqa: schemapack.XS(v),
        Lqa: schemapack.XS(c)
    };
}();

if (NODEJS) module.Lb = ZOR.cqa;

var ZOR = ZOR || {};

ZOR.boa = function t() {
    var e = 1 / 60 * 1e3;
    var n = a();
    var i = 1;
    var r = e / 1e3;
    function a() {
        return Date.now();
    }
    function s() {
        if (config.Dma) {
            var t = a();
            var s = t - n;
            var o = 1 / (s / 1e3);
            n = t;
            i = s / e;
            r = .2 * o + .8 * r;
        }
    }
    function o() {
        return i;
    }
    function f() {
        return r;
    }
    return {
        update: s,
        get: o,
        Mqa: f
    };
}();

var ZOR = ZOR || {};

ZOR.Nqa = function t() {
    var e = {
        Oqa: {
            Pqa: new Wad({
                source: "sine",
                volume: config.Vma,
                wfa: {
                    attack: .001,
                    Tx: .001,
                    xfa: .9,
                    yfa: .1,
                    release: .5
                }
            }),
            Qqa: new Wad({
                source: "noise",
                volume: .35,
                wfa: {
                    attack: .5,
                    Tx: .5,
                    xfa: 1,
                    yfa: 3600,
                    release: .5
                },
                filter: {
                    type: "lowpass",
                    frequency: 300,
                    RA: 1
                }
            }),
            Rqa: new Wad({
                source: "sine",
                volume: config.Rma,
                pitch: config.Uma[2],
                wfa: {
                    attack: .1,
                    Tx: .001,
                    xfa: .1,
                    yfa: .1,
                    release: .1
                }
            }),
            Sqa: new Wad({
                volume: config.Rma,
                source: "sfx/player_capture.wav"
            })
        }
    };
    if (!config.Tma) {
        e.Tqa = {};
    }
    return e;
}();

var ZOR = ZOR || {};

ZOR.Uqa = function t() {
    var e;
    var n = false;
    var i = [ "json", "websockets", "webgl", "flexbox" ];
    var r = {
        Vqa: "menu-game-screen",
        Wqa: "menu-game-screen",
        Xqa: "menu-game-screen",
        Yqa: "menu-store-screen",
        Zqa: "menu-config-screen",
        $qa: "playing",
        _qa: "playing-config",
        ara: "respawn-screen",
        bra: "kicked-screen",
        cra: "game-init-error",
        dra: "server-msg-screen",
        era: "credits-screen",
        fra: "tutorial-screen"
    };
    var a = {
        gra: "player-login-keypress",
        hra: "player-login",
        ira: "player-respawn",
        jra: "page-reload",
        kra: "show-credits",
        lra: "show-menu",
        mra: "show-tutorial",
        nra: "show-playing-config",
        ora: "show-previous",
        pra: "show-menu-game-screen ",
        qra: "show-menu-store-screen ",
        rra: "show-menu-config-screen ",
        sra: "toggle-y-axis",
        tra: "toggle-x-axis",
        ura: "volume-music",
        vra: "volume-sfx",
        wra: "set-skin"
    };
    var s = {
        state: "",
        xra: r.Vqa,
        yra: r,
        zra: a,
        Nma: config.Nma,
        cla: config.cla,
        ZT: config.ZT,
        Ara: [],
        Bra: [ "Michael Clayton", "Jared Sprague" ],
        Cra: _(ZOR.g).map(_.partial(_.Ob, _, "meta")).Ld("meta.sort").value(),
        Dra: localStorage.KC || "default",
        Koa: [],
        Era: isMobile.N8,
        Fra: 0,
        Gra: 0,
        Hra: JSON.parse(localStorage.Hra || "false"),
        Ira: JSON.parse(localStorage.Ira || "false"),
        Jra: config.Tma,
        volume: {
            Tqa: config.Pma,
            Oqa: config.Rma
        }
    };
    var o = {
        yra: r,
        zra: a,
        data: s,
        state: d,
        jT: v,
        hH: h
    };
    var f = [];
    var u = r.Vqa;
    function h() {
        s.target = undefined;
    }
    function c(t) {
        var n = t.id.replace("-template", "");
        e.partials[n] = t.textContent;
    }
    function l(t) {
        return _.includes(_.values(r), t);
    }
    function d(t) {
        if (!t) return s.state;
        if (t !== d()) {
            ZOR.Nqa.Oqa.Rqa.play();
        }
        if (t !== s.xra) {
            s.xra = s.state;
        }
        if (typeof t !== "undefined" && l(t)) {
            console.log("entering state " + t);
            s.state = t;
            e.update();
        }
        ga("send", {
            Kra: "event",
            Lra: "StateChange",
            Mra: t
        });
        return s.state;
    }
    function v(t, i) {
        if (t === "init") {
            if (n) {
                i.call(this);
            } else {
                f.push(i.bind(this));
            }
        } else {
            e.jT(t, i);
        }
    }
    function p() {
        var t = _.chain(E()).keys().$d(config.Wma).Yc(i).value();
        _.assign(s.Ara, t);
        if (t.length) {
            console.log("Missing browser feature(s): " + JSON.stringify(t));
        }
        if (t.length) {
            d(r.cra);
        }
    }
    function E() {
        return _.chain(Modernizr).Ie().qd().value();
    }
    function g() {
        e.set("screen_x", window.innerWidth);
        e.set("screen_y", window.innerHeight);
    }
    function m() {
        Ractive.ZT = config.ZT;
        e = new Ractive({
            sT: "#ui-overlay",
            Mf: "#ui-template",
            data: s
        });
        o.Nra = e;
        o.update = R();
        p();
        _.Zf(document.querySelectorAll('script[type="text/ractive"]'), c);
        d(r.Vqa);
        y();
        _.ad(f, _.call);
        e.sT.classList.add("active");
        var t = s.Cra.length;
        while (t--) {
            var i = s.Cra[t];
            if (i.W.ja && i.W.ja != window.location.search) {
                s.Cra.splice(t, 1);
            }
        }
        n = true;
        g();
        window.addEventListener("resize", g, false);
    }
    function T(t) {
        return function() {
            d(t);
        };
    }
    function y() {
        if (localStorage.Ora) {
            e.set("alpha_key", localStorage.Ora);
        }
        if (localStorage.Pra) {
            e.set("player_name", localStorage.Pra);
        }
        v(a.ura, function t() {
            var e = this.get("volume.music");
            ZOR.Nqa.Tqa.background.volume(e);
            localStorage.Qma = e;
        });
        v(a.vra, function t() {
            var e = this.get("volume.sfx");
            _.Zf(ZOR.Nqa.Oqa, _.partial(_.Ne, _, "setVolume", e));
            localStorage.Sma = e;
        });
        v(a.pra, T(r.Xqa));
        v(a.qra, T(r.Yqa));
        v(a.rra, T(r.Zqa));
        v(a.kra, T(r.era));
        v(a.mra, T(r.fra));
        v(a.nra, T(r._qa));
        v(a.lra, T(r.Wqa));
        v(a.ora, function t() {
            d(s.xra);
        });
        v(a.wra, function t(n) {
            e.set("selected_skin", n.Yv.value);
            localStorage.setItem("skin", n.Yv.value);
            ga("send", {
                Kra: "event",
                Lra: "button",
                Mra: "use_skin_button",
                Qra: n.Yv.value
            });
            startGame(ZOR.npa.opa);
        });
        v(a.hra, function t() {
            ga("send", {
                Kra: "event",
                Lra: "button",
                Mra: "play_button",
                Qra: "mouse_click"
            });
            startGame(ZOR.npa.opa);
        });
        config.Vla = JSON.parse(localStorage.Hra || "false") ? -1 : 1;
        config.Ula = JSON.parse(localStorage.Ira || "false") ? -1 : 1;
        v(a.sra, t("y"));
        v(a.tra, t("x"));
        function t(t) {
            return function e(n) {
                var i = "flip_" + t.toLowerCase();
                var r = t.toUpperCase() + "_AXIS_MULT";
                if (n.Yv.checked) {
                    config[r] = -1;
                    s[i] = true;
                } else {
                    config[r] = 1;
                    s[i] = false;
                }
                localStorage[i] = s[i];
            };
        }
        v(a.jra, location.reload.bind(location));
        v(a.ira, function t() {
            if (window.Rra) {
                ga("send", {
                    Kra: "event",
                    Lra: "buton",
                    Mra: "respawn_button"
                });
                respawnPlayer();
            }
        });
        v(a.gra, function t(e) {
            var n = e.GV.which || e.GV.keyCode;
            var i = 13;
            if (n === i) {
                if (window.Sra) {
                    ga("send", {
                        Kra: "event",
                        Lra: "button",
                        Mra: "play_button",
                        Qra: "enter_key"
                    });
                    startGame(ZOR.npa.opa);
                }
            }
        });
        if (isMobile.N8) {
            config.Tla = config.Mla.Nla;
        }
        if (config.fla) {
            e.pU(a.hra);
        }
    }
    function R() {
        return _.Ud(e.update.bind(e), 1e3);
    }
    function w() {
        var t = document.querySelector('script[type="text/ractive"]').innerHTML === "";
        if (t) {
            var e = document.querySelectorAll('script[type="text/ractive"], script[type^=x-shader]');
            Promise.all(_.map(e, x)).then(m);
        } else {
            m();
        }
    }
    function x(t) {
        return fetch(t.src).then(b).then(H(t));
    }
    function b(t) {
        return t.text();
    }
    function H(t) {
        return function e(n) {
            t.innerHTML = n;
        };
    }
    w();
    return o;
}();

var ZOR = ZOR || {};

ZOR.Tra = {};

var scene;

var canvas;

var camera;

var camera_controls;

var raycaster = new THREE._p();

if (config.u) {
    raycaster.bq = config.t;
}

var playerType;

var player;

var playerFogCenter = new THREE.K();

var gameStart = false;

var disconnected = false;

var foodController;

var zorbioModel = new ZOR.Hoa();

ZOR.Tra.Joa = {};

ZOR.Tra.Ura = [];

ZOR.Tra.Vra = function t() {
    var e = document.body;
    if (e.requestFullscreen) {
        e.requestFullscreen();
    } else if (e.msRequestFullscreen) {
        e.msRequestFullscreen();
    } else if (e.mozRequestFullScreen) {
        e.mozRequestFullScreen();
    } else if (e.webkitRequestFullscreen) {
        e.webkitRequestFullscreen();
    }
};

function startGame(t) {
    var e, n;
    try {
        e = new THREE.bG();
        n = _.chain(config.Ema).map(e.extensions.get).some(_.bf).value();
        e = undefined;
        if (n) {
            throw new Error("missing WebGL extensions");
        }
    } catch (t) {
        console.error("Failed to init game.  Possible WebGL failure.  Original error below.");
        console.error(t.message);
        ZOR.Uqa.state(ZOR.Uqa.yra.cra);
        return;
    }
    if (isMobile.N8) {
        ZOR.Tra.Vra();
    }
    if (config.Tma) {
        ZOR.Nqa.Tqa.background.play();
    }
    playerType = t;
    ZOR.Uqa.state(ZOR.Uqa.yra.$qa);
    var i = localStorage.Pra = UTIL.Goa(ZOR.Uqa.Nra.get("player_name"));
    var r = localStorage.Ora = ZOR.Uqa.Nra.get("alpha_key");
    var a = UTIL.foa(0, config.Nma.length - 1);
    var s = config.Nma[a];
    document.querySelector("meta[name=theme-color]").content = s;
    console.log("Player color", s);
    ZOR.Uqa.Nra.set("player_size", {
        color: a,
        eqa: 50
    });
    var o = localStorage.getItem("skin") || "default";
    sendEnterGame(playerType, i, a, o, r);
}

function respawnPlayer() {
    console.log("Respawning player: ", player.Wra());
    ZOR.Uqa.state(ZOR.Uqa.yra.$qa);
    sendRespawn();
}

function createScene() {
    var t = _.rc(4, function() {
        canvas.classList.add("active");
    });
    try {
        e();
        i();
    } catch (t) {
        console.error("Failed to init game.  Possible WebGL failure.  Original error below.");
        ZOR.Uqa.state(ZOR.Uqa.yra.cra);
        throw t;
    }
    function e() {
        canvas = document.getElementById("render-canvas");
        scene = new THREE.UA();
        if (config.u) {
            scene.kB = new THREE.kD(config.wma, config.vma, config.t);
        }
        ZOR.Tra.ZJ = new THREE.bG({
            dG: true,
            canvas: canvas
        });
        ZOR.Tra.ZJ.eH(config.wma);
        ZOR.Tra.ZJ.ZG(window.devicePixelRatio);
        ZOR.Tra.ZJ.$G(window.innerWidth, window.innerHeight);
        camera = new THREE.mq(config.zma, window.innerWidth / window.innerHeight, 1, config.gla + 100);
        camera.position.set(0, 0, 0);
        foodController = new FoodController(zorbioModel, camera.position, scene);
        foodController.Xra(scene);
        foodController.Yra(zorbioModel.Qoa);
        drawPlayers();
        var t = [];
        var e;
        for (var i = 0; i < 6; i++) {
            e = new THREE.A().load("textures/skybox_grid_black.png");
            e.xy = e.yy = THREE.th;
            e.repeat.set(config.yma, config.yma);
            t.push(new THREE.GB({
                map: e
            }));
            t[i].Bz = THREE.sg;
            t[i].D = true;
            t[i].bA = .5;
            t[i].map.px = THREE.uh;
            t[i].map.qx = THREE.xh;
        }
        var r = new THREE.iK(t);
        var a = new THREE.kN(zorbioModel.Loa.x, zorbioModel.Loa.y, zorbioModel.Loa.z, 1, 1, 1);
        var s = new THREE.dq(a, r);
        s.Gq = -1;
        scene.add(s);
        var o = new THREE.Yx(2236962);
        scene.add(o);
        window.addEventListener("resize", n, false);
    }
    function n() {
        camera.Fx = window.innerWidth / window.innerHeight;
        camera.zx();
        ZOR.Tra.ZJ.$G(window.innerWidth, window.innerHeight);
    }
    function i() {
        requestAnimationFrame(i);
        var t = ZOR.Uqa.state();
        if (t.indexOf("menu") === 0 || t === ZOR.Uqa.yra.era) {
            camera.rotation.y -= config.Fma * ZOR.boa.get();
        }
        var e;
        updateActors();
        if (gameStart && !player.Zra) {
            e = player.view.$ra.position;
            throttledSendPlayerUpdate();
            player._ra();
            handleKeysDown();
            ZOR.boa.update();
            player.update(scene, camera, camera_controls, ZOR.boa.get());
            foodController.asa(player, captureFood);
            camera_controls.update();
            raycaster.set(player.view.$ra.position, camera.cr().normalize());
            updatePlayerSizeUI();
            updateTargetLock();
        } else if (ZOR.Uqa.state().indexOf("menu") === 0) {
            e = camera.position;
        } else if (player && player.Zra) {
            e = player.q.p.position;
        } else {
            e = {
                x: 0,
                y: 0,
                z: 0
            };
        }
        playerFogCenter.xi(e);
        foodController.update(e);
        ZOR.Uqa.update();
        r();
    }
    function r() {
        ZOR.Tra.ZJ.xx(scene, camera);
        t();
    }
}

function initCameraAndPlayer() {
    player.bsa(scene);
    camera = new THREE.mq(config.zma, window.innerWidth / window.innerHeight, 1, config.gla + 100);
    if (config.Tla.Ola === "FOLLOW") {
        camera_controls = new THREE.Vna(camera, ZOR.Tra.ZJ.fG);
        camera_controls.Tna = true;
        camera_controls.Pna = false;
        camera_controls.Rna = true;
        camera_controls.Una = 0;
        camera_controls.sna = config.Tla.Pla;
        camera_controls.target = player.view.$ra.position;
    } else if (config.Tla.Ola === "DRAG") {
        camera_controls = new THREE.ona(camera, ZOR.Tra.ZJ.fG);
        camera_controls.bna = true;
        camera_controls.cna = .25;
        camera_controls.pna = false;
        camera_controls.target = player.view.$ra;
    }
    camera_controls.Yma = config.xma;
    camera_controls.maxDistance = config.xma;
    camera.position.xi(player.q.p.position.clone().Ri(1.2));
    player.csa(camera_controls);
    player.view.dsa(player.N());
    playerFogCenter.xi(player.view.$ra.position);
}

function drawPlayers() {
    zorbioModel.Joa.forEach(function t(e) {
        if (e.type != ZOR.npa.epa) {
            var n = e.id;
            if (!player || n !== player.Wra()) {
                ZOR.Tra.Joa[n] = new ZOR.esa(e, scene);
                ZOR.Tra.Joa[n].setAlpha(1);
            }
        }
    });
}

function updateActors() {
    zorbioModel.Ioa.forEach(function t(e) {
        if (e.type === ZOR.$oa.apa) {
            if (!player || e.id !== player.fsa()) {
                var n = ZOR.Tra.Joa[e.Zoa];
                if (n && n.view) {
                    n.gsa(e.position);
                    n.hsa(e.scale);
                    n.isa(e.kpa);
                }
            } else {
                player.hsa(e.scale);
                player.isa(e.kpa);
            }
        }
    });
}

updateActors.jsa = config.pla;

function updatePlayerSizeUI() {
    ZOR.Uqa.data.ksa.eqa = player.Mpa();
}

function updateTargetLock() {
    var t = raycaster.pq(ZOR.Tra.Ura);
    if (t && t.length > 0) {
        var e = t[0].object;
        var n = e.dqa === player.q.id;
        var i = player.lsa() !== e.dqa;
        if (i && !n) {
            player.msa(e.dqa);
            var r = ZOR.Tra.Joa[e.dqa];
            ZOR.Uqa.data.target = {
                name: r.q.name,
                eqa: r.q.Mpa(),
                color: r.q.p.color
            };
            clearTimeout(ZOR.Uqa.nsa);
            console.log("Set target lock: ", ZOR.Uqa.data.target);
        }
    } else if (player.lsa()) {
        player.msa(0);
        ZOR.Uqa.nsa = setTimeout(ZOR.Uqa.hH, 4e3);
        console.log("clearing target lock");
    }
}

function captureFood(t) {
    player.osa(t);
    foodController.psa(t);
}

window.addEventListener("keydown", handleKeydown);

window.addEventListener("keyup", handleKeyup);

window.addEventListener("mousedown", handleMouseDown);

window.addEventListener("mouseup", handleMouseUp);

window.onload = function t() {
    connectToServer();
};

var KeysDown = {};

var KeyCodes = {
    87: "w",
    83: "s",
    65: "a",
    68: "d",
    32: "space",
    16: "shift"
};

var ListenForKeys = Object.keys(KeyCodes);

function handleKeydown(t) {
    var e;
    var n;
    if (!gameStart || player.Zra) return;
    e = ListenForKeys.indexOf(t.keyCode + "") !== -1;
    if (e) {
        n = KeysDown[KeyCodes[t.keyCode]];
        if (!n) {
            keyJustPressed(KeyCodes[t.keyCode]);
        }
        KeysDown[KeyCodes[t.keyCode]] = true;
    }
}

function handleKeyup(t) {
    if (!gameStart || player.Zra) return;
    var e = ListenForKeys.indexOf(t.keyCode + "") !== -1;
    if (e) {
        keyReleased(KeyCodes[t.keyCode]);
        KeysDown[KeyCodes[t.keyCode]] = false;
    }
}

function handleMouseDown(t) {
    if (!gameStart || player.Zra) return;
    if (t.button === 0 && config.dla && !isMobile.N8) {
        if (player.qsa()) {
            sendSpeedBoostStart();
        }
    }
}

function handleMouseUp(t) {
    if (!gameStart || player.Zra) return;
    if (t.button === 0 && config.dla && !isMobile.N8) {
        player.rsa();
        sendSpeedBoostStop();
    }
}

function handleKeysDown() {
    for (var t in KeysDown) {
        if (KeysDown[t]) {
            keyDown(t);
        }
    }
}

function keyDown(t) {
    if (t === "w" && !config.dla) {
        player.ssa(camera);
    } else if (t === "s") {
        player.tsa(camera);
    }
}

function keyJustPressed(t) {
    if (t === "w" && config.dla) {
        if (player.qsa()) {
            sendSpeedBoostStart();
        }
    }
}

function keyReleased(t) {
    if (t === "w" && config.dla) {
        if (player.usa()) {
            player.rsa();
            sendSpeedBoostStop();
        }
    }
}

function removePlayerFromGame(t) {
    var e = ZOR.Tra.Joa[t];
    zorbioModel.Yoa(t);
    if (e) {
        if (e && e.view) {
            e.vsa(scene);
            delete ZOR.Tra.Joa[t];
        }
    }
    console.log("Removed player: ", t);
}

function handleServerTick(t) {
    if (!gameStart) return;
    t.Koa.forEach(function t(e) {
        var n = ZOR.Tra.Joa[e.dqa];
        e.name = n.q.name;
        e.color = n.q.p.color;
    });
    ZOR.Uqa.Nra.set("leaders", t.Koa);
    ZOR.Uqa.data.Koa = t.Koa;
    for (var e = 0, n = t.fr.length; e < n; ++e) {
        foodController.wsa(t.fr[e]);
    }
    ZOR.Uqa.Nra.set("server_message", t.fqa);
    ZOR._pa();
}

function handleSuccessfulPlayerCapture(t) {
    player.O3(config.Jla(t.N()));
    ZOR.Nqa.Oqa.Sqa.play();
}

function handleDeath(t) {
    var e = t.tqa;
    console.log("YOU DIED! You were alive for " + t.xqa + " seconds. Killed by: ", e);
    setDeadState();
    var n = zorbioModel.Xoa(e);
    n.eqa = config.Lla(n.p.scale);
    var i = {
        ypa: t.wqa,
        wpa: t.uqa,
        xpa: t.vqa,
        eqa: t.eqa
    };
    ZOR.Uqa.Nra.set("attacker", n);
    ZOR.Uqa.Nra.set("player", i);
    ZOR.Uqa.state(ZOR.Uqa.yra.ara);
    ga("send", {
        Kra: "event",
        Lra: "StateChange",
        Mra: "death"
    });
}

function handlePlayerKick(t) {
    ZOR.Uqa.state(ZOR.Uqa.yra.bra);
    ZOR.Uqa.Nra.set("kicked_message", t);
}

function setDeadState() {
    player.xsa = false;
    player.Zra = true;
    clearIntervalMethods();
    KeysDown = {};
}

var ZOR = ZOR || {};

ZOR.ysa = function t(e, n, i) {
    this.q = e;
    this.r7 = n;
    this.i = i || false;
    this.Z = config.Nma[e.p.color];
    this.zsa = e.p.KC;
    this.Asa = config.Lma(e.p.scale);
    this.KC = ZOR.g[this.zsa || "default"](this);
    this.j = new THREE.TN(1, this.KC.j.da || config.Bma, this.KC.j.ea || config.Bma);
    playerFogCenter.xi(e.p.position);
    this.k = new THREE.$B(this.KC.k);
    if (config.Cma) {
        this.k.dA = true;
    }
    this.$ra = new THREE.dq(this.j, this.k);
    this.$ra.position.xi(e.p.position);
    this.Bsa = new ZOR.Csa(this, n);
    this.setScale(e.p.scale);
    this.$ra.dqa = this.q.id;
    ZOR.Tra.Ura.push(this.$ra);
    n.add(this.$ra);
    this.Dsa();
};

ZOR.ysa.prototype.Dsa = function t() {
    this.F = particleGroup = new SPE.WA(this.KC.F.group);
    this.Esa = new SPE.N5(this.KC.F.I);
    this.Fsa = new THREE.Rp();
    this.F.H5.Gq = 1;
    this.F.H5.Fq = false;
    this.F.M5(this.Esa);
    this.r7.add(this.F.H5);
};

ZOR.ysa.prototype.Gsa = function t() {
    var e = this.Esa.position.P4.clone();
    var n = this.$ra.position.clone();
    this.Esa.position.P4.x = n.x;
    this.Esa.position.P4.y = n.y;
    this.Esa.position.P4.z = n.z;
    var i = this.$ra.scale.x * (this.KC.F.ba || 1);
    this.Esa.position.l6.Xl(i);
    this.Esa.position.Q4.Xl(i);
    this.Esa.position.p6 = i;
    this.Esa.size.P4 = [ i / 3, i * 2 / 6, i * 1 / 9, 0 ];
    var r = this.q.tpa.upa.Opa();
    if (r) {
        this.Esa.V = 1;
    } else {
        this.Esa.V = .1;
    }
    this.Esa.K6.position = true;
    this.Esa.K6.D5 = true;
    this.Esa.K6.size = true;
    this.F.$U(this.Fsa.Wp());
};

ZOR.ysa.prototype.O3 = function t(e) {
    this.$ra.scale.Qi(e);
    this.$ra.scale.fm(1, config.Gla);
    this.$ra.j.Io();
};

ZOR.ysa.prototype.update = function t(e) {
    this.setScale(e * .1 + this.$ra.scale.x * .9);
    this.Gsa();
};

ZOR.ysa.prototype.isa = function t(e) {
    this.Bsa.update(e);
};

ZOR.ysa.prototype.setAlpha = function t(e) {
    this.k.D = !e;
};

ZOR.ysa.prototype.gsa = function t(e) {
    this.$ra.position.Si(e, config.Ama);
};

ZOR.ysa.prototype.remove = function t(e) {
    this.Bsa.Es();
    this.F.m5.forEach(function(t) {
        t.remove();
    });
    this.F.Es();
    e.remove(this.$ra);
    for (var n = 0; n < ZOR.Tra.Ura.length; n++) {
        var i = ZOR.Tra.Ura[n];
        if (i && i.dqa === this.q.id) {
            console.log("Removing mesh for player: ", this.q.id);
            ZOR.Tra.Ura.splice(n, 1);
        }
    }
};

ZOR.ysa.prototype.setScale = function t(e) {
    this.$ra.scale.set(e, e, e);
    this.$ra.scale.fm(1, config.Gla);
    this.$ra.j.Io();
};

ZOR.ysa.prototype.csa = function t(e) {
    this.Hsa = e;
};

ZOR.ysa.prototype.dsa = function t(e) {
    var n = config.Lma(e);
    this.Hsa.Yma = UTIL.Si(this.Hsa.Yma, this.Asa, .03);
    if (n != this.Asa) {
        if (this.Isa(n)) {
            console.log("New camera minDistance: ", n);
            this.Asa = n;
        }
    }
};

ZOR.ysa.prototype.Isa = function t(e) {
    var n = this.Asa;
    var i = this.q.p.scale;
    var r = config.Mma[Math.floor(n)];
    if (n > e) {
        if (r.min - i >= config.Jma) {
            return true;
        }
    } else if (n < e) {
        if (i - r.max >= config.Jma) {
            return true;
        }
    }
    return false;
};

var ZOR = ZOR || {};

ZOR.esa = function t(e, n, i) {
    this.q = new ZOR.qpa(e.id, e.name, e.p.color, e.type, e.p.position, e.p.scale, e.p.D5, e.p.KC);
    this.Zra = false;
    this.i = i || false;
    this.Jsa = new THREE.K();
    this.Ksa = new THREE.K();
    this.sqa = [];
    if (n) {
        this.bsa(n);
    }
    this.q.tpa.upa.jT("activate", function() {
        ZOR.Nqa.Oqa.Qqa.play();
    });
    this.q.tpa.upa.jT("deactivate", function() {
        ZOR.Nqa.Oqa.Qqa.stop();
    });
};

ZOR.esa.prototype.osa = function t(e) {
    this.sqa.push({
        gqa: e,
        N: this.N()
    });
};

ZOR.esa.prototype.Wra = function t() {
    return this.q.id;
};

ZOR.esa.prototype.fsa = function t() {
    return this.q.p.id;
};

ZOR.esa.prototype.co = function t() {
    return this.view.$ra.position;
};

ZOR.esa.prototype.Npa = function t() {
    return this.q.Npa();
};

ZOR.esa.prototype.Mpa = function t() {
    return this.q.Mpa();
};

ZOR.esa.prototype.setAlpha = function t(e) {
    if (this.view) {
        this.view.setAlpha(e);
    }
};

ZOR.esa.prototype.bsa = function t(e) {
    this.view = new ZOR.ysa(this.q, e, this.i, this.zsa);
};

ZOR.esa.prototype.vsa = function t(e) {
    this.view.remove(e);
    this.view = undefined;
};

ZOR.esa.prototype.O3 = function t(e) {
    this.q.p.scale += e;
};

ZOR.esa.prototype.Lsa = function t(e, n) {
    this.Msa = n;
    this.Nsa = e / n;
};

ZOR.esa.prototype.Osa = function t() {
    if (!this.view) {
        return;
    }
    this.q.p.position.xi(this.view.$ra.position);
};

ZOR.esa.prototype.hsa = function t(e) {
    this.setScale(e);
    this.view.update(e);
};

ZOR.esa.prototype.isa = function t(e) {
    this.q.p.kpa = e;
    this.view.isa(e);
};

ZOR.esa.prototype.gsa = function t(e) {
    this.q.p.position.xi(e);
    this.view.gsa(e);
};

ZOR.esa.prototype.N = function t() {
    return this.q.p.scale;
};

ZOR.esa.prototype.setScale = function t(e) {
    this.q.p.scale = e;
};

ZOR.esa.prototype.update = function t(e, n, i, r) {
    this.q.tpa.upa.update();
    if (config.dla) {
        this.ssa(n);
    }
    this.Psa(r, i);
    this.view.dsa(this.N());
    this.view.isa(this.q.p.kpa);
    if (this.Msa > 0) {
        this.view.O3(this.Nsa);
        this.Msa--;
    }
};

ZOR.esa.prototype.Psa = function t(e, n) {
    this.q.p.D5.sub(n.dna);
    this.q.p.D5.normalize();
    this.q.p.D5.Ri(player.Npa() * e);
    this.view.$ra.position.sub(UTIL.koa(this.view.$ra.position, 0, this.q.p.D5, zorbioModel.Loa));
    this.q.p.position.xi(this.view.$ra.position);
    this.Qsa();
    n.dna.set(0, 0, 0);
};

ZOR.esa.prototype.Qsa = function t() {
    var e = {
        x: this.view.$ra.position.x,
        y: this.view.$ra.position.y,
        z: this.view.$ra.position.z
    };
    var n = Date.now() - this.q.rpa;
    this.q.p.gpa.push({
        position: e,
        N: this.N(),
        time: n
    });
    if (this.q.p.gpa.length > config.nma) {
        this.q.p.gpa.shift();
    }
};

ZOR.esa.prototype._ra = function t() {
    this.q.p.D5.set(0, 0, 0);
};

ZOR.esa.prototype.ssa = function t(e) {
    var n = this.Jsa;
    var i = this.view.$ra;
    n.xi(i.position);
    n.sub(e.position);
    n.Ri(-1);
    n.normalize();
    n.Ri(this.Npa());
    this.q.p.D5.add(n);
};

ZOR.esa.prototype.tsa = function t(e) {
    var n = this.Ksa;
    var i = this.view.$ra;
    n.xi(i.position);
    n.sub(e.position);
    n.normalize();
    n.Ri(this.Npa());
    this.q.p.D5.add(n);
};

ZOR.esa.prototype.csa = function t(e) {
    this.view.csa(e);
};

ZOR.esa.prototype.Rsa = function t() {
    this.q.tpa.upa.Sca();
};

ZOR.esa.prototype.rsa = function t() {
    this.q.tpa.upa.Vpa();
};

ZOR.esa.prototype.usa = function t() {
    return this.q.tpa.upa.Opa();
};

ZOR.esa.prototype.qsa = function t() {
    return this.q.tpa.upa.Wpa();
};

ZOR.esa.prototype.Ssa = function t(e) {
    this.q.tpa.upa.active = e;
};

ZOR.esa.prototype.msa = function t(e) {
    this.Tsa = e;
};

ZOR.esa.prototype.lsa = function t() {
    return this.Tsa;
};

var FoodController = function t(e, n) {
    this.q = e;
    this.view = new FoodView();
    this.Usa = new THREE.K();
    this.Usa.xi(n);
    this.Vsa = new THREE.Y6({
        A7: true,
        x7: Infinity,
        y7: 8,
        z7: .15
    });
    this.Xra = function t(e) {
        this.view.Xra(e, this.q.Soa, this.q.Ooa, this.Usa, this.Vsa);
    };
    this.update = function t(e) {
        this.Usa.xi(e);
        this.view.update();
    };
    this.Wsa = function t() {
        return this.view.Xsa;
    };
    this.Ysa = function t(e) {
        return this.view.Ysa(e);
    };
    this.psa = function t(e) {
        this.view.psa(e);
    };
    this.wsa = function t(e) {
        this.view.wsa(e);
    };
    this.Yra = function t(e) {
        this.view.Yra(e);
    };
    this.asa = function t(e, n) {
        var i, r;
        var a = 0;
        var s = e.view.$ra;
        var o = e.N();
        var f = this.Vsa.search(s.position, o + 25);
        for (i = 0, r = f.length; i < r; i++) {
            var u = f[i];
            var h = f[i].object.gqa;
            if (this.Ysa(h)) {
                a = u.position.jm(s.position);
                if (a <= o + config.dma) {
                    n(h);
                    var c = _.Af(config.Uma);
                    var l = u.position.clone().ym(camera.nx).x / 32;
                    ZOR.Nqa.Oqa.Pqa.play({
                        pitch: c,
                        Lfa: l,
                        volume: localStorage.Sma * config.Vma,
                        wfa: {
                            yfa: Math.random() * .3 + .5
                        }
                    });
                }
            }
        }
    };
};

var FoodView = function t() {
    this.Xsa = false;
    this.Xra = function t(e, n, i, r, a) {
        this.translate = new Float32Array(i * 3);
        this.Vr = new Float32Array(i * 3);
        this.Zsa = new Float32Array(i);
        this.j = new THREE.Zs();
        this.j.xi(new THREE.NG(2, 2));
        var s = UTIL.roa(config.fma);
        var o = this.translate;
        var f = this.Vr;
        var u = this.Zsa;
        var h, c, l, d, v, p;
        var E = 0;
        for (var g = 0, m = i; g < m; g++) {
            h = n[E];
            c = n[E + 1];
            l = n[E + 2];
            var T = s(h, c, l);
            d = T.r;
            v = T.wi;
            p = T.b;
            u[g] = 0;
            o[E] = h;
            o[E + 1] = c;
            o[E + 2] = l;
            f[E] = d;
            f[E + 1] = v;
            f[E + 2] = p;
            var y = {
                x: h,
                y: c,
                z: l,
                N: 1,
                gqa: g
            };
            a.add(y);
            E += 3;
        }
        this.j.Os("translate", new THREE.Qr(o, 3, 1));
        this.j.Os("respawning", new THREE.Qr(u, 1, 1));
        this.j.Os("color", new THREE.Qr(f, 3, 1));
        this.k = new THREE.hC({
            l: {
                map: {
                    type: "t",
                    value: new THREE.A().load("textures/soft-square.png")
                },
                s: {
                    type: "v3",
                    value: r
                },
                t: {
                    type: "f",
                    value: config.t
                },
                u: {
                    type: "f",
                    value: ~~config.u
                },
                $sa: {
                    type: "f",
                    value: ~~config.Cma
                },
                cma: {
                    type: "f",
                    value: config.cma
                }
            },
            B: document.getElementById("food-vertex-shader").textContent,
            C: document.getElementById("food-frag-shader").textContent,
            cA: true,
            dA: true
        });
        this.H5 = new THREE.dq(this.j, this.k);
        this.H5.Fq = false;
        e.add(this.H5);
        this.Xsa = true;
    };
    this.update = function t() {
        var e = this.Zsa;
        var n = e.length;
        var i;
        var r = config.cma;
        var a = ZOR.boa.get;
        while (n--) {
            i = e[n];
            if (i <= r) {
                e[n] = Math.max(0, i - Math.round(a()));
            }
        }
        this.H5.j.attributes.Zsa.ur = true;
    };
    this.Ysa = function t(e) {
        return this.Zsa[e] === 0;
    };
    this.psa = function t(e) {
        this.Zsa[e] = config.cma + 1;
    };
    this.wsa = function t(e) {
        this.Zsa[e] = config.cma;
    };
    this.Yra = function t(e) {
        _.Zf(e, this.psa.bind(this));
    };
};

var ZOR = ZOR || {};

ZOR.Csa = function t(e, n) {
    this._sa = 0;
    this.ata = 1;
    this.bta = 2;
    this.cta = 3;
    this.r7 = n;
    this.dta = e;
    this.time = .1;
    this.eta = config.$la;
    this.fta = config.Gla / 2;
    this.j = new THREE.pN(this.fta, this.fta, this.eta, 16, 12, true);
    this.j.Oq(Math.PI / 2);
    this.gta();
    this.hta();
    this.ita();
    this.jta(this.eta);
    this.k = new THREE.$B({
        l: {
            time: {
                type: "f",
                value: this.time
            },
            kta: {
                type: "f",
                value: 0
            },
            lta: {
                type: "c",
                value: new THREE.T(this.dta.Z)
            },
            mta: {
                type: "c",
                value: 0
            },
            nta: {
                type: "f",
                value: 0
            },
            s: {
                type: "v3",
                value: playerFogCenter
            },
            YC: {
                type: "v3",
                value: new THREE.K()
            },
            t: {
                type: "f",
                value: config.t
            },
            u: {
                type: "f",
                value: ~~config.u
            }
        },
        B: document.getElementById("drain-vertex-shader").textContent,
        C: document.getElementById("drain-frag-shader").textContent,
        Bz: THREE.sg,
        D: true,
        opacity: .8,
        depthFunc: THREE.Wg,
        cA: false,
        dA: true,
        Ay: THREE.Ag,
        bA: 1,
        Yr: true
    });
    this.H5 = new THREE.dq(this.j, this.k);
    this.H5.Gq = 10;
    this.H5.GC[this._sa] = 0;
    this.H5.GC[this.ata] = 0;
    this.H5.GC[this.bta] = 0;
    this.H5.GC[this.cta] = .065;
    this.hide();
    n.add(this.H5);
};

ZOR.Csa.prototype.ota = function t(e, n) {
    return Math.max(0, 1 - Math.pow(e - n / 2, 2) / Math.pow(n / 2, 2));
};

ZOR.Csa.prototype.update = function t(e) {
    if (e === 0) {
        this.hide();
        return;
    }
    var n = ZOR.Tra.Joa[e];
    if (!n) return;
    var i = this.dta.$ra.position;
    var r = n.view.$ra.position;
    var a = this.dta.$ra.scale.x;
    var s = n.view.$ra.scale.x;
    var o = i.jm(r) - a - s;
    this.k.l.YC.value.xi(this.H5.position);
    if (n && i && r && a && s) {
        this.pta(o);
    } else {
        this.hide();
    }
    if (this.qta()) {
        this.rta(o);
        this.sta(n, o);
        this.tta(this.dta.$ra.scale.x);
        this.uta(n.q.p.scale);
        this.gsa(i, r, a, s);
    }
};

ZOR.Csa.prototype.hide = function t() {
    if (this.H5.k.visible) {
        this.H5.k.visible = false;
    }
};

ZOR.Csa.prototype.show = function t() {
    if (!this.H5.k.visible) {
        this.H5.k.visible = true;
    }
};

ZOR.Csa.prototype.qta = function t() {
    return this.k.visible;
};

ZOR.Csa.prototype.pta = function t(e) {
    if (e > 0) {
        this.show();
    } else {
        this.hide();
    }
};

ZOR.Csa.prototype.gsa = function t(e, n, i, r) {
    var a = n.clone().sub(e).normalize().Ri(-r).add(e);
    var s = e.clone().sub(n).normalize().Ri(-i).add(n);
    this.H5.position.xi(a.add(s).em(2));
    this.H5.ao(e);
};

ZOR.Csa.prototype.sta = function t(e, n) {
    this.time += ZOR.boa.get() / config.ama;
    this.k.l.time.value = this.time;
    this.k.l.mta.value = new THREE.T(e.view.Z);
    this.k.l.nta.value = n;
    this.k.l.kta.value = 1 - n / config.$la;
};

ZOR.Csa.prototype.gta = function t() {
    var e = this.vta();
    this.j.Yr.push({
        name: "stretch",
        Bn: e
    });
};

ZOR.Csa.prototype.vta = function t() {
    var e = [];
    for (var n = 0; n < this.j.Bn.length; n++) {
        e[n] = this.j.Bn[n].clone();
        e[n].z = 0;
    }
    return e;
};

ZOR.Csa.prototype.rta = function t(e) {
    this.H5.GC[this._sa] = 1 - e / config.$la;
};

ZOR.Csa.prototype.wta = function t(e, n) {
    var i = .85 - Math.pow(e / config.Gla, 2) / 2;
    this.H5.GC[n] = i;
};

ZOR.Csa.prototype.hta = function t() {
    var e = this.xta();
    this.j.Yr.push({
        name: "drainer_taper",
        Bn: e
    });
};

ZOR.Csa.prototype.xta = function t() {
    var e = [];
    var n;
    for (var i = 0; i < this.j.Bn.length; i++) {
        e[i] = this.j.Bn[i].clone();
        n = 1 - (e[i].z + config.$la / 2) / this.eta;
        e[i].x *= n;
        e[i].y *= n;
    }
    return e;
};

ZOR.Csa.prototype.tta = function t(e) {
    this.wta(e, this.ata);
};

ZOR.Csa.prototype.ita = function t() {
    var e = this.yta();
    this.j.Yr.push({
        name: "drainee_taper",
        Bn: e
    });
};

ZOR.Csa.prototype.yta = function t() {
    var e = [];
    var n;
    for (var i = 0; i < this.j.Bn.length; i++) {
        e[i] = this.j.Bn[i].clone();
        n = (e[i].z + config.$la / 2) / this.eta;
        e[i].x *= n;
        e[i].y *= n;
    }
    return e;
};

ZOR.Csa.prototype.uta = function t(e) {
    this.wta(e, this.bta);
};

ZOR.Csa.prototype.jta = function t(e) {
    var n = this.zta(e);
    this.j.Yr.push({
        name: "pinch",
        Bn: n
    });
};

ZOR.Csa.prototype.zta = function t(e) {
    var n = [];
    for (var i = 0; i < this.j.Bn.length; i++) {
        n[i] = this.j.Bn[i].clone();
        n[i].x *= -this.ota(n[i].z + e / 2, e);
        n[i].y *= -this.ota(n[i].z + e / 2, e);
    }
    return n;
};

ZOR.Csa.prototype.Es = function t() {
    this.r7.remove(this.H5);
    this.j.Es();
    this.k.Es();
};

var ws;

var zorPingStart;

var zorPingDuration = 0;

var actorUpdateGap = 0;

var NB_SRVID = "";

var interval_id_heartbeat;

function connectToServer() {
    var t = new URI("ws://" + config._ka + ":" + config.jla);
    ws = new WebSocket(t.toString());
    ws.binaryType = "arraybuffer";
    ws.onopen = function t() {
        console.log("WebSocket connection established and ready.");
        setupSocket(ws);
    };
}

function sendEnterGame(t, e, n, i, r) {
    if (ws.readyState === WebSocket.OPEN) {
        ws.send(JSON.stringify({
            Ata: "enter_game",
            type: t,
            name: e,
            color: n,
            KC: i,
            key: r
        }));
    }
}

function setupSocket(t) {
    t.onmessage = function t(m) {
        if (typeof m.data === "string") {
            var T = e(m.data);
            switch (T.Ata) {
              case "welcome":
                i(T);
                break;

              case "game_setup":
                r();
                break;

              case "player_join":
                a(T);
                break;

              case "zor_pong":
                s();
                break;

              case "captured_player":
                f(T);
                break;

              case "player_died":
                h(T);
                break;

              case "food_captured":
                c(T);
                break;

              case "kick":
                d(T);
                break;

              case "remove_player":
                v(T);
                break;

              case "speeding_warning":
                p();
                break;

              case "speed_boost_res":
                E(T);
                break;

              case "speed_boost_stop":
                g();
                break;
            }
        } else {
            var y = UTIL.Eoa(m.data);
            switch (y) {
              case ZOR.cqa.Fqa.zqa:
                n(ZOR.cqa.Gqa.decode(m.data));
                break;

              case ZOR.cqa.Fqa.Aqa:
                o(ZOR.cqa.Hqa.decode(m.data));
                break;

              case ZOR.cqa.Fqa.Cqa:
                l(ZOR.cqa.Jqa.decode(m.data));
                break;

              case ZOR.cqa.Fqa.Dqa:
                u(ZOR.cqa.Kqa.decode(m.data));
                break;

              case ZOR.cqa.Fqa.Eqa:
                i(ZOR.cqa.Lqa.decode(m.data));
                break;

              default:
                console.error("Error: Unknown binary op code: ", y);
            }
        }
    };
    t.onclose = function t(e) {
        if (e.code != config.vla) {
            handleNetworkTermination();
        }
        disconnected = true;
        console.log("Connection closed:", e.code, e.reason);
    };
    t.onerror = function t(e) {
        console.error("Websocket error occured", e);
    };
    function e(t) {
        return JSON.parse(t);
    }
    function n(t) {
        t.q.Ioa.forEach(function t(e) {
            UTIL.bn(e, "position");
            UTIL.bn(e, "velocity");
        });
        NB_SRVID = t.hqa;
        _.assign(zorbioModel, t.q);
        ZOR.Uqa.jT("init", createScene);
        console.log("Game initialzed");
    }
    function i(e) {
        console.log("Welcome: ", e.iqa.name);
        player = new ZOR.esa(e.iqa, null, true);
        t.send(JSON.stringify({
            Ata: "player_ready"
        }));
    }
    function r() {
        ZOR.Tra.Joa[player.Wra()] = player;
        zorbioModel.Toa(player.q.p);
        initCameraAndPlayer();
        gameStart = true;
        setIntervalMethods();
        console.log("Game started!");
    }
    function a(t) {
        var e = t.iqa;
        if (player && e.id === player.Wra()) {
            return;
        }
        if (!ZOR.Tra.Joa[e.id]) {
            ZOR.Tra.Joa[e.id] = new ZOR.esa(e, scene);
            ZOR.Tra.Joa[e.id].setAlpha(1);
            UTIL.bn(e.p, "position");
            UTIL.bn(e.p, "velocity");
            zorbioModel.Joa.push(e);
            zorbioModel.Toa(e.p);
        }
        console.log("Player joined: ", e.id, e.name);
    }
    function s() {
        zorPingDuration = Date.now() - zorPingStart;
        console.log("Ping: " + zorPingDuration + "ms");
    }
    function o(t) {
        if (player) {
            var e = Date.now();
            actorUpdateGap = e - player.q.Kpa.Rpa;
            player.q.Kpa.Rpa = e;
        }
        t.Ioa.forEach(function t(e) {
            var n = zorbioModel.Woa(e.id);
            if (n) {
                n.position.xi(e.position);
                n.scale = e.scale;
                if (n.type === ZOR.$oa.apa) {
                    n.kpa = e.kpa;
                    var i = ZOR.Tra.Joa[n.Zoa];
                    if (i) {
                        i.Ssa(e.lpa);
                    }
                }
            }
        });
    }
    function f(t) {
        if (!gameStart) return;
        var e = t.Bta;
        console.log("YOU CAPTURED PLAYER! ", e);
        var n = ZOR.Tra.Joa[e];
        handleSuccessfulPlayerCapture(n);
        removePlayerFromGame(e);
    }
    function u(t) {
        if (!gameStart) return;
        handleDeath(t);
    }
    function h(t) {
        var e = t.Cta;
        var n = t.Bta;
        if (!player || e !== player.Wra()) {
            console.log("Player died:  ", n);
            removePlayerFromGame(n);
        }
    }
    function c(t) {
        if (foodController && foodController.Wsa()) {
            foodController.psa(t.gqa);
        }
    }
    function l(t) {
        if (!gameStart) return;
        handleServerTick(t.yqa);
    }
    function d(t) {
        console.log("Server said: ", t.reason);
        setDeadState();
        handlePlayerKick(t.reason);
    }
    function v(t) {
        console.log("received remove_player", t.Zoa);
        removePlayerFromGame(t.Zoa);
    }
    function p() {
        if (!gameStart) return;
        console.log("WARNING! You are speeding!");
    }
    function E(t) {
        console.log("speed boost is valid:", t.Dta);
        player.Rsa();
    }
    function g() {
        console.log("Received speed boost STOP");
        player.rsa();
        sendSpeedBoostStop();
    }
}

function handleNetworkTermination() {
    setTimeout(location.reload.bind(location), 500);
}

function sendRespawn() {
    gameStart = false;
    ws.send(JSON.stringify({
        Ata: "respawn"
    }));
}

function sendPing() {
    zorPingStart = Date.now();
    var t = Math.round(ZOR.boa.Mqa());
    ws.send(JSON.stringify({
        Ata: "zor_ping",
        Eta: zorPingDuration,
        lu: t
    }));
}

function setIntervalMethods() {
    interval_id_heartbeat = window.setInterval(sendPing, config.nla);
}

function sendPlayerUpdate() {
    var t = Date.now();
    var e = t - player.q.Ipa.Rpa;
    player.q.Ipa.Rpa = t;
    var n = ws.bufferedAmount;
    player.Osa();
    var i = player.q.p;
    while (i.gpa.length < 4) {
        player.Qsa();
    }
    var r = {
        0: ZOR.cqa.Fqa.Bqa,
        dqa: player.Wra(),
        jqa: i.id,
        kqa: e,
        lqa: actorUpdateGap,
        mqa: n,
        nqa: i.gpa[i.gpa.length - 1],
        oqa: i.gpa[i.gpa.length - 2],
        pqa: i.gpa[i.gpa.length - 3],
        qqa: i.gpa[i.gpa.length - 4],
        rqa: i.gpa[0],
        sqa: player.sqa
    };
    var a = ZOR.cqa.Iqa.encode(r);
    player.sqa = [];
    ws.send(a);
}

function sendSpeedBoostStart() {
    ws.send(JSON.stringify({
        Ata: "speed_boost_start"
    }));
}

function sendSpeedBoostStop() {
    ws.send(JSON.stringify({
        Ata: "speed_boost_stop"
    }));
}

var throttledSendPlayerUpdate = _.Ud(sendPlayerUpdate, config.pla);

function clearIntervalMethods() {
    window.clearInterval(interval_id_heartbeat);
}
//# sourceMappingURL=bundle.min.map.js